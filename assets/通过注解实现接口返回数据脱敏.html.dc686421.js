import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as t}from"./app.c4f155b1.js";const p={},e=t(`<h1 id="\u901A\u8FC7\u6CE8\u89E3\u5B9E\u73B0\u63A5\u53E3\u8FD4\u56DE\u6570\u636E\u8131\u654F" tabindex="-1"><a class="header-anchor" href="#\u901A\u8FC7\u6CE8\u89E3\u5B9E\u73B0\u63A5\u53E3\u8FD4\u56DE\u6570\u636E\u8131\u654F" aria-hidden="true">#</a> \u901A\u8FC7\u6CE8\u89E3\u5B9E\u73B0\u63A5\u53E3\u8FD4\u56DE\u6570\u636E\u8131\u654F</h1><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>1.\u8981\u505A\u6210\u53EF\u914D\u7F6E\u591A\u7B56\u7565\u7684\u8131\u654F\u64CD\u4F5C\uFF0C\u8981\u4E0D\u7136\u4E00\u4E2A\u4E2A\u63A5\u53E3\u8FDB\u884C\u8131\u654F\u64CD\u4F5C\uFF0C\u91CD\u590D\u7684\u5DE5\u4F5C\u91CF\u592A\u591A\uFF0C\u5F88\u663E\u7136\u8FDD\u80CC\u4E86\u201C\u591A\u5199\u4E00\u884C\u7B97\u6211\u8F93\u201D\u7684\u7A0B\u5E8F\u5458\u89C4\u8303\uFF0C\u601D\u6765\u60F3\u53BB\uFF0C\u5B9A\u4E49\u6570\u636E\u8131\u654F\u6CE8\u89E3\u548C\u6570\u636E\u8131\u654F\u903B\u8F91\u7684\u63A5\u53E3\uFF0C \u5728\u8FD4\u56DE\u7C7B\u4E0A\uFF0C\u5BF9\u9700\u8981\u8FDB\u884C\u8131\u654F\u7684\u5C5E\u6027\u52A0\u4E0A\uFF0C\u5E76\u6307\u5B9A\u5BF9\u5E94\u7684\u8131\u654F\u7B56\u7565\u64CD\u4F5C</p><p>2.\u63A5\u4E0B\u6765\u6211\u53EA\u9700\u8981\u62E6\u622A\u63A7\u5236\u5668\u8FD4\u56DE\u7684\u6570\u636E\uFF0C\u627E\u5230\u5E26\u6709\u8131\u654F\u6CE8\u89E3\u7684\u5C5E\u6027\u64CD\u4F5C\u5373\u53EF\uFF0C\u4E00\u5F00\u59CB\u6253\u7B97\u7528@ControllerAdvice\u53BB\u5B9E\u73B0\uFF0C\u4F46\u53D1\u73B0\u9700\u8981\u81EA\u5DF1\u53BB\u53CD\u5C04\u7C7B\u83B7\u53D6\u6CE8\u89E3\uFF0C\u5F53\u8FD4\u56DE\u5BF9\u8C61\u6BD4\u8F83\u590D\u6742\uFF0C\u9700\u8981\u9012\u5F52\u53BB\u53CD\u5C04\uFF0C\u6027\u80FD\u4E00\u4E0B\u5B50\u5C31\u4F1A\u964D\u4F4E\uFF0C\u4E8E\u662F\u6362\u79CD\u601D\u8DEF\uFF0C\u6211\u60F3\u5230\u5E73\u65F6\u4F7F\u7528\u7684@JsonFormat\uFF0C\u8DDF\u6211\u73B0\u5728\u7684\u573A\u666F\u5F88\u7C7B\u4F3C\uFF0C\u901A\u8FC7\u81EA\u5B9A\u4E49\u6CE8\u89E3\u8DDF\u5B57\u6BB5\u89E3\u6790\u5668\uFF0C\u5BF9\u5B57\u6BB5\u8FDB\u884C\u81EA\u5B9A\u4E49\u89E3\u6790\uFF0Ctql</p><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><h4 id="_1-\u81EA\u5B9A\u4E49\u6570\u636E\u6CE8\u89E3-\u5E76\u53EF\u4EE5\u914D\u7F6E\u6570\u636E\u8131\u654F\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#_1-\u81EA\u5B9A\u4E49\u6570\u636E\u6CE8\u89E3-\u5E76\u53EF\u4EE5\u914D\u7F6E\u6570\u636E\u8131\u654F\u7B56\u7565" aria-hidden="true">#</a> 1. \u81EA\u5B9A\u4E49\u6570\u636E\u6CE8\u89E3\uFF0C\u5E76\u53EF\u4EE5\u914D\u7F6E\u6570\u636E\u8131\u654F\u7B56\u7565</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>FIELD<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">DataMasking</span> <span class="token punctuation">{</span>

    <span class="token class-name">DataMaskingFunc</span> <span class="token function">maskFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">DataMaskingFunc</span><span class="token punctuation">.</span>NO_MASK<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-\u81EA\u5B9A\u4E49serializer-\u53C2\u8003jackson\u7684stringserializer-\u4E0B\u9762\u7684\u793A\u4F8B\u53EA\u9488\u5BF9string\u7C7B\u578B\u8FDB\u884C\u8131\u654F" tabindex="-1"><a class="header-anchor" href="#_2-\u81EA\u5B9A\u4E49serializer-\u53C2\u8003jackson\u7684stringserializer-\u4E0B\u9762\u7684\u793A\u4F8B\u53EA\u9488\u5BF9string\u7C7B\u578B\u8FDB\u884C\u8131\u654F" aria-hidden="true">#</a> 2. \u81EA\u5B9A\u4E49Serializer\uFF0C\u53C2\u8003jackson\u7684StringSerializer\uFF0C\u4E0B\u9762\u7684\u793A\u4F8B\u53EA\u9488\u5BF9String\u7C7B\u578B\u8FDB\u884C\u8131\u654F</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DataMaskingOperation</span> <span class="token punctuation">{</span>

    <span class="token class-name">String</span> MASK_CHAR <span class="token operator">=</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">;</span>
    
    <span class="token class-name">String</span> <span class="token function">mask</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token class-name">String</span> maskChar<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">DataMaskingFunc</span> <span class="token punctuation">{</span>

     <span class="token doc-comment comment">/**
     *  \u8131\u654F\u8F6C\u6362\u5668
     */</span>
     <span class="token function">NO_MASK</span><span class="token punctuation">(</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> maskChar<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> str<span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token function">ALL_MASK</span><span class="token punctuation">(</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> maskChar<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>maskChar<span class="token punctuation">)</span> <span class="token operator">?</span> maskChar <span class="token operator">:</span> <span class="token class-name">DataMaskingOperation</span><span class="token punctuation">.</span>MASK_CHAR<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> str<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">DataMaskingOperation</span> operation<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">DataMaskingFunc</span><span class="token punctuation">(</span><span class="token class-name">DataMaskingOperation</span> operation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>operation <span class="token operator">=</span> operation<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">DataMaskingOperation</span> <span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>operation<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">DataMaskingSerializer</span> <span class="token keyword">extends</span> <span class="token class-name">StdScalarSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">DataMaskingOperation</span> operation<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">DataMaskingSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>operation <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">DataMaskingSerializer</span><span class="token punctuation">(</span><span class="token class-name">DataMaskingOperation</span> operation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>operation <span class="token operator">=</span> operation<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token class-name">SerializerProvider</span> prov<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>value<span class="token punctuation">;</span>
        <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">Object</span> value<span class="token punctuation">,</span> <span class="token class-name">JsonGenerator</span> gen<span class="token punctuation">,</span> <span class="token class-name">SerializerProvider</span> provider<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>operation<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token class-name">DataMaskingFunc</span><span class="token punctuation">.</span>ALL_MASK<span class="token punctuation">.</span><span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            gen<span class="token punctuation">.</span><span class="token function">writeString</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> content <span class="token operator">=</span> operation<span class="token punctuation">.</span><span class="token function">mask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            gen<span class="token punctuation">.</span><span class="token function">writeString</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">serializeWithType</span><span class="token punctuation">(</span><span class="token class-name">Object</span> value<span class="token punctuation">,</span> <span class="token class-name">JsonGenerator</span> gen<span class="token punctuation">,</span> <span class="token class-name">SerializerProvider</span> provider<span class="token punctuation">,</span> <span class="token class-name">TypeSerializer</span> typeSer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> gen<span class="token punctuation">,</span> provider<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">JsonNode</span> <span class="token function">getSchema</span><span class="token punctuation">(</span><span class="token class-name">SerializerProvider</span> provider<span class="token punctuation">,</span> <span class="token class-name">Type</span> typeHint<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createSchemaNode</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">acceptJsonFormatVisitor</span><span class="token punctuation">(</span><span class="token class-name">JsonFormatVisitorWrapper</span> visitor<span class="token punctuation">,</span> <span class="token class-name">JavaType</span> typeHint<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">JsonMappingException</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">visitStringFormat</span><span class="token punctuation">(</span>visitor<span class="token punctuation">,</span> typeHint<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-\u81EA\u5B9A\u4E49annotationintrospector-\u9002\u914D\u6211\u4EEC\u81EA\u5B9A\u4E49\u6CE8\u89E3\u8FD4\u56DE\u76F8\u5E94\u7684serializer" tabindex="-1"><a class="header-anchor" href="#_3-\u81EA\u5B9A\u4E49annotationintrospector-\u9002\u914D\u6211\u4EEC\u81EA\u5B9A\u4E49\u6CE8\u89E3\u8FD4\u56DE\u76F8\u5E94\u7684serializer" aria-hidden="true">#</a> 3. \u81EA\u5B9A\u4E49AnnotationIntrospector\uFF0C\u9002\u914D\u6211\u4EEC\u81EA\u5B9A\u4E49\u6CE8\u89E3\u8FD4\u56DE\u76F8\u5E94\u7684Serializer</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataMaskingAnnotationIntrospector</span> <span class="token keyword">extends</span> <span class="token class-name">NopAnnotationIntrospector</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">findSerializer</span><span class="token punctuation">(</span><span class="token class-name">Annotated</span> am<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DataMasking</span> annotation <span class="token operator">=</span> am<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">DataMasking</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DataMaskingSerializer</span><span class="token punctuation">(</span>annotation<span class="token punctuation">.</span><span class="token function">maskFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-\u8986\u76D6objectmapper" tabindex="-1"><a class="header-anchor" href="#_4-\u8986\u76D6objectmapper" aria-hidden="true">#</a> 4. \u8986\u76D6ObjectMapper</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>
        proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataMaskConfiguration</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>
            proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Jackson2ObjectMapperBuilder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">JacksonObjectMapperConfiguration</span> <span class="token punctuation">{</span>
        <span class="token class-name">JacksonObjectMapperConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Bean</span>
        <span class="token annotation punctuation">@Primary</span>
        <span class="token class-name">ObjectMapper</span> <span class="token function">jacksonObjectMapper</span><span class="token punctuation">(</span><span class="token class-name">Jackson2ObjectMapperBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">createXmlMapper</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">AnnotationIntrospector</span> ai <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">getSerializationConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotationIntrospector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">AnnotationIntrospector</span> newAi <span class="token operator">=</span> <span class="token class-name">AnnotationIntrospectorPair</span><span class="token punctuation">.</span><span class="token function">pair</span><span class="token punctuation">(</span>ai<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DataMaskingAnnotationIntrospector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            objectMapper<span class="token punctuation">.</span><span class="token function">setAnnotationIntrospector</span><span class="token punctuation">(</span>newAi<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> objectMapper<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-\u8FD4\u56DE\u5BF9\u8C61\u52A0\u4E0A\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#_5-\u8FD4\u56DE\u5BF9\u8C61\u52A0\u4E0A\u6CE8\u89E3" aria-hidden="true">#</a> 5. \u8FD4\u56DE\u5BF9\u8C61\u52A0\u4E0A\u6CE8\u89E3</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u4E3B\u952EID
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u59D3\u540D
     */</span>
    <span class="token annotation punctuation">@DataMasking</span><span class="token punctuation">(</span>maskFunc <span class="token operator">=</span> <span class="token class-name">DataMaskingFunc</span><span class="token punctuation">.</span>ALL_MASK<span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u5E74\u9F84
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u90AE\u7BB1
     */</span>
    <span class="token annotation punctuation">@DataMasking</span><span class="token punctuation">(</span>maskFunc <span class="token operator">=</span> <span class="token class-name">DataMaskingFunc</span><span class="token punctuation">.</span>ALL_MASK<span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),c=[e];function o(i,l){return s(),a("div",null,c)}var r=n(p,[["render",o],["__file","\u901A\u8FC7\u6CE8\u89E3\u5B9E\u73B0\u63A5\u53E3\u8FD4\u56DE\u6570\u636E\u8131\u654F.html.vue"]]);export{r as default};
