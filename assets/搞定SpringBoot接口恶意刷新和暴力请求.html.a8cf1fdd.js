import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as t}from"./app.ffebafef.js";const p={},e=t(`<h1 id="\u641E\u5B9A-springboot-\u63A5\u53E3\u6076\u610F\u5237\u65B0\u548C\u66B4\u529B\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u641E\u5B9A-springboot-\u63A5\u53E3\u6076\u610F\u5237\u65B0\u548C\u66B4\u529B\u8BF7\u6C42" aria-hidden="true">#</a> \u641E\u5B9A SpringBoot \u63A5\u53E3\u6076\u610F\u5237\u65B0\u548C\u66B4\u529B\u8BF7\u6C42</h1><p>\u5728\u5B9E\u9645\u9879\u76EE\u4F7F\u7528\u4E2D\uFF0C\u5FC5\u987B\u8981\u8003\u8651\u670D\u52A1\u7684\u5B89\u5168\u6027\uFF0C\u5F53\u670D\u52A1\u90E8\u7F72\u5230\u4E92\u8054\u7F51\u4EE5\u540E\uFF0C\u5C31\u8981\u8003\u8651\u670D\u52A1\u88AB\u6076\u610F\u8BF7\u6C42\u548C\u66B4\u529B\u653B\u51FB\u7684\u60C5\u51B5\uFF0C\u4E0B\u9762\u7684\u6559\u7A0B\uFF0C\u901A\u8FC7<code>intercept</code>\u548C<code>redis</code>\u9488\u5BF9<code>url+ip</code>\u5728\u4E00\u5B9A\u65F6\u95F4\u5185\u8BBF\u95EE\u7684\u6B21\u6570\u6765\u5C06ip\u7981\u7528\uFF0C\u53EF\u4EE5\u6839\u636E\u81EA\u5DF1\u7684\u9700\u6C42\u8FDB\u884C\u76F8\u5E94\u7684\u4FEE\u6539\uFF0C\u6765\u6253\u6253\u81EA\u5DF1\u7684\u76EE\u7684\uFF1B</p><p>\u9996\u5148\u5DE5\u7A0B\u4E3Aspringboot\u6846\u67B6\u642D\u5EFA\uFF0C\u4E0D\u518D\u8BE6\u7EC6\u53D9\u8FF0\u3002</p><p>\u9996\u5148\u521B\u5EFA\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u62E6\u622A\u5668\u7C7B\uFF0C\u4E5F\u662F\u6700\u6838\u5FC3\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@package</span>: com.technicalinterest.group.interceptor
 * <span class="token keyword">@className</span>: IpUrlLimitInterceptor
 * <span class="token keyword">@description</span>: ip+url\u91CD\u590D\u8BF7\u6C42\u73B0\u5728\u62E6\u622A\u5668
 * <span class="token keyword">@author</span>: Shuyu.Wang
 * <span class="token keyword">@since</span>: 0.1
 **/</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IpUrlLimitInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>
 
 
 <span class="token keyword">private</span> <span class="token class-name">RedisUtil</span> <span class="token function">getRedisUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span>  <span class="token class-name">SpringContextUtil</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RedisUtil</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">LOCK_IP_URL_KEY</span><span class="token operator">=</span><span class="token string">&quot;lock_ip_&quot;</span><span class="token punctuation">;</span>
 
 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">IP_URL_REQ_TIME</span><span class="token operator">=</span><span class="token string">&quot;ip_url_times_&quot;</span><span class="token punctuation">;</span>
 
 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token constant">LIMIT_TIMES</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>
 
 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">IP_LOCK_TIME</span><span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">;</span>
 
 <span class="token annotation punctuation">@Override</span>
 <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> httpServletRequest<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> httpServletResponse<span class="token punctuation">,</span> <span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;request\u8BF7\u6C42\u5730\u5740uri={},ip={}&quot;</span><span class="token punctuation">,</span> httpServletRequest<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">IpAdrressUtil</span><span class="token punctuation">.</span><span class="token function">getIpAdrress</span><span class="token punctuation">(</span>httpServletRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ipIsLock</span><span class="token punctuation">(</span><span class="token class-name">IpAdrressUtil</span><span class="token punctuation">.</span><span class="token function">getIpAdrress</span><span class="token punctuation">(</span>httpServletRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;ip\u8BBF\u95EE\u88AB\u7981\u6B62={}&quot;</span><span class="token punctuation">,</span><span class="token class-name">IpAdrressUtil</span><span class="token punctuation">.</span><span class="token function">getIpAdrress</span><span class="token punctuation">(</span>httpServletRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">ApiResult</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApiResult</span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span><span class="token constant">LOCK_IP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">returnJson</span><span class="token punctuation">(</span>httpServletResponse<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">addRequestTime</span><span class="token punctuation">(</span><span class="token class-name">IpAdrressUtil</span><span class="token punctuation">.</span><span class="token function">getIpAdrress</span><span class="token punctuation">(</span>httpServletRequest<span class="token punctuation">)</span><span class="token punctuation">,</span>httpServletRequest<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token class-name">ApiResult</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApiResult</span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span><span class="token constant">LOCK_IP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">returnJson</span><span class="token punctuation">(</span>httpServletResponse<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token annotation punctuation">@Override</span>
 <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> httpServletRequest<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> httpServletResponse<span class="token punctuation">,</span> <span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token class-name">ModelAndView</span> modelAndView<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
 
 <span class="token punctuation">}</span>
 
 <span class="token annotation punctuation">@Override</span>
 <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> httpServletRequest<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> httpServletResponse<span class="token punctuation">,</span> <span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
 
 <span class="token punctuation">}</span>
 
 <span class="token doc-comment comment">/**
  * @Description: \u5224\u65ADip\u662F\u5426\u88AB\u7981\u7528
  * <span class="token keyword">@author</span>: shuyu.wang
  * <span class="token keyword">@date</span>: 2019-10-12 13:08
  * <span class="token keyword">@param</span> <span class="token parameter">ip</span>
  * <span class="token keyword">@return</span> java.lang.Boolean
  */</span>
 <span class="token keyword">private</span> <span class="token class-name">Boolean</span> <span class="token function">ipIsLock</span><span class="token punctuation">(</span><span class="token class-name">String</span> ip<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">RedisUtil</span> redisUtil<span class="token operator">=</span><span class="token function">getRedisUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>redisUtil<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span><span class="token constant">LOCK_IP_URL_KEY</span><span class="token operator">+</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token doc-comment comment">/**
  * @Description: \u8BB0\u5F55\u8BF7\u6C42\u6B21\u6570
  * <span class="token keyword">@author</span>: shuyu.wang
  * <span class="token keyword">@date</span>: 2019-10-12 17:18
  * <span class="token keyword">@param</span> <span class="token parameter">ip</span>
  * <span class="token keyword">@param</span> <span class="token parameter">uri</span>
  * <span class="token keyword">@return</span> java.lang.Boolean
  */</span>
 <span class="token keyword">private</span> <span class="token class-name">Boolean</span> <span class="token function">addRequestTime</span><span class="token punctuation">(</span><span class="token class-name">String</span> ip<span class="token punctuation">,</span><span class="token class-name">String</span> uri<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">String</span> key<span class="token operator">=</span><span class="token constant">IP_URL_REQ_TIME</span><span class="token operator">+</span>ip<span class="token operator">+</span>uri<span class="token punctuation">;</span>
  <span class="token class-name">RedisUtil</span> redisUtil<span class="token operator">=</span><span class="token function">getRedisUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>redisUtil<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">long</span> time<span class="token operator">=</span>redisUtil<span class="token punctuation">.</span><span class="token function">incr</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>time<span class="token operator">&gt;=</span><span class="token constant">LIMIT_TIMES</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    redisUtil<span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span><span class="token constant">LOCK_IP_URL_KEY</span><span class="token operator">+</span>ip<span class="token punctuation">,</span>ip<span class="token punctuation">,</span><span class="token constant">IP_LOCK_TIME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
   redisUtil<span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">returnJson</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> json<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token class-name">PrintWriter</span> writer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/json; charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
   writer <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   writer<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;LoginInterceptor response error ---&gt; {}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>writer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
 
 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u4E2Dredis\u7684\u4F7F\u7528\u7684\u662F\u5206\u5E03\u5F0F\u9501\u7684\u5F62\u5F0F\uFF0C\u8FD9\u6837\u53EF\u4EE5\u6700\u5927\u7A0B\u5EA6\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\u548C\u529F\u80FD\u7684\u5B9E\u73B0\u6548\u679C\u3002\u4EE3\u7801\u4E2D\u8BBE\u7F6E\u7684\u662F1S\u5185\u540C\u4E00\u4E2A\u63A5\u53E3\u901A\u8FC7\u540C\u4E00\u4E2Aip\u8BBF\u95EE5\u6B21\uFF0C\u5C31\u5C06\u8BE5ip\u7981\u75281\u4E2A\u5C0F\u65F6\uFF0C\u6839\u636E\u81EA\u5DF1\u9879\u76EE\u9700\u6C42\u53EF\u4EE5\u81EA\u5DF1\u9002\u5F53\u4FEE\u6539\uFF0C\u5B9E\u73B0\u81EA\u5DF1\u60F3\u8981\u7684\u529F\u80FD\uFF1B</p><p>redis\u5206\u5E03\u5F0F\u9501\u7684\u5173\u952E\u4EE3\u7801:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@package</span>: com.shuyu.blog.util
 * <span class="token keyword">@className</span>: RedisUtil
 * <span class="token keyword">@description</span>:
 * <span class="token keyword">@author</span>: Shuyu.Wang
 * <span class="token keyword">@since</span>: 0.1
 **/</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisUtil</span> <span class="token punctuation">{</span>
 
 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Long</span> <span class="token constant">SUCCESS</span> <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>
 
 <span class="token annotation punctuation">@Autowired</span>
 <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> redisTemplate<span class="token punctuation">;</span>
 <span class="token comment">// =============================common============================</span>
 
 
 
 <span class="token doc-comment comment">/**
  * \u83B7\u53D6\u9501
  * <span class="token keyword">@param</span> <span class="token parameter">lockKey</span>
  * <span class="token keyword">@param</span> <span class="token parameter">value</span>
  * <span class="token keyword">@param</span> <span class="token parameter">expireTime</span>\uFF1A\u5355\u4F4D-\u79D2
  * <span class="token keyword">@return</span>
  */</span>
 <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">getLock</span><span class="token punctuation">(</span><span class="token class-name">String</span> lockKey<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> expireTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
   log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u6DFB\u52A0\u5206\u5E03\u5F0F\u9501key={},expireTime={}&quot;</span><span class="token punctuation">,</span>lockKey<span class="token punctuation">,</span>expireTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> script <span class="token operator">=</span> <span class="token string">&quot;if redis.call(&#39;setNx&#39;,KEYS[1],ARGV[1]) then if redis.call(&#39;get&#39;,KEYS[1])==ARGV[1] then return redis.call(&#39;expire&#39;,KEYS[1],ARGV[2]) else return 0 end end&quot;</span><span class="token punctuation">;</span>
   <span class="token class-name">RedisScript</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> redisScript <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultRedisScript</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>script<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">Object</span> result <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>redisScript<span class="token punctuation">,</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> expireTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">SUCCESS</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token doc-comment comment">/**
  * \u91CA\u653E\u9501
  * <span class="token keyword">@param</span> <span class="token parameter">lockKey</span>
  * <span class="token keyword">@param</span> <span class="token parameter">value</span>
  * <span class="token keyword">@return</span>
  */</span>
 <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">releaseLock</span><span class="token punctuation">(</span><span class="token class-name">String</span> lockKey<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> script <span class="token operator">=</span> <span class="token string">&quot;if redis.call(&#39;get&#39;, KEYS[1]) == ARGV[1] then return redis.call(&#39;del&#39;, KEYS[1]) else return 0 end&quot;</span><span class="token punctuation">;</span>
  <span class="token class-name">RedisScript</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> redisScript <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultRedisScript</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>script<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Object</span> result <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>redisScript<span class="token punctuation">,</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">SUCCESS</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u5C06\u4E0A\u9762\u81EA\u5B9A\u4E49\u7684\u62E6\u622A\u5668\u901A\u8FC7<code>registry.addInterceptor</code>\u6DFB\u52A0\u4E00\u4E0B\uFF0C\u5C31\u751F\u6548\u4E86\uFF1B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyWebAppConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurerAdapter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
 <span class="token class-name">IpUrlLimitInterceptor</span> <span class="token function">getIpUrlLimitInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IpUrlLimitInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span><span class="token class-name">InterceptorRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token function">getIpUrlLimitInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">addInterceptors</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81EA\u5DF1\u53EF\u4EE5\u5199\u4E00\u4E2Afor\u5FAA\u73AF\u6765\u6D4B\u8BD5\u65B9\u9762\u7684\u529F\u80FD\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u8BE6\u7EC6\u4ECB\u7ECD\u4E86\u3002</p>`,11),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","\u641E\u5B9ASpringBoot\u63A5\u53E3\u6076\u610F\u5237\u65B0\u548C\u66B4\u529B\u8BF7\u6C42.html.vue"]]);export{r as default};
