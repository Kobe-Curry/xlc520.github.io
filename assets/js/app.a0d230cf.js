(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var i,r,s=e[0],l=e[1],c=e[2],u=0,d=[];u<s.length;u++)r=s[u],Object.prototype.hasOwnProperty.call(a,r)&&a[r]&&d.push(a[r][0]),a[r]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(n[i]=l[i]);for(p&&p(e);d.length;)d.shift()();return o.push.apply(o,c||[]),t()}function t(){for(var n,e=0;e<o.length;e++){for(var t=o[e],i=!0,s=1;s<t.length;s++){var l=t[s];0!==a[l]&&(i=!1)}i&&(o.splice(e--,1),n=r(r.s=t[0]))}return n}var i={},a={2:0},o=[];function r(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.e=function(n){var e=[],t=a[n];if(0!==t)if(t)e.push(t[2]);else{var i=new Promise((function(e,i){t=a[n]=[e,i]}));e.push(t[2]=i);var o,s=document.createElement("script");s.charset="utf-8",s.timeout=120,r.nc&&s.setAttribute("nonce",r.nc),s.src=function(n){return r.p+"assets/js/"+({1:"vendors~layout-Blog~layout-Layout~layout-NotFound",3:"layout-Blog",4:"layout-Layout",5:"layout-NotFound",6:"layout-Slide",7:"page-12个后端开发工具",8:"page-API",9:"page-Bing必应API",10:"page-Centos7Minimal安装后初始化配置",11:"page-Clash-V2ray订阅",12:"page-Code",13:"page-Euserv",14:"page-Git",15:"page-GitHub-Auto-Commit",16:"page-Git、GitHub、Gitee",17:"page-Intellijidea高效使用教程",18:"page-JApiDocs教程",19:"page-Java",20:"page-Lenovo",21:"page-Linux",22:"page-Linux脚本工具",23:"page-MyEclipsev2021永久激活版",24:"page-MySQL8",25:"page-MySQL压缩版安装配置",26:"page-Nginx从安装到高可用",27:"page-Nginx安装Web应用防火墙",28:"page-Openssl一键自签证书",29:"page-Podman开源的容器",30:"page-SSH客户端软件",31:"page-Script",32:"page-SpringBoot+SpringSecurity前后端分离+Jwt的权限认证",33:"page-SpringBoot+拦截器+自定义异常+自定义注解+全局异常处理",34:"page-SpringBoot启动的时候默认的banner",35:"page-SpringBoot定时任务动态管理通用解决方案",36:"page-SpringBoot将Bean放入Spring容器中的五种方式",37:"page-SpringBoot打包不同环境配置与shell脚本部署",38:"page-SpringBoot项目鉴权的4种方式",39:"page-Spring面试63问",40:"page-StartAllBack",41:"page-Steam",42:"page-Study",43:"page-Tools",44:"page-VuePress学习",45:"page-Windows子系统",46:"page-Xposed-edge-proShell命令",47:"page-Xposed-edge-proShell命令-打开微信好友聊天界面",48:"page-Xposededgepro入门教程",49:"page-commit规范emoji表情",50:"page-daily",51:"page-python安装源",52:"page-win10快捷键",53:"page-临时邮箱和接码",54:"page-京东脚本仓库",55:"page-使用docker快速安装oracle",56:"page-免费VPS",57:"page-免费加速器",58:"page-免费图标",59:"page-免费工具集锦",60:"page-免费思维导图",61:"page-免费插图",62:"page-免费资源集锦",63:"page-全球各大免费电子图书馆汇集",64:"page-关闭微信朋友圈广告和公众号推荐流",65:"page-其他",66:"page-卸载windows服务，删除windows服务",67:"page-去除MIUI10秒的警告",68:"page-各种软件",69:"page-国内常用静态资源CDN公共库",70:"page-图库网站",71:"page-在线万能查询和在线工具",72:"page-安装NodeJS-Maven-Mysql",73:"page-安装WSA-激活GPU-双击安装APK",74:"page-宝塔面板绕过绑定账号",75:"page-实用shell脚本",76:"page-开发中报错异常解决",77:"page-开源后台管理系统",78:"page-开源后台管理项目",79:"page-影视",80:"page-影视软件TV-APK",81:"page-微软Office365E5开发人员计划",82:"page-截图工具大全",83:"page-数据类型Java类型",84:"page-浏览器UA",85:"page-漏洞监控平台——Monitor",86:"page-猫影视资源接口",87:"page-电子书网站",88:"page-白嫖机场",89:"page-直播源",90:"page-程序员常逛的网站",91:"page-网址",92:"page-美团年货电子书",93:"page-脚本仓库",94:"page-蓝奏云安卓APP合集",95:"page-表单系统",96:"page-阿里十大最受开发者欢迎的工具",97:"page-首页",98:"page-高清视频解析接口",99:"vendors~flowchart",100:"vendors~layout-Layout",101:"vendors~mermaid",102:"vendors~photo-swipe",103:"vendors~reveal"}[n]||n)+"."+{1:"e6b9289b",3:"81ee3a3f",4:"3f7644a5",5:"935f33cd",6:"9a4e17d5",7:"80a73d33",8:"c9cde110",9:"e88cd46e",10:"fc634798",11:"37e0da61",12:"b4cf2120",13:"f48d1517",14:"3a0d791c",15:"2cd78d70",16:"7a4582ad",17:"8f731336",18:"9ab58b82",19:"7548900c",20:"9dcd6418",21:"9deba223",22:"ae7e8a8f",23:"f2050aa4",24:"72180091",25:"853dcab6",26:"3ba231dd",27:"35c553fb",28:"c449efba",29:"59187ef5",30:"a501b8b4",31:"bd929de7",32:"575cc2ba",33:"51ef3be1",34:"e428f1ed",35:"be5fd251",36:"d64e1a4b",37:"4cf319b5",38:"42223656",39:"006f6f05",40:"bf189cde",41:"6ae0264d",42:"95b0365c",43:"5041b8c7",44:"260c374c",45:"e73c7e66",46:"ad31f2a6",47:"82444294",48:"b04fc515",49:"9d226274",50:"f6851978",51:"c6f63112",52:"3aa50055",53:"e7522f4b",54:"a2c3bc5c",55:"535126c1",56:"c6a49366",57:"69663e1e",58:"cb87837c",59:"26606138",60:"8c2a80a8",61:"4cf4ba91",62:"511b5a45",63:"cbdc61d4",64:"0778c15b",65:"a6dcfbd9",66:"839be0e4",67:"8e8e6c97",68:"4b1facfd",69:"25385aa8",70:"b1abb48e",71:"deb75ccf",72:"9c8f28f6",73:"b66a4533",74:"a3eb635f",75:"1a37f200",76:"b2be2bc6",77:"bb15aa30",78:"b9524b38",79:"3b2a4c03",80:"0a4d0de4",81:"6d6b3b94",82:"7137f995",83:"b5ea200f",84:"32c04b32",85:"9b189a1a",86:"a6697be3",87:"e9389134",88:"4b8c6b5f",89:"786bf932",90:"14749841",91:"13b0e67f",92:"d971798b",93:"85af8bfb",94:"18364599",95:"dd346845",96:"ed7b1119",97:"561b2fbc",98:"1eeb1820",99:"86294d06",100:"97352143",101:"4b6c7b51",102:"d92efe7b",103:"7df393c1",104:"64cdeb9d",105:"f0b7cde1",106:"94a72af5",107:"f8ec3964",108:"09006522",109:"0d357895",110:"b4d14577"}[n]+".js"}(n);var l=new Error;o=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=a[n];if(0!==t){if(t){var i=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+i+": "+o+")",l.name="ChunkLoadError",l.type=i,l.request=o,t[1](l)}a[n]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:s})}),12e4);s.onerror=s.onload=o,document.head.appendChild(s)}return Promise.all(e)},r.m=n,r.c=i,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)r.d(t,i,function(e){return n[e]}.bind(null,i));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="/",r.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var p=l;o.push([68,0]),t()}([function(n,e,t){"use strict";
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */var i=Object.freeze({});function a(n){return null==n}function o(n){return null!=n}function r(n){return!0===n}function s(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function l(n){return null!==n&&"object"==typeof n}var c=Object.prototype.toString;function p(n){return"[object Object]"===c.call(n)}function u(n){return"[object RegExp]"===c.call(n)}function d(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function h(n){return o(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function m(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===c?JSON.stringify(n,null,2):String(n)}function g(n){var e=parseFloat(n);return isNaN(e)?n:e}function v(n,e){for(var t=Object.create(null),i=n.split(","),a=0;a<i.length;a++)t[i[a]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}v("slot,component",!0);var f=v("key,ref,slot,slot-scope,is");function b(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var w=Object.prototype.hasOwnProperty;function y(n,e){return w.call(n,e)}function x(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var E=/-(\w)/g,_=x((function(n){return n.replace(E,(function(n,e){return e?e.toUpperCase():""}))})),S=x((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),A=/\B([A-Z])/g,k=x((function(n){return n.replace(A,"-$1").toLowerCase()}));var T=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var i=arguments.length;return i?i>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function B(n,e){e=e||0;for(var t=n.length-e,i=new Array(t);t--;)i[t]=n[t+e];return i}function C(n,e){for(var t in e)n[t]=e[t];return n}function z(n){for(var e={},t=0;t<n.length;t++)n[t]&&C(e,n[t]);return e}function I(n,e,t){}var P=function(n,e,t){return!1},j=function(n){return n};function $(n,e){if(n===e)return!0;var t=l(n),i=l(e);if(!t||!i)return!t&&!i&&String(n)===String(e);try{var a=Array.isArray(n),o=Array.isArray(e);if(a&&o)return n.length===e.length&&n.every((function(n,t){return $(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(a||o)return!1;var r=Object.keys(n),s=Object.keys(e);return r.length===s.length&&r.every((function(t){return $(n[t],e[t])}))}catch(n){return!1}}function D(n,e){for(var t=0;t<n.length;t++)if($(n[t],e))return t;return-1}function q(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var M=["component","directive","filter"],O=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:P,isReservedAttr:P,isUnknownElement:P,getTagNamespace:I,parsePlatformTagName:j,mustUseProp:P,async:!0,_lifecycleHooks:O},L=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function R(n,e,t,i){Object.defineProperty(n,e,{value:t,enumerable:!!i,writable:!0,configurable:!0})}var N=new RegExp("[^"+L.source+".$_\\d]");var U,H="__proto__"in{},J="undefined"!=typeof window,G="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,V=G&&WXEnvironment.platform.toLowerCase(),W=J&&window.navigator.userAgent.toLowerCase(),K=W&&/msie|trident/.test(W),Q=W&&W.indexOf("msie 9.0")>0,X=W&&W.indexOf("edge/")>0,Z=(W&&W.indexOf("android"),W&&/iphone|ipad|ipod|ios/.test(W)||"ios"===V),Y=(W&&/chrome\/\d+/.test(W),W&&/phantomjs/.test(W),W&&W.match(/firefox\/(\d+)/)),nn={}.watch,en=!1;if(J)try{var tn={};Object.defineProperty(tn,"passive",{get:function(){en=!0}}),window.addEventListener("test-passive",null,tn)}catch(n){}var an=function(){return void 0===U&&(U=!J&&!G&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),U},on=J&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function rn(n){return"function"==typeof n&&/native code/.test(n.toString())}var sn,ln="undefined"!=typeof Symbol&&rn(Symbol)&&"undefined"!=typeof Reflect&&rn(Reflect.ownKeys);sn="undefined"!=typeof Set&&rn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var cn=I,pn=0,un=function(){this.id=pn++,this.subs=[]};un.prototype.addSub=function(n){this.subs.push(n)},un.prototype.removeSub=function(n){b(this.subs,n)},un.prototype.depend=function(){un.target&&un.target.addDep(this)},un.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},un.target=null;var dn=[];function hn(n){dn.push(n),un.target=n}function mn(){dn.pop(),un.target=dn[dn.length-1]}var gn=function(n,e,t,i,a,o,r,s){this.tag=n,this.data=e,this.children=t,this.text=i,this.elm=a,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},vn={child:{configurable:!0}};vn.child.get=function(){return this.componentInstance},Object.defineProperties(gn.prototype,vn);var fn=function(n){void 0===n&&(n="");var e=new gn;return e.text=n,e.isComment=!0,e};function bn(n){return new gn(void 0,void 0,void 0,String(n))}function wn(n){var e=new gn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var yn=Array.prototype,xn=Object.create(yn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=yn[n];R(xn,n,(function(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];var a,o=e.apply(this,t),r=this.__ob__;switch(n){case"push":case"unshift":a=t;break;case"splice":a=t.slice(2)}return a&&r.observeArray(a),r.dep.notify(),o}))}));var En=Object.getOwnPropertyNames(xn),_n=!0;function Sn(n){_n=n}var An=function(n){this.value=n,this.dep=new un,this.vmCount=0,R(n,"__ob__",this),Array.isArray(n)?(H?function(n,e){n.__proto__=e}(n,xn):function(n,e,t){for(var i=0,a=t.length;i<a;i++){var o=t[i];R(n,o,e[o])}}(n,xn,En),this.observeArray(n)):this.walk(n)};function kn(n,e){var t;if(l(n)&&!(n instanceof gn))return y(n,"__ob__")&&n.__ob__ instanceof An?t=n.__ob__:_n&&!an()&&(Array.isArray(n)||p(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new An(n)),e&&t&&t.vmCount++,t}function Tn(n,e,t,i,a){var o=new un,r=Object.getOwnPropertyDescriptor(n,e);if(!r||!1!==r.configurable){var s=r&&r.get,l=r&&r.set;s&&!l||2!==arguments.length||(t=n[e]);var c=!a&&kn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return un.target&&(o.depend(),c&&(c.dep.depend(),Array.isArray(e)&&zn(e))),e},set:function(e){var i=s?s.call(n):t;e===i||e!=e&&i!=i||s&&!l||(l?l.call(n,e):t=e,c=!a&&kn(e),o.notify())}})}}function Bn(n,e,t){if(Array.isArray(n)&&d(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var i=n.__ob__;return n._isVue||i&&i.vmCount?t:i?(Tn(i.value,e,t),i.dep.notify(),t):(n[e]=t,t)}function Cn(n,e){if(Array.isArray(n)&&d(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||y(n,e)&&(delete n[e],t&&t.dep.notify())}}function zn(n){for(var e=void 0,t=0,i=n.length;t<i;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&zn(e)}An.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)Tn(n,e[t])},An.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)kn(n[e])};var In=F.optionMergeStrategies;function Pn(n,e){if(!e)return n;for(var t,i,a,o=ln?Reflect.ownKeys(e):Object.keys(e),r=0;r<o.length;r++)"__ob__"!==(t=o[r])&&(i=n[t],a=e[t],y(n,t)?i!==a&&p(i)&&p(a)&&Pn(i,a):Bn(n,t,a));return n}function jn(n,e,t){return t?function(){var i="function"==typeof e?e.call(t,t):e,a="function"==typeof n?n.call(t,t):n;return i?Pn(i,a):a}:e?n?function(){return Pn("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function $n(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Dn(n,e,t,i){var a=Object.create(n||null);return e?C(a,e):a}In.data=function(n,e,t){return t?jn(n,e,t):e&&"function"!=typeof e?n:jn(n,e)},O.forEach((function(n){In[n]=$n})),M.forEach((function(n){In[n+"s"]=Dn})),In.watch=function(n,e,t,i){if(n===nn&&(n=void 0),e===nn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var a={};for(var o in C(a,n),e){var r=a[o],s=e[o];r&&!Array.isArray(r)&&(r=[r]),a[o]=r?r.concat(s):Array.isArray(s)?s:[s]}return a},In.props=In.methods=In.inject=In.computed=function(n,e,t,i){if(!n)return e;var a=Object.create(null);return C(a,n),e&&C(a,e),a},In.provide=jn;var qn=function(n,e){return void 0===e?n:e};function Mn(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var i,a,o={};if(Array.isArray(t))for(i=t.length;i--;)"string"==typeof(a=t[i])&&(o[_(a)]={type:null});else if(p(t))for(var r in t)a=t[r],o[_(r)]=p(a)?a:{type:a};else 0;n.props=o}}(e),function(n,e){var t=n.inject;if(t){var i=n.inject={};if(Array.isArray(t))for(var a=0;a<t.length;a++)i[t[a]]={from:t[a]};else if(p(t))for(var o in t){var r=t[o];i[o]=p(r)?C({from:o},r):{from:r}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var i=e[t];"function"==typeof i&&(e[t]={bind:i,update:i})}}(e),!e._base&&(e.extends&&(n=Mn(n,e.extends,t)),e.mixins))for(var i=0,a=e.mixins.length;i<a;i++)n=Mn(n,e.mixins[i],t);var o,r={};for(o in n)s(o);for(o in e)y(n,o)||s(o);function s(i){var a=In[i]||qn;r[i]=a(n[i],e[i],t,i)}return r}function On(n,e,t,i){if("string"==typeof t){var a=n[e];if(y(a,t))return a[t];var o=_(t);if(y(a,o))return a[o];var r=S(o);return y(a,r)?a[r]:a[t]||a[o]||a[r]}}function Fn(n,e,t,i){var a=e[n],o=!y(t,n),r=t[n],s=Un(Boolean,a.type);if(s>-1)if(o&&!y(a,"default"))r=!1;else if(""===r||r===k(n)){var l=Un(String,a.type);(l<0||s<l)&&(r=!0)}if(void 0===r){r=function(n,e,t){if(!y(e,"default"))return;var i=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof i&&"Function"!==Rn(e.type)?i.call(n):i}(i,a,n);var c=_n;Sn(!0),kn(r),Sn(c)}return r}var Ln=/^\s*function (\w+)/;function Rn(n){var e=n&&n.toString().match(Ln);return e?e[1]:""}function Nn(n,e){return Rn(n)===Rn(e)}function Un(n,e){if(!Array.isArray(e))return Nn(e,n)?0:-1;for(var t=0,i=e.length;t<i;t++)if(Nn(e[t],n))return t;return-1}function Hn(n,e,t){hn();try{if(e)for(var i=e;i=i.$parent;){var a=i.$options.errorCaptured;if(a)for(var o=0;o<a.length;o++)try{if(!1===a[o].call(i,n,e,t))return}catch(n){Gn(n,i,"errorCaptured hook")}}Gn(n,e,t)}finally{mn()}}function Jn(n,e,t,i,a){var o;try{(o=t?n.apply(e,t):n.call(e))&&!o._isVue&&h(o)&&!o._handled&&(o.catch((function(n){return Hn(n,i,a+" (Promise/async)")})),o._handled=!0)}catch(n){Hn(n,i,a)}return o}function Gn(n,e,t){if(F.errorHandler)try{return F.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Vn(e,null,"config.errorHandler")}Vn(n,e,t)}function Vn(n,e,t){if(!J&&!G||"undefined"==typeof console)throw n;console.error(n)}var Wn,Kn=!1,Qn=[],Xn=!1;function Zn(){Xn=!1;var n=Qn.slice(0);Qn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&rn(Promise)){var Yn=Promise.resolve();Wn=function(){Yn.then(Zn),Z&&setTimeout(I)},Kn=!0}else if(K||"undefined"==typeof MutationObserver||!rn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Wn="undefined"!=typeof setImmediate&&rn(setImmediate)?function(){setImmediate(Zn)}:function(){setTimeout(Zn,0)};else{var ne=1,ee=new MutationObserver(Zn),te=document.createTextNode(String(ne));ee.observe(te,{characterData:!0}),Wn=function(){ne=(ne+1)%2,te.data=String(ne)},Kn=!0}function ie(n,e){var t;if(Qn.push((function(){if(n)try{n.call(e)}catch(n){Hn(n,e,"nextTick")}else t&&t(e)})),Xn||(Xn=!0,Wn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var ae=new sn;function oe(n){!function n(e,t){var i,a,o=Array.isArray(e);if(!o&&!l(e)||Object.isFrozen(e)||e instanceof gn)return;if(e.__ob__){var r=e.__ob__.dep.id;if(t.has(r))return;t.add(r)}if(o)for(i=e.length;i--;)n(e[i],t);else for(a=Object.keys(e),i=a.length;i--;)n(e[a[i]],t)}(n,ae),ae.clear()}var re=x((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),i="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=i?n.slice(1):n,once:t,capture:i,passive:e}}));function se(n,e){function t(){var n=arguments,i=t.fns;if(!Array.isArray(i))return Jn(i,null,arguments,e,"v-on handler");for(var a=i.slice(),o=0;o<a.length;o++)Jn(a[o],null,n,e,"v-on handler")}return t.fns=n,t}function le(n,e,t,i,o,s){var l,c,p,u;for(l in n)c=n[l],p=e[l],u=re(l),a(c)||(a(p)?(a(c.fns)&&(c=n[l]=se(c,s)),r(u.once)&&(c=n[l]=o(u.name,c,u.capture)),t(u.name,c,u.capture,u.passive,u.params)):c!==p&&(p.fns=c,n[l]=p));for(l in e)a(n[l])&&i((u=re(l)).name,e[l],u.capture)}function ce(n,e,t){var i;n instanceof gn&&(n=n.data.hook||(n.data.hook={}));var s=n[e];function l(){t.apply(this,arguments),b(i.fns,l)}a(s)?i=se([l]):o(s.fns)&&r(s.merged)?(i=s).fns.push(l):i=se([s,l]),i.merged=!0,n[e]=i}function pe(n,e,t,i,a){if(o(e)){if(y(e,t))return n[t]=e[t],a||delete e[t],!0;if(y(e,i))return n[t]=e[i],a||delete e[i],!0}return!1}function ue(n){return s(n)?[bn(n)]:Array.isArray(n)?function n(e,t){var i,l,c,p,u=[];for(i=0;i<e.length;i++)a(l=e[i])||"boolean"==typeof l||(c=u.length-1,p=u[c],Array.isArray(l)?l.length>0&&(de((l=n(l,(t||"")+"_"+i))[0])&&de(p)&&(u[c]=bn(p.text+l[0].text),l.shift()),u.push.apply(u,l)):s(l)?de(p)?u[c]=bn(p.text+l):""!==l&&u.push(bn(l)):de(l)&&de(p)?u[c]=bn(p.text+l.text):(r(e._isVList)&&o(l.tag)&&a(l.key)&&o(t)&&(l.key="__vlist"+t+"_"+i+"__"),u.push(l)));return u}(n):void 0}function de(n){return o(n)&&o(n.text)&&!1===n.isComment}function he(n,e){if(n){for(var t=Object.create(null),i=ln?Reflect.ownKeys(n):Object.keys(n),a=0;a<i.length;a++){var o=i[a];if("__ob__"!==o){for(var r=n[o].from,s=e;s;){if(s._provided&&y(s._provided,r)){t[o]=s._provided[r];break}s=s.$parent}if(!s)if("default"in n[o]){var l=n[o].default;t[o]="function"==typeof l?l.call(e):l}else 0}}return t}}function me(n,e){if(!n||!n.length)return{};for(var t={},i=0,a=n.length;i<a;i++){var o=n[i],r=o.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,o.context!==e&&o.fnContext!==e||!r||null==r.slot)(t.default||(t.default=[])).push(o);else{var s=r.slot,l=t[s]||(t[s]=[]);"template"===o.tag?l.push.apply(l,o.children||[]):l.push(o)}}for(var c in t)t[c].every(ge)&&delete t[c];return t}function ge(n){return n.isComment&&!n.asyncFactory||" "===n.text}function ve(n){return n.isComment&&n.asyncFactory}function fe(n,e,t){var a,o=Object.keys(e).length>0,r=n?!!n.$stable:!o,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(r&&t&&t!==i&&s===t.$key&&!o&&!t.$hasNormal)return t;for(var l in a={},n)n[l]&&"$"!==l[0]&&(a[l]=be(e,l,n[l]))}else a={};for(var c in e)c in a||(a[c]=we(e,c));return n&&Object.isExtensible(n)&&(n._normalized=a),R(a,"$stable",r),R(a,"$key",s),R(a,"$hasNormal",o),a}function be(n,e,t){var i=function(){var n=arguments.length?t.apply(null,arguments):t({}),e=(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:ue(n))&&n[0];return n&&(!e||1===n.length&&e.isComment&&!ve(e))?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:i,enumerable:!0,configurable:!0}),i}function we(n,e){return function(){return n[e]}}function ye(n,e){var t,i,a,r,s;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),i=0,a=n.length;i<a;i++)t[i]=e(n[i],i);else if("number"==typeof n)for(t=new Array(n),i=0;i<n;i++)t[i]=e(i+1,i);else if(l(n))if(ln&&n[Symbol.iterator]){t=[];for(var c=n[Symbol.iterator](),p=c.next();!p.done;)t.push(e(p.value,t.length)),p=c.next()}else for(r=Object.keys(n),t=new Array(r.length),i=0,a=r.length;i<a;i++)s=r[i],t[i]=e(n[s],s,i);return o(t)||(t=[]),t._isVList=!0,t}function xe(n,e,t,i){var a,o=this.$scopedSlots[n];o?(t=t||{},i&&(t=C(C({},i),t)),a=o(t)||("function"==typeof e?e():e)):a=this.$slots[n]||("function"==typeof e?e():e);var r=t&&t.slot;return r?this.$createElement("template",{slot:r},a):a}function Ee(n){return On(this.$options,"filters",n)||j}function _e(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function Se(n,e,t,i,a){var o=F.keyCodes[e]||t;return a&&i&&!F.keyCodes[e]?_e(a,i):o?_e(o,n):i?k(i)!==e:void 0===n}function Ae(n,e,t,i,a){if(t)if(l(t)){var o;Array.isArray(t)&&(t=z(t));var r=function(r){if("class"===r||"style"===r||f(r))o=n;else{var s=n.attrs&&n.attrs.type;o=i||F.mustUseProp(e,s,r)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=_(r),c=k(r);l in o||c in o||(o[r]=t[r],a&&((n.on||(n.on={}))["update:"+r]=function(n){t[r]=n}))};for(var s in t)r(s)}else;return n}function ke(n,e){var t=this._staticTrees||(this._staticTrees=[]),i=t[n];return i&&!e||Be(i=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),i}function Te(n,e,t){return Be(n,"__once__"+e+(t?"_"+t:""),!0),n}function Be(n,e,t){if(Array.isArray(n))for(var i=0;i<n.length;i++)n[i]&&"string"!=typeof n[i]&&Ce(n[i],e+"_"+i,t);else Ce(n,e,t)}function Ce(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function ze(n,e){if(e)if(p(e)){var t=n.on=n.on?C({},n.on):{};for(var i in e){var a=t[i],o=e[i];t[i]=a?[].concat(a,o):o}}else;return n}function Ie(n,e,t,i){e=e||{$stable:!t};for(var a=0;a<n.length;a++){var o=n[a];Array.isArray(o)?Ie(o,e,t):o&&(o.proxy&&(o.fn.proxy=!0),e[o.key]=o.fn)}return i&&(e.$key=i),e}function Pe(n,e){for(var t=0;t<e.length;t+=2){var i=e[t];"string"==typeof i&&i&&(n[e[t]]=e[t+1])}return n}function je(n,e){return"string"==typeof n?e+n:n}function $e(n){n._o=Te,n._n=g,n._s=m,n._l=ye,n._t=xe,n._q=$,n._i=D,n._m=ke,n._f=Ee,n._k=Se,n._b=Ae,n._v=bn,n._e=fn,n._u=Ie,n._g=ze,n._d=Pe,n._p=je}function De(n,e,t,a,o){var s,l=this,c=o.options;y(a,"_uid")?(s=Object.create(a))._original=a:(s=a,a=a._original);var p=r(c._compiled),u=!p;this.data=n,this.props=e,this.children=t,this.parent=a,this.listeners=n.on||i,this.injections=he(c.inject,a),this.slots=function(){return l.$slots||fe(n.scopedSlots,l.$slots=me(t,a)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return fe(n.scopedSlots,this.slots())}}),p&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=fe(n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,i){var o=Ne(s,n,e,t,i,u);return o&&!Array.isArray(o)&&(o.fnScopeId=c._scopeId,o.fnContext=a),o}:this._c=function(n,e,t,i){return Ne(s,n,e,t,i,u)}}function qe(n,e,t,i,a){var o=wn(n);return o.fnContext=t,o.fnOptions=i,e.slot&&((o.data||(o.data={})).slot=e.slot),o}function Me(n,e){for(var t in e)n[_(t)]=e[t]}$e(De.prototype);var Oe={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;Oe.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},i=n.data.inlineTemplate;o(i)&&(t.render=i.render,t.staticRenderFns=i.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Xe)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,a,o){0;var r=a.data.scopedSlots,s=n.$scopedSlots,l=!!(r&&!r.$stable||s!==i&&!s.$stable||r&&n.$scopedSlots.$key!==r.$key||!r&&n.$scopedSlots.$key),c=!!(o||n.$options._renderChildren||l);n.$options._parentVnode=a,n.$vnode=a,n._vnode&&(n._vnode.parent=a);if(n.$options._renderChildren=o,n.$attrs=a.data.attrs||i,n.$listeners=t||i,e&&n.$options.props){Sn(!1);for(var p=n._props,u=n.$options._propKeys||[],d=0;d<u.length;d++){var h=u[d],m=n.$options.props;p[h]=Fn(h,m,e,n)}Sn(!0),n.$options.propsData=e}t=t||i;var g=n.$options._parentListeners;n.$options._parentListeners=t,Qe(n,t,g),c&&(n.$slots=me(o,a.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,i=n.componentInstance;i._isMounted||(i._isMounted=!0,et(i,"mounted")),n.data.keepAlive&&(t._isMounted?((e=i)._inactive=!1,it.push(e)):nt(i,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,Ye(e)))return;if(!e._inactive){e._inactive=!0;for(var i=0;i<e.$children.length;i++)n(e.$children[i]);et(e,"deactivated")}}(e,!0):e.$destroy())}},Fe=Object.keys(Oe);function Le(n,e,t,s,c){if(!a(n)){var p=t.$options._base;if(l(n)&&(n=p.extend(n)),"function"==typeof n){var u;if(a(n.cid)&&void 0===(n=function(n,e){if(r(n.error)&&o(n.errorComp))return n.errorComp;if(o(n.resolved))return n.resolved;var t=He;t&&o(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(r(n.loading)&&o(n.loadingComp))return n.loadingComp;if(t&&!o(n.owners)){var i=n.owners=[t],s=!0,c=null,p=null;t.$on("hook:destroyed",(function(){return b(i,t)}));var u=function(n){for(var e=0,t=i.length;e<t;e++)i[e].$forceUpdate();n&&(i.length=0,null!==c&&(clearTimeout(c),c=null),null!==p&&(clearTimeout(p),p=null))},d=q((function(t){n.resolved=Je(t,e),s?i.length=0:u(!0)})),m=q((function(e){o(n.errorComp)&&(n.error=!0,u(!0))})),g=n(d,m);return l(g)&&(h(g)?a(n.resolved)&&g.then(d,m):h(g.component)&&(g.component.then(d,m),o(g.error)&&(n.errorComp=Je(g.error,e)),o(g.loading)&&(n.loadingComp=Je(g.loading,e),0===g.delay?n.loading=!0:c=setTimeout((function(){c=null,a(n.resolved)&&a(n.error)&&(n.loading=!0,u(!1))}),g.delay||200)),o(g.timeout)&&(p=setTimeout((function(){p=null,a(n.resolved)&&m(null)}),g.timeout)))),s=!1,n.loading?n.loadingComp:n.resolved}}(u=n,p)))return function(n,e,t,i,a){var o=fn();return o.asyncFactory=n,o.asyncMeta={data:e,context:t,children:i,tag:a},o}(u,e,t,s,c);e=e||{},_t(n),o(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",i=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var a=e.on||(e.on={}),r=a[i],s=e.model.callback;o(r)?(Array.isArray(r)?-1===r.indexOf(s):r!==s)&&(a[i]=[s].concat(r)):a[i]=s}(n.options,e);var d=function(n,e,t){var i=e.options.props;if(!a(i)){var r={},s=n.attrs,l=n.props;if(o(s)||o(l))for(var c in i){var p=k(c);pe(r,l,c,p,!0)||pe(r,s,c,p,!1)}return r}}(e,n);if(r(n.options.functional))return function(n,e,t,a,r){var s=n.options,l={},c=s.props;if(o(c))for(var p in c)l[p]=Fn(p,c,e||i);else o(t.attrs)&&Me(l,t.attrs),o(t.props)&&Me(l,t.props);var u=new De(t,l,r,a,n),d=s.render.call(null,u._c,u);if(d instanceof gn)return qe(d,t,u.parent,s,u);if(Array.isArray(d)){for(var h=ue(d)||[],m=new Array(h.length),g=0;g<h.length;g++)m[g]=qe(h[g],t,u.parent,s,u);return m}}(n,d,e,t,s);var m=e.on;if(e.on=e.nativeOn,r(n.options.abstract)){var g=e.slot;e={},g&&(e.slot=g)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<Fe.length;t++){var i=Fe[t],a=e[i],o=Oe[i];a===o||a&&a._merged||(e[i]=a?Re(o,a):o)}}(e);var v=n.options.name||c;return new gn("vue-component-"+n.cid+(v?"-"+v:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:d,listeners:m,tag:c,children:s},u)}}}function Re(n,e){var t=function(t,i){n(t,i),e(t,i)};return t._merged=!0,t}function Ne(n,e,t,i,c,p){return(Array.isArray(t)||s(t))&&(c=i,i=t,t=void 0),r(p)&&(c=2),function(n,e,t,i,s){if(o(t)&&o(t.__ob__))return fn();o(t)&&o(t.is)&&(e=t.is);if(!e)return fn();0;Array.isArray(i)&&"function"==typeof i[0]&&((t=t||{}).scopedSlots={default:i[0]},i.length=0);2===s?i=ue(i):1===s&&(i=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(i));var c,p;if("string"==typeof e){var u;p=n.$vnode&&n.$vnode.ns||F.getTagNamespace(e),c=F.isReservedTag(e)?new gn(F.parsePlatformTagName(e),t,i,void 0,void 0,n):t&&t.pre||!o(u=On(n.$options,"components",e))?new gn(e,t,i,void 0,void 0,n):Le(u,t,n,i,e)}else c=Le(e,t,n,i);return Array.isArray(c)?c:o(c)?(o(p)&&function n(e,t,i){e.ns=t,"foreignObject"===e.tag&&(t=void 0,i=!0);if(o(e.children))for(var s=0,l=e.children.length;s<l;s++){var c=e.children[s];o(c.tag)&&(a(c.ns)||r(i)&&"svg"!==c.tag)&&n(c,t,i)}}(c,p),o(t)&&function(n){l(n.style)&&oe(n.style);l(n.class)&&oe(n.class)}(t),c):fn()}(n,e,t,i,c)}var Ue,He=null;function Je(n,e){return(n.__esModule||ln&&"Module"===n[Symbol.toStringTag])&&(n=n.default),l(n)?e.extend(n):n}function Ge(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(o(t)&&(o(t.componentOptions)||ve(t)))return t}}function Ve(n,e){Ue.$on(n,e)}function We(n,e){Ue.$off(n,e)}function Ke(n,e){var t=Ue;return function i(){var a=e.apply(null,arguments);null!==a&&t.$off(n,i)}}function Qe(n,e,t){Ue=n,le(e,t||{},Ve,We,Ke,n),Ue=void 0}var Xe=null;function Ze(n){var e=Xe;return Xe=n,function(){Xe=e}}function Ye(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function nt(n,e){if(e){if(n._directInactive=!1,Ye(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)nt(n.$children[t]);et(n,"activated")}}function et(n,e){hn();var t=n.$options[e],i=e+" hook";if(t)for(var a=0,o=t.length;a<o;a++)Jn(t[a],n,null,n,i);n._hasHookEvent&&n.$emit("hook:"+e),mn()}var tt=[],it=[],at={},ot=!1,rt=!1,st=0;var lt=0,ct=Date.now;if(J&&!K){var pt=window.performance;pt&&"function"==typeof pt.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return pt.now()})}function ut(){var n,e;for(lt=ct(),rt=!0,tt.sort((function(n,e){return n.id-e.id})),st=0;st<tt.length;st++)(n=tt[st]).before&&n.before(),e=n.id,at[e]=null,n.run();var t=it.slice(),i=tt.slice();st=tt.length=it.length=0,at={},ot=rt=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,nt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],i=t.vm;i._watcher===t&&i._isMounted&&!i._isDestroyed&&et(i,"updated")}}(i),on&&F.devtools&&on.emit("flush")}var dt=0,ht=function(n,e,t,i,a){this.vm=n,a&&(n._watcher=this),n._watchers.push(this),i?(this.deep=!!i.deep,this.user=!!i.user,this.lazy=!!i.lazy,this.sync=!!i.sync,this.before=i.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++dt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new sn,this.newDepIds=new sn,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!N.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=I)),this.value=this.lazy?void 0:this.get()};ht.prototype.get=function(){var n;hn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Hn(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&oe(n),mn(),this.cleanupDeps()}return n},ht.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},ht.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},ht.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==at[e]){if(at[e]=!0,rt){for(var t=tt.length-1;t>st&&tt[t].id>n.id;)t--;tt.splice(t+1,0,n)}else tt.push(n);ot||(ot=!0,ie(ut))}}(this)},ht.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||l(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'+this.expression+'"';Jn(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},ht.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},ht.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},ht.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||b(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var mt={enumerable:!0,configurable:!0,get:I,set:I};function gt(n,e,t){mt.get=function(){return this[e][t]},mt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,mt)}function vt(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},i=n._props={},a=n.$options._propKeys=[];n.$parent&&Sn(!1);var o=function(o){a.push(o);var r=Fn(o,e,t,n);Tn(i,o,r),o in n||gt(n,"_props",o)};for(var r in e)o(r);Sn(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?I:T(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;p(e=n._data="function"==typeof e?function(n,e){hn();try{return n.call(e,e)}catch(n){return Hn(n,e,"data()"),{}}finally{mn()}}(e,n):e||{})||(e={});var t=Object.keys(e),i=n.$options.props,a=(n.$options.methods,t.length);for(;a--;){var o=t[a];0,i&&y(i,o)||(r=void 0,36!==(r=(o+"").charCodeAt(0))&&95!==r&&gt(n,"_data",o))}var r;kn(e,!0)}(n):kn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),i=an();for(var a in e){var o=e[a],r="function"==typeof o?o:o.get;0,i||(t[a]=new ht(n,r||I,I,ft)),a in n||bt(n,a,o)}}(n,e.computed),e.watch&&e.watch!==nn&&function(n,e){for(var t in e){var i=e[t];if(Array.isArray(i))for(var a=0;a<i.length;a++)xt(n,t,i[a]);else xt(n,t,i)}}(n,e.watch)}var ft={lazy:!0};function bt(n,e,t){var i=!an();"function"==typeof t?(mt.get=i?wt(e):yt(t),mt.set=I):(mt.get=t.get?i&&!1!==t.cache?wt(e):yt(t.get):I,mt.set=t.set||I),Object.defineProperty(n,e,mt)}function wt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),un.target&&e.depend(),e.value}}function yt(n){return function(){return n.call(this,this)}}function xt(n,e,t,i){return p(t)&&(i=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,i)}var Et=0;function _t(n){var e=n.options;if(n.super){var t=_t(n.super);if(t!==n.superOptions){n.superOptions=t;var i=function(n){var e,t=n.options,i=n.sealedOptions;for(var a in t)t[a]!==i[a]&&(e||(e={}),e[a]=t[a]);return e}(n);i&&C(n.extendOptions,i),(e=n.options=Mn(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function St(n){this._init(n)}function At(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,i=t.cid,a=n._Ctor||(n._Ctor={});if(a[i])return a[i];var o=n.name||t.options.name;var r=function(n){this._init(n)};return(r.prototype=Object.create(t.prototype)).constructor=r,r.cid=e++,r.options=Mn(t.options,n),r.super=t,r.options.props&&function(n){var e=n.options.props;for(var t in e)gt(n.prototype,"_props",t)}(r),r.options.computed&&function(n){var e=n.options.computed;for(var t in e)bt(n.prototype,t,e[t])}(r),r.extend=t.extend,r.mixin=t.mixin,r.use=t.use,M.forEach((function(n){r[n]=t[n]})),o&&(r.options.components[o]=r),r.superOptions=t.options,r.extendOptions=n,r.sealedOptions=C({},r.options),a[i]=r,r}}function kt(n){return n&&(n.Ctor.options.name||n.tag)}function Tt(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!u(n)&&n.test(e)}function Bt(n,e){var t=n.cache,i=n.keys,a=n._vnode;for(var o in t){var r=t[o];if(r){var s=r.name;s&&!e(s)&&Ct(t,o,i,a)}}}function Ct(n,e,t,i){var a=n[e];!a||i&&a.tag===i.tag||a.componentInstance.$destroy(),n[e]=null,b(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=Et++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),i=e._parentVnode;t.parent=e.parent,t._parentVnode=i;var a=i.componentOptions;t.propsData=a.propsData,t._parentListeners=a.listeners,t._renderChildren=a.children,t._componentTag=a.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Mn(_t(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Qe(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,a=t&&t.context;n.$slots=me(e._renderChildren,a),n.$scopedSlots=i,n._c=function(e,t,i,a){return Ne(n,e,t,i,a,!1)},n.$createElement=function(e,t,i,a){return Ne(n,e,t,i,a,!0)};var o=t&&t.data;Tn(n,"$attrs",o&&o.attrs||i,null,!0),Tn(n,"$listeners",e._parentListeners||i,null,!0)}(e),et(e,"beforeCreate"),function(n){var e=he(n.$options.inject,n);e&&(Sn(!1),Object.keys(e).forEach((function(t){Tn(n,t,e[t])})),Sn(!0))}(e),vt(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),et(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(St),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Bn,n.prototype.$delete=Cn,n.prototype.$watch=function(n,e,t){if(p(e))return xt(this,n,e,t);(t=t||{}).user=!0;var i=new ht(this,n,e,t);if(t.immediate){var a='callback for immediate watcher "'+i.expression+'"';hn(),Jn(e,this,[i.value],this,a),mn()}return function(){i.teardown()}}}(St),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var i=this;if(Array.isArray(n))for(var a=0,o=n.length;a<o;a++)i.$on(n[a],t);else(i._events[n]||(i._events[n]=[])).push(t),e.test(n)&&(i._hasHookEvent=!0);return i},n.prototype.$once=function(n,e){var t=this;function i(){t.$off(n,i),e.apply(t,arguments)}return i.fn=e,t.$on(n,i),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var i=0,a=n.length;i<a;i++)t.$off(n[i],e);return t}var o,r=t._events[n];if(!r)return t;if(!e)return t._events[n]=null,t;for(var s=r.length;s--;)if((o=r[s])===e||o.fn===e){r.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?B(t):t;for(var i=B(arguments,1),a='event handler for "'+n+'"',o=0,r=t.length;o<r;o++)Jn(t[o],e,i,e,a)}return e}}(St),function(n){n.prototype._update=function(n,e){var t=this,i=t.$el,a=t._vnode,o=Ze(t);t._vnode=n,t.$el=a?t.__patch__(a,n):t.__patch__(t.$el,n,e,!1),o(),i&&(i.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){et(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||b(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),et(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(St),function(n){$e(n.prototype),n.prototype.$nextTick=function(n){return ie(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,i=t.render,a=t._parentVnode;a&&(e.$scopedSlots=fe(a.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=a;try{He=e,n=i.call(e._renderProxy,e.$createElement)}catch(t){Hn(t,e,"render"),n=e._vnode}finally{He=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof gn||(n=fn()),n.parent=a,n}}(St);var zt=[String,RegExp,Array],It={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:zt,exclude:zt,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,i=this.keyToCache;if(t){var a=t.tag,o=t.componentInstance,r=t.componentOptions;n[i]={name:kt(r),tag:a,componentInstance:o},e.push(i),this.max&&e.length>parseInt(this.max)&&Ct(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Ct(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Bt(n,(function(n){return Tt(e,n)}))})),this.$watch("exclude",(function(e){Bt(n,(function(n){return!Tt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Ge(n),t=e&&e.componentOptions;if(t){var i=kt(t),a=this.include,o=this.exclude;if(a&&(!i||!Tt(a,i))||o&&i&&Tt(o,i))return e;var r=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;r[l]?(e.componentInstance=r[l].componentInstance,b(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return F}};Object.defineProperty(n,"config",e),n.util={warn:cn,extend:C,mergeOptions:Mn,defineReactive:Tn},n.set=Bn,n.delete=Cn,n.nextTick=ie,n.observable=function(n){return kn(n),n},n.options=Object.create(null),M.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,C(n.options.components,It),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=B(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Mn(this.options,n),this}}(n),At(n),function(n){M.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(St),Object.defineProperty(St.prototype,"$isServer",{get:an}),Object.defineProperty(St.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(St,"FunctionalRenderContext",{value:De}),St.version="2.6.14";var Pt=v("style,class"),jt=v("input,textarea,option,select,progress"),$t=v("contenteditable,draggable,spellcheck"),Dt=v("events,caret,typing,plaintext-only"),qt=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Mt="http://www.w3.org/1999/xlink",Ot=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Ft=function(n){return Ot(n)?n.slice(6,n.length):""},Lt=function(n){return null==n||!1===n};function Rt(n){for(var e=n.data,t=n,i=n;o(i.componentInstance);)(i=i.componentInstance._vnode)&&i.data&&(e=Nt(i.data,e));for(;o(t=t.parent);)t&&t.data&&(e=Nt(e,t.data));return function(n,e){if(o(n)||o(e))return Ut(n,Ht(e));return""}(e.staticClass,e.class)}function Nt(n,e){return{staticClass:Ut(n.staticClass,e.staticClass),class:o(n.class)?[n.class,e.class]:e.class}}function Ut(n,e){return n?e?n+" "+e:n:e||""}function Ht(n){return Array.isArray(n)?function(n){for(var e,t="",i=0,a=n.length;i<a;i++)o(e=Ht(n[i]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):l(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Jt={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Gt=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Vt=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Wt=function(n){return Gt(n)||Vt(n)};var Kt=Object.create(null);var Qt=v("text,number,password,search,email,tel,url");var Xt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Jt[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Zt={create:function(n,e){Yt(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Yt(n,!0),Yt(e))},destroy:function(n){Yt(n,!0)}};function Yt(n,e){var t=n.data.ref;if(o(t)){var i=n.context,a=n.componentInstance||n.elm,r=i.$refs;e?Array.isArray(r[t])?b(r[t],a):r[t]===a&&(r[t]=void 0):n.data.refInFor?Array.isArray(r[t])?r[t].indexOf(a)<0&&r[t].push(a):r[t]=[a]:r[t]=a}}var ni=new gn("",{},[]),ei=["create","activate","update","remove","destroy"];function ti(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&o(n.data)===o(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,i=o(t=n.data)&&o(t=t.attrs)&&t.type,a=o(t=e.data)&&o(t=t.attrs)&&t.type;return i===a||Qt(i)&&Qt(a)}(n,e)||r(n.isAsyncPlaceholder)&&a(e.asyncFactory.error))}function ii(n,e,t){var i,a,r={};for(i=e;i<=t;++i)o(a=n[i].key)&&(r[a]=i);return r}var ai={create:oi,update:oi,destroy:function(n){oi(n,ni)}};function oi(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,i,a,o=n===ni,r=e===ni,s=si(n.data.directives,n.context),l=si(e.data.directives,e.context),c=[],p=[];for(t in l)i=s[t],a=l[t],i?(a.oldValue=i.value,a.oldArg=i.arg,ci(a,"update",e,n),a.def&&a.def.componentUpdated&&p.push(a)):(ci(a,"bind",e,n),a.def&&a.def.inserted&&c.push(a));if(c.length){var u=function(){for(var t=0;t<c.length;t++)ci(c[t],"inserted",e,n)};o?ce(e,"insert",u):u()}p.length&&ce(e,"postpatch",(function(){for(var t=0;t<p.length;t++)ci(p[t],"componentUpdated",e,n)}));if(!o)for(t in s)l[t]||ci(s[t],"unbind",n,n,r)}(n,e)}var ri=Object.create(null);function si(n,e){var t,i,a=Object.create(null);if(!n)return a;for(t=0;t<n.length;t++)(i=n[t]).modifiers||(i.modifiers=ri),a[li(i)]=i,i.def=On(e.$options,"directives",i.name);return a}function li(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function ci(n,e,t,i,a){var o=n.def&&n.def[e];if(o)try{o(t.elm,n,t,i,a)}catch(i){Hn(i,t.context,"directive "+n.name+" "+e+" hook")}}var pi=[Zt,ai];function ui(n,e){var t=e.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||a(n.data.attrs)&&a(e.data.attrs))){var i,r,s=e.elm,l=n.data.attrs||{},c=e.data.attrs||{};for(i in o(c.__ob__)&&(c=e.data.attrs=C({},c)),c)r=c[i],l[i]!==r&&di(s,i,r,e.data.pre);for(i in(K||X)&&c.value!==l.value&&di(s,"value",c.value),l)a(c[i])&&(Ot(i)?s.removeAttributeNS(Mt,Ft(i)):$t(i)||s.removeAttribute(i))}}function di(n,e,t,i){i||n.tagName.indexOf("-")>-1?hi(n,e,t):qt(e)?Lt(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):$t(e)?n.setAttribute(e,function(n,e){return Lt(e)||"false"===e?"false":"contenteditable"===n&&Dt(e)?e:"true"}(e,t)):Ot(e)?Lt(t)?n.removeAttributeNS(Mt,Ft(e)):n.setAttributeNS(Mt,e,t):hi(n,e,t)}function hi(n,e,t){if(Lt(t))n.removeAttribute(e);else{if(K&&!Q&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var i=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",i)};n.addEventListener("input",i),n.__ieph=!0}n.setAttribute(e,t)}}var mi={create:ui,update:ui};function gi(n,e){var t=e.elm,i=e.data,r=n.data;if(!(a(i.staticClass)&&a(i.class)&&(a(r)||a(r.staticClass)&&a(r.class)))){var s=Rt(e),l=t._transitionClasses;o(l)&&(s=Ut(s,Ht(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var vi,fi={create:gi,update:gi};function bi(n,e,t){var i=vi;return function a(){var o=e.apply(null,arguments);null!==o&&xi(n,a,t,i)}}var wi=Kn&&!(Y&&Number(Y[1])<=53);function yi(n,e,t,i){if(wi){var a=lt,o=e;e=o._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=a||n.timeStamp<=0||n.target.ownerDocument!==document)return o.apply(this,arguments)}}vi.addEventListener(n,e,en?{capture:t,passive:i}:t)}function xi(n,e,t,i){(i||vi).removeEventListener(n,e._wrapper||e,t)}function Ei(n,e){if(!a(n.data.on)||!a(e.data.on)){var t=e.data.on||{},i=n.data.on||{};vi=e.elm,function(n){if(o(n.__r)){var e=K?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}o(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),le(t,i,yi,xi,bi,e.context),vi=void 0}}var _i,Si={create:Ei,update:Ei};function Ai(n,e){if(!a(n.data.domProps)||!a(e.data.domProps)){var t,i,r=e.elm,s=n.data.domProps||{},l=e.data.domProps||{};for(t in o(l.__ob__)&&(l=e.data.domProps=C({},l)),s)t in l||(r[t]="");for(t in l){if(i=l[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),i===s[t])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===t&&"PROGRESS"!==r.tagName){r._value=i;var c=a(i)?"":String(i);ki(r,c)&&(r.value=c)}else if("innerHTML"===t&&Vt(r.tagName)&&a(r.innerHTML)){(_i=_i||document.createElement("div")).innerHTML="<svg>"+i+"</svg>";for(var p=_i.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;p.firstChild;)r.appendChild(p.firstChild)}else if(i!==s[t])try{r[t]=i}catch(n){}}}}function ki(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,i=n._vModifiers;if(o(i)){if(i.number)return g(t)!==g(e);if(i.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Ti={create:Ai,update:Ai},Bi=x((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var i=n.split(t);i.length>1&&(e[i[0].trim()]=i[1].trim())}})),e}));function Ci(n){var e=zi(n.style);return n.staticStyle?C(n.staticStyle,e):e}function zi(n){return Array.isArray(n)?z(n):"string"==typeof n?Bi(n):n}var Ii,Pi=/^--/,ji=/\s*!important$/,$i=function(n,e,t){if(Pi.test(e))n.style.setProperty(e,t);else if(ji.test(t))n.style.setProperty(k(e),t.replace(ji,""),"important");else{var i=qi(e);if(Array.isArray(t))for(var a=0,o=t.length;a<o;a++)n.style[i]=t[a];else n.style[i]=t}},Di=["Webkit","Moz","ms"],qi=x((function(n){if(Ii=Ii||document.createElement("div").style,"filter"!==(n=_(n))&&n in Ii)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Di.length;t++){var i=Di[t]+e;if(i in Ii)return i}}));function Mi(n,e){var t=e.data,i=n.data;if(!(a(t.staticStyle)&&a(t.style)&&a(i.staticStyle)&&a(i.style))){var r,s,l=e.elm,c=i.staticStyle,p=i.normalizedStyle||i.style||{},u=c||p,d=zi(e.data.style)||{};e.data.normalizedStyle=o(d.__ob__)?C({},d):d;var h=function(n,e){var t,i={};if(e)for(var a=n;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(t=Ci(a.data))&&C(i,t);(t=Ci(n.data))&&C(i,t);for(var o=n;o=o.parent;)o.data&&(t=Ci(o.data))&&C(i,t);return i}(e,!0);for(s in u)a(h[s])&&$i(l,s,"");for(s in h)(r=h[s])!==u[s]&&$i(l,s,null==r?"":r)}}var Oi={create:Mi,update:Mi},Fi=/\s+/;function Li(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Fi).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Ri(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Fi).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",i=" "+e+" ";t.indexOf(i)>=0;)t=t.replace(i," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function Ni(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&C(e,Ui(n.name||"v")),C(e,n),e}return"string"==typeof n?Ui(n):void 0}}var Ui=x((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Hi=J&&!Q,Ji="transition",Gi="transitionend",Vi="animation",Wi="animationend";Hi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Ji="WebkitTransition",Gi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Vi="WebkitAnimation",Wi="webkitAnimationEnd"));var Ki=J?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Qi(n){Ki((function(){Ki(n)}))}function Xi(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Li(n,e))}function Zi(n,e){n._transitionClasses&&b(n._transitionClasses,e),Ri(n,e)}function Yi(n,e,t){var i=ea(n,e),a=i.type,o=i.timeout,r=i.propCount;if(!a)return t();var s="transition"===a?Gi:Wi,l=0,c=function(){n.removeEventListener(s,p),t()},p=function(e){e.target===n&&++l>=r&&c()};setTimeout((function(){l<r&&c()}),o+1),n.addEventListener(s,p)}var na=/\b(transform|all)(,|$)/;function ea(n,e){var t,i=window.getComputedStyle(n),a=(i[Ji+"Delay"]||"").split(", "),o=(i[Ji+"Duration"]||"").split(", "),r=ta(a,o),s=(i[Vi+"Delay"]||"").split(", "),l=(i[Vi+"Duration"]||"").split(", "),c=ta(s,l),p=0,u=0;return"transition"===e?r>0&&(t="transition",p=r,u=o.length):"animation"===e?c>0&&(t="animation",p=c,u=l.length):u=(t=(p=Math.max(r,c))>0?r>c?"transition":"animation":null)?"transition"===t?o.length:l.length:0,{type:t,timeout:p,propCount:u,hasTransform:"transition"===t&&na.test(i[Ji+"Property"])}}function ta(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return ia(e)+ia(n[t])})))}function ia(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function aa(n,e){var t=n.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var i=Ni(n.data.transition);if(!a(i)&&!o(t._enterCb)&&1===t.nodeType){for(var r=i.css,s=i.type,c=i.enterClass,p=i.enterToClass,u=i.enterActiveClass,d=i.appearClass,h=i.appearToClass,m=i.appearActiveClass,v=i.beforeEnter,f=i.enter,b=i.afterEnter,w=i.enterCancelled,y=i.beforeAppear,x=i.appear,E=i.afterAppear,_=i.appearCancelled,S=i.duration,A=Xe,k=Xe.$vnode;k&&k.parent;)A=k.context,k=k.parent;var T=!A._isMounted||!n.isRootInsert;if(!T||x||""===x){var B=T&&d?d:c,C=T&&m?m:u,z=T&&h?h:p,I=T&&y||v,P=T&&"function"==typeof x?x:f,j=T&&E||b,$=T&&_||w,D=g(l(S)?S.enter:S);0;var M=!1!==r&&!Q,O=sa(P),F=t._enterCb=q((function(){M&&(Zi(t,z),Zi(t,C)),F.cancelled?(M&&Zi(t,B),$&&$(t)):j&&j(t),t._enterCb=null}));n.data.show||ce(n,"insert",(function(){var e=t.parentNode,i=e&&e._pending&&e._pending[n.key];i&&i.tag===n.tag&&i.elm._leaveCb&&i.elm._leaveCb(),P&&P(t,F)})),I&&I(t),M&&(Xi(t,B),Xi(t,C),Qi((function(){Zi(t,B),F.cancelled||(Xi(t,z),O||(ra(D)?setTimeout(F,D):Yi(t,s,F)))}))),n.data.show&&(e&&e(),P&&P(t,F)),M||O||F()}}}function oa(n,e){var t=n.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var i=Ni(n.data.transition);if(a(i)||1!==t.nodeType)return e();if(!o(t._leaveCb)){var r=i.css,s=i.type,c=i.leaveClass,p=i.leaveToClass,u=i.leaveActiveClass,d=i.beforeLeave,h=i.leave,m=i.afterLeave,v=i.leaveCancelled,f=i.delayLeave,b=i.duration,w=!1!==r&&!Q,y=sa(h),x=g(l(b)?b.leave:b);0;var E=t._leaveCb=q((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),w&&(Zi(t,p),Zi(t,u)),E.cancelled?(w&&Zi(t,c),v&&v(t)):(e(),m&&m(t)),t._leaveCb=null}));f?f(_):_()}function _(){E.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),d&&d(t),w&&(Xi(t,c),Xi(t,u),Qi((function(){Zi(t,c),E.cancelled||(Xi(t,p),y||(ra(x)?setTimeout(E,x):Yi(t,s,E)))}))),h&&h(t,E),w||y||E())}}function ra(n){return"number"==typeof n&&!isNaN(n)}function sa(n){if(a(n))return!1;var e=n.fns;return o(e)?sa(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function la(n,e){!0!==e.data.show&&aa(e)}var ca=function(n){var e,t,i={},l=n.modules,c=n.nodeOps;for(e=0;e<ei.length;++e)for(i[ei[e]]=[],t=0;t<l.length;++t)o(l[t][ei[e]])&&i[ei[e]].push(l[t][ei[e]]);function p(n){var e=c.parentNode(n);o(e)&&c.removeChild(e,n)}function u(n,e,t,a,s,l,p){if(o(n.elm)&&o(l)&&(n=l[p]=wn(n)),n.isRootInsert=!s,!function(n,e,t,a){var s=n.data;if(o(s)){var l=o(n.componentInstance)&&s.keepAlive;if(o(s=s.hook)&&o(s=s.init)&&s(n,!1),o(n.componentInstance))return d(n,e),h(t,n.elm,a),r(l)&&function(n,e,t,a){var r,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(r=s.data)&&o(r=r.transition)){for(r=0;r<i.activate.length;++r)i.activate[r](ni,s);e.push(s);break}h(t,n.elm,a)}(n,e,t,a),!0}}(n,e,t,a)){var u=n.data,g=n.children,v=n.tag;o(v)?(n.elm=n.ns?c.createElementNS(n.ns,v):c.createElement(v,n),b(n),m(n,g,e),o(u)&&f(n,e),h(t,n.elm,a)):r(n.isComment)?(n.elm=c.createComment(n.text),h(t,n.elm,a)):(n.elm=c.createTextNode(n.text),h(t,n.elm,a))}}function d(n,e){o(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,g(n)?(f(n,e),b(n)):(Yt(n),e.push(n))}function h(n,e,t){o(n)&&(o(t)?c.parentNode(t)===n&&c.insertBefore(n,e,t):c.appendChild(n,e))}function m(n,e,t){if(Array.isArray(e)){0;for(var i=0;i<e.length;++i)u(e[i],t,n.elm,null,!0,e,i)}else s(n.text)&&c.appendChild(n.elm,c.createTextNode(String(n.text)))}function g(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return o(n.tag)}function f(n,t){for(var a=0;a<i.create.length;++a)i.create[a](ni,n);o(e=n.data.hook)&&(o(e.create)&&e.create(ni,n),o(e.insert)&&t.push(n))}function b(n){var e;if(o(e=n.fnScopeId))c.setStyleScope(n.elm,e);else for(var t=n;t;)o(e=t.context)&&o(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e),t=t.parent;o(e=Xe)&&e!==n.context&&e!==n.fnContext&&o(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e)}function w(n,e,t,i,a,o){for(;i<=a;++i)u(t[i],o,n,e,!1,t,i)}function y(n){var e,t,a=n.data;if(o(a))for(o(e=a.hook)&&o(e=e.destroy)&&e(n),e=0;e<i.destroy.length;++e)i.destroy[e](n);if(o(e=n.children))for(t=0;t<n.children.length;++t)y(n.children[t])}function x(n,e,t){for(;e<=t;++e){var i=n[e];o(i)&&(o(i.tag)?(E(i),y(i)):p(i.elm))}}function E(n,e){if(o(e)||o(n.data)){var t,a=i.remove.length+1;for(o(e)?e.listeners+=a:e=function(n,e){function t(){0==--t.listeners&&p(n)}return t.listeners=e,t}(n.elm,a),o(t=n.componentInstance)&&o(t=t._vnode)&&o(t.data)&&E(t,e),t=0;t<i.remove.length;++t)i.remove[t](n,e);o(t=n.data.hook)&&o(t=t.remove)?t(n,e):e()}else p(n.elm)}function _(n,e,t,i){for(var a=t;a<i;a++){var r=e[a];if(o(r)&&ti(n,r))return a}}function S(n,e,t,s,l,p){if(n!==e){o(e.elm)&&o(s)&&(e=s[l]=wn(e));var d=e.elm=n.elm;if(r(n.isAsyncPlaceholder))o(e.asyncFactory.resolved)?T(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(r(e.isStatic)&&r(n.isStatic)&&e.key===n.key&&(r(e.isCloned)||r(e.isOnce)))e.componentInstance=n.componentInstance;else{var h,m=e.data;o(m)&&o(h=m.hook)&&o(h=h.prepatch)&&h(n,e);var v=n.children,f=e.children;if(o(m)&&g(e)){for(h=0;h<i.update.length;++h)i.update[h](n,e);o(h=m.hook)&&o(h=h.update)&&h(n,e)}a(e.text)?o(v)&&o(f)?v!==f&&function(n,e,t,i,r){var s,l,p,d=0,h=0,m=e.length-1,g=e[0],v=e[m],f=t.length-1,b=t[0],y=t[f],E=!r;for(0;d<=m&&h<=f;)a(g)?g=e[++d]:a(v)?v=e[--m]:ti(g,b)?(S(g,b,i,t,h),g=e[++d],b=t[++h]):ti(v,y)?(S(v,y,i,t,f),v=e[--m],y=t[--f]):ti(g,y)?(S(g,y,i,t,f),E&&c.insertBefore(n,g.elm,c.nextSibling(v.elm)),g=e[++d],y=t[--f]):ti(v,b)?(S(v,b,i,t,h),E&&c.insertBefore(n,v.elm,g.elm),v=e[--m],b=t[++h]):(a(s)&&(s=ii(e,d,m)),a(l=o(b.key)?s[b.key]:_(b,e,d,m))?u(b,i,n,g.elm,!1,t,h):ti(p=e[l],b)?(S(p,b,i,t,h),e[l]=void 0,E&&c.insertBefore(n,p.elm,g.elm)):u(b,i,n,g.elm,!1,t,h),b=t[++h]);d>m?w(n,a(t[f+1])?null:t[f+1].elm,t,h,f,i):h>f&&x(e,d,m)}(d,v,f,t,p):o(f)?(o(n.text)&&c.setTextContent(d,""),w(d,null,f,0,f.length-1,t)):o(v)?x(v,0,v.length-1):o(n.text)&&c.setTextContent(d,""):n.text!==e.text&&c.setTextContent(d,e.text),o(m)&&o(h=m.hook)&&o(h=h.postpatch)&&h(n,e)}}}function A(n,e,t){if(r(t)&&o(n.parent))n.parent.data.pendingInsert=e;else for(var i=0;i<e.length;++i)e[i].data.hook.insert(e[i])}var k=v("attrs,class,staticClass,staticStyle,key");function T(n,e,t,i){var a,s=e.tag,l=e.data,c=e.children;if(i=i||l&&l.pre,e.elm=n,r(e.isComment)&&o(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(a=l.hook)&&o(a=a.init)&&a(e,!0),o(a=e.componentInstance)))return d(e,t),!0;if(o(s)){if(o(c))if(n.hasChildNodes())if(o(a=l)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==n.innerHTML)return!1}else{for(var p=!0,u=n.firstChild,h=0;h<c.length;h++){if(!u||!T(u,c[h],t,i)){p=!1;break}u=u.nextSibling}if(!p||u)return!1}else m(e,c,t);if(o(l)){var g=!1;for(var v in l)if(!k(v)){g=!0,f(e,t);break}!g&&l.class&&oe(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,s){if(!a(e)){var l,p=!1,d=[];if(a(n))p=!0,u(e,d);else{var h=o(n.nodeType);if(!h&&ti(n,e))S(n,e,d,null,null,s);else{if(h){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),r(t)&&T(n,e,d))return A(e,d,!0),n;l=n,n=new gn(c.tagName(l).toLowerCase(),{},[],void 0,l)}var m=n.elm,v=c.parentNode(m);if(u(e,d,m._leaveCb?null:v,c.nextSibling(m)),o(e.parent))for(var f=e.parent,b=g(e);f;){for(var w=0;w<i.destroy.length;++w)i.destroy[w](f);if(f.elm=e.elm,b){for(var E=0;E<i.create.length;++E)i.create[E](ni,f);var _=f.data.hook.insert;if(_.merged)for(var k=1;k<_.fns.length;k++)_.fns[k]()}else Yt(f);f=f.parent}o(v)?x([n],0,0):o(n.tag)&&y(n)}}return A(e,d,p),e.elm}o(n)&&y(n)}}({nodeOps:Xt,modules:[mi,fi,Si,Ti,Oi,J?{create:la,activate:la,remove:function(n,e){!0!==n.data.show?oa(n,e):e()}}:{}].concat(pi)});Q&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&fa(n,"input")}));var pa={inserted:function(n,e,t,i){"select"===t.tag?(i.elm&&!i.elm._vOptions?ce(t,"postpatch",(function(){pa.componentUpdated(n,e,t)})):ua(n,e,t.context),n._vOptions=[].map.call(n.options,ma)):("textarea"===t.tag||Qt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",ga),n.addEventListener("compositionend",va),n.addEventListener("change",va),Q&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){ua(n,e,t.context);var i=n._vOptions,a=n._vOptions=[].map.call(n.options,ma);if(a.some((function(n,e){return!$(n,i[e])})))(n.multiple?e.value.some((function(n){return ha(n,a)})):e.value!==e.oldValue&&ha(e.value,a))&&fa(n,"change")}}};function ua(n,e,t){da(n,e,t),(K||X)&&setTimeout((function(){da(n,e,t)}),0)}function da(n,e,t){var i=e.value,a=n.multiple;if(!a||Array.isArray(i)){for(var o,r,s=0,l=n.options.length;s<l;s++)if(r=n.options[s],a)o=D(i,ma(r))>-1,r.selected!==o&&(r.selected=o);else if($(ma(r),i))return void(n.selectedIndex!==s&&(n.selectedIndex=s));a||(n.selectedIndex=-1)}}function ha(n,e){return e.every((function(e){return!$(e,n)}))}function ma(n){return"_value"in n?n._value:n.value}function ga(n){n.target.composing=!0}function va(n){n.target.composing&&(n.target.composing=!1,fa(n.target,"input"))}function fa(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function ba(n){return!n.componentInstance||n.data&&n.data.transition?n:ba(n.componentInstance._vnode)}var wa={model:pa,show:{bind:function(n,e,t){var i=e.value,a=(t=ba(t)).data&&t.data.transition,o=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;i&&a?(t.data.show=!0,aa(t,(function(){n.style.display=o}))):n.style.display=i?o:"none"},update:function(n,e,t){var i=e.value;!i!=!e.oldValue&&((t=ba(t)).data&&t.data.transition?(t.data.show=!0,i?aa(t,(function(){n.style.display=n.__vOriginalDisplay})):oa(t,(function(){n.style.display="none"}))):n.style.display=i?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,i,a){a||(n.style.display=n.__vOriginalDisplay)}}},ya={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function xa(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?xa(Ge(e.children)):n}function Ea(n){var e={},t=n.$options;for(var i in t.propsData)e[i]=n[i];var a=t._parentListeners;for(var o in a)e[_(o)]=a[o];return e}function _a(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Sa=function(n){return n.tag||ve(n)},Aa=function(n){return"show"===n.name},ka={name:"transition",props:ya,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Sa)).length){0;var i=this.mode;0;var a=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return a;var o=xa(a);if(!o)return a;if(this._leaving)return _a(n,a);var r="__transition-"+this._uid+"-";o.key=null==o.key?o.isComment?r+"comment":r+o.tag:s(o.key)?0===String(o.key).indexOf(r)?o.key:r+o.key:o.key;var l=(o.data||(o.data={})).transition=Ea(this),c=this._vnode,p=xa(c);if(o.data.directives&&o.data.directives.some(Aa)&&(o.data.show=!0),p&&p.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(o,p)&&!ve(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var u=p.data.transition=C({},l);if("out-in"===i)return this._leaving=!0,ce(u,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),_a(n,a);if("in-out"===i){if(ve(o))return c;var d,h=function(){d()};ce(l,"afterEnter",h),ce(l,"enterCancelled",h),ce(u,"delayLeave",(function(n){d=n}))}}return a}}},Ta=C({tag:String,moveClass:String},ya);function Ba(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Ca(n){n.data.newPos=n.elm.getBoundingClientRect()}function za(n){var e=n.data.pos,t=n.data.newPos,i=e.left-t.left,a=e.top-t.top;if(i||a){n.data.moved=!0;var o=n.elm.style;o.transform=o.WebkitTransform="translate("+i+"px,"+a+"px)",o.transitionDuration="0s"}}delete Ta.mode;var Ia={Transition:ka,TransitionGroup:{props:Ta,beforeMount:function(){var n=this,e=this._update;this._update=function(t,i){var a=Ze(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,a(),e.call(n,t,i)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),i=this.prevChildren=this.children,a=this.$slots.default||[],o=this.children=[],r=Ea(this),s=0;s<a.length;s++){var l=a[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))o.push(l),t[l.key]=l,(l.data||(l.data={})).transition=r;else;}if(i){for(var c=[],p=[],u=0;u<i.length;u++){var d=i[u];d.data.transition=r,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?c.push(d):p.push(d)}this.kept=n(e,null,c),this.removed=p}return n(e,null,o)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Ba),n.forEach(Ca),n.forEach(za),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,i=t.style;Xi(t,e),i.transform=i.WebkitTransform=i.transitionDuration="",t.addEventListener(Gi,t._moveCb=function n(i){i&&i.target!==t||i&&!/transform$/.test(i.propertyName)||(t.removeEventListener(Gi,n),t._moveCb=null,Zi(t,e))})}})))},methods:{hasMove:function(n,e){if(!Hi)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Ri(t,n)})),Li(t,e),t.style.display="none",this.$el.appendChild(t);var i=ea(t);return this.$el.removeChild(t),this._hasMove=i.hasTransform}}}};St.config.mustUseProp=function(n,e,t){return"value"===t&&jt(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},St.config.isReservedTag=Wt,St.config.isReservedAttr=Pt,St.config.getTagNamespace=function(n){return Vt(n)?"svg":"math"===n?"math":void 0},St.config.isUnknownElement=function(n){if(!J)return!0;if(Wt(n))return!1;if(n=n.toLowerCase(),null!=Kt[n])return Kt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Kt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Kt[n]=/HTMLUnknownElement/.test(e.toString())},C(St.options.directives,wa),C(St.options.components,Ia),St.prototype.__patch__=J?ca:I,St.prototype.$mount=function(n,e){return function(n,e,t){var i;return n.$el=e,n.$options.render||(n.$options.render=fn),et(n,"beforeMount"),i=function(){n._update(n._render(),t)},new ht(n,i,I,{before:function(){n._isMounted&&!n._isDestroyed&&et(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,et(n,"mounted")),n}(this,n=n&&J?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},J&&setTimeout((function(){F.devtools&&on&&on.emit("init",St)}),0),e.a=St},function(n,e,t){"use strict";function i(n,e,t,i,a,o,r,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),i&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),r?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(r)},c._ssrRegister=l):a&&(l=s?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(c.functional){c._injectStyles=l;var p=c.render;c.render=function(n,e){return l.call(e),p(n,e)}}else{var u=c.beforeCreate;c.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return i}))},function(n,e,t){var i=t(30),a="object"==typeof self&&self&&self.Object===Object&&self,o=i||a||Function("return this")();n.exports=o},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var i=t(87),a=t(90);n.exports=function(n,e){var t=a(n,e);return i(t)?t:void 0}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e){var t=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,o=/^0o[0-7]+$/i,r=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),p=Object.prototype.toString,u=Math.max,d=Math.min,h=function(){return c.Date.now()};function m(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function g(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==p.call(n)}(n))return NaN;if(m(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=m(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=a.test(n);return s||o.test(n)?r(n.slice(2),s?2:8):i.test(n)?NaN:+n}n.exports=function(n,e,t){var i,a,o,r,s,l,c=0,p=!1,v=!1,f=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=i,o=a;return i=a=void 0,c=e,r=n.apply(o,t)}function w(n){return c=n,s=setTimeout(x,e),p?b(n):r}function y(n){var t=n-l;return void 0===l||t>=e||t<0||v&&n-c>=o}function x(){var n=h();if(y(n))return E(n);s=setTimeout(x,function(n){var t=e-(n-l);return v?d(t,o-(n-c)):t}(n))}function E(n){return s=void 0,f&&i?b(n):(i=a=void 0,r)}function _(){var n=h(),t=y(n);if(i=arguments,a=this,l=n,t){if(void 0===s)return w(l);if(v)return s=setTimeout(x,e),b(l)}return void 0===s&&(s=setTimeout(x,e)),r}return e=g(e)||0,m(t)&&(p=!!t.leading,o=(v="maxWait"in t)?u(g(t.maxWait)||0,e):o,f="trailing"in t?!!t.trailing:f),_.cancel=function(){void 0!==s&&clearTimeout(s),c=0,i=l=a=s=void 0},_.flush=function(){return void 0===s?r:E(h())},_}},function(n,e,t){var i=t(2).Symbol;n.exports=i},function(n,e,t){var i=t(7),a=t(72),o=t(73),r=i?i.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":r&&r in Object(n)?a(n):o(n)}},function(n,e,t){
/*!
* screenfull
* v5.2.0 - 2021-11-03
* (c) Sindre Sorhus; MIT License
*/
!function(){"use strict";var e="undefined"!=typeof window&&void 0!==window.document?window.document:{},t=n.exports,i=function(){for(var n,t=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],i=0,a=t.length,o={};i<a;i++)if((n=t[i])&&n[1]in e){for(i=0;i<n.length;i++)o[t[0][i]]=n[i];return o}return!1}(),a={change:i.fullscreenchange,error:i.fullscreenerror},o={request:function(n,t){return new Promise(function(a,o){var r=function(){this.off("change",r),a()}.bind(this);this.on("change",r);var s=(n=n||e.documentElement)[i.requestFullscreen](t);s instanceof Promise&&s.then(r).catch(o)}.bind(this))},exit:function(){return new Promise(function(n,t){if(this.isFullscreen){var a=function(){this.off("change",a),n()}.bind(this);this.on("change",a);var o=e[i.exitFullscreen]();o instanceof Promise&&o.then(a).catch(t)}else n()}.bind(this))},toggle:function(n,e){return this.isFullscreen?this.exit():this.request(n,e)},onchange:function(n){this.on("change",n)},onerror:function(n){this.on("error",n)},on:function(n,t){var i=a[n];i&&e.addEventListener(i,t,!1)},off:function(n,t){var i=a[n];i&&e.removeEventListener(i,t,!1)},raw:i};i?(Object.defineProperties(o,{isFullscreen:{get:function(){return Boolean(e[i.fullscreenElement])}},element:{enumerable:!0,get:function(){return e[i.fullscreenElement]}},isEnabled:{enumerable:!0,get:function(){return Boolean(e[i.fullscreenEnabled])}}}),t?n.exports=o:window.screenfull=o):t?n.exports={isEnabled:!1}:window.screenfull={isEnabled:!1}}()},function(n,e,t){"use strict";e.a={render:()=>null}},function(n,e,t){var i=t(77),a=t(78),o=t(79),r=t(80),s=t(81);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var i=n[e];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=r,l.prototype.set=s,n.exports=l},function(n,e,t){var i=t(32);n.exports=function(n,e){for(var t=n.length;t--;)if(i(n[t][0],e))return t;return-1}},function(n,e,t){var i=t(4)(Object,"create");n.exports=i},function(n,e,t){var i=t(99);n.exports=function(n,e){var t=n.__data__;return i(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var i=t(24);n.exports=function(n){if("string"==typeof n||i(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var i,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(i=function(){var n,e,t={version:"0.2.0"},i=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(n,e,t){return n<e?e:n>t?t:n}function o(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(i[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=a(n,i.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(i.barSelector),p=i.speed,u=i.easing;return l.offsetWidth,r((function(e){""===i.positionUsing&&(i.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var a;return(a="translate3d"===i.positionUsing?{transform:"translate3d("+o(n)+"%,0,0)"}:"translate"===i.positionUsing?{transform:"translate("+o(n)+"%,0)"}:{"margin-left":o(n)+"%"}).transition="all "+e+"ms "+t,a}(n,p,u)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+p+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),p)}),p)):setTimeout(e,p)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),i.trickleSpeed)};return i.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*a(Math.random()*e,.1,.95)),e=a(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*i.trickleRate)},n=0,e=0,t.promise=function(i){return i&&"resolved"!==i.state()?(0===e&&t.start(),n++,e++,i.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=i.template;var a,r=e.querySelector(i.barSelector),l=n?"-100":o(t.status||0),p=document.querySelector(i.parent);return s(r,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),i.showSpinner||(a=e.querySelector(i.spinnerSelector))&&d(a),p!=document.body&&c(p,"nprogress-custom-parent"),p.appendChild(e),e},t.remove=function(){p(document.documentElement,"nprogress-busy"),p(document.querySelector(i.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var r=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var i,a=n.length,o=e.charAt(0).toUpperCase()+e.slice(1);a--;)if((i=n[a]+o)in t)return i;return e}(t))}function i(n,e,i){e=t(e),n.style[e]=i}return function(n,e){var t,a,o=arguments;if(2==o.length)for(t in e)void 0!==(a=e[t])&&e.hasOwnProperty(t)&&i(n,t,a);else i(n,o[1],o[2])}}();function l(n,e){return("string"==typeof n?n:u(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=u(n),i=t+e;l(t,e)||(n.className=i.substring(1))}function p(n,e){var t,i=u(n);l(n,e)&&(t=i.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?i.call(e,t,e,n):i)||(n.exports=a)},function(n,e,t){var i=t(71),a=t(5),o=Object.prototype,r=o.hasOwnProperty,s=o.propertyIsEnumerable,l=i(function(){return arguments}())?i:function(n){return a(n)&&r.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var i=t(4)(t(2),"Map");n.exports=i},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var i=t(91),a=t(98),o=t(100),r=t(101),s=t(102);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var i=n[e];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=r,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var i=t(3),a=t(24),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,r=/^\w*$/;n.exports=function(n,e){if(i(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!a(n))||(r.test(n)||!o.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var i=t(8),a=t(5);n.exports=function(n){return"symbol"==typeof n||a(n)&&"[object Symbol]"==i(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return i})),t.d(e,"c",(function(){return a})),t.d(e,"b",(function(){return o}));const i={"/":{backToTop:"返回顶部",openInNewWindow:"在新窗口中打开"}},a={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}},o={"/":{author:"作者🖊",date:"写作日期📅",origin:"原创💡",views:"访问量🔢",category:"分类🌈",tag:"标签🏷",readingTime:"阅读时间⌛",words:"字数🔠"}}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){n.exports=function(){"use strict";var n=6e4,e=36e5,t="millisecond",i="second",a="minute",o="hour",r="day",s="week",l="month",c="quarter",p="year",u="date",d="Invalid Date",h=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,m=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,g={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},v=function(n,e,t){var i=String(n);return!i||i.length>=e?n:""+Array(e+1-i.length).join(t)+n},f={s:v,z:function(n){var e=-n.utcOffset(),t=Math.abs(e),i=Math.floor(t/60),a=t%60;return(e<=0?"+":"-")+v(i,2,"0")+":"+v(a,2,"0")},m:function n(e,t){if(e.date()<t.date())return-n(t,e);var i=12*(t.year()-e.year())+(t.month()-e.month()),a=e.clone().add(i,l),o=t-a<0,r=e.clone().add(i+(o?-1:1),l);return+(-(i+(t-a)/(o?a-r:r-a))||0)},a:function(n){return n<0?Math.ceil(n)||0:Math.floor(n)},p:function(n){return{M:l,y:p,w:s,d:r,D:u,h:o,m:a,s:i,ms:t,Q:c}[n]||String(n||"").toLowerCase().replace(/s$/,"")},u:function(n){return void 0===n}},b="en",w={};w[b]=g;var y=function(n){return n instanceof S},x=function(n,e,t){var i;if(!n)return b;if("string"==typeof n)w[n]&&(i=n),e&&(w[n]=e,i=n);else{var a=n.name;w[a]=n,i=a}return!t&&i&&(b=i),i||!t&&b},E=function(n,e){if(y(n))return n.clone();var t="object"==typeof e?e:{};return t.date=n,t.args=arguments,new S(t)},_=f;_.l=x,_.i=y,_.w=function(n,e){return E(n,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var S=function(){function g(n){this.$L=x(n.locale,null,!0),this.parse(n)}var v=g.prototype;return v.parse=function(n){this.$d=function(n){var e=n.date,t=n.utc;if(null===e)return new Date(NaN);if(_.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var i=e.match(h);if(i){var a=i[2]-1||0,o=(i[7]||"0").substring(0,3);return t?new Date(Date.UTC(i[1],a,i[3]||1,i[4]||0,i[5]||0,i[6]||0,o)):new Date(i[1],a,i[3]||1,i[4]||0,i[5]||0,i[6]||0,o)}}return new Date(e)}(n),this.$x=n.x||{},this.init()},v.init=function(){var n=this.$d;this.$y=n.getFullYear(),this.$M=n.getMonth(),this.$D=n.getDate(),this.$W=n.getDay(),this.$H=n.getHours(),this.$m=n.getMinutes(),this.$s=n.getSeconds(),this.$ms=n.getMilliseconds()},v.$utils=function(){return _},v.isValid=function(){return!(this.$d.toString()===d)},v.isSame=function(n,e){var t=E(n);return this.startOf(e)<=t&&t<=this.endOf(e)},v.isAfter=function(n,e){return E(n)<this.startOf(e)},v.isBefore=function(n,e){return this.endOf(e)<E(n)},v.$g=function(n,e,t){return _.u(n)?this[e]:this.set(t,n)},v.unix=function(){return Math.floor(this.valueOf()/1e3)},v.valueOf=function(){return this.$d.getTime()},v.startOf=function(n,e){var t=this,c=!!_.u(e)||e,d=_.p(n),h=function(n,e){var i=_.w(t.$u?Date.UTC(t.$y,e,n):new Date(t.$y,e,n),t);return c?i:i.endOf(r)},m=function(n,e){return _.w(t.toDate()[n].apply(t.toDate("s"),(c?[0,0,0,0]:[23,59,59,999]).slice(e)),t)},g=this.$W,v=this.$M,f=this.$D,b="set"+(this.$u?"UTC":"");switch(d){case p:return c?h(1,0):h(31,11);case l:return c?h(1,v):h(0,v+1);case s:var w=this.$locale().weekStart||0,y=(g<w?g+7:g)-w;return h(c?f-y:f+(6-y),v);case r:case u:return m(b+"Hours",0);case o:return m(b+"Minutes",1);case a:return m(b+"Seconds",2);case i:return m(b+"Milliseconds",3);default:return this.clone()}},v.endOf=function(n){return this.startOf(n,!1)},v.$set=function(n,e){var s,c=_.p(n),d="set"+(this.$u?"UTC":""),h=(s={},s[r]=d+"Date",s[u]=d+"Date",s[l]=d+"Month",s[p]=d+"FullYear",s[o]=d+"Hours",s[a]=d+"Minutes",s[i]=d+"Seconds",s[t]=d+"Milliseconds",s)[c],m=c===r?this.$D+(e-this.$W):e;if(c===l||c===p){var g=this.clone().set(u,1);g.$d[h](m),g.init(),this.$d=g.set(u,Math.min(this.$D,g.daysInMonth())).$d}else h&&this.$d[h](m);return this.init(),this},v.set=function(n,e){return this.clone().$set(n,e)},v.get=function(n){return this[_.p(n)]()},v.add=function(t,c){var u,d=this;t=Number(t);var h=_.p(c),m=function(n){var e=E(d);return _.w(e.date(e.date()+Math.round(n*t)),d)};if(h===l)return this.set(l,this.$M+t);if(h===p)return this.set(p,this.$y+t);if(h===r)return m(1);if(h===s)return m(7);var g=(u={},u[a]=n,u[o]=e,u[i]=1e3,u)[h]||1,v=this.$d.getTime()+t*g;return _.w(v,this)},v.subtract=function(n,e){return this.add(-1*n,e)},v.format=function(n){var e=this,t=this.$locale();if(!this.isValid())return t.invalidDate||d;var i=n||"YYYY-MM-DDTHH:mm:ssZ",a=_.z(this),o=this.$H,r=this.$m,s=this.$M,l=t.weekdays,c=t.months,p=function(n,t,a,o){return n&&(n[t]||n(e,i))||a[t].substr(0,o)},u=function(n){return _.s(o%12||12,n,"0")},h=t.meridiem||function(n,e,t){var i=n<12?"AM":"PM";return t?i.toLowerCase():i},g={YY:String(this.$y).slice(-2),YYYY:this.$y,M:s+1,MM:_.s(s+1,2,"0"),MMM:p(t.monthsShort,s,c,3),MMMM:p(c,s),D:this.$D,DD:_.s(this.$D,2,"0"),d:String(this.$W),dd:p(t.weekdaysMin,this.$W,l,2),ddd:p(t.weekdaysShort,this.$W,l,3),dddd:l[this.$W],H:String(o),HH:_.s(o,2,"0"),h:u(1),hh:u(2),a:h(o,r,!0),A:h(o,r,!1),m:String(r),mm:_.s(r,2,"0"),s:String(this.$s),ss:_.s(this.$s,2,"0"),SSS:_.s(this.$ms,3,"0"),Z:a};return i.replace(m,(function(n,e){return e||g[n]||a.replace(":","")}))},v.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},v.diff=function(t,u,d){var h,m=_.p(u),g=E(t),v=(g.utcOffset()-this.utcOffset())*n,f=this-g,b=_.m(this,g);return b=(h={},h[p]=b/12,h[l]=b,h[c]=b/3,h[s]=(f-v)/6048e5,h[r]=(f-v)/864e5,h[o]=f/e,h[a]=f/n,h[i]=f/1e3,h)[m]||f,d?b:_.a(b)},v.daysInMonth=function(){return this.endOf(l).$D},v.$locale=function(){return w[this.$L]},v.locale=function(n,e){if(!n)return this.$L;var t=this.clone(),i=x(n,e,!0);return i&&(t.$L=i),t},v.clone=function(){return _.w(this.$d,this)},v.toDate=function(){return new Date(this.valueOf())},v.toJSON=function(){return this.isValid()?this.toISOString():null},v.toISOString=function(){return this.$d.toISOString()},v.toString=function(){return this.$d.toUTCString()},g}(),A=S.prototype;return E.prototype=A,[["$ms",t],["$s",i],["$m",a],["$H",o],["$W",r],["$M",l],["$y",p],["$D",u]].forEach((function(n){A[n[1]]=function(e){return this.$g(e,n[0],n[1])}})),E.extend=function(n,e){return n.$i||(n(e,S,E),n.$i=!0),E},E.locale=x,E.isDayjs=y,E.unix=function(n){return E(1e3*n)},E.en=w[b],E.Ls=w,E.p={},E}()},function(n,e){n.exports=function(n,e){for(var t=-1,i=e.length,a=n.length;++t<i;)n[a+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var i=t(11),a=t(82),o=t(83),r=t(84),s=t(85),l=t(86);function c(n){var e=this.__data__=new i(n);this.size=e.size}c.prototype.clear=a,c.prototype.delete=o,c.prototype.get=r,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var i=t(8),a=t(19);n.exports=function(n){if(!a(n))return!1;var e=i(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var i=t(103),a=t(5);n.exports=function n(e,t,o,r,s){return e===t||(null==e||null==t||!a(e)&&!a(t)?e!=e&&t!=t:i(e,t,o,r,n,s))}},function(n,e,t){var i=t(37),a=t(106),o=t(38);n.exports=function(n,e,t,r,s,l){var c=1&t,p=n.length,u=e.length;if(p!=u&&!(c&&u>p))return!1;var d=l.get(n),h=l.get(e);if(d&&h)return d==e&&h==n;var m=-1,g=!0,v=2&t?new i:void 0;for(l.set(n,e),l.set(e,n);++m<p;){var f=n[m],b=e[m];if(r)var w=c?r(b,f,m,e,n,l):r(f,b,m,n,e,l);if(void 0!==w){if(w)continue;g=!1;break}if(v){if(!a(e,(function(n,e){if(!o(v,e)&&(f===n||s(f,n,t,r,l)))return v.push(e)}))){g=!1;break}}else if(f!==b&&!s(f,b,t,r,l)){g=!1;break}}return l.delete(n),l.delete(e),g}},function(n,e,t){var i=t(20),a=t(104),o=t(105);function r(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new i;++e<t;)this.add(n[e])}r.prototype.add=r.prototype.push=a,r.prototype.has=o,n.exports=r},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var i=t(116),a=t(122),o=t(43);n.exports=function(n){return o(n)?i(n):a(n)}},function(n,e,t){(function(n){var i=t(2),a=t(118),o=e&&!e.nodeType&&e,r=o&&"object"==typeof n&&n&&!n.nodeType&&n,s=r&&r.exports===o?i.Buffer:void 0,l=(s?s.isBuffer:void 0)||a;n.exports=l}).call(this,t(27)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var i=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==i||"symbol"!=i&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var i=t(119),a=t(120),o=t(121),r=o&&o.isTypedArray,s=r?a(r):i;n.exports=s},function(n,e,t){var i=t(33),a=t(22);n.exports=function(n){return null!=n&&a(n.length)&&!i(n)}},function(n,e,t){var i=t(4)(t(2),"Set");n.exports=i},function(n,e,t){var i=t(19);n.exports=function(n){return n==n&&!i(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var i=t(48),a=t(15);n.exports=function(n,e){for(var t=0,o=(e=i(e,n)).length;null!=n&&t<o;)n=n[a(e[t++])];return t&&t==o?n:void 0}},function(n,e,t){var i=t(3),a=t(23),o=t(133),r=t(136);n.exports=function(n,e){return i(n)?n:a(n,e)?[n]:o(r(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var i=t(69),a=t(74),o=t(145),r=t(153),s=t(162),l=t(163),c=o((function(n){var e=l(n);return s(e)&&(e=void 0),r(i(n,1,s,!0),a(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var i=/["'&<>]/;n.exports=function(n){var e,t=""+n,a=i.exec(t);if(!a)return t;var o="",r=0,s=0;for(r=a.index;r<t.length;r++){switch(t.charCodeAt(r)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==r&&(o+=t.substring(s,r)),s=r+1,o+=e}return s!==r?o+t.substring(s,r):o}},function(n,e,t){e.formatArgs=function(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+n.exports.humanize(this.diff),!this.useColors)return;const t="color: "+this.color;e.splice(1,0,t,"color: inherit");let i=0,a=0;e[0].replace(/%[a-zA-Z%]/g,n=>{"%%"!==n&&(i++,"%c"===n&&(a=i))}),e.splice(a,0,t)},e.save=function(n){try{n?e.storage.setItem("debug",n):e.storage.removeItem("debug")}catch(n){}},e.load=function(){let n;try{n=e.storage.getItem("debug")}catch(n){}!n&&"undefined"!=typeof process&&"env"in process&&(n=process.env.DEBUG);return n},e.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},e.storage=function(){try{return localStorage}catch(n){}}(),e.destroy=(()=>{let n=!1;return()=>{n||(n=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.log=console.debug||console.log||(()=>{}),n.exports=t(177)(e);const{formatters:i}=n.exports;i.j=function(n){try{return JSON.stringify(n)}catch(n){return"[UnexpectedJSONParseError]: "+n.message}}},function(n,e,t){},function(n,e,t){n.exports=t(188)},function(n,e,t){var i=t(29),a=t(70);n.exports=function n(e,t,o,r,s){var l=-1,c=e.length;for(o||(o=a),s||(s=[]);++l<c;){var p=e[l];t>0&&o(p)?t>1?n(p,t-1,o,r,s):i(s,p):r||(s[s.length]=p)}return s}},function(n,e,t){var i=t(7),a=t(17),o=t(3),r=i?i.isConcatSpreadable:void 0;n.exports=function(n){return o(n)||a(n)||!!(r&&n&&n[r])}},function(n,e,t){var i=t(8),a=t(5);n.exports=function(n){return a(n)&&"[object Arguments]"==i(n)}},function(n,e,t){var i=t(7),a=Object.prototype,o=a.hasOwnProperty,r=a.toString,s=i?i.toStringTag:void 0;n.exports=function(n){var e=o.call(n,s),t=n[s];try{n[s]=void 0;var i=!0}catch(n){}var a=r.call(n);return i&&(e?n[s]=t:delete n[s]),a}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var i=t(75),a=t(131),o=t(25),r=t(3),s=t(142);n.exports=function(n){return"function"==typeof n?n:null==n?o:"object"==typeof n?r(n)?a(n[0],n[1]):i(n):s(n)}},function(n,e,t){var i=t(76),a=t(130),o=t(46);n.exports=function(n){var e=a(n);return 1==e.length&&e[0][2]?o(e[0][0],e[0][1]):function(t){return t===n||i(t,n,e)}}},function(n,e,t){var i=t(31),a=t(35);n.exports=function(n,e,t,o){var r=t.length,s=r,l=!o;if(null==n)return!s;for(n=Object(n);r--;){var c=t[r];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++r<s;){var p=(c=t[r])[0],u=n[p],d=c[1];if(l&&c[2]){if(void 0===u&&!(p in n))return!1}else{var h=new i;if(o)var m=o(u,d,p,n,e,h);if(!(void 0===m?a(d,u,3,o,h):m))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var i=t(12),a=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=i(e,n);return!(t<0)&&(t==e.length-1?e.pop():a.call(e,t,1),--this.size,!0)}},function(n,e,t){var i=t(12);n.exports=function(n){var e=this.__data__,t=i(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var i=t(12);n.exports=function(n){return i(this.__data__,n)>-1}},function(n,e,t){var i=t(12);n.exports=function(n,e){var t=this.__data__,a=i(t,n);return a<0?(++this.size,t.push([n,e])):t[a][1]=e,this}},function(n,e,t){var i=t(11);n.exports=function(){this.__data__=new i,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var i=t(11),a=t(18),o=t(20);n.exports=function(n,e){var t=this.__data__;if(t instanceof i){var r=t.__data__;if(!a||r.length<199)return r.push([n,e]),this.size=++t.size,this;t=this.__data__=new o(r)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var i=t(33),a=t(88),o=t(19),r=t(34),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,p=l.toString,u=c.hasOwnProperty,d=RegExp("^"+p.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!o(n)||a(n))&&(i(n)?d:s).test(r(n))}},function(n,e,t){var i,a=t(89),o=(i=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+i:"";n.exports=function(n){return!!o&&o in n}},function(n,e,t){var i=t(2)["__core-js_shared__"];n.exports=i},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var i=t(92),a=t(11),o=t(18);n.exports=function(){this.size=0,this.__data__={hash:new i,map:new(o||a),string:new i}}},function(n,e,t){var i=t(93),a=t(94),o=t(95),r=t(96),s=t(97);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var i=n[e];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=r,l.prototype.set=s,n.exports=l},function(n,e,t){var i=t(13);n.exports=function(){this.__data__=i?i(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var i=t(13),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(i){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return a.call(e,n)?e[n]:void 0}},function(n,e,t){var i=t(13),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return i?void 0!==e[n]:a.call(e,n)}},function(n,e,t){var i=t(13);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=i&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var i=t(14);n.exports=function(n){var e=i(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var i=t(14);n.exports=function(n){return i(this,n).get(n)}},function(n,e,t){var i=t(14);n.exports=function(n){return i(this,n).has(n)}},function(n,e,t){var i=t(14);n.exports=function(n,e){var t=i(this,n),a=t.size;return t.set(n,e),this.size+=t.size==a?0:1,this}},function(n,e,t){var i=t(31),a=t(36),o=t(107),r=t(110),s=t(126),l=t(3),c=t(40),p=t(42),u="[object Object]",d=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,h,m,g){var v=l(n),f=l(e),b=v?"[object Array]":s(n),w=f?"[object Array]":s(e),y=(b="[object Arguments]"==b?u:b)==u,x=(w="[object Arguments]"==w?u:w)==u,E=b==w;if(E&&c(n)){if(!c(e))return!1;v=!0,y=!1}if(E&&!y)return g||(g=new i),v||p(n)?a(n,e,t,h,m,g):o(n,e,b,t,h,m,g);if(!(1&t)){var _=y&&d.call(n,"__wrapped__"),S=x&&d.call(e,"__wrapped__");if(_||S){var A=_?n.value():n,k=S?e.value():e;return g||(g=new i),m(A,k,t,h,g)}}return!!E&&(g||(g=new i),r(n,e,t,h,m,g))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,i=null==n?0:n.length;++t<i;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var i=t(7),a=t(108),o=t(32),r=t(36),s=t(109),l=t(21),c=i?i.prototype:void 0,p=c?c.valueOf:void 0;n.exports=function(n,e,t,i,c,u,d){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!u(new a(n),new a(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var h=s;case"[object Set]":var m=1&i;if(h||(h=l),n.size!=e.size&&!m)return!1;var g=d.get(n);if(g)return g==e;i|=2,d.set(n,e);var v=r(h(n),h(e),i,c,u,d);return d.delete(n),v;case"[object Symbol]":if(p)return p.call(n)==p.call(e)}return!1}},function(n,e,t){var i=t(2).Uint8Array;n.exports=i},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,i){t[++e]=[i,n]})),t}},function(n,e,t){var i=t(111),a=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,o,r,s){var l=1&t,c=i(n),p=c.length;if(p!=i(e).length&&!l)return!1;for(var u=p;u--;){var d=c[u];if(!(l?d in e:a.call(e,d)))return!1}var h=s.get(n),m=s.get(e);if(h&&m)return h==e&&m==n;var g=!0;s.set(n,e),s.set(e,n);for(var v=l;++u<p;){var f=n[d=c[u]],b=e[d];if(o)var w=l?o(b,f,d,e,n,s):o(f,b,d,n,e,s);if(!(void 0===w?f===b||r(f,b,t,o,s):w)){g=!1;break}v||(v="constructor"==d)}if(g&&!v){var y=n.constructor,x=e.constructor;y==x||!("constructor"in n)||!("constructor"in e)||"function"==typeof y&&y instanceof y&&"function"==typeof x&&x instanceof x||(g=!1)}return s.delete(n),s.delete(e),g}},function(n,e,t){var i=t(112),a=t(113),o=t(39);n.exports=function(n){return i(n,o,a)}},function(n,e,t){var i=t(29),a=t(3);n.exports=function(n,e,t){var o=e(n);return a(n)?o:i(o,t(n))}},function(n,e,t){var i=t(114),a=t(115),o=Object.prototype.propertyIsEnumerable,r=Object.getOwnPropertySymbols,s=r?function(n){return null==n?[]:(n=Object(n),i(r(n),(function(e){return o.call(n,e)})))}:a;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,i=null==n?0:n.length,a=0,o=[];++t<i;){var r=n[t];e(r,t,n)&&(o[a++]=r)}return o}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var i=t(117),a=t(17),o=t(3),r=t(40),s=t(41),l=t(42),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=o(n),p=!t&&a(n),u=!t&&!p&&r(n),d=!t&&!p&&!u&&l(n),h=t||p||u||d,m=h?i(n.length,String):[],g=m.length;for(var v in n)!e&&!c.call(n,v)||h&&("length"==v||u&&("offset"==v||"parent"==v)||d&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||s(v,g))||m.push(v);return m}},function(n,e){n.exports=function(n,e){for(var t=-1,i=Array(n);++t<n;)i[t]=e(t);return i}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var i=t(8),a=t(22),o=t(5),r={};r["[object Float32Array]"]=r["[object Float64Array]"]=r["[object Int8Array]"]=r["[object Int16Array]"]=r["[object Int32Array]"]=r["[object Uint8Array]"]=r["[object Uint8ClampedArray]"]=r["[object Uint16Array]"]=r["[object Uint32Array]"]=!0,r["[object Arguments]"]=r["[object Array]"]=r["[object ArrayBuffer]"]=r["[object Boolean]"]=r["[object DataView]"]=r["[object Date]"]=r["[object Error]"]=r["[object Function]"]=r["[object Map]"]=r["[object Number]"]=r["[object Object]"]=r["[object RegExp]"]=r["[object Set]"]=r["[object String]"]=r["[object WeakMap]"]=!1,n.exports=function(n){return o(n)&&a(n.length)&&!!r[i(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var i=t(30),a=e&&!e.nodeType&&e,o=a&&"object"==typeof n&&n&&!n.nodeType&&n,r=o&&o.exports===a&&i.process,s=function(){try{var n=o&&o.require&&o.require("util").types;return n||r&&r.binding&&r.binding("util")}catch(n){}}();n.exports=s}).call(this,t(27)(n))},function(n,e,t){var i=t(123),a=t(124),o=Object.prototype.hasOwnProperty;n.exports=function(n){if(!i(n))return a(n);var e=[];for(var t in Object(n))o.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var i=t(125)(Object.keys,Object);n.exports=i},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var i=t(127),a=t(18),o=t(128),r=t(44),s=t(129),l=t(8),c=t(34),p=c(i),u=c(a),d=c(o),h=c(r),m=c(s),g=l;(i&&"[object DataView]"!=g(new i(new ArrayBuffer(1)))||a&&"[object Map]"!=g(new a)||o&&"[object Promise]"!=g(o.resolve())||r&&"[object Set]"!=g(new r)||s&&"[object WeakMap]"!=g(new s))&&(g=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,i=t?c(t):"";if(i)switch(i){case p:return"[object DataView]";case u:return"[object Map]";case d:return"[object Promise]";case h:return"[object Set]";case m:return"[object WeakMap]"}return e}),n.exports=g},function(n,e,t){var i=t(4)(t(2),"DataView");n.exports=i},function(n,e,t){var i=t(4)(t(2),"Promise");n.exports=i},function(n,e,t){var i=t(4)(t(2),"WeakMap");n.exports=i},function(n,e,t){var i=t(45),a=t(39);n.exports=function(n){for(var e=a(n),t=e.length;t--;){var o=e[t],r=n[o];e[t]=[o,r,i(r)]}return e}},function(n,e,t){var i=t(35),a=t(132),o=t(139),r=t(23),s=t(45),l=t(46),c=t(15);n.exports=function(n,e){return r(n)&&s(e)?l(c(n),e):function(t){var r=a(t,n);return void 0===r&&r===e?o(t,n):i(e,r,3)}}},function(n,e,t){var i=t(47);n.exports=function(n,e,t){var a=null==n?void 0:i(n,e);return void 0===a?t:a}},function(n,e,t){var i=t(134),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,r=i((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(a,(function(n,t,i,a){e.push(i?a.replace(o,"$1"):t||n)})),e}));n.exports=r},function(n,e,t){var i=t(135);n.exports=function(n){var e=i(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var i=t(20);function a(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var i=arguments,a=e?e.apply(this,i):i[0],o=t.cache;if(o.has(a))return o.get(a);var r=n.apply(this,i);return t.cache=o.set(a,r)||o,r};return t.cache=new(a.Cache||i),t}a.Cache=i,n.exports=a},function(n,e,t){var i=t(137);n.exports=function(n){return null==n?"":i(n)}},function(n,e,t){var i=t(7),a=t(138),o=t(3),r=t(24),s=i?i.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(o(e))return a(e,n)+"";if(r(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,i=null==n?0:n.length,a=Array(i);++t<i;)a[t]=e(n[t],t,n);return a}},function(n,e,t){var i=t(140),a=t(141);n.exports=function(n,e){return null!=n&&a(n,e,i)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var i=t(48),a=t(17),o=t(3),r=t(41),s=t(22),l=t(15);n.exports=function(n,e,t){for(var c=-1,p=(e=i(e,n)).length,u=!1;++c<p;){var d=l(e[c]);if(!(u=null!=n&&t(n,d)))break;n=n[d]}return u||++c!=p?u:!!(p=null==n?0:n.length)&&s(p)&&r(d,p)&&(o(n)||a(n))}},function(n,e,t){var i=t(143),a=t(144),o=t(23),r=t(15);n.exports=function(n){return o(n)?i(r(n)):a(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var i=t(47);n.exports=function(n){return function(e){return i(e,n)}}},function(n,e,t){var i=t(25),a=t(146),o=t(148);n.exports=function(n,e){return o(a(n,e,i),n+"")}},function(n,e,t){var i=t(147),a=Math.max;n.exports=function(n,e,t){return e=a(void 0===e?n.length-1:e,0),function(){for(var o=arguments,r=-1,s=a(o.length-e,0),l=Array(s);++r<s;)l[r]=o[e+r];r=-1;for(var c=Array(e+1);++r<e;)c[r]=o[r];return c[e]=t(l),i(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var i=t(149),a=t(152)(i);n.exports=a},function(n,e,t){var i=t(150),a=t(151),o=t(25),r=a?function(n,e){return a(n,"toString",{configurable:!0,enumerable:!1,value:i(e),writable:!0})}:o;n.exports=r},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var i=t(4),a=function(){try{var n=i(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=a},function(n,e){var t=Date.now;n.exports=function(n){var e=0,i=0;return function(){var a=t(),o=16-(a-i);if(i=a,o>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var i=t(37),a=t(154),o=t(159),r=t(38),s=t(160),l=t(21);n.exports=function(n,e,t){var c=-1,p=a,u=n.length,d=!0,h=[],m=h;if(t)d=!1,p=o;else if(u>=200){var g=e?null:s(n);if(g)return l(g);d=!1,p=r,m=new i}else m=e?[]:h;n:for(;++c<u;){var v=n[c],f=e?e(v):v;if(v=t||0!==v?v:0,d&&f==f){for(var b=m.length;b--;)if(m[b]===f)continue n;e&&m.push(f),h.push(v)}else p(m,f,t)||(m!==h&&m.push(f),h.push(v))}return h}},function(n,e,t){var i=t(155);n.exports=function(n,e){return!!(null==n?0:n.length)&&i(n,e,0)>-1}},function(n,e,t){var i=t(156),a=t(157),o=t(158);n.exports=function(n,e,t){return e==e?o(n,e,t):i(n,a,t)}},function(n,e){n.exports=function(n,e,t,i){for(var a=n.length,o=t+(i?1:-1);i?o--:++o<a;)if(e(n[o],o,n))return o;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var i=t-1,a=n.length;++i<a;)if(n[i]===e)return i;return-1}},function(n,e){n.exports=function(n,e,t){for(var i=-1,a=null==n?0:n.length;++i<a;)if(t(e,n[i]))return!0;return!1}},function(n,e,t){var i=t(44),a=t(161),o=t(21),r=i&&1/o(new i([,-0]))[1]==1/0?function(n){return new i(n)}:a;n.exports=r},function(n,e){n.exports=function(){}},function(n,e,t){var i=t(43),a=t(5);n.exports=function(n){return a(n)&&i(n)}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(49)},function(n,e,t){"use strict";t(50)},function(n,e,t){"use strict";t(51)},function(n,e,t){"use strict";t(52)},function(n,e,t){"use strict";t(53)},function(n,e,t){"use strict";t(54)},function(n,e,t){"use strict";t(55)},function(n,e,t){"use strict";t(56)},function(n,e,t){},function(n,e,t){n.exports=function(n){function e(n){let t,a,o,r=null;function s(...n){if(!s.enabled)return;const i=s,a=Number(new Date),o=a-(t||a);i.diff=o,i.prev=t,i.curr=a,t=a,n[0]=e.coerce(n[0]),"string"!=typeof n[0]&&n.unshift("%O");let r=0;n[0]=n[0].replace(/%([a-zA-Z%])/g,(t,a)=>{if("%%"===t)return"%";r++;const o=e.formatters[a];if("function"==typeof o){const e=n[r];t=o.call(i,e),n.splice(r,1),r--}return t}),e.formatArgs.call(i,n);(i.log||e.log).apply(i,n)}return s.namespace=n,s.useColors=e.useColors(),s.color=e.selectColor(n),s.extend=i,s.destroy=e.destroy,Object.defineProperty(s,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==r?r:(a!==e.namespaces&&(a=e.namespaces,o=e.enabled(n)),o),set:n=>{r=n}}),"function"==typeof e.init&&e.init(s),s}function i(n,t){const i=e(this.namespace+(void 0===t?":":t)+n);return i.log=this.log,i}function a(n){return n.toString().substring(2,n.toString().length-2).replace(/\.\*\?$/,"*")}return e.debug=e,e.default=e,e.coerce=function(n){if(n instanceof Error)return n.stack||n.message;return n},e.disable=function(){const n=[...e.names.map(a),...e.skips.map(a).map(n=>"-"+n)].join(",");return e.enable(""),n},e.enable=function(n){let t;e.save(n),e.namespaces=n,e.names=[],e.skips=[];const i=("string"==typeof n?n:"").split(/[\s,]+/),a=i.length;for(t=0;t<a;t++)i[t]&&("-"===(n=i[t].replace(/\*/g,".*?"))[0]?e.skips.push(new RegExp("^"+n.substr(1)+"$")):e.names.push(new RegExp("^"+n+"$")))},e.enabled=function(n){if("*"===n[n.length-1])return!0;let t,i;for(t=0,i=e.skips.length;t<i;t++)if(e.skips[t].test(n))return!1;for(t=0,i=e.names.length;t<i;t++)if(e.names[t].test(n))return!0;return!1},e.humanize=t(178),e.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(n).forEach(t=>{e[t]=n[t]}),e.names=[],e.skips=[],e.formatters={},e.selectColor=function(n){let t=0;for(let e=0;e<n.length;e++)t=(t<<5)-t+n.charCodeAt(e),t|=0;return e.colors[Math.abs(t)%e.colors.length]},e.enable(e.load()),e}},function(n,e){var t=1e3,i=6e4,a=60*i,o=24*a;function r(n,e,t,i){var a=e>=1.5*t;return Math.round(n/t)+" "+i+(a?"s":"")}n.exports=function(n,e){e=e||{};var s=typeof n;if("string"===s&&n.length>0)return function(n){if((n=String(n)).length>100)return;var e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(n);if(!e)return;var r=parseFloat(e[1]);switch((e[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*r;case"weeks":case"week":case"w":return 6048e5*r;case"days":case"day":case"d":return r*o;case"hours":case"hour":case"hrs":case"hr":case"h":return r*a;case"minutes":case"minute":case"mins":case"min":case"m":return r*i;case"seconds":case"second":case"secs":case"sec":case"s":return r*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}(n);if("number"===s&&isFinite(n))return e.long?function(n){var e=Math.abs(n);if(e>=o)return r(n,e,o,"day");if(e>=a)return r(n,e,a,"hour");if(e>=i)return r(n,e,i,"minute");if(e>=t)return r(n,e,t,"second");return n+" ms"}(n):function(n){var e=Math.abs(n);if(e>=o)return Math.round(n/o)+"d";if(e>=a)return Math.round(n/a)+"h";if(e>=i)return Math.round(n/i)+"m";if(e>=t)return Math.round(n/t)+"s";return n+"ms"}(n);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(n))}},function(n,e,t){},function(n,e,t){"use strict";t(57)},function(n,e,t){"use strict";t(58)},function(n,e,t){"use strict";t(59)},function(n,e,t){},function(n,e,t){"use strict";t(60)},function(n,e,t){"use strict";t(61)},function(n,e,t){"use strict";t(62)},function(n,e,t){"use strict";t(63)},function(n,e,t){"use strict";t.r(e);var i=t(0);
/*!
  * vue-router v3.5.3
  * (c) 2021 Evan You
  * @license MIT
  */function a(n,e){for(var t in e)n[t]=e[t];return n}var o=/[!'()*]/g,r=function(n){return"%"+n.charCodeAt(0).toString(16)},s=/%2C/g,l=function(n){return encodeURIComponent(n).replace(o,r).replace(s,",")};function c(n){try{return decodeURIComponent(n)}catch(n){0}return n}var p=function(n){return null==n||"object"==typeof n?n:String(n)};function u(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),i=c(t.shift()),a=t.length>0?c(t.join("=")):null;void 0===e[i]?e[i]=a:Array.isArray(e[i])?e[i].push(a):e[i]=[e[i],a]})),e):e}function d(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return l(e);if(Array.isArray(t)){var i=[];return t.forEach((function(n){void 0!==n&&(null===n?i.push(l(e)):i.push(l(e)+"="+l(n)))})),i.join("&")}return l(e)+"="+l(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var h=/\/?$/;function m(n,e,t,i){var a=i&&i.options.stringifyQuery,o=e.query||{};try{o=g(o)}catch(n){}var r={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:o,params:e.params||{},fullPath:b(e,a),matched:n?f(n):[]};return t&&(r.redirectedFrom=b(t,a)),Object.freeze(r)}function g(n){if(Array.isArray(n))return n.map(g);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=g(n[t]);return e}return n}var v=m(null,{path:"/"});function f(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function b(n,e){var t=n.path,i=n.query;void 0===i&&(i={});var a=n.hash;return void 0===a&&(a=""),(t||"/")+(e||d)(i)+a}function w(n,e,t){return e===v?n===e:!!e&&(n.path&&e.path?n.path.replace(h,"")===e.path.replace(h,"")&&(t||n.hash===e.hash&&y(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&y(n.query,e.query)&&y(n.params,e.params))))}function y(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),i=Object.keys(e).sort();return t.length===i.length&&t.every((function(t,a){var o=n[t];if(i[a]!==t)return!1;var r=e[t];return null==o||null==r?o===r:"object"==typeof o&&"object"==typeof r?y(o,r):String(o)===String(r)}))}function x(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var i in t.instances){var a=t.instances[i],o=t.enteredCbs[i];if(a&&o){delete t.enteredCbs[i];for(var r=0;r<o.length;r++)a._isBeingDestroyed||o[r](a)}}}}var E={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,i=e.children,o=e.parent,r=e.data;r.routerView=!0;for(var s=o.$createElement,l=t.name,c=o.$route,p=o._routerViewCache||(o._routerViewCache={}),u=0,d=!1;o&&o._routerRoot!==o;){var h=o.$vnode?o.$vnode.data:{};h.routerView&&u++,h.keepAlive&&o._directInactive&&o._inactive&&(d=!0),o=o.$parent}if(r.routerViewDepth=u,d){var m=p[l],g=m&&m.component;return g?(m.configProps&&_(g,r,m.route,m.configProps),s(g,r,i)):s()}var v=c.matched[u],f=v&&v.components[l];if(!v||!f)return p[l]=null,s();p[l]={component:f},r.registerRouteInstance=function(n,e){var t=v.instances[l];(e&&t!==n||!e&&t===n)&&(v.instances[l]=e)},(r.hook||(r.hook={})).prepatch=function(n,e){v.instances[l]=e.componentInstance},r.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==v.instances[l]&&(v.instances[l]=n.componentInstance),x(c)};var b=v.props&&v.props[l];return b&&(a(p[l],{route:c,configProps:b}),_(f,r,c,b)),s(f,r,i)}};function _(n,e,t,i){var o=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,i);if(o){o=e.props=a({},o);var r=e.attrs=e.attrs||{};for(var s in o)n.props&&s in n.props||(r[s]=o[s],delete o[s])}}function S(n,e,t){var i=n.charAt(0);if("/"===i)return n;if("?"===i||"#"===i)return e+n;var a=e.split("/");t&&a[a.length-1]||a.pop();for(var o=n.replace(/^\//,"").split("/"),r=0;r<o.length;r++){var s=o[r];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function A(n){return n.replace(/\/+/g,"/")}var k=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},T=R,B=j,C=function(n,e){return D(j(n,e),e)},z=D,I=L,P=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function j(n,e){for(var t,i=[],a=0,o=0,r="",s=e&&e.delimiter||"/";null!=(t=P.exec(n));){var l=t[0],c=t[1],p=t.index;if(r+=n.slice(o,p),o=p+l.length,c)r+=c[1];else{var u=n[o],d=t[2],h=t[3],m=t[4],g=t[5],v=t[6],f=t[7];r&&(i.push(r),r="");var b=null!=d&&null!=u&&u!==d,w="+"===v||"*"===v,y="?"===v||"*"===v,x=t[2]||s,E=m||g;i.push({name:h||a++,prefix:d||"",delimiter:x,optional:y,repeat:w,partial:b,asterisk:!!f,pattern:E?M(E):f?".*":"[^"+q(x)+"]+?"})}}return o<n.length&&(r+=n.substr(o)),r&&i.push(r),i}function $(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function D(n,e){for(var t=new Array(n.length),i=0;i<n.length;i++)"object"==typeof n[i]&&(t[i]=new RegExp("^(?:"+n[i].pattern+")$",F(e)));return function(e,i){for(var a="",o=e||{},r=(i||{}).pretty?$:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,p=o[l.name];if(null==p){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(k(p)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<p.length;u++){if(c=r(p[u]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===u?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(p).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):r(p),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function q(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function M(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function O(n,e){return n.keys=e,n}function F(n){return n&&n.sensitive?"":"i"}function L(n,e,t){k(e)||(t=e||t,e=[]);for(var i=(t=t||{}).strict,a=!1!==t.end,o="",r=0;r<n.length;r++){var s=n[r];if("string"==typeof s)o+=q(s);else{var l=q(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),o+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var p=q(t.delimiter||"/"),u=o.slice(-p.length)===p;return i||(o=(u?o.slice(0,-p.length):o)+"(?:"+p+"(?=$))?"),o+=a?"$":i&&u?"":"(?="+p+"|$)",O(new RegExp("^"+o,F(t)),e)}function R(n,e,t){return k(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var i=0;i<t.length;i++)e.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return O(n,e)}(n,e):k(n)?function(n,e,t){for(var i=[],a=0;a<n.length;a++)i.push(R(n[a],e,t).source);return O(new RegExp("(?:"+i.join("|")+")",F(t)),e)}(n,e,t):function(n,e,t){return L(j(n,t),e,t)}(n,e,t)}T.parse=B,T.compile=C,T.tokensToFunction=z,T.tokensToRegExp=I;var N=Object.create(null);function U(n,e,t){e=e||{};try{var i=N[n]||(N[n]=T.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),i(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function H(n,e,t,i){var o="string"==typeof n?{path:n}:n;if(o._normalized)return o;if(o.name){var r=(o=a({},n)).params;return r&&"object"==typeof r&&(o.params=a({},r)),o}if(!o.path&&o.params&&e){(o=a({},o))._normalized=!0;var s=a(a({},e.params),o.params);if(e.name)o.name=e.name,o.params=s;else if(e.matched.length){var l=e.matched[e.matched.length-1].path;o.path=U(l,s,e.path)}else 0;return o}var c=function(n){var e="",t="",i=n.indexOf("#");i>=0&&(e=n.slice(i),n=n.slice(0,i));var a=n.indexOf("?");return a>=0&&(t=n.slice(a+1),n=n.slice(0,a)),{path:n,query:t,hash:e}}(o.path||""),d=e&&e.path||"/",h=c.path?S(c.path,d,t||o.append):d,m=function(n,e,t){void 0===e&&(e={});var i,a=t||u;try{i=a(n||"")}catch(n){i={}}for(var o in e){var r=e[o];i[o]=Array.isArray(r)?r.map(p):p(r)}return i}(c.query,o.query,i&&i.options.parseQuery),g=o.hash||c.hash;return g&&"#"!==g.charAt(0)&&(g="#"+g),{_normalized:!0,path:h,query:m,hash:g}}var J,G=function(){},V={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,i=this.$route,o=t.resolve(this.to,i,this.append),r=o.location,s=o.route,l=o.href,c={},p=t.options.linkActiveClass,u=t.options.linkExactActiveClass,d=null==p?"router-link-active":p,g=null==u?"router-link-exact-active":u,v=null==this.activeClass?d:this.activeClass,f=null==this.exactActiveClass?g:this.exactActiveClass,b=s.redirectedFrom?m(null,H(s.redirectedFrom),null,t):s;c[f]=w(i,b,this.exactPath),c[v]=this.exact||this.exactPath?c[f]:function(n,e){return 0===n.path.replace(h,"/").indexOf(e.path.replace(h,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(i,b);var y=c[f]?this.ariaCurrentValue:null,x=function(n){W(n)&&(e.replace?t.replace(r,G):t.push(r,G))},E={click:W};Array.isArray(this.event)?this.event.forEach((function(n){E[n]=x})):E[this.event]=x;var _={class:c},S=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:x,isActive:c[v],isExactActive:c[f]});if(S){if(1===S.length)return S[0];if(S.length>1||!S.length)return 0===S.length?n():n("span",{},S)}if("a"===this.tag)_.on=E,_.attrs={href:l,"aria-current":y};else{var A=function n(e){var t;if(e)for(var i=0;i<e.length;i++){if("a"===(t=e[i]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(A){A.isStatic=!1;var k=A.data=a({},A.data);for(var T in k.on=k.on||{},k.on){var B=k.on[T];T in E&&(k.on[T]=Array.isArray(B)?B:[B])}for(var C in E)C in k.on?k.on[C].push(E[C]):k.on[C]=x;var z=A.data.attrs=a({},A.data.attrs);z.href=l,z["aria-current"]=y}else _.on=E}return n(this.tag,_,this.$slots.default)}};function W(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var K="undefined"!=typeof window;function Q(n,e,t,i,a){var o=e||[],r=t||Object.create(null),s=i||Object.create(null);n.forEach((function(n){!function n(e,t,i,a,o,r){var s=a.path,l=a.name;0;var c=a.pathToRegexpOptions||{},p=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return A(e.path+"/"+n)}(s,o,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var u={path:p,regex:X(p,c),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:l,parent:o,matchAs:r,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var o=r?A(r+"/"+a.path):void 0;n(e,t,i,a,u,o)}));t[u.path]||(e.push(u.path),t[u.path]=u);if(void 0!==a.alias)for(var d=Array.isArray(a.alias)?a.alias:[a.alias],h=0;h<d.length;++h){0;var m={path:d[h],children:a.children};n(e,t,i,m,o,u.path||"/")}l&&(i[l]||(i[l]=u))}(o,r,s,n,a)}));for(var l=0,c=o.length;l<c;l++)"*"===o[l]&&(o.push(o.splice(l,1)[0]),c--,l--);return{pathList:o,pathMap:r,nameMap:s}}function X(n,e){return T(n,[],e)}function Z(n,e){var t=Q(n),i=t.pathList,a=t.pathMap,o=t.nameMap;function r(n,t,r){var s=H(n,t,!1,e),c=s.name;if(c){var p=o[c];if(!p)return l(null,s);var u=p.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var d in t.params)!(d in s.params)&&u.indexOf(d)>-1&&(s.params[d]=t.params[d]);return s.path=U(p.path,s.params),l(p,s,r)}if(s.path){s.params={};for(var h=0;h<i.length;h++){var m=i[h],g=a[m];if(Y(g.regex,s.path,s.params))return l(g,s,r)}}return l(null,s)}function s(n,t){var i=n.redirect,a="function"==typeof i?i(m(n,t,null,e)):i;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,t);var s=a,c=s.name,p=s.path,u=t.query,d=t.hash,h=t.params;if(u=s.hasOwnProperty("query")?s.query:u,d=s.hasOwnProperty("hash")?s.hash:d,h=s.hasOwnProperty("params")?s.params:h,c){o[c];return r({_normalized:!0,name:c,query:u,hash:d,params:h},void 0,t)}if(p){var g=function(n,e){return S(n,e.parent?e.parent.path:"/",!0)}(p,n);return r({_normalized:!0,path:U(g,h),query:u,hash:d},void 0,t)}return l(null,t)}function l(n,t,i){return n&&n.redirect?s(n,i||t):n&&n.matchAs?function(n,e,t){var i=r({_normalized:!0,path:U(t,e.params)});if(i){var a=i.matched,o=a[a.length-1];return e.params=i.params,l(o,e)}return l(null,e)}(0,t,n.matchAs):m(n,t,i,e)}return{match:r,addRoute:function(n,e){var t="object"!=typeof n?o[n]:void 0;Q([e||n],i,a,o,t),t&&t.alias.length&&Q(t.alias.map((function(n){return{path:n,children:[e]}})),i,a,o,t)},getRoutes:function(){return i.map((function(n){return a[n]}))},addRoutes:function(n){Q(n,i,a,o)}}}function Y(n,e,t){var i=e.match(n);if(!i)return!1;if(!t)return!0;for(var a=1,o=i.length;a<o;++a){var r=n.keys[a-1];r&&(t[r.name||"pathMatch"]="string"==typeof i[a]?c(i[a]):i[a])}return!0}var nn=K&&window.performance&&window.performance.now?window.performance:Date;function en(){return nn.now().toFixed(3)}var tn=en();function an(){return tn}function on(n){return tn=n}var rn=Object.create(null);function sn(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=a({},window.history.state);return t.key=an(),window.history.replaceState(t,"",e),window.addEventListener("popstate",pn),function(){window.removeEventListener("popstate",pn)}}function ln(n,e,t,i){if(n.app){var a=n.options.scrollBehavior;a&&n.app.$nextTick((function(){var o=function(){var n=an();if(n)return rn[n]}(),r=a.call(n,e,t,i?o:null);r&&("function"==typeof r.then?r.then((function(n){gn(n,o)})).catch((function(n){0})):gn(r,o))}))}}function cn(){var n=an();n&&(rn[n]={x:window.pageXOffset,y:window.pageYOffset})}function pn(n){cn(),n.state&&n.state.key&&on(n.state.key)}function un(n){return hn(n.x)||hn(n.y)}function dn(n){return{x:hn(n.x)?n.x:window.pageXOffset,y:hn(n.y)?n.y:window.pageYOffset}}function hn(n){return"number"==typeof n}var mn=/^#\d/;function gn(n,e){var t,i="object"==typeof n;if(i&&"string"==typeof n.selector){var a=mn.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(a){var o=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),i=n.getBoundingClientRect();return{x:i.left-t.left-e.x,y:i.top-t.top-e.y}}(a,o={x:hn((t=o).x)?t.x:0,y:hn(t.y)?t.y:0})}else un(n)&&(e=dn(n))}else i&&un(n)&&(e=dn(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var vn,fn=K&&((-1===(vn=window.navigator.userAgent).indexOf("Android 2.")&&-1===vn.indexOf("Android 4.0")||-1===vn.indexOf("Mobile Safari")||-1!==vn.indexOf("Chrome")||-1!==vn.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function bn(n,e){cn();var t=window.history;try{if(e){var i=a({},t.state);i.key=an(),t.replaceState(i,"",n)}else t.pushState({key:on(en())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function wn(n){bn(n,!0)}function yn(n,e,t){var i=function(a){a>=n.length?t():n[a]?e(n[a],(function(){i(a+1)})):i(a+1)};i(0)}var xn={redirected:2,aborted:4,cancelled:8,duplicated:16};function En(n,e){return Sn(n,e,xn.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return An.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function _n(n,e){return Sn(n,e,xn.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function Sn(n,e,t,i){var a=new Error(i);return a._isRouter=!0,a.from=n,a.to=e,a.type=t,a}var An=["params","query","hash"];function kn(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function Tn(n,e){return kn(n)&&n._isRouter&&(null==e||n.type===e)}function Bn(n){return function(e,t,i){var a=!1,o=0,r=null;Cn(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){a=!0,o++;var l,c=Pn((function(e){var a;((a=e).__esModule||In&&"Module"===a[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:J.extend(e),t.components[s]=e,--o<=0&&i()})),p=Pn((function(n){var e="Failed to resolve async component "+s+": "+n;r||(r=kn(n)?n:new Error(e),i(r))}));try{l=n(c,p)}catch(n){p(n)}if(l)if("function"==typeof l.then)l.then(c,p);else{var u=l.component;u&&"function"==typeof u.then&&u.then(c,p)}}})),a||i()}}function Cn(n,e){return zn(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function zn(n){return Array.prototype.concat.apply([],n)}var In="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Pn(n){var e=!1;return function(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];if(!e)return e=!0,n.apply(this,t)}}var jn=function(n,e){this.router=n,this.base=function(n){if(!n)if(K){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=v,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function $n(n,e,t,i){var a=Cn(n,(function(n,i,a,o){var r=function(n,e){"function"!=typeof n&&(n=J.extend(n));return n.options[e]}(n,e);if(r)return Array.isArray(r)?r.map((function(n){return t(n,i,a,o)})):t(r,i,a,o)}));return zn(i?a.reverse():a)}function Dn(n,e){if(e)return function(){return n.apply(e,arguments)}}jn.prototype.listen=function(n){this.cb=n},jn.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},jn.prototype.onError=function(n){this.errorCbs.push(n)},jn.prototype.transitionTo=function(n,e,t){var i,a=this;try{i=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var o=this.current;this.confirmTransition(i,(function(){a.updateRoute(i),e&&e(i),a.ensureURL(),a.router.afterHooks.forEach((function(n){n&&n(i,o)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(n){n(i)})))}),(function(n){t&&t(n),n&&!a.ready&&(Tn(n,xn.redirected)&&o===v||(a.ready=!0,a.readyErrorCbs.forEach((function(e){e(n)}))))}))},jn.prototype.confirmTransition=function(n,e,t){var i=this,a=this.current;this.pending=n;var o,r,s=function(n){!Tn(n)&&kn(n)&&(i.errorCbs.length?i.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=a.matched.length-1;if(w(n,a)&&l===c&&n.matched[l]===a.matched[c])return this.ensureURL(),n.hash&&ln(this.router,a,n,!1),s(((r=Sn(o=a,n,xn.duplicated,'Avoided redundant navigation to current location: "'+o.fullPath+'".')).name="NavigationDuplicated",r));var p=function(n,e){var t,i=Math.max(n.length,e.length);for(t=0;t<i&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),u=p.updated,d=p.deactivated,h=p.activated,m=[].concat(function(n){return $n(n,"beforeRouteLeave",Dn,!0)}(d),this.router.beforeHooks,function(n){return $n(n,"beforeRouteUpdate",Dn)}(u),h.map((function(n){return n.beforeEnter})),Bn(h)),g=function(e,t){if(i.pending!==n)return s(_n(a,n));try{e(n,a,(function(e){!1===e?(i.ensureURL(!0),s(function(n,e){return Sn(n,e,xn.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(a,n))):kn(e)?(i.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(En(a,n)),"object"==typeof e&&e.replace?i.replace(e):i.push(e)):t(e)}))}catch(n){s(n)}};yn(m,g,(function(){yn(function(n){return $n(n,"beforeRouteEnter",(function(n,e,t,i){return function(n,e,t){return function(i,a,o){return n(i,a,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),o(n)}))}}(n,t,i)}))}(h).concat(i.router.resolveHooks),g,(function(){if(i.pending!==n)return s(_n(a,n));i.pending=null,e(n),i.router.app&&i.router.app.$nextTick((function(){x(n)}))}))}))},jn.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},jn.prototype.setupListeners=function(){},jn.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=v,this.pending=null};var qn=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Mn(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,i=fn&&t;i&&this.listeners.push(sn());var a=function(){var t=n.current,a=Mn(n.base);n.current===v&&a===n._startLocation||n.transitionTo(a,(function(n){i&&ln(e,n,t,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var i=this,a=this.current;this.transitionTo(n,(function(n){bn(A(i.base+n.fullPath)),ln(i.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var i=this,a=this.current;this.transitionTo(n,(function(n){wn(A(i.base+n.fullPath)),ln(i.router,n,a,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Mn(this.base)!==this.current.fullPath){var e=A(this.base+this.current.fullPath);n?bn(e):wn(e)}},e.prototype.getCurrentLocation=function(){return Mn(this.base)},e}(jn);function Mn(n){var e=window.location.pathname,t=e.toLowerCase(),i=n.toLowerCase();return!n||t!==i&&0!==t.indexOf(A(i+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var On=function(n){function e(e,t,i){n.call(this,e,t),i&&function(n){var e=Mn(n);if(!/^\/#/.test(e))return window.location.replace(A(n+"/#"+e)),!0}(this.base)||Fn()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=fn&&e;t&&this.listeners.push(sn());var i=function(){var e=n.current;Fn()&&n.transitionTo(Ln(),(function(i){t&&ln(n.router,i,e,!0),fn||Un(i.fullPath)}))},a=fn?"popstate":"hashchange";window.addEventListener(a,i),this.listeners.push((function(){window.removeEventListener(a,i)}))}},e.prototype.push=function(n,e,t){var i=this,a=this.current;this.transitionTo(n,(function(n){Nn(n.fullPath),ln(i.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var i=this,a=this.current;this.transitionTo(n,(function(n){Un(n.fullPath),ln(i.router,n,a,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Ln()!==e&&(n?Nn(e):Un(e))},e.prototype.getCurrentLocation=function(){return Ln()},e}(jn);function Fn(){var n=Ln();return"/"===n.charAt(0)||(Un("/"+n),!1)}function Ln(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Rn(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Nn(n){fn?bn(Rn(n)):window.location.hash=n}function Un(n){fn?wn(Rn(n)):window.location.replace(Rn(n))}var Hn=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var i=this;this.transitionTo(n,(function(n){i.stack=i.stack.slice(0,i.index+1).concat(n),i.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var i=this;this.transitionTo(n,(function(n){i.stack=i.stack.slice(0,i.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var i=this.stack[t];this.confirmTransition(i,(function(){var n=e.current;e.index=t,e.updateRoute(i),e.router.afterHooks.forEach((function(e){e&&e(i,n)}))}),(function(n){Tn(n,xn.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(jn),Jn=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Z(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!fn&&!1!==n.fallback,this.fallback&&(e="hash"),K||(e="abstract"),this.mode=e,e){case"history":this.history=new qn(this,n.base);break;case"hash":this.history=new On(this,n.base,this.fallback);break;case"abstract":this.history=new Hn(this,n.base);break;default:0}},Gn={currentRoute:{configurable:!0}};function Vn(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Jn.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Gn.currentRoute.get=function(){return this.history&&this.history.current},Jn.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof qn||t instanceof On){var i=function(n){t.setupListeners(),function(n){var i=t.current,a=e.options.scrollBehavior;fn&&a&&"fullPath"in n&&ln(e,n,i,!1)}(n)};t.transitionTo(t.getCurrentLocation(),i,i)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Jn.prototype.beforeEach=function(n){return Vn(this.beforeHooks,n)},Jn.prototype.beforeResolve=function(n){return Vn(this.resolveHooks,n)},Jn.prototype.afterEach=function(n){return Vn(this.afterHooks,n)},Jn.prototype.onReady=function(n,e){this.history.onReady(n,e)},Jn.prototype.onError=function(n){this.history.onError(n)},Jn.prototype.push=function(n,e,t){var i=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){i.history.push(n,e,t)}));this.history.push(n,e,t)},Jn.prototype.replace=function(n,e,t){var i=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){i.history.replace(n,e,t)}));this.history.replace(n,e,t)},Jn.prototype.go=function(n){this.history.go(n)},Jn.prototype.back=function(){this.go(-1)},Jn.prototype.forward=function(){this.go(1)},Jn.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Jn.prototype.resolve=function(n,e,t){var i=H(n,e=e||this.history.current,t,this),a=this.match(i,e),o=a.redirectedFrom||a.fullPath;return{location:i,route:a,href:function(n,e,t){var i="hash"===t?"#"+e:e;return n?A(n+"/"+i):i}(this.history.base,o,this.mode),normalizedTo:i,resolved:a}},Jn.prototype.getRoutes=function(){return this.matcher.getRoutes()},Jn.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==v&&this.history.transitionTo(this.history.getCurrentLocation())},Jn.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==v&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Jn.prototype,Gn),Jn.install=function n(e){if(!n.installed||J!==e){n.installed=!0,J=e;var t=function(n){return void 0!==n},i=function(n,e){var i=n.$options._parentVnode;t(i)&&t(i=i.data)&&t(i=i.registerRouteInstance)&&i(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,i(this,this)},destroyed:function(){i(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",E),e.component("RouterLink",V);var a=e.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},Jn.version="3.5.3",Jn.isNavigationFailure=Tn,Jn.NavigationFailureType=xn,Jn.START_LOCATION=v,K&&window.Vue&&window.Vue.use(Jn);var Wn=Jn;var Kn={NotFound:()=>Promise.all([t.e(0),t.e(1),t.e(5)]).then(t.bind(null,518)),Blog:()=>Promise.all([t.e(0),t.e(1),t.e(3)]).then(t.bind(null,517)),Layout:()=>Promise.all([t.e(0),t.e(1),t.e(100),t.e(4)]).then(t.bind(null,516)),Slide:()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,519))},Qn={"v-f74de172":()=>t.e(18).then(t.bind(null,520)),"v-f51f5474":()=>t.e(19).then(t.bind(null,521)),"v-42a969b4":()=>t.e(39).then(t.bind(null,522)),"v-4df2d3aa":()=>t.e(32).then(t.bind(null,523)),"v-37b40c7e":()=>t.e(34).then(t.bind(null,524)),"v-74e721b4":()=>t.e(35).then(t.bind(null,525)),"v-036ddef0":()=>t.e(38).then(t.bind(null,526)),"v-31b7b02f":()=>t.e(17).then(t.bind(null,527)),"v-538311d8":()=>t.e(55).then(t.bind(null,528)),"v-fc410702":()=>t.e(36).then(t.bind(null,529)),"v-859be4b2":()=>t.e(76).then(t.bind(null,530)),"v-9f7140b2":()=>t.e(83).then(t.bind(null,531)),"v-a219eb54":()=>t.e(97).then(t.bind(null,532)),"v-2497bc7c":()=>t.e(50).then(t.bind(null,533)),"v-e8ca5fb8":()=>t.e(48).then(t.bind(null,534)),"v-7bce7152":()=>t.e(47).then(t.bind(null,535)),"v-104d80a7":()=>t.e(46).then(t.bind(null,536)),"v-4178ed9a":()=>t.e(63).then(t.bind(null,537)),"v-a8ed776c":()=>t.e(64).then(t.bind(null,538)),"v-e8dd7c92":()=>t.e(67).then(t.bind(null,539)),"v-55d3817c":()=>t.e(80).then(t.bind(null,540)),"v-023c7dbe":()=>t.e(15).then(t.bind(null,541)),"v-95a92a5e":()=>t.e(16).then(t.bind(null,542)),"v-5c452ed0":()=>t.e(14).then(t.bind(null,543)),"v-62e2ae05":()=>t.e(49).then(t.bind(null,544)),"v-af546862":()=>t.e(10).then(t.bind(null,545)),"v-a3b101a2":()=>t.e(13).then(t.bind(null,546)),"v-0a98600f":()=>t.e(27).then(t.bind(null,547)),"v-72e34a02":()=>t.e(72).then(t.bind(null,548)),"v-6692607b":()=>t.e(29).then(t.bind(null,549)),"v-dd4f6e68":()=>t.e(21).then(t.bind(null,550)),"v-712c4c34":()=>t.e(45).then(t.bind(null,551)),"v-496cea52":()=>t.e(74).then(t.bind(null,552)),"v-2a9f5c48":()=>t.e(28).then(t.bind(null,553)),"v-b722715a":()=>t.e(75).then(t.bind(null,554)),"v-eb7666b6":()=>t.e(8).then(t.bind(null,555)),"v-fa6c2bce":()=>t.e(9).then(t.bind(null,556)),"v-54d18f67":()=>t.e(13).then(t.bind(null,557)),"v-288cf2b4":()=>t.e(22).then(t.bind(null,558)),"v-848b48f6":()=>t.e(23).then(t.bind(null,559)),"v-ff8cf936":()=>t.e(24).then(t.bind(null,560)),"v-018a97d8":()=>t.e(25).then(t.bind(null,561)),"v-4e4a8ca2":()=>t.e(26).then(t.bind(null,562)),"v-33b9b88f":()=>t.e(27).then(t.bind(null,563)),"v-2b693b9b":()=>t.e(81).then(t.bind(null,564)),"v-5d53a8d8":()=>t.e(65).then(t.bind(null,565)),"v-bfdf533a":()=>t.e(30).then(t.bind(null,566)),"v-448385f5":()=>t.e(33).then(t.bind(null,567)),"v-3842bc05":()=>t.e(40).then(t.bind(null,568)),"v-13c645d3":()=>t.e(41).then(t.bind(null,569)),"v-0899f725":()=>t.e(11).then(t.bind(null,570)),"v-e7aabd48":()=>t.e(28).then(t.bind(null,571)),"v-189698dc":()=>t.e(51).then(t.bind(null,572)),"v-025c699a":()=>t.e(37).then(t.bind(null,573)),"v-7a96cc32":()=>t.e(52).then(t.bind(null,574)),"v-ac0f7b50":()=>t.e(53).then(t.bind(null,575)),"v-0e60175c":()=>t.e(56).then(t.bind(null,576)),"v-5081093c":()=>t.e(57).then(t.bind(null,577)),"v-01b2b8f8":()=>t.e(70).then(t.bind(null,578)),"v-720fff6e":()=>t.e(58).then(t.bind(null,579)),"v-e1f1cec4":()=>t.e(59).then(t.bind(null,580)),"v-68bef918":()=>t.e(61).then(t.bind(null,581)),"v-2918e2f0":()=>t.e(62).then(t.bind(null,582)),"v-101a7a53":()=>t.e(66).then(t.bind(null,583)),"v-28691cc3":()=>t.e(73).then(t.bind(null,584)),"v-576421b3":()=>t.e(77).then(t.bind(null,585)),"v-daa4f2c0":()=>t.e(79).then(t.bind(null,586)),"v-2bc0448a":()=>t.e(82).then(t.bind(null,587)),"v-6612aa59":()=>t.e(84).then(t.bind(null,588)),"v-ddb14b62":()=>t.e(85).then(t.bind(null,589)),"v-ea47bfcc":()=>t.e(86).then(t.bind(null,590)),"v-2b68fff7":()=>t.e(87).then(t.bind(null,591)),"v-7b85727a":()=>t.e(88).then(t.bind(null,592)),"v-11822864":()=>t.e(89).then(t.bind(null,593)),"v-16a70b21":()=>t.e(90).then(t.bind(null,594)),"v-e8e7a6a2":()=>t.e(91).then(t.bind(null,595)),"v-0a93eeb9":()=>t.e(92).then(t.bind(null,596)),"v-6f682815":()=>t.e(93).then(t.bind(null,597)),"v-1cb0ad38":()=>t.e(94).then(t.bind(null,598)),"v-2df24c52":()=>t.e(96).then(t.bind(null,599)),"v-a7b7763e":()=>t.e(98).then(t.bind(null,600)),"v-3f9264e6":()=>t.e(31).then(t.bind(null,601)),"v-5afc35c5":()=>t.e(54).then(t.bind(null,602)),"v-2515e26a":()=>t.e(93).then(t.bind(null,603)),"v-dbc9215c":()=>t.e(12).then(t.bind(null,604)),"v-7e9249e5":()=>t.e(78).then(t.bind(null,605)),"v-50da21d8":()=>t.e(69).then(t.bind(null,606)),"v-47d10e62":()=>t.e(42).then(t.bind(null,607)),"v-4065d6b0":()=>t.e(95).then(t.bind(null,608)),"v-11fc78ab":()=>t.e(44).then(t.bind(null,609)),"v-6855c6c5":()=>t.e(8).then(t.bind(null,610)),"v-163b0284":()=>t.e(43).then(t.bind(null,611)),"v-0f5332b9":()=>t.e(30).then(t.bind(null,612)),"v-401c0936":()=>t.e(40).then(t.bind(null,613)),"v-391c58e5":()=>t.e(7).then(t.bind(null,614)),"v-54e5f7a3":()=>t.e(20).then(t.bind(null,615)),"v-4b9a15fb":()=>t.e(68).then(t.bind(null,616)),"v-bdacc0a6":()=>t.e(60).then(t.bind(null,617)),"v-297d0b79":()=>t.e(71).then(t.bind(null,618))};function Xn(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Zn=/-(\w)/g,Yn=Xn(n=>n.replace(Zn,(n,e)=>e?e.toUpperCase():"")),ne=/\B([A-Z])/g,ee=Xn(n=>n.replace(ne,"-$1").toLowerCase()),te=Xn(n=>n.charAt(0).toUpperCase()+n.slice(1));function ie(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(te(Yn(e))):n(te(e))||n(ee(e))}const ae=Object.assign({},Kn,Qn),oe=n=>ae[n],re=n=>Qn[n],se=n=>Kn[n],le=n=>i.a.component(n);function ce(n){return ie(re,n)}function pe(n){return ie(se,n)}function ue(n){return ie(oe,n)}function de(n){return ie(le,n)}function he(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!de(n)&&ue(n)){const e=await ue(n)();i.a.component(n,e.default)}}))}function me(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var ge=t(64),ve=t.n(ge),fe=t(65),be=t.n(fe),we={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${be()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=xe(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=Ee(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return ve()([{name:"description",content:this.$description}],n,this.siteMeta,_e)},updateCanonicalLink(){ye(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",xe(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){Ee(null,this.currentMetaTags),ye()}};function ye(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function xe(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function Ee(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function _e(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}var Se=t(16),Ae=t.n(Se),ke={mounted(){Ae.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||i.a.component(n.name)||Ae.a.start(),t()}),this.$router.afterEach(()=>{Ae.a.done(),this.isSidebarOpen=!1})}},Te=t(6),Be=t.n(Te);let Ce;var ze=i.a.extend({mounted(){Ce=Be()(()=>{this.setActiveHash()},300),window.addEventListener("scroll",Ce)},beforeDestroy(){window.removeEventListener("scroll",Ce)},methods:{setActiveHash(){const n=Array.from(document.querySelectorAll(".sidebar-link")),e=Array.from(document.querySelectorAll(".header-anchor")).filter(e=>0===n.length||n.some(n=>n.hash===e.hash)),t=document.querySelector(".theme-default-content").offsetTop,i=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+i,r=decodeURIComponent(this.$route.hash),s=(n,t)=>{if(o===a)for(let n=t+1;n<e.length;n++)if(r===decodeURIComponent(e[n].hash))return;this.$vuepress.$set("disableScrollBehavior",!0),this.$router.replace(decodeURIComponent(n),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})};if(i-t<0&&r)s("#",-1);else for(let n=0;n<e.length;n++){const a=e[n],o=e[n+1];if(i-t>=a.parentElement.offsetTop+0&&(!o||i-t<o.parentElement.offsetTop+0)&&r!==decodeURIComponent(a.hash))return void s(a.hash,n)}}}}),Ie=i.a.extend({name:"Clipboard",props:{html:{type:String,default:""},lang:{type:String,default:"en-US"}},data:()=>({location:""}),computed:{copyright(){const{author:n}=this.$themeConfig;return{"zh-CN":`${this.html}\n-----\n${n?`著作权归${n}所有。\n`:""}链接: ${this.location}`,"en-US":`${this.html}\n-----\n${n?`Copyright by ${n}.\n`:""}Link: ${this.location}`,"vi-VN":`${this.html}\n-----\n${n?`bản quyền bởi ${n}.\n`:""}Liên kết: ${this.location}`}[this.lang]}},created(){"undefined"!=typeof window&&(this.location=window.location.toString())}}),Pe=t(1),je=Object(Pe.a)(Ie,(function(){var n=this.$createElement;return(this._self._c||n)("div",{domProps:{innerHTML:this._s(this.copyright)}})}),[],!1,null,null,null).exports,$e={noCopy:!1,noSelect:!1,disabled:!1,minLength:100,authorName:""},De={data:()=>({isElement:!1}),created(){this.onCopy=n=>{const e=getSelection().getRangeAt(0);if(String(e).length<this.minLength)return;if(n.preventDefault(),this.noCopy)return;const t=document.createElement("div");t.appendChild(getSelection().getRangeAt(0).cloneContents());const a=this.$lang,o=new i.a({render:n=>n(je,{props:{html:t.innerHTML,lang:a}})}).$mount(),{innerHTML:r,innerText:s}=o.$el;n.clipboardData?(n.clipboardData.setData("text/html",r),n.clipboardData.setData("text/plain",s)):window.clipboardData&&window.clipboardData.setData("text",s)}},watch:{isElement(n){if(!n)return;let{copyright:e=!$e.disabled}=this.$frontmatter;if(!e)return;"object"!=typeof e&&(e={});const t=e.noSelect||$e.noSelect;this.minLength=e.minLength||$e.minLength,this.noCopy=e.noCopy||$e.noCopy,t?this.$el.style.userSelect="none":this.$el.addEventListener("copy",this.onCopy)}},updated(){this.isElement="#comment"!==this.$el.nodeName},beforeDestory(){this.$el.removeEventListener("copy",this.onCopy)}};t(164);const qe={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://cdn.jsdelivr.net/npm/@babel/standalone/babel.min.js",vue:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js",react:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js",reactDOM:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"},Me={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},Oe=(n,e,t)=>{const i=document.createElement(n);return e&&Object.keys(e).forEach(n=>{if(n.indexOf("data"))i[n]=e[n];else{const t=n.replace("data","");i.dataset[t]=e[n]}}),t&&t.forEach(n=>{i.appendChild(n)}),i},Fe=n=>Object.assign(Object.assign(Object.assign({},qe),n),{jsLib:Array.from(new Set([...qe.jsLib||[],...n.jsLib||[]])),cssLib:Array.from(new Set([...qe.cssLib||[],...n.cssLib||[]]))}),Le=(n,e)=>{if(void 0!==n[e])return n[e];const t=new Promise(n=>{const t=document.createElement("script");t.src=e,document.getElementsByTagName("body")[0].appendChild(t),t.onload=()=>{n()}});return n[e]=t,t},Re=n=>n.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),Ne=n=>`<div id="app">\n${Re(n)}\n</div>`,Ue=n=>n.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")+';\nReactDOM.render(React.createElement($reactApp), document.getElementById("app"))',He=n=>`new Vue({ el: '#app', ${n.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"$1").replace(/export\s+default\s*Vue\.extend\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"$1").trim()} })`,Je=n=>`(function(exports){var module={};module.exports=exports;${n};return module.exports.__esModule?module.exports.default:module.exports;})({})`,Ge=(n,e)=>Array.from(n.querySelectorAll("."+e)),Ve=(n,e,t,i)=>{const a=n.classList.contains("down");e.style.height=a?t.clientHeight+13.8+"px":"0",a?(i.classList.add("show-link"),n.classList.remove("down")):(i.classList.remove("show-link"),n.classList.add("down"))},We=({html:n,js:e,css:t,jsLib:i,cssLib:a,codepenEditors:o,codepenLayout:r},s)=>Oe("form",{className:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[Oe("input",{type:"hidden",name:"data",value:JSON.stringify({html:n,js:e,css:t,js_external:i.join(";"),css_external:a.join(";"),layout:r,html_pre_processor:s?s.html[1]:"none",js_pre_processor:s?s.js[1]:"none",css_pre_processor:s?s.css[1]:"none",editors:o})}),Oe("button",{type:"submit",innerHTML:'<svg class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="200" height="200"><defs><style/></defs><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',className:"button",datatip:"Codepen"})]),Ke=({code:n,codeType:e,container:t,innerHTML:i=!1})=>{const{id:a}=t,o=Ge(t,"demo-wrapper")[0],r=Ge(t,"code-wrapper")[0],s=Ge(t,"code")[0],l=Ge(t,"code-demo-footer")[0],c=decodeURIComponent(t.dataset.title||""),p=o.attachShadow({mode:"open"}),u=document.createElement("div");if(u.classList.add("code-demo-app"),p.appendChild(u),n.isLegal){i&&(u.innerHTML=n.html),((n,e)=>{if(e.css&&Array.from(n.childNodes).every(n=>"STYLE"!==n.nodeName)){const t=Oe("style",{innerHTML:e.css});n.appendChild(t)}})(p,n),((n,e,t)=>{const i=t.getScript();if(i&&Array.from(e.childNodes).every(n=>"SCRIPT"!==n.nodeName)){const t=document.createElement("script");t.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${n} .demo-wrapper').shadowRoot;\n${i}}`)),e.appendChild(t)}})(a,p,n);const e=Oe("button",{className:"expand down"});l.appendChild(e),l.appendChild(Oe("span",{className:"title",innerHTML:c})),e.addEventListener("click",Ve.bind(null,e,r,s,l)),r.style.height="0",!1!==n.jsfiddle&&l.appendChild((({html:n,js:e,css:t,jsLib:i,cssLib:a})=>Oe("form",{className:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[Oe("input",{type:"hidden",name:"html",value:n}),Oe("input",{type:"hidden",name:"js",value:e}),Oe("input",{type:"hidden",name:"css",value:t}),Oe("input",{type:"hidden",name:"wrap",value:"1"}),Oe("input",{type:"hidden",name:"panel_js",value:"3"}),Oe("input",{type:"hidden",name:"resources",value:[...a,...i].join(",")}),Oe("button",{type:"submit",className:"button",innerHTML:'<svg class="icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg" width="228.516" height="200"><defs><style/></defs><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>',datatip:"JSFiddle"})]))(n)),!1!==n.codepen&&l.appendChild(We(n))}else o.style.display="none",r.style.height="auto",l.appendChild(We(n,e)),l.style.height="40px";t.setAttribute("demo-inited","")},Qe=()=>{const n=Ge(document,"code-demo-wrapper"),e={};return Promise.all(n.map(n=>{if(n.hasAttribute("demo-inited"))return Promise.resolve();const t=decodeURIComponent(n.dataset.type||"normal"),i=JSON.parse(decodeURIComponent(n.dataset.config||"{}")),a=(n=>{const e=Object.keys(n),t={html:[],js:[],css:[],isLegal:!1};return["html","js","css"].forEach(i=>{const a=e.filter(n=>Me[i].types.includes(n));if(a.length){const e=a[0];t[i]=[n[e].replace(/^\n|\n$/g,""),Me[i].map[e]||e]}}),t.isLegal=!(t.html.length&&"none"!==t.html[1]||t.js.length&&"none"!==t.js[1]||t.css.length&&"none"!==t.css[1]),t})(JSON.parse(decodeURIComponent(n.dataset.code||"{}")));switch(t){case"react":{const t=((n,e)=>{const t=Fe(e);return Object.assign(Object.assign({},t),{html:Ne(""),js:Ue(n.js[0]||""),css:n.css[0]||(n.js[0]?n.js[0].replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim():""),isLegal:n.isLegal,jsLib:[t.react,t.reactDOM,...t.jsLib],getScript:()=>{var e,t;const i=(null===(t=null===(e=window.Babel)||void 0===e?void 0:e.transform(n.js[0]||"",{presets:["es2015","react"]}))||void 0===t?void 0:t.code)||"";return`window.ReactDOM.render(window.React.createElement(${Je(i)}), document.firstElementChild)`}})})(a,i);return Promise.all([Le(e,t.babel),Le(e,t.react),Le(e,t.reactDOM)]).then(()=>Ke({code:t,codeType:a,container:n}))}case"vue":{const t=((n,e)=>{const t=Fe(e),i=n.html[0]||"",a=/<template>([\s\S]+)<\/template>/u.exec(i),o=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u.exec(i),r=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u.exec(i),s=a?a[1].replace(/^\n|\n$/g,""):"",[l="",c=""]=o?[o[4].replace(/^\n|\n$/g,""),o[3]]:[],[p="",u=""]=r?[r[4].replace(/^\n|\n$/g,""),r[3]]:[],d=""===c&&(""===u||"css"===u);return Object.assign(Object.assign({},t),{html:Ne(s),js:He(l),css:p,isLegal:d,jsLib:[t.vue,...t.jsLib],getScript:()=>{var n,t;const i=e.useBabel?(null===(t=null===(n=window.Babel)||void 0===n?void 0:n.transform(l,{presets:["es2015"]}))||void 0===t?void 0:t.code)||"":l.replace(/export\s+default/u,"return");return`const appOptions=${Je(i)};appOptions.template=\`${s.replace("`",'\\`"')}\`;document.firstElementChild.appendChild(new (window.Vue.extend(appOptions))().$mount().$el);`}})})(a,i),o=[Le(e,t.vue)];return t.useBabel&&o.push(Le(e,t.babel)),Promise.all(o).then(()=>Ke({code:t,codeType:a,container:n}))}default:{const t=((n,e)=>{const t=Fe(e),i=n.js[0]||"";return Object.assign(Object.assign({},t),{html:Re(n.html[0]||""),js:i,css:n.css[0]||"",isLegal:n.isLegal,getScript:()=>{var n;return t.useBabel?(null===(n=window.Babel.transform(i,{presets:["es2015"]}))||void 0===n?void 0:n.code)||"":i}})})(a,i);return(t.useBabel?Le(e,t.babel):Promise.resolve()).then(()=>Ke({code:t,codeType:a,container:n,innerHTML:!0}))}}}))};var Xe={mounted(){setTimeout(()=>{Qe()},1e3)},updated(){setTimeout(()=>{Qe()},1e3)}};t(165);class Ze{constructor(){const n=document.getElementById("message-container");n?this.containerElement=n:(this.containerElement=document.createElement("div"),this.containerElement.id="message-container",document.body.appendChild(this.containerElement))}pop(n,e=2e3){const t=document.createElement("div");t.className="message move-in",t.innerHTML=`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#06a35a"><path d="M822.812 824.618c-83.076 81.992-188.546 124.614-316.05 127.865-122.085-3.251-223.943-45.873-305.935-127.865S76.213 640.406 72.962 518.682c3.251-127.503 45.873-232.973 127.865-316.05 81.992-83.075 184.211-126.058 305.936-129.309 127.503 3.251 232.973 46.234 316.049 129.31 83.076 83.076 126.059 188.546 129.31 316.05-2.89 121.723-46.234 223.943-129.31 305.935zM432.717 684.111c3.973 3.974 8.307 5.78 13.364 6.14 5.057.362 9.753-1.444 13.365-5.417l292.57-287.515c3.974-3.973 5.78-8.307 5.78-13.364s-1.806-9.753-5.78-13.365l1.807 1.806c-3.973-3.973-8.669-5.779-14.087-6.14-5.418-.361-10.475 1.445-14.809 5.418L460.529 592.006c-3.973 3.25-8.669 4.695-14.448 4.695-5.78 0-10.836-1.445-15.531-3.973l-94.273-72.962c-4.335-3.251-9.392-4.335-14.448-3.973s-9.392 3.25-12.642 7.585l-2.89 3.973c-3.25 4.334-4.334 9.391-3.973 14.81.722 5.417 2.528 10.113 5.779 14.086L432.717 684.11z"/></svg><span>${n}</span>`,this.containerElement.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}t(166),t(67);let Ye;const nt={"/":{copy:"复制成功 🎉",hint:"复制代码"}},et={showInMobile:!0,duration:2e3},tt=()=>!!navigator&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/iu.test(navigator.userAgent);var it=[we,ke,ze,De,Xe,i.a.extend({mounted(){Ye=new Ze,tt()&&!et.showInMobile||this.genCopyButton()},updated(){tt()&&!et.showInMobile||this.genCopyButton()},methods:{genCopyButton(){const n=et.selector||'.theme-default-content div[class*="language-"] pre';setTimeout(()=>{"string"==typeof n?document.querySelectorAll(n).forEach(this.insertCopyButton.bind(this)):Array.isArray(n)&&n.forEach(n=>{document.querySelectorAll(n).forEach(this.insertCopyButton.bind(this))})},1e3)},insertCopyButton(n){if(!n.hasAttribute("copy-code-registerd")){const e=document.createElement("button");e.className="copy-code-button",e.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" class="icon-copy-code"><path fill="currentColor" d="M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 00-6-6H102a6 6 0 00-6 6v20a6 6 0 006 6h180a6 6 0 006-6z" /></svg>',e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),e.setAttribute("aria-label",nt[this.$localePath||"/"].hint),e.setAttribute("data-balloon-pos","left"),n.parentElement&&n.parentElement.insertBefore(e,n),n.setAttribute("copy-code-registerd","")}},copyToClipboard(n){const e=document.getSelection(),t=!!(e&&e.rangeCount>0)&&e.getRangeAt(0),i=document.createElement("textarea");i.value=n,i.setAttribute("readonly",""),i.style.position="absolute",i.style.top="-9999px",document.body.appendChild(i),i.select(),document.execCommand("copy"),0!==et.duration&&Ye.pop(nt[this.$localePath||"/"].copy,et.duration),document.body.removeChild(i),t&&e&&(e.removeAllRanges(),e.addRange(t))}}})],at={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return me("layout",n),i.a.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},ot=Object(Pe.a)(at,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(ot,"mixins",it);const rt=[{name:"v-f74de172",path:"/Java/JApiDocs%E6%95%99%E7%A8%8B/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-f74de172").then(t)}},{path:"/Java/JApiDocs教程/",redirect:"/Java/JApiDocs%E6%95%99%E7%A8%8B/"},{path:"/Java/JApiDocs%E6%95%99%E7%A8%8B/index.html",redirect:"/Java/JApiDocs%E6%95%99%E7%A8%8B/"},{path:"/Java/JApiDocs教程.html",redirect:"/Java/JApiDocs%E6%95%99%E7%A8%8B/"},{name:"v-f51f5474",path:"/Java/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-f51f5474").then(t)}},{path:"/Java/index.html",redirect:"/Java/"},{name:"v-42a969b4",path:"/Java/Spring%20%E9%9D%A2%E8%AF%9563%E9%97%AE/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-42a969b4").then(t)}},{path:"/Java/Spring 面试63问/",redirect:"/Java/Spring%20%E9%9D%A2%E8%AF%9563%E9%97%AE/"},{path:"/Java/Spring%20%E9%9D%A2%E8%AF%9563%E9%97%AE/index.html",redirect:"/Java/Spring%20%E9%9D%A2%E8%AF%9563%E9%97%AE/"},{path:"/Java/Spring 面试63问.html",redirect:"/Java/Spring%20%E9%9D%A2%E8%AF%9563%E9%97%AE/"},{name:"v-4df2d3aa",path:"/Java/SpringBoot+SpringSecurity%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB+Jwt%E7%9A%84%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-4df2d3aa").then(t)}},{path:"/Java/SpringBoot+SpringSecurity前后端分离+Jwt的权限认证/",redirect:"/Java/SpringBoot+SpringSecurity%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB+Jwt%E7%9A%84%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/"},{path:"/Java/SpringBoot+SpringSecurity%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB+Jwt%E7%9A%84%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/index.html",redirect:"/Java/SpringBoot+SpringSecurity%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB+Jwt%E7%9A%84%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/"},{path:"/Java/SpringBoot+SpringSecurity前后端分离+Jwt的权限认证.html",redirect:"/Java/SpringBoot+SpringSecurity%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB+Jwt%E7%9A%84%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/"},{name:"v-37b40c7e",path:"/Java/SpringBoot%E5%90%AF%E5%8A%A8banner/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-37b40c7e").then(t)}},{path:"/Java/SpringBoot启动banner/",redirect:"/Java/SpringBoot%E5%90%AF%E5%8A%A8banner/"},{path:"/Java/SpringBoot%E5%90%AF%E5%8A%A8banner/index.html",redirect:"/Java/SpringBoot%E5%90%AF%E5%8A%A8banner/"},{path:"/Java/SpringBoot启动banner.html",redirect:"/Java/SpringBoot%E5%90%AF%E5%8A%A8banner/"},{name:"v-74e721b4",path:"/Java/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8A%A8%E6%80%81%E7%AE%A1%E7%90%86%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-74e721b4").then(t)}},{path:"/Java/SpringBoot定时任务动态管理通用解决方案/",redirect:"/Java/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8A%A8%E6%80%81%E7%AE%A1%E7%90%86%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{path:"/Java/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8A%A8%E6%80%81%E7%AE%A1%E7%90%86%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/index.html",redirect:"/Java/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8A%A8%E6%80%81%E7%AE%A1%E7%90%86%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{path:"/Java/SpringBoot定时任务动态管理通用解决方案.html",redirect:"/Java/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8A%A8%E6%80%81%E7%AE%A1%E7%90%86%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{name:"v-036ddef0",path:"/Java/SpringBoot%E9%A1%B9%E7%9B%AE%E9%89%B4%E6%9D%83%E7%9A%84%204%20%E7%A7%8D%E6%96%B9%E5%BC%8F/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-036ddef0").then(t)}},{path:"/Java/SpringBoot项目鉴权的 4 种方式/",redirect:"/Java/SpringBoot%E9%A1%B9%E7%9B%AE%E9%89%B4%E6%9D%83%E7%9A%84%204%20%E7%A7%8D%E6%96%B9%E5%BC%8F/"},{path:"/Java/SpringBoot%E9%A1%B9%E7%9B%AE%E9%89%B4%E6%9D%83%E7%9A%84%204%20%E7%A7%8D%E6%96%B9%E5%BC%8F/index.html",redirect:"/Java/SpringBoot%E9%A1%B9%E7%9B%AE%E9%89%B4%E6%9D%83%E7%9A%84%204%20%E7%A7%8D%E6%96%B9%E5%BC%8F/"},{path:"/Java/SpringBoot项目鉴权的 4 种方式.html",redirect:"/Java/SpringBoot%E9%A1%B9%E7%9B%AE%E9%89%B4%E6%9D%83%E7%9A%84%204%20%E7%A7%8D%E6%96%B9%E5%BC%8F/"},{name:"v-31b7b02f",path:"/Java/idea-tips/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-31b7b02f").then(t)}},{path:"/Java/idea-tips/index.html",redirect:"/Java/idea-tips/"},{path:"/Java/idea-tips.html",redirect:"/Java/idea-tips/"},{name:"v-538311d8",path:"/Java/%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85oracle/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-538311d8").then(t)}},{path:"/Java/使用docker快速安装oracle/",redirect:"/Java/%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85oracle/"},{path:"/Java/%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85oracle/index.html",redirect:"/Java/%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85oracle/"},{path:"/Java/使用docker快速安装oracle.html",redirect:"/Java/%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85oracle/"},{name:"v-fc410702",path:"/Java/%E5%B0%86Bean%E6%94%BE%E5%85%A5Spring%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-fc410702").then(t)}},{path:"/Java/将Bean放入Spring容器中的五种方式/",redirect:"/Java/%E5%B0%86Bean%E6%94%BE%E5%85%A5Spring%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F/"},{path:"/Java/%E5%B0%86Bean%E6%94%BE%E5%85%A5Spring%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F/index.html",redirect:"/Java/%E5%B0%86Bean%E6%94%BE%E5%85%A5Spring%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F/"},{path:"/Java/将Bean放入Spring容器中的五种方式.html",redirect:"/Java/%E5%B0%86Bean%E6%94%BE%E5%85%A5Spring%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F/"},{name:"v-859be4b2",path:"/Java/%E6%8A%A5%E9%94%99%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-859be4b2").then(t)}},{path:"/Java/报错异常解决/",redirect:"/Java/%E6%8A%A5%E9%94%99%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3/"},{path:"/Java/%E6%8A%A5%E9%94%99%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3/index.html",redirect:"/Java/%E6%8A%A5%E9%94%99%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3/"},{path:"/Java/报错异常解决.html",redirect:"/Java/%E6%8A%A5%E9%94%99%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3/"},{name:"v-9f7140b2",path:"/Java/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BJava%E7%B1%BB%E5%9E%8B/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-9f7140b2").then(t)}},{path:"/Java/数据类型Java类型/",redirect:"/Java/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BJava%E7%B1%BB%E5%9E%8B/"},{path:"/Java/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BJava%E7%B1%BB%E5%9E%8B/index.html",redirect:"/Java/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BJava%E7%B1%BB%E5%9E%8B/"},{path:"/Java/数据类型Java类型.html",redirect:"/Java/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BJava%E7%B1%BB%E5%9E%8B/"},{name:"v-a219eb54",path:"/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-a219eb54").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-2497bc7c",path:"/daily/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-2497bc7c").then(t)}},{path:"/daily/index.html",redirect:"/daily/"},{name:"v-e8ca5fb8",path:"/daily/Xposed%20edge%20pro%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-e8ca5fb8").then(t)}},{path:"/daily/Xposed edge pro入门教程/",redirect:"/daily/Xposed%20edge%20pro%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"},{path:"/daily/Xposed%20edge%20pro%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/index.html",redirect:"/daily/Xposed%20edge%20pro%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"},{path:"/daily/Xposed edge pro入门教程.html",redirect:"/daily/Xposed%20edge%20pro%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"},{name:"v-7bce7152",path:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4-%E6%89%93%E5%BC%80%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-7bce7152").then(t)}},{path:"/daily/Xposed-edge-pro Shell命令-打开微信好友聊天界面/",redirect:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4-%E6%89%93%E5%BC%80%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2/"},{path:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4-%E6%89%93%E5%BC%80%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2/index.html",redirect:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4-%E6%89%93%E5%BC%80%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2/"},{path:"/daily/Xposed-edge-pro Shell命令-打开微信好友聊天界面.html",redirect:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4-%E6%89%93%E5%BC%80%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2/"},{name:"v-104d80a7",path:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-104d80a7").then(t)}},{path:"/daily/Xposed-edge-pro Shell命令/",redirect:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4/"},{path:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4/index.html",redirect:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4/"},{path:"/daily/Xposed-edge-pro Shell命令.html",redirect:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4/"},{name:"v-4178ed9a",path:"/daily/%E5%85%A8%E7%90%83%E5%90%84%E5%A4%A7%E5%85%8D%E8%B4%B9%E7%94%B5%E5%AD%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E6%B1%87%E9%9B%86/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-4178ed9a").then(t)}},{path:"/daily/全球各大免费电子图书馆汇集/",redirect:"/daily/%E5%85%A8%E7%90%83%E5%90%84%E5%A4%A7%E5%85%8D%E8%B4%B9%E7%94%B5%E5%AD%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E6%B1%87%E9%9B%86/"},{path:"/daily/%E5%85%A8%E7%90%83%E5%90%84%E5%A4%A7%E5%85%8D%E8%B4%B9%E7%94%B5%E5%AD%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E6%B1%87%E9%9B%86/index.html",redirect:"/daily/%E5%85%A8%E7%90%83%E5%90%84%E5%A4%A7%E5%85%8D%E8%B4%B9%E7%94%B5%E5%AD%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E6%B1%87%E9%9B%86/"},{path:"/daily/全球各大免费电子图书馆汇集.html",redirect:"/daily/%E5%85%A8%E7%90%83%E5%90%84%E5%A4%A7%E5%85%8D%E8%B4%B9%E7%94%B5%E5%AD%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E6%B1%87%E9%9B%86/"},{name:"v-a8ed776c",path:"/daily/%E5%85%B3%E9%97%AD%E5%BE%AE%E4%BF%A1%E5%B9%BF%E5%91%8A/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-a8ed776c").then(t)}},{path:"/daily/关闭微信广告/",redirect:"/daily/%E5%85%B3%E9%97%AD%E5%BE%AE%E4%BF%A1%E5%B9%BF%E5%91%8A/"},{path:"/daily/%E5%85%B3%E9%97%AD%E5%BE%AE%E4%BF%A1%E5%B9%BF%E5%91%8A/index.html",redirect:"/daily/%E5%85%B3%E9%97%AD%E5%BE%AE%E4%BF%A1%E5%B9%BF%E5%91%8A/"},{path:"/daily/关闭微信广告.html",redirect:"/daily/%E5%85%B3%E9%97%AD%E5%BE%AE%E4%BF%A1%E5%B9%BF%E5%91%8A/"},{name:"v-e8dd7c92",path:"/daily/%E5%8E%BB%E9%99%A4MIUI10%E7%A7%92%E7%9A%84%E8%AD%A6%E5%91%8A/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-e8dd7c92").then(t)}},{path:"/daily/去除MIUI10秒的警告/",redirect:"/daily/%E5%8E%BB%E9%99%A4MIUI10%E7%A7%92%E7%9A%84%E8%AD%A6%E5%91%8A/"},{path:"/daily/%E5%8E%BB%E9%99%A4MIUI10%E7%A7%92%E7%9A%84%E8%AD%A6%E5%91%8A/index.html",redirect:"/daily/%E5%8E%BB%E9%99%A4MIUI10%E7%A7%92%E7%9A%84%E8%AD%A6%E5%91%8A/"},{path:"/daily/去除MIUI10秒的警告.html",redirect:"/daily/%E5%8E%BB%E9%99%A4MIUI10%E7%A7%92%E7%9A%84%E8%AD%A6%E5%91%8A/"},{name:"v-55d3817c",path:"/daily/%E5%BD%B1%E8%A7%86%E8%BD%AF%E4%BB%B6TV-APK/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-55d3817c").then(t)}},{path:"/daily/影视软件TV-APK/",redirect:"/daily/%E5%BD%B1%E8%A7%86%E8%BD%AF%E4%BB%B6TV-APK/"},{path:"/daily/%E5%BD%B1%E8%A7%86%E8%BD%AF%E4%BB%B6TV-APK/index.html",redirect:"/daily/%E5%BD%B1%E8%A7%86%E8%BD%AF%E4%BB%B6TV-APK/"},{path:"/daily/影视软件TV-APK.html",redirect:"/daily/%E5%BD%B1%E8%A7%86%E8%BD%AF%E4%BB%B6TV-APK/"},{name:"v-023c7dbe",path:"/git/GitHub-Auto-Commit/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-023c7dbe").then(t)}},{path:"/git/GitHub-Auto-Commit/index.html",redirect:"/git/GitHub-Auto-Commit/"},{path:"/git/GitHub-Auto-Commit.html",redirect:"/git/GitHub-Auto-Commit/"},{name:"v-95a92a5e",path:"/git/Git%E3%80%81GitHub%E3%80%81Gitee/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-95a92a5e").then(t)}},{path:"/git/Git、GitHub、Gitee/",redirect:"/git/Git%E3%80%81GitHub%E3%80%81Gitee/"},{path:"/git/Git%E3%80%81GitHub%E3%80%81Gitee/index.html",redirect:"/git/Git%E3%80%81GitHub%E3%80%81Gitee/"},{path:"/git/Git、GitHub、Gitee.html",redirect:"/git/Git%E3%80%81GitHub%E3%80%81Gitee/"},{name:"v-5c452ed0",path:"/git/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-5c452ed0").then(t)}},{path:"/git/index.html",redirect:"/git/"},{name:"v-62e2ae05",path:"/git/git_emoji/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-62e2ae05").then(t)}},{path:"/git/git_emoji/index.html",redirect:"/git/git_emoji/"},{path:"/git/git_emoji.html",redirect:"/git/git_emoji/"},{name:"v-af546862",path:"/linux/Centos7Minimal/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-af546862").then(t)}},{path:"/linux/Centos7Minimal/index.html",redirect:"/linux/Centos7Minimal/"},{path:"/linux/Centos7Minimal.html",redirect:"/linux/Centos7Minimal/"},{name:"v-a3b101a2",path:"/linux/Euserv/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-a3b101a2").then(t)}},{path:"/linux/Euserv/index.html",redirect:"/linux/Euserv/"},{path:"/linux/Euserv.html",redirect:"/linux/Euserv/"},{name:"v-0a98600f",path:"/linux/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-0a98600f").then(t)}},{path:"/linux/Nginx安装Web应用防火墙/",redirect:"/linux/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/"},{path:"/linux/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/index.html",redirect:"/linux/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/"},{path:"/linux/Nginx安装Web应用防火墙.html",redirect:"/linux/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/"},{name:"v-72e34a02",path:"/linux/NodeJS-Maven-Mysql/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-72e34a02").then(t)}},{path:"/linux/NodeJS-Maven-Mysql/index.html",redirect:"/linux/NodeJS-Maven-Mysql/"},{path:"/linux/NodeJS-Maven-Mysql.html",redirect:"/linux/NodeJS-Maven-Mysql/"},{name:"v-6692607b",path:"/linux/Podman%E5%BC%80%E6%BA%90%E7%9A%84%E5%AE%B9%E5%99%A8/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-6692607b").then(t)}},{path:"/linux/Podman开源的容器/",redirect:"/linux/Podman%E5%BC%80%E6%BA%90%E7%9A%84%E5%AE%B9%E5%99%A8/"},{path:"/linux/Podman%E5%BC%80%E6%BA%90%E7%9A%84%E5%AE%B9%E5%99%A8/index.html",redirect:"/linux/Podman%E5%BC%80%E6%BA%90%E7%9A%84%E5%AE%B9%E5%99%A8/"},{path:"/linux/Podman开源的容器.html",redirect:"/linux/Podman%E5%BC%80%E6%BA%90%E7%9A%84%E5%AE%B9%E5%99%A8/"},{name:"v-dd4f6e68",path:"/linux/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-dd4f6e68").then(t)}},{path:"/linux/index.html",redirect:"/linux/"},{name:"v-712c4c34",path:"/linux/Windows%E5%AD%90%E7%B3%BB%E7%BB%9F/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-712c4c34").then(t)}},{path:"/linux/Windows子系统/",redirect:"/linux/Windows%E5%AD%90%E7%B3%BB%E7%BB%9F/"},{path:"/linux/Windows%E5%AD%90%E7%B3%BB%E7%BB%9F/index.html",redirect:"/linux/Windows%E5%AD%90%E7%B3%BB%E7%BB%9F/"},{path:"/linux/Windows子系统.html",redirect:"/linux/Windows%E5%AD%90%E7%B3%BB%E7%BB%9F/"},{name:"v-496cea52",path:"/linux/bt/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-496cea52").then(t)}},{path:"/linux/bt/index.html",redirect:"/linux/bt/"},{path:"/linux/bt.html",redirect:"/linux/bt/"},{name:"v-2a9f5c48",path:"/linux/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-2a9f5c48").then(t)}},{path:"/linux/openssl一键自签证书/",redirect:"/linux/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/"},{path:"/linux/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/index.html",redirect:"/linux/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/"},{path:"/linux/openssl一键自签证书.html",redirect:"/linux/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/"},{name:"v-b722715a",path:"/linux/%E5%AE%9E%E7%94%A8%20shell%20%E8%84%9A%E6%9C%AC/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-b722715a").then(t)}},{path:"/linux/实用 shell 脚本/",redirect:"/linux/%E5%AE%9E%E7%94%A8%20shell%20%E8%84%9A%E6%9C%AC/"},{path:"/linux/%E5%AE%9E%E7%94%A8%20shell%20%E8%84%9A%E6%9C%AC/index.html",redirect:"/linux/%E5%AE%9E%E7%94%A8%20shell%20%E8%84%9A%E6%9C%AC/"},{path:"/linux/实用 shell 脚本.html",redirect:"/linux/%E5%AE%9E%E7%94%A8%20shell%20%E8%84%9A%E6%9C%AC/"},{name:"v-eb7666b6",path:"/other/API/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-eb7666b6").then(t)}},{path:"/other/API/index.html",redirect:"/other/API/"},{path:"/other/API.html",redirect:"/other/API/"},{name:"v-fa6c2bce",path:"/other/Bing%E5%BF%85%E5%BA%94API/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-fa6c2bce").then(t)}},{path:"/other/Bing必应API/",redirect:"/other/Bing%E5%BF%85%E5%BA%94API/"},{path:"/other/Bing%E5%BF%85%E5%BA%94API/index.html",redirect:"/other/Bing%E5%BF%85%E5%BA%94API/"},{path:"/other/Bing必应API.html",redirect:"/other/Bing%E5%BF%85%E5%BA%94API/"},{name:"v-54d18f67",path:"/other/Euserv/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-54d18f67").then(t)}},{path:"/other/Euserv/index.html",redirect:"/other/Euserv/"},{path:"/other/Euserv.html",redirect:"/other/Euserv/"},{name:"v-288cf2b4",path:"/other/Linux%E8%84%9A%E6%9C%AC%E5%B7%A5%E5%85%B7/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-288cf2b4").then(t)}},{path:"/other/Linux脚本工具/",redirect:"/other/Linux%E8%84%9A%E6%9C%AC%E5%B7%A5%E5%85%B7/"},{path:"/other/Linux%E8%84%9A%E6%9C%AC%E5%B7%A5%E5%85%B7/index.html",redirect:"/other/Linux%E8%84%9A%E6%9C%AC%E5%B7%A5%E5%85%B7/"},{path:"/other/Linux脚本工具.html",redirect:"/other/Linux%E8%84%9A%E6%9C%AC%E5%B7%A5%E5%85%B7/"},{name:"v-848b48f6",path:"/other/MyEclipse/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-848b48f6").then(t)}},{path:"/other/MyEclipse/index.html",redirect:"/other/MyEclipse/"},{path:"/other/MyEclipse.html",redirect:"/other/MyEclipse/"},{name:"v-ff8cf936",path:"/other/MySQL/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-ff8cf936").then(t)}},{path:"/other/MySQL/index.html",redirect:"/other/MySQL/"},{path:"/other/MySQL.html",redirect:"/other/MySQL/"},{name:"v-018a97d8",path:"/other/MySQL%E5%8E%8B%E7%BC%A9%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-018a97d8").then(t)}},{path:"/other/MySQL压缩版安装配置/",redirect:"/other/MySQL%E5%8E%8B%E7%BC%A9%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"},{path:"/other/MySQL%E5%8E%8B%E7%BC%A9%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/index.html",redirect:"/other/MySQL%E5%8E%8B%E7%BC%A9%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"},{path:"/other/MySQL压缩版安装配置.html",redirect:"/other/MySQL%E5%8E%8B%E7%BC%A9%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"},{name:"v-4e4a8ca2",path:"/other/Nginx%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-4e4a8ca2").then(t)}},{path:"/other/Nginx从安装到高可用/",redirect:"/other/Nginx%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8/"},{path:"/other/Nginx%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8/index.html",redirect:"/other/Nginx%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8/"},{path:"/other/Nginx从安装到高可用.html",redirect:"/other/Nginx%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8/"},{name:"v-33b9b88f",path:"/other/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-33b9b88f").then(t)}},{path:"/other/Nginx安装Web应用防火墙/",redirect:"/other/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/"},{path:"/other/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/index.html",redirect:"/other/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/"},{path:"/other/Nginx安装Web应用防火墙.html",redirect:"/other/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/"},{name:"v-2b693b9b",path:"/other/OfficeE5/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-2b693b9b").then(t)}},{path:"/other/OfficeE5/index.html",redirect:"/other/OfficeE5/"},{path:"/other/OfficeE5.html",redirect:"/other/OfficeE5/"},{name:"v-5d53a8d8",path:"/other/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-5d53a8d8").then(t)}},{path:"/other/index.html",redirect:"/other/"},{name:"v-bfdf533a",path:"/other/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-bfdf533a").then(t)}},{path:"/other/SSH客户端软件/",redirect:"/other/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/"},{path:"/other/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/index.html",redirect:"/other/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/"},{path:"/other/SSH客户端软件.html",redirect:"/other/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/"},{name:"v-448385f5",path:"/other/SpringBoot/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-448385f5").then(t)}},{path:"/other/SpringBoot/index.html",redirect:"/other/SpringBoot/"},{path:"/other/SpringBoot.html",redirect:"/other/SpringBoot/"},{name:"v-3842bc05",path:"/other/StartAllBack(StartIsBack)v3.2.1Stable/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-3842bc05").then(t)}},{path:"/other/StartAllBack(StartIsBack)v3.2.1Stable/index.html",redirect:"/other/StartAllBack(StartIsBack)v3.2.1Stable/"},{path:"/other/StartAllBack(StartIsBack)v3.2.1Stable.html",redirect:"/other/StartAllBack(StartIsBack)v3.2.1Stable/"},{name:"v-13c645d3",path:"/other/Steam%E5%85%8D%E8%B4%B9%E8%A7%A3%E9%94%81/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-13c645d3").then(t)}},{path:"/other/Steam免费解锁/",redirect:"/other/Steam%E5%85%8D%E8%B4%B9%E8%A7%A3%E9%94%81/"},{path:"/other/Steam%E5%85%8D%E8%B4%B9%E8%A7%A3%E9%94%81/index.html",redirect:"/other/Steam%E5%85%8D%E8%B4%B9%E8%A7%A3%E9%94%81/"},{path:"/other/Steam免费解锁.html",redirect:"/other/Steam%E5%85%8D%E8%B4%B9%E8%A7%A3%E9%94%81/"},{name:"v-0899f725",path:"/other/clash-v2ray/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-0899f725").then(t)}},{path:"/other/clash-v2ray/index.html",redirect:"/other/clash-v2ray/"},{path:"/other/clash-v2ray.html",redirect:"/other/clash-v2ray/"},{name:"v-e7aabd48",path:"/other/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-e7aabd48").then(t)}},{path:"/other/openssl一键自签证书/",redirect:"/other/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/"},{path:"/other/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/index.html",redirect:"/other/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/"},{path:"/other/openssl一键自签证书.html",redirect:"/other/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/"},{name:"v-189698dc",path:"/other/python%E5%AE%89%E8%A3%85%E6%BA%90/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-189698dc").then(t)}},{path:"/other/python安装源/",redirect:"/other/python%E5%AE%89%E8%A3%85%E6%BA%90/"},{path:"/other/python%E5%AE%89%E8%A3%85%E6%BA%90/index.html",redirect:"/other/python%E5%AE%89%E8%A3%85%E6%BA%90/"},{path:"/other/python安装源.html",redirect:"/other/python%E5%AE%89%E8%A3%85%E6%BA%90/"},{name:"v-025c699a",path:"/other/springboot%E6%89%93%E5%8C%85%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8Eshell%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-025c699a").then(t)}},{path:"/other/springboot打包不同环境配置与shell脚本部署/",redirect:"/other/springboot%E6%89%93%E5%8C%85%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8Eshell%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2/"},{path:"/other/springboot%E6%89%93%E5%8C%85%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8Eshell%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2/index.html",redirect:"/other/springboot%E6%89%93%E5%8C%85%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8Eshell%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2/"},{path:"/other/springboot打包不同环境配置与shell脚本部署.html",redirect:"/other/springboot%E6%89%93%E5%8C%85%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8Eshell%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2/"},{name:"v-7a96cc32",path:"/other/win10%E5%BF%AB%E6%8D%B7%E9%94%AE/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-7a96cc32").then(t)}},{path:"/other/win10快捷键/",redirect:"/other/win10%E5%BF%AB%E6%8D%B7%E9%94%AE/"},{path:"/other/win10%E5%BF%AB%E6%8D%B7%E9%94%AE/index.html",redirect:"/other/win10%E5%BF%AB%E6%8D%B7%E9%94%AE/"},{path:"/other/win10快捷键.html",redirect:"/other/win10%E5%BF%AB%E6%8D%B7%E9%94%AE/"},{name:"v-ac0f7b50",path:"/other/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1%E5%92%8C%E6%8E%A5%E7%A0%81/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-ac0f7b50").then(t)}},{path:"/other/临时邮箱和接码/",redirect:"/other/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1%E5%92%8C%E6%8E%A5%E7%A0%81/"},{path:"/other/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1%E5%92%8C%E6%8E%A5%E7%A0%81/index.html",redirect:"/other/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1%E5%92%8C%E6%8E%A5%E7%A0%81/"},{path:"/other/临时邮箱和接码.html",redirect:"/other/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1%E5%92%8C%E6%8E%A5%E7%A0%81/"},{name:"v-0e60175c",path:"/other/%E5%85%8D%E8%B4%B9VPS/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-0e60175c").then(t)}},{path:"/other/免费VPS/",redirect:"/other/%E5%85%8D%E8%B4%B9VPS/"},{path:"/other/%E5%85%8D%E8%B4%B9VPS/index.html",redirect:"/other/%E5%85%8D%E8%B4%B9VPS/"},{path:"/other/免费VPS.html",redirect:"/other/%E5%85%8D%E8%B4%B9VPS/"},{name:"v-5081093c",path:"/other/%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F%E5%99%A8/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-5081093c").then(t)}},{path:"/other/免费加速器/",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F%E5%99%A8/"},{path:"/other/%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F%E5%99%A8/index.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F%E5%99%A8/"},{path:"/other/免费加速器.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F%E5%99%A8/"},{name:"v-01b2b8f8",path:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%93/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-01b2b8f8").then(t)}},{path:"/other/免费图库/",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%93/"},{path:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%93/index.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%93/"},{path:"/other/免费图库.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%93/"},{name:"v-720fff6e",path:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E6%A0%87/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-720fff6e").then(t)}},{path:"/other/免费图标/",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E6%A0%87/"},{path:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E6%A0%87/index.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E6%A0%87/"},{path:"/other/免费图标.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E6%A0%87/"},{name:"v-e1f1cec4",path:"/other/%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-e1f1cec4").then(t)}},{path:"/other/免费工具集锦/",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/"},{path:"/other/%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/index.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/"},{path:"/other/免费工具集锦.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/"},{name:"v-68bef918",path:"/other/%E5%85%8D%E8%B4%B9%E6%8F%92%E5%9B%BE/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-68bef918").then(t)}},{path:"/other/免费插图/",redirect:"/other/%E5%85%8D%E8%B4%B9%E6%8F%92%E5%9B%BE/"},{path:"/other/%E5%85%8D%E8%B4%B9%E6%8F%92%E5%9B%BE/index.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E6%8F%92%E5%9B%BE/"},{path:"/other/免费插图.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E6%8F%92%E5%9B%BE/"},{name:"v-2918e2f0",path:"/other/%E5%85%8D%E8%B4%B9%E8%B5%84%E6%BA%90%E9%9B%86%E9%94%A6/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-2918e2f0").then(t)}},{path:"/other/免费资源集锦/",redirect:"/other/%E5%85%8D%E8%B4%B9%E8%B5%84%E6%BA%90%E9%9B%86%E9%94%A6/"},{path:"/other/%E5%85%8D%E8%B4%B9%E8%B5%84%E6%BA%90%E9%9B%86%E9%94%A6/index.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E8%B5%84%E6%BA%90%E9%9B%86%E9%94%A6/"},{path:"/other/免费资源集锦.html",redirect:"/other/%E5%85%8D%E8%B4%B9%E8%B5%84%E6%BA%90%E9%9B%86%E9%94%A6/"},{name:"v-101a7a53",path:"/other/%E5%88%A0%E9%99%A4%20windows%20%E6%9C%8D%E5%8A%A1/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-101a7a53").then(t)}},{path:"/other/删除 windows 服务/",redirect:"/other/%E5%88%A0%E9%99%A4%20windows%20%E6%9C%8D%E5%8A%A1/"},{path:"/other/%E5%88%A0%E9%99%A4%20windows%20%E6%9C%8D%E5%8A%A1/index.html",redirect:"/other/%E5%88%A0%E9%99%A4%20windows%20%E6%9C%8D%E5%8A%A1/"},{path:"/other/删除 windows 服务.html",redirect:"/other/%E5%88%A0%E9%99%A4%20windows%20%E6%9C%8D%E5%8A%A1/"},{name:"v-28691cc3",path:"/other/%E5%AE%89%E8%A3%85WSA-%E6%BF%80%E6%B4%BBGPU-%E5%8F%8C%E5%87%BB%E5%AE%89%E8%A3%85APK/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-28691cc3").then(t)}},{path:"/other/安装WSA-激活GPU-双击安装APK/",redirect:"/other/%E5%AE%89%E8%A3%85WSA-%E6%BF%80%E6%B4%BBGPU-%E5%8F%8C%E5%87%BB%E5%AE%89%E8%A3%85APK/"},{path:"/other/%E5%AE%89%E8%A3%85WSA-%E6%BF%80%E6%B4%BBGPU-%E5%8F%8C%E5%87%BB%E5%AE%89%E8%A3%85APK/index.html",redirect:"/other/%E5%AE%89%E8%A3%85WSA-%E6%BF%80%E6%B4%BBGPU-%E5%8F%8C%E5%87%BB%E5%AE%89%E8%A3%85APK/"},{path:"/other/安装WSA-激活GPU-双击安装APK.html",redirect:"/other/%E5%AE%89%E8%A3%85WSA-%E6%BF%80%E6%B4%BBGPU-%E5%8F%8C%E5%87%BB%E5%AE%89%E8%A3%85APK/"},{name:"v-576421b3",path:"/other/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-576421b3").then(t)}},{path:"/other/开源后台管理系统/",redirect:"/other/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{path:"/other/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/index.html",redirect:"/other/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{path:"/other/开源后台管理系统.html",redirect:"/other/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{name:"v-daa4f2c0",path:"/other/%E5%BD%B1%E8%A7%86/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-daa4f2c0").then(t)}},{path:"/other/影视/",redirect:"/other/%E5%BD%B1%E8%A7%86/"},{path:"/other/%E5%BD%B1%E8%A7%86/index.html",redirect:"/other/%E5%BD%B1%E8%A7%86/"},{path:"/other/影视.html",redirect:"/other/%E5%BD%B1%E8%A7%86/"},{name:"v-2bc0448a",path:"/other/%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-2bc0448a").then(t)}},{path:"/other/截图工具/",redirect:"/other/%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7/"},{path:"/other/%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7/index.html",redirect:"/other/%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7/"},{path:"/other/截图工具.html",redirect:"/other/%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7/"},{name:"v-6612aa59",path:"/other/%E6%B5%8F%E8%A7%88%E5%99%A8UA/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-6612aa59").then(t)}},{path:"/other/浏览器UA/",redirect:"/other/%E6%B5%8F%E8%A7%88%E5%99%A8UA/"},{path:"/other/%E6%B5%8F%E8%A7%88%E5%99%A8UA/index.html",redirect:"/other/%E6%B5%8F%E8%A7%88%E5%99%A8UA/"},{path:"/other/浏览器UA.html",redirect:"/other/%E6%B5%8F%E8%A7%88%E5%99%A8UA/"},{name:"v-ddb14b62",path:"/other/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0Monitor/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-ddb14b62").then(t)}},{path:"/other/漏洞监控平台Monitor/",redirect:"/other/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0Monitor/"},{path:"/other/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0Monitor/index.html",redirect:"/other/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0Monitor/"},{path:"/other/漏洞监控平台Monitor.html",redirect:"/other/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0Monitor/"},{name:"v-ea47bfcc",path:"/other/%E7%8C%AB%E5%BD%B1%E8%A7%86/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-ea47bfcc").then(t)}},{path:"/other/猫影视/",redirect:"/other/%E7%8C%AB%E5%BD%B1%E8%A7%86/"},{path:"/other/%E7%8C%AB%E5%BD%B1%E8%A7%86/index.html",redirect:"/other/%E7%8C%AB%E5%BD%B1%E8%A7%86/"},{path:"/other/猫影视.html",redirect:"/other/%E7%8C%AB%E5%BD%B1%E8%A7%86/"},{name:"v-2b68fff7",path:"/other/%E7%94%B5%E5%AD%90%E4%B9%A6%E7%BD%91%E7%AB%99/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-2b68fff7").then(t)}},{path:"/other/电子书网站/",redirect:"/other/%E7%94%B5%E5%AD%90%E4%B9%A6%E7%BD%91%E7%AB%99/"},{path:"/other/%E7%94%B5%E5%AD%90%E4%B9%A6%E7%BD%91%E7%AB%99/index.html",redirect:"/other/%E7%94%B5%E5%AD%90%E4%B9%A6%E7%BD%91%E7%AB%99/"},{path:"/other/电子书网站.html",redirect:"/other/%E7%94%B5%E5%AD%90%E4%B9%A6%E7%BD%91%E7%AB%99/"},{name:"v-7b85727a",path:"/other/%E7%99%BD%E5%AB%96%E6%9C%BA%E5%9C%BA/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-7b85727a").then(t)}},{path:"/other/白嫖机场/",redirect:"/other/%E7%99%BD%E5%AB%96%E6%9C%BA%E5%9C%BA/"},{path:"/other/%E7%99%BD%E5%AB%96%E6%9C%BA%E5%9C%BA/index.html",redirect:"/other/%E7%99%BD%E5%AB%96%E6%9C%BA%E5%9C%BA/"},{path:"/other/白嫖机场.html",redirect:"/other/%E7%99%BD%E5%AB%96%E6%9C%BA%E5%9C%BA/"},{name:"v-11822864",path:"/other/%E7%9B%B4%E6%92%AD%E6%BA%90/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-11822864").then(t)}},{path:"/other/直播源/",redirect:"/other/%E7%9B%B4%E6%92%AD%E6%BA%90/"},{path:"/other/%E7%9B%B4%E6%92%AD%E6%BA%90/index.html",redirect:"/other/%E7%9B%B4%E6%92%AD%E6%BA%90/"},{path:"/other/直播源.html",redirect:"/other/%E7%9B%B4%E6%92%AD%E6%BA%90/"},{name:"v-16a70b21",path:"/other/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E9%80%9B%E7%9A%84%E7%BD%91%E7%AB%99/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-16a70b21").then(t)}},{path:"/other/程序员常逛的网站/",redirect:"/other/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E9%80%9B%E7%9A%84%E7%BD%91%E7%AB%99/"},{path:"/other/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E9%80%9B%E7%9A%84%E7%BD%91%E7%AB%99/index.html",redirect:"/other/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E9%80%9B%E7%9A%84%E7%BD%91%E7%AB%99/"},{path:"/other/程序员常逛的网站.html",redirect:"/other/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E9%80%9B%E7%9A%84%E7%BD%91%E7%AB%99/"},{name:"v-e8e7a6a2",path:"/other/%E7%BD%91%E5%9D%80/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-e8e7a6a2").then(t)}},{path:"/other/网址/",redirect:"/other/%E7%BD%91%E5%9D%80/"},{path:"/other/%E7%BD%91%E5%9D%80/index.html",redirect:"/other/%E7%BD%91%E5%9D%80/"},{path:"/other/网址.html",redirect:"/other/%E7%BD%91%E5%9D%80/"},{name:"v-0a93eeb9",path:"/other/%E7%BE%8E%E5%9B%A2%E5%B9%B4%E8%B4%A7%E7%94%B5%E5%AD%90%E4%B9%A6/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-0a93eeb9").then(t)}},{path:"/other/美团年货电子书/",redirect:"/other/%E7%BE%8E%E5%9B%A2%E5%B9%B4%E8%B4%A7%E7%94%B5%E5%AD%90%E4%B9%A6/"},{path:"/other/%E7%BE%8E%E5%9B%A2%E5%B9%B4%E8%B4%A7%E7%94%B5%E5%AD%90%E4%B9%A6/index.html",redirect:"/other/%E7%BE%8E%E5%9B%A2%E5%B9%B4%E8%B4%A7%E7%94%B5%E5%AD%90%E4%B9%A6/"},{path:"/other/美团年货电子书.html",redirect:"/other/%E7%BE%8E%E5%9B%A2%E5%B9%B4%E8%B4%A7%E7%94%B5%E5%AD%90%E4%B9%A6/"},{name:"v-6f682815",path:"/other/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-6f682815").then(t)}},{path:"/other/脚本仓库/",redirect:"/other/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/"},{path:"/other/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/index.html",redirect:"/other/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/"},{path:"/other/脚本仓库.html",redirect:"/other/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/"},{name:"v-1cb0ad38",path:"/other/%E8%93%9D%E5%A5%8F%E4%BA%91%E5%AE%89%E5%8D%93APP%E5%90%88%E9%9B%86/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-1cb0ad38").then(t)}},{path:"/other/蓝奏云安卓APP合集/",redirect:"/other/%E8%93%9D%E5%A5%8F%E4%BA%91%E5%AE%89%E5%8D%93APP%E5%90%88%E9%9B%86/"},{path:"/other/%E8%93%9D%E5%A5%8F%E4%BA%91%E5%AE%89%E5%8D%93APP%E5%90%88%E9%9B%86/index.html",redirect:"/other/%E8%93%9D%E5%A5%8F%E4%BA%91%E5%AE%89%E5%8D%93APP%E5%90%88%E9%9B%86/"},{path:"/other/蓝奏云安卓APP合集.html",redirect:"/other/%E8%93%9D%E5%A5%8F%E4%BA%91%E5%AE%89%E5%8D%93APP%E5%90%88%E9%9B%86/"},{name:"v-2df24c52",path:"/other/%E9%98%BF%E9%87%8C%E5%8D%81%E5%A4%A7%E6%9C%80%E5%8F%97%E5%BC%80%E5%8F%91%E8%80%85%E6%AC%A2%E8%BF%8E%E7%9A%84%E5%B7%A5%E5%85%B7/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-2df24c52").then(t)}},{path:"/other/阿里十大最受开发者欢迎的工具/",redirect:"/other/%E9%98%BF%E9%87%8C%E5%8D%81%E5%A4%A7%E6%9C%80%E5%8F%97%E5%BC%80%E5%8F%91%E8%80%85%E6%AC%A2%E8%BF%8E%E7%9A%84%E5%B7%A5%E5%85%B7/"},{path:"/other/%E9%98%BF%E9%87%8C%E5%8D%81%E5%A4%A7%E6%9C%80%E5%8F%97%E5%BC%80%E5%8F%91%E8%80%85%E6%AC%A2%E8%BF%8E%E7%9A%84%E5%B7%A5%E5%85%B7/index.html",redirect:"/other/%E9%98%BF%E9%87%8C%E5%8D%81%E5%A4%A7%E6%9C%80%E5%8F%97%E5%BC%80%E5%8F%91%E8%80%85%E6%AC%A2%E8%BF%8E%E7%9A%84%E5%B7%A5%E5%85%B7/"},{path:"/other/阿里十大最受开发者欢迎的工具.html",redirect:"/other/%E9%98%BF%E9%87%8C%E5%8D%81%E5%A4%A7%E6%9C%80%E5%8F%97%E5%BC%80%E5%8F%91%E8%80%85%E6%AC%A2%E8%BF%8E%E7%9A%84%E5%B7%A5%E5%85%B7/"},{name:"v-a7b7763e",path:"/other/%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-a7b7763e").then(t)}},{path:"/other/高清视频解析接口/",redirect:"/other/%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3/"},{path:"/other/%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3/index.html",redirect:"/other/%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3/"},{path:"/other/高清视频解析接口.html",redirect:"/other/%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3/"},{name:"v-3f9264e6",path:"/script/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-3f9264e6").then(t)}},{path:"/script/index.html",redirect:"/script/"},{name:"v-5afc35c5",path:"/script/repository/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-5afc35c5").then(t)}},{path:"/script/repository/index.html",redirect:"/script/repository/"},{path:"/script/repository.html",redirect:"/script/repository/"},{name:"v-2515e26a",path:"/script/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-2515e26a").then(t)}},{path:"/script/脚本仓库/",redirect:"/script/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/"},{path:"/script/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/index.html",redirect:"/script/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/"},{path:"/script/脚本仓库.html",redirect:"/script/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/"},{name:"v-dbc9215c",path:"/source_code/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-dbc9215c").then(t)}},{path:"/source_code/index.html",redirect:"/source_code/"},{name:"v-7e9249e5",path:"/source_code/admin/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-7e9249e5").then(t)}},{path:"/source_code/admin/index.html",redirect:"/source_code/admin/"},{path:"/source_code/admin.html",redirect:"/source_code/admin/"},{name:"v-50da21d8",path:"/source_code/%E5%9B%BD%E5%86%85%E5%B8%B8%E7%94%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90CDN%E5%85%AC%E5%85%B1%E5%BA%93/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-50da21d8").then(t)}},{path:"/source_code/国内常用静态资源CDN公共库/",redirect:"/source_code/%E5%9B%BD%E5%86%85%E5%B8%B8%E7%94%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90CDN%E5%85%AC%E5%85%B1%E5%BA%93/"},{path:"/source_code/%E5%9B%BD%E5%86%85%E5%B8%B8%E7%94%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90CDN%E5%85%AC%E5%85%B1%E5%BA%93/index.html",redirect:"/source_code/%E5%9B%BD%E5%86%85%E5%B8%B8%E7%94%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90CDN%E5%85%AC%E5%85%B1%E5%BA%93/"},{path:"/source_code/国内常用静态资源CDN公共库.html",redirect:"/source_code/%E5%9B%BD%E5%86%85%E5%B8%B8%E7%94%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90CDN%E5%85%AC%E5%85%B1%E5%BA%93/"},{name:"v-47d10e62",path:"/study/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-47d10e62").then(t)}},{path:"/study/index.html",redirect:"/study/"},{name:"v-4065d6b0",path:"/study/form%E8%A1%A8%E5%8D%95%E7%B3%BB%E7%BB%9F/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-4065d6b0").then(t)}},{path:"/study/form表单系统/",redirect:"/study/form%E8%A1%A8%E5%8D%95%E7%B3%BB%E7%BB%9F/"},{path:"/study/form%E8%A1%A8%E5%8D%95%E7%B3%BB%E7%BB%9F/index.html",redirect:"/study/form%E8%A1%A8%E5%8D%95%E7%B3%BB%E7%BB%9F/"},{path:"/study/form表单系统.html",redirect:"/study/form%E8%A1%A8%E5%8D%95%E7%B3%BB%E7%BB%9F/"},{name:"v-11fc78ab",path:"/study/vuepress/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-11fc78ab").then(t)}},{path:"/study/vuepress/index.html",redirect:"/study/vuepress/"},{path:"/study/vuepress.html",redirect:"/study/vuepress/"},{name:"v-6855c6c5",path:"/tools/API/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-6855c6c5").then(t)}},{path:"/tools/API/index.html",redirect:"/tools/API/"},{path:"/tools/API.html",redirect:"/tools/API/"},{name:"v-163b0284",path:"/tools/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-163b0284").then(t)}},{path:"/tools/index.html",redirect:"/tools/"},{name:"v-0f5332b9",path:"/tools/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-0f5332b9").then(t)}},{path:"/tools/SSH客户端软件/",redirect:"/tools/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/"},{path:"/tools/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/index.html",redirect:"/tools/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/"},{path:"/tools/SSH客户端软件.html",redirect:"/tools/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/"},{name:"v-401c0936",path:"/tools/StartAllBack(StartIsBack)v3.2.1Stable/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-401c0936").then(t)}},{path:"/tools/StartAllBack(StartIsBack)v3.2.1Stable/index.html",redirect:"/tools/StartAllBack(StartIsBack)v3.2.1Stable/"},{path:"/tools/StartAllBack(StartIsBack)v3.2.1Stable.html",redirect:"/tools/StartAllBack(StartIsBack)v3.2.1Stable/"},{name:"v-391c58e5",path:"/tools/develop-tools/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-391c58e5").then(t)}},{path:"/tools/develop-tools/index.html",redirect:"/tools/develop-tools/"},{path:"/tools/develop-tools.html",redirect:"/tools/develop-tools/"},{name:"v-54e5f7a3",path:"/tools/lenovo/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-54e5f7a3").then(t)}},{path:"/tools/lenovo/index.html",redirect:"/tools/lenovo/"},{path:"/tools/lenovo.html",redirect:"/tools/lenovo/"},{name:"v-4b9a15fb",path:"/tools/software/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-4b9a15fb").then(t)}},{path:"/tools/software/index.html",redirect:"/tools/software/"},{path:"/tools/software.html",redirect:"/tools/software/"},{name:"v-bdacc0a6",path:"/tools/%E5%85%8D%E8%B4%B9%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-bdacc0a6").then(t)}},{path:"/tools/免费思维导图/",redirect:"/tools/%E5%85%8D%E8%B4%B9%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"},{path:"/tools/%E5%85%8D%E8%B4%B9%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/index.html",redirect:"/tools/%E5%85%8D%E8%B4%B9%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"},{path:"/tools/免费思维导图.html",redirect:"/tools/%E5%85%8D%E8%B4%B9%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"},{name:"v-297d0b79",path:"/tools/%E5%9C%A8%E7%BA%BF%E4%B8%87%E8%83%BD%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-297d0b79").then(t)}},{path:"/tools/在线万能查询和在线工具/",redirect:"/tools/%E5%9C%A8%E7%BA%BF%E4%B8%87%E8%83%BD%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"},{path:"/tools/%E5%9C%A8%E7%BA%BF%E4%B8%87%E8%83%BD%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/index.html",redirect:"/tools/%E5%9C%A8%E7%BA%BF%E4%B8%87%E8%83%BD%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"},{path:"/tools/在线万能查询和在线工具.html",redirect:"/tools/%E5%9C%A8%E7%BA%BF%E4%B8%87%E8%83%BD%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"},{name:"v-6453f364",path:"/article/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-6453f364").then(t)}},{path:"/article/index.html",redirect:"/article/"},{name:"v-4340f7e8",path:"/star/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-4340f7e8").then(t)}},{path:"/star/index.html",redirect:"/star/"},{name:"v-7d484ebf",path:"/encrypt/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-7d484ebf").then(t)}},{path:"/encrypt/index.html",redirect:"/encrypt/"},{name:"v-2470be33",path:"/slide/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-2470be33").then(t)}},{path:"/slide/index.html",redirect:"/slide/"},{name:"v-6319eb4e",path:"/timeline/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-6319eb4e").then(t)}},{path:"/timeline/index.html",redirect:"/timeline/"},{name:"v-b1564aac",path:"/tag/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-b1564aac").then(t)},meta:{pid:"tag",id:"tag"}},{path:"/tag/index.html",redirect:"/tag/"},{name:"v-28e6393c",path:"/category/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-28e6393c").then(t)},meta:{pid:"category",id:"category"}},{path:"/category/index.html",redirect:"/category/"},{name:"v-18082c7a",path:"/tag/Java/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-18082c7a").then(t)},meta:{pid:"tag",id:"Java"}},{path:"/tag/Java/index.html",redirect:"/tag/Java/"},{name:"v-184030a4",path:"/tag/IDEA/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-184030a4").then(t)},meta:{pid:"tag",id:"IDEA"}},{path:"/tag/IDEA/index.html",redirect:"/tag/IDEA/"},{name:"v-904ccf40",path:"/tag/daily/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-904ccf40").then(t)},meta:{pid:"tag",id:"daily"}},{path:"/tag/daily/index.html",redirect:"/tag/daily/"},{name:"v-53761ec2",path:"/tag/GitHub/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-53761ec2").then(t)},meta:{pid:"tag",id:"GitHub"}},{path:"/tag/GitHub/index.html",redirect:"/tag/GitHub/"},{name:"v-32555732",path:"/tag/Git/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-32555732").then(t)},meta:{pid:"tag",id:"Git"}},{path:"/tag/Git/index.html",redirect:"/tag/Git/"},{name:"v-e14f25f6",path:"/tag/Linux/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-e14f25f6").then(t)},meta:{pid:"tag",id:"Linux"}},{path:"/tag/Linux/index.html",redirect:"/tag/Linux/"},{name:"v-03ba43c2",path:"/tag/Euserv/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-03ba43c2").then(t)},meta:{pid:"tag",id:"Euserv"}},{path:"/tag/Euserv/index.html",redirect:"/tag/Euserv/"},{name:"v-dab8e1c2",path:"/tag/Nginx/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-dab8e1c2").then(t)},meta:{pid:"tag",id:"Nginx"}},{path:"/tag/Nginx/index.html",redirect:"/tag/Nginx/"},{name:"v-61ac368c",path:"/tag/NodeJS/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-61ac368c").then(t)},meta:{pid:"tag",id:"NodeJS"}},{path:"/tag/NodeJS/index.html",redirect:"/tag/NodeJS/"},{name:"v-dec02164",path:"/tag/Maven/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-dec02164").then(t)},meta:{pid:"tag",id:"Maven"}},{path:"/tag/Maven/index.html",redirect:"/tag/Maven/"},{name:"v-dc1e19d2",path:"/tag/Mysql/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-dc1e19d2").then(t)},meta:{pid:"tag",id:"Mysql"}},{path:"/tag/Mysql/index.html",redirect:"/tag/Mysql/"},{name:"v-95be2c92",path:"/tag/Openssl/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-95be2c92").then(t)},meta:{pid:"tag",id:"Openssl"}},{path:"/tag/Openssl/index.html",redirect:"/tag/Openssl/"},{name:"v-68abd36e",path:"/tag/other/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-68abd36e").then(t)},meta:{pid:"tag",id:"other"}},{path:"/tag/other/index.html",redirect:"/tag/other/"},{name:"v-fcf89e02",path:"/tag/蓝奏/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-fcf89e02").then(t)},meta:{pid:"tag",id:"蓝奏"}},{path:"/tag/蓝奏/index.html",redirect:"/tag/蓝奏/"},{name:"v-7812da8c",path:"/tag/Script/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-7812da8c").then(t)},meta:{pid:"tag",id:"Script"}},{path:"/tag/Script/index.html",redirect:"/tag/Script/"},{name:"v-18c14150",path:"/tag/Code/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-18c14150").then(t)},meta:{pid:"tag",id:"Code"}},{path:"/tag/Code/index.html",redirect:"/tag/Code/"},{name:"v-325a1928",path:"/tag/CDN/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-325a1928").then(t)},meta:{pid:"tag",id:"CDN"}},{path:"/tag/CDN/index.html",redirect:"/tag/CDN/"},{name:"v-c82f6a60",path:"/tag/Study/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-c82f6a60").then(t)},meta:{pid:"tag",id:"Study"}},{path:"/tag/Study/index.html",redirect:"/tag/Study/"},{name:"v-c557de04",path:"/tag/Tools/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-c557de04").then(t)},meta:{pid:"tag",id:"Tools"}},{path:"/tag/Tools/index.html",redirect:"/tag/Tools/"},{name:"v-25b8d671",path:"/category/Java/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-25b8d671").then(t)},meta:{pid:"category",id:"Java"}},{path:"/category/Java/index.html",redirect:"/category/Java/"},{name:"v-259cd45c",path:"/category/IDEA/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-259cd45c").then(t)},meta:{pid:"category",id:"IDEA"}},{path:"/category/IDEA/index.html",redirect:"/category/IDEA/"},{name:"v-848b7d1c",path:"/category/daily/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-848b7d1c").then(t)},meta:{pid:"category",id:"daily"}},{path:"/category/daily/index.html",redirect:"/category/daily/"},{name:"v-09aa97f0",path:"/category/GitHub/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-09aa97f0").then(t)},meta:{pid:"category",id:"GitHub"}},{path:"/category/GitHub/index.html",redirect:"/category/GitHub/"},{name:"v-6c9119f9",path:"/category/Git/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-6c9119f9").then(t)},meta:{pid:"category",id:"Git"}},{path:"/category/Git/index.html",redirect:"/category/Git/"},{name:"v-d58dd3d2",path:"/category/Linux/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-d58dd3d2").then(t)},meta:{pid:"category",id:"Linux"}},{path:"/category/Linux/index.html",redirect:"/category/Linux/"},{name:"v-97515166",path:"/category/Euserv/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-97515166").then(t)},meta:{pid:"category",id:"Euserv"}},{path:"/category/Euserv/index.html",redirect:"/category/Euserv/"},{name:"v-6857ac12",path:"/category/linux/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-6857ac12").then(t)},meta:{pid:"category",id:"linux"}},{path:"/category/linux/index.html",redirect:"/category/linux/"},{name:"v-5cea814a",path:"/category/other/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-5cea814a").then(t)},meta:{pid:"category",id:"other"}},{path:"/category/other/index.html",redirect:"/category/other/"},{name:"v-7a2b0be8",path:"/category/Script/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-7a2b0be8").then(t)},meta:{pid:"category",id:"Script"}},{path:"/category/Script/index.html",redirect:"/category/Script/"},{name:"v-255c4c06",path:"/category/Code/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-255c4c06").then(t)},meta:{pid:"category",id:"Code"}},{path:"/category/Code/index.html",redirect:"/category/Code/"},{name:"v-bc6e183c",path:"/category/Study/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-bc6e183c").then(t)},meta:{pid:"category",id:"Study"}},{path:"/category/Study/index.html",redirect:"/category/Study/"},{name:"v-b9968be0",path:"/category/Tools/",component:ot,beforeEnter:(n,e,t)=>{he("Blog","v-b9968be0").then(t)},meta:{pid:"category",id:"Tools"}},{path:"/category/Tools/index.html",redirect:"/category/Tools/"},{name:"v-e3c98acc",path:"/tag/Java/page/2/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-e3c98acc").then(t)},meta:{pid:"tag",id:"Java"}},{path:"/tag/Java/page/2/index.html",redirect:"/tag/Java/page/2/"},{name:"v-6a410b54",path:"/tag/other/page/2/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-6a410b54").then(t)},meta:{pid:"tag",id:"other"}},{path:"/tag/other/page/2/index.html",redirect:"/tag/other/page/2/"},{name:"v-6a410b73",path:"/tag/other/page/3/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-6a410b73").then(t)},meta:{pid:"tag",id:"other"}},{path:"/tag/other/page/3/index.html",redirect:"/tag/other/page/3/"},{name:"v-6a410b92",path:"/tag/other/page/4/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-6a410b92").then(t)},meta:{pid:"tag",id:"other"}},{path:"/tag/other/page/4/index.html",redirect:"/tag/other/page/4/"},{name:"v-6a410bb1",path:"/tag/other/page/5/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-6a410bb1").then(t)},meta:{pid:"tag",id:"other"}},{path:"/tag/other/page/5/index.html",redirect:"/tag/other/page/5/"},{name:"v-61494e2c",path:"/category/Java/page/2/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-61494e2c").then(t)},meta:{pid:"category",id:"Java"}},{path:"/category/Java/page/2/index.html",redirect:"/category/Java/page/2/"},{name:"v-06552bfc",path:"/category/other/page/2/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-06552bfc").then(t)},meta:{pid:"category",id:"other"}},{path:"/category/other/page/2/index.html",redirect:"/category/other/page/2/"},{name:"v-06552bbe",path:"/category/other/page/3/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-06552bbe").then(t)},meta:{pid:"category",id:"other"}},{path:"/category/other/page/3/index.html",redirect:"/category/other/page/3/"},{name:"v-06552b80",path:"/category/other/page/4/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-06552b80").then(t)},meta:{pid:"category",id:"other"}},{path:"/category/other/page/4/index.html",redirect:"/category/other/page/4/"},{name:"v-06552b42",path:"/category/other/page/5/",component:ot,beforeEnter:(n,e,t)=>{he("Layout","v-06552b42").then(t)},meta:{pid:"category",id:"other"}},{path:"/category/other/page/5/index.html",redirect:"/category/other/page/5/"},{path:"*",component:ot}],st={title:"StudyNote",description:"一个自己学习的笔记，学习工具，各种技巧，各种使用教程。",base:"/",headTags:[["script",{src:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js"}],["script",{src:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"}],["script",{src:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js"}],["script",{src:"https://cdn.jsdelivr.net/npm/@babel/standalone/babel.min.js"}],["link",{rel:"alternate",type:"application/atom+xml",href:"https://xlc520.github.io/atom.xml",title:"StudyNote Atom Feed"}],["link",{rel:"alternate",type:"application/json",href:"https://xlc520.github.io/feed.json",title:"StudyNote JSON Feed"}],["link",{rel:"alternate",type:"application/rss+xml",href:"https://xlc520.github.io/rss.xml",title:"StudyNote RSS Feed"}],["link",{rel:"icon",href:"/favicon.ico"}],["link",{rel:"icon",href:"/assets/icon/chrome-mask-512.png",type:"image/png",sizes:"512x512"}],["link",{rel:"icon",href:"/assets/icon/chrome-mask-192.png",type:"image/png",sizes:"192x192"}],["link",{rel:"icon",href:"/assets/icon/chrome-512.png",type:"image/png",sizes:"512x512"}],["link",{rel:"icon",href:"/assets/icon/chrome-192.png",type:"image/png",sizes:"192x192"}],["link",{rel:"manifest",href:"/manifest.webmanifest",crossorigin:"use-credentials"}],["meta",{name:"theme-color",content:"#46bd87"}],["link",{rel:"apple-touch-icon",href:"/assets/icon/apple-icon-152.png"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["meta",{name:"msapplication-TileImage",content:"/assets/icon/ms-icon-144.png"}],["meta",{name:"msapplication-TileColor",content:"#ffffff"}],["meta",{name:"viewport",content:"width=device-width, initial-scale=1.0, viewport-fit=cover"}]],pages:[{title:"JApiDocs教程",frontmatter:{author:"xlc520",title:"JApiDocs教程",description:"JApiDocs教程",time:"2022-02-12T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/JApiDocs%E6%95%99%E7%A8%8B.html",relativePath:"Java/JApiDocs教程.md",key:"v-f74de172",path:"/Java/JApiDocs%E6%95%99%E7%A8%8B/",headers:[{level:2,title:"二、代码规范",slug:"二、代码规范",normalizedTitle:"二、代码规范",charIndex:196},{level:3,title:"1. 分组名称 @description",slug:"_1-分组名称-description",normalizedTitle:"1. 分组名称 @description",charIndex:207},{level:3,title:"2. 接口参数（JApiDocs 会通过 @param 来寻找接口参数和进一步解析参数的内容）",slug:"_2-接口参数-japidocs-会通过-param-来寻找接口参数和进一步解析参数的内容",normalizedTitle:"2. 接口参数（japidocs 会通过 @param 来寻找接口参数和进一步解析参数的内容）",charIndex:700},{level:3,title:"3. 返回对象",slug:"_3-返回对象",normalizedTitle:"3. 返回对象",charIndex:1224},{level:3,title:"4、高级配置",slug:"_4、高级配置",normalizedTitle:"4、高级配置",charIndex:1859},{level:3,title:"(2)@Ignore (忽略Controller，接口，字段)",slug:"_2-ignore-忽略controller-接口-字段",normalizedTitle:"(2)@ignore (忽略controller，接口，字段)",charIndex:2498},{level:2,title:"三、配置参数",slug:"三、配置参数",normalizedTitle:"三、配置参数",charIndex:2604},{level:2,title:"四、导出格式",slug:"四、导出格式",normalizedTitle:"四、导出格式",charIndex:2996},{level:3,title:"（1）Markdown",slug:"_1-markdown",normalizedTitle:"（1）markdown",charIndex:3007},{level:3,title:"（2）导出 pdf 或者 word",slug:"_2-导出-pdf-或者-word",normalizedTitle:"（2）导出 pdf 或者 word",charIndex:3074},{level:2,title:"五、自定义代码模板",slug:"五、自定义代码模板",normalizedTitle:"五、自定义代码模板",charIndex:3141},{level:3,title:"（1）定义代码模板",slug:"_1-定义代码模板",normalizedTitle:"（1）定义代码模板",charIndex:3250},{level:3,title:"（2）选择新的模板",slug:"_2-选择新的模板",normalizedTitle:"（2）选择新的模板",charIndex:3408},{level:2,title:"六、添加更多功能",slug:"六、添加更多功能",normalizedTitle:"六、添加更多功能",charIndex:3492},{level:3,title:"（1）实现 IPluginSupport 接口",slug:"_1-实现-ipluginsupport-接口",normalizedTitle:"（1）实现 ipluginsupport 接口",charIndex:3555},{level:3,title:"（2）添加插件",slug:"_2-添加插件",normalizedTitle:"（2）添加插件",charIndex:3769},{level:2,title:"七、问题的解决",slug:"七、问题的解决",normalizedTitle:"七、问题的解决",charIndex:3826},{level:3,title:"1、如何排查错误？",slug:"_1、如何排查错误",normalizedTitle:"1、如何排查错误？",charIndex:3838},{level:3,title:"2、多模块找不到相关类源码？",slug:"_2、多模块找不到相关类源码",normalizedTitle:"2、多模块找不到相关类源码？",charIndex:3921},{level:2,title:"八、自定义注释模板",slug:"八、自定义注释模板",normalizedTitle:"八、自定义注释模板",charIndex:4016},{level:3,title:"（1）Live Templates",slug:"_1-live-templates",normalizedTitle:"（1）live templates",charIndex:4085},{level:3,title:"（2）File Header",slug:"_2-file-header",normalizedTitle:"（2）file header",charIndex:4226}],readingTime:{minutes:4.01,words:1203},headersStr:"二、代码规范 1. 分组名称 @description 2. 接口参数（JApiDocs 会通过 @param 来寻找接口参数和进一步解析参数的内容） 3. 返回对象 4、高级配置 (2)@Ignore (忽略Controller，接口，字段) 三、配置参数 四、导出格式 （1）Markdown （2）导出 pdf 或者 word 五、自定义代码模板 （1）定义代码模板 （2）选择新的模板 六、添加更多功能 （1）实现 IPluginSupport 接口 （2）添加插件 七、问题的解决 1、如何排查错误？ 2、多模块找不到相关类源码？ 八、自定义注释模板 （1）Live Templates （2）File Header",content:'# JApiDocs教程\n\n一、Maven依赖\n\n\x3c!--  JApiDocs  --\x3e\n<dependency>\n   <groupId>io.github.yedaxia</groupId>\n   <artifactId>japidocs</artifactId>\n   <version>1.4.3</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 二、代码规范\n\n\n# 1. 分组名称 @description\n\n注：官方文档中注明分组名称@description，但是实际应用中不需要加入注解，像下例所示，直接写注释即可。（类上写不写都行，方法上如果加上@description反而不显示） 例：\n\n/**\n * 用户接口\n */\n/*注意：这里不能空行，否则注释名无法显示*/\n@RequestMapping("test")\n@Controller\npublic class testInterface {\n\n    @Autowired\n    private RoleService roleService;\n    /**\n     * 保存用户\n     */\n    @PostMapping("advice")\n    public RoleInfo getAdviceList(String docId){\n        return roleService.FindRoleBydocId(docId);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 2. 接口参数（JApiDocs 会通过 @param 来寻找接口参数和进一步解析参数的内容）\n\n注：注释一定要放在@注解的上面，否则参数会不显示\n\n# （1）格式：接口参数 @param 字段 字段解释\n\n例：\n\n/**\n     * @description 保存用户\n     * @param docId  医生id\n    */\n@PostMapping("advice")\npublic RoleInfo getAdviceList(String docId){\n    return roleService.FindRoleBydocId(docId);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# （2）在相应的bean对象里添加注释\n\n例：\n\npublic class RemindInfo implements Serializable {\n  private long remindId;  //提醒id\n  private String remindContent;  //提醒信息\n  private java.sql.Timestamp remindTime;  //提醒时间\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 3. 返回对象\n\n# （1）@RestController 或 @ResponseBody\n\n返回json数据类型 例：\n\n/**\n * 用户接口\n */\n@RequestMapping("/test")\n@RestController\npublic class testInterface {\n\n    @Autowired\n    private RoleService roleService;\n    /**\n     * 保存用户\n     * @param docId  医生id\n     */\n    @ApiDoc\n    @PostMapping("advice")\n    public RoleInfo getAdviceList(String docId){\n        return roleService.FindRoleBydocId(docId);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# （2）请求类型\n\n@PostMapping("advice")/@GetMapping("advice")\n    public RoleInfo getAdviceList(String docId){\n        return roleService.FindRoleBydocId(docId);\n    }\n\n\n1\n2\n3\n4\n\n\n\n# 4、高级配置\n\n# （1）@ApiDoc\n\n# a.实现\n\nJApiDocs 默认只导出声明了@ApiDoc的接口，我们前面通过设置config.setAutoGenerate(Boolean.TRUE) 来解除了这个限制。如果你不希望把所有的接口都导出，你可以把autoGenerate设置关闭，在相关Controller类或者接口方法上通过添加@ApiDoc来确定哪些接口需要导出。\n\n# b.其他设置\n\nresult: 这个可以直接声明返回的对象类型，如果你声明了，将会覆盖SpringBoot的返回对象 stringResult：返回字符串，在返回结果比较简单，而不想创建一个专门的返回类，则可以考虑使用这个属性。 url: 请求URL，扩展字段，用于支持非SpringBoot项目 method: 请求方法，扩展字段，用于支持非SpringBoot项目\n\n例：\n\n@ApiDoc(result = AdminVO.class, url = "/api/v1/admin/login2", method = "post")\nstringResult 实例，在文档中将会自动格式化json字符串：\n@ApiDoc(stringResult = "{code: 0, data: \'success\'}")\n@GetMapping(value = "custom-json")\npublic Map customJsonResult(){}\n\n\n1\n2\n3\n4\n5\n\n\n\n# (2)@Ignore (忽略Controller，接口，字段)\n\n例：忽略Controller\n\n@Ignore\npublic class UserController { \n\n}\n\n\n1\n2\n3\n4\n\n\n\n# 三、配置参数\n\n在任意一个main入口执行下面的代码：\n\nDocsConfig config = new DocsConfig();\nconfig.setProjectPath("your springboot project path"); // 项目根目录\nconfig.setProjectName("ProjectName"); // 项目名称\nconfig.setApiVersion("V1.0");       // 声明该API的版本\nconfig.setDocsPath("your api docs path"); // 生成API 文档所在目录\nconfig.setAutoGenerate(Boolean.TRUE);  // 配置自动生成\nDocs.buildHtmlDocs(config); // 执行生成文档\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 四、导出格式\n\n\n# （1）Markdown\n\n  config.addPlugin(new MarkdownDocPlugin());\n\n\n1\n\n\n\n# （2）导出 pdf 或者 word\n\n可以通过 pandoc 把 markdown 格式转成 pdf 或者 word 格式。\n\n\n# 五、自定义代码模板\n\nJApiDocs 除了支持文档导出，目前也支持生成了 Android 和 iOS 的返回对象代码，对应 Java 和 Object-C 语言， 如果你想修改代码模板，可以通过以下的方法：\n\n\n# （1）定义代码模板\n\n把源码中library项目resources目录下的代码模板拷贝一份，其中，IOS_表示 Object-C 代码模板，JAVA_开头表示 Java代码， 模板中类似${CLASS_NAME}的符号是替换变量，具体含义你可以结合生成的代码进行理解，然后按照你想要的代码模板进行修改即可。\n\n\n# （2）选择新的模板\n\n通过DocsConfig配置模板路径替换成新的模板：\n\ndocsConfig.setResourcePath("模板路径");\n\n\n1\n\n\n\n# 六、添加更多功能\n\nJApiDocs 提供了插件接口，你可以通过插件接口来实现更多丰富的功能，下面介绍如何添加插件：\n\n\n# （1）实现 IPluginSupport 接口\n\npublic class CustomPlugin implements IPluginSupport{\n      @Override\n      public void execute(List<ControllerNode> controllerNodeList){\n         // 实现你自己的功能需求\n      }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （2）添加插件\n\n config.addPlugin(new CustomPlugin());\n\n\n1\n\n\n\n# 七、问题的解决\n\n\n# 1、如何排查错误？\n\n关闭自动生成config.setAutoGenerate(Boolean.FALSE)，使用@ApiDoc 来一个个接口导出排查问题。\n\n\n# 2、多模块找不到相关类源码？\n\n如果源码路径没有全部识别出来，可以通过config.addJavaSrcPath来添加模块的源码路径，注意要添加到src/main/java这一级。\n\n\n# 八、自定义注释模板\n\n这是我针对JApiDocs，对我的模板进行了一定的调整，以方便对JApiDocs的使用，大家可以参考一下。\n\n\n# （1）Live Templates\n\n  /**\n * TODO\n * @create_by: 作者名字\n * @create_time: $date$ $time$\n * $params$\n * @return $return$\n */\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# （2）File Header\n\n/**\n * @Author 作者名字\n * @Date ${DATE} ${TIME}\n * @description  ${description}\n * @Version 1.0\n */\n\n\n1\n2\n3\n4\n5\n6\n\n\n具体如何实现自定义方法注释，类注释。可以参考下面的文章：\n\n> https://blog.csdn.net/qq_38675373/article/details/105886922\n\nJApiDocs官方文档地址：\n\n> https://japidocs.agilestudio.cn/#/',normalizedContent:'# japidocs教程\n\n一、maven依赖\n\n\x3c!--  japidocs  --\x3e\n<dependency>\n   <groupid>io.github.yedaxia</groupid>\n   <artifactid>japidocs</artifactid>\n   <version>1.4.3</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 二、代码规范\n\n\n# 1. 分组名称 @description\n\n注：官方文档中注明分组名称@description，但是实际应用中不需要加入注解，像下例所示，直接写注释即可。（类上写不写都行，方法上如果加上@description反而不显示） 例：\n\n/**\n * 用户接口\n */\n/*注意：这里不能空行，否则注释名无法显示*/\n@requestmapping("test")\n@controller\npublic class testinterface {\n\n    @autowired\n    private roleservice roleservice;\n    /**\n     * 保存用户\n     */\n    @postmapping("advice")\n    public roleinfo getadvicelist(string docid){\n        return roleservice.findrolebydocid(docid);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 2. 接口参数（japidocs 会通过 @param 来寻找接口参数和进一步解析参数的内容）\n\n注：注释一定要放在@注解的上面，否则参数会不显示\n\n# （1）格式：接口参数 @param 字段 字段解释\n\n例：\n\n/**\n     * @description 保存用户\n     * @param docid  医生id\n    */\n@postmapping("advice")\npublic roleinfo getadvicelist(string docid){\n    return roleservice.findrolebydocid(docid);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# （2）在相应的bean对象里添加注释\n\n例：\n\npublic class remindinfo implements serializable {\n  private long remindid;  //提醒id\n  private string remindcontent;  //提醒信息\n  private java.sql.timestamp remindtime;  //提醒时间\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 3. 返回对象\n\n# （1）@restcontroller 或 @responsebody\n\n返回json数据类型 例：\n\n/**\n * 用户接口\n */\n@requestmapping("/test")\n@restcontroller\npublic class testinterface {\n\n    @autowired\n    private roleservice roleservice;\n    /**\n     * 保存用户\n     * @param docid  医生id\n     */\n    @apidoc\n    @postmapping("advice")\n    public roleinfo getadvicelist(string docid){\n        return roleservice.findrolebydocid(docid);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# （2）请求类型\n\n@postmapping("advice")/@getmapping("advice")\n    public roleinfo getadvicelist(string docid){\n        return roleservice.findrolebydocid(docid);\n    }\n\n\n1\n2\n3\n4\n\n\n\n# 4、高级配置\n\n# （1）@apidoc\n\n# a.实现\n\njapidocs 默认只导出声明了@apidoc的接口，我们前面通过设置config.setautogenerate(boolean.true) 来解除了这个限制。如果你不希望把所有的接口都导出，你可以把autogenerate设置关闭，在相关controller类或者接口方法上通过添加@apidoc来确定哪些接口需要导出。\n\n# b.其他设置\n\nresult: 这个可以直接声明返回的对象类型，如果你声明了，将会覆盖springboot的返回对象 stringresult：返回字符串，在返回结果比较简单，而不想创建一个专门的返回类，则可以考虑使用这个属性。 url: 请求url，扩展字段，用于支持非springboot项目 method: 请求方法，扩展字段，用于支持非springboot项目\n\n例：\n\n@apidoc(result = adminvo.class, url = "/api/v1/admin/login2", method = "post")\nstringresult 实例，在文档中将会自动格式化json字符串：\n@apidoc(stringresult = "{code: 0, data: \'success\'}")\n@getmapping(value = "custom-json")\npublic map customjsonresult(){}\n\n\n1\n2\n3\n4\n5\n\n\n\n# (2)@ignore (忽略controller，接口，字段)\n\n例：忽略controller\n\n@ignore\npublic class usercontroller { \n\n}\n\n\n1\n2\n3\n4\n\n\n\n# 三、配置参数\n\n在任意一个main入口执行下面的代码：\n\ndocsconfig config = new docsconfig();\nconfig.setprojectpath("your springboot project path"); // 项目根目录\nconfig.setprojectname("projectname"); // 项目名称\nconfig.setapiversion("v1.0");       // 声明该api的版本\nconfig.setdocspath("your api docs path"); // 生成api 文档所在目录\nconfig.setautogenerate(boolean.true);  // 配置自动生成\ndocs.buildhtmldocs(config); // 执行生成文档\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 四、导出格式\n\n\n# （1）markdown\n\n  config.addplugin(new markdowndocplugin());\n\n\n1\n\n\n\n# （2）导出 pdf 或者 word\n\n可以通过 pandoc 把 markdown 格式转成 pdf 或者 word 格式。\n\n\n# 五、自定义代码模板\n\njapidocs 除了支持文档导出，目前也支持生成了 android 和 ios 的返回对象代码，对应 java 和 object-c 语言， 如果你想修改代码模板，可以通过以下的方法：\n\n\n# （1）定义代码模板\n\n把源码中library项目resources目录下的代码模板拷贝一份，其中，ios_表示 object-c 代码模板，java_开头表示 java代码， 模板中类似${class_name}的符号是替换变量，具体含义你可以结合生成的代码进行理解，然后按照你想要的代码模板进行修改即可。\n\n\n# （2）选择新的模板\n\n通过docsconfig配置模板路径替换成新的模板：\n\ndocsconfig.setresourcepath("模板路径");\n\n\n1\n\n\n\n# 六、添加更多功能\n\njapidocs 提供了插件接口，你可以通过插件接口来实现更多丰富的功能，下面介绍如何添加插件：\n\n\n# （1）实现 ipluginsupport 接口\n\npublic class customplugin implements ipluginsupport{\n      @override\n      public void execute(list<controllernode> controllernodelist){\n         // 实现你自己的功能需求\n      }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （2）添加插件\n\n config.addplugin(new customplugin());\n\n\n1\n\n\n\n# 七、问题的解决\n\n\n# 1、如何排查错误？\n\n关闭自动生成config.setautogenerate(boolean.false)，使用@apidoc 来一个个接口导出排查问题。\n\n\n# 2、多模块找不到相关类源码？\n\n如果源码路径没有全部识别出来，可以通过config.addjavasrcpath来添加模块的源码路径，注意要添加到src/main/java这一级。\n\n\n# 八、自定义注释模板\n\n这是我针对japidocs，对我的模板进行了一定的调整，以方便对japidocs的使用，大家可以参考一下。\n\n\n# （1）live templates\n\n  /**\n * todo\n * @create_by: 作者名字\n * @create_time: $date$ $time$\n * $params$\n * @return $return$\n */\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# （2）file header\n\n/**\n * @author 作者名字\n * @date ${date} ${time}\n * @description  ${description}\n * @version 1.0\n */\n\n\n1\n2\n3\n4\n5\n6\n\n\n具体如何实现自定义方法注释，类注释。可以参考下面的文章：\n\n> https://blog.csdn.net/qq_38675373/article/details/105886922\n\njapidocs官方文档地址：\n\n> https://japidocs.agilestudio.cn/#/',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"March 6, 2022 13:53",updateTimeStamp:1646574803e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Java",frontmatter:{author:"xlc520",title:"Java",description:"Java",time:null,category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/",relativePath:"Java/README.md",key:"v-f51f5474",path:"/Java/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1644739094e3,updateTime:"February 13, 2022 12:45",updateTimeStamp:1644756312e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Spring 面试63问",frontmatter:{author:"xlc520",title:"Spring 面试63问",description:"Spring 面试63问",time:"2022-02-13T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/Spring%20%E9%9D%A2%E8%AF%9563%E9%97%AE.html",relativePath:"Java/Spring 面试63问.md",key:"v-42a969b4",path:"/Java/Spring%20%E9%9D%A2%E8%AF%9563%E9%97%AE/",headers:[{level:3,title:"Spring 特点",slug:"spring-特点",normalizedTitle:"spring 特点",charIndex:287},{level:3,title:"Spring 框架优缺点",slug:"spring-框架优缺点",normalizedTitle:"spring 框架优缺点",charIndex:755},{level:3,title:"Spring 框架中都用到了哪些设计模式",slug:"spring-框架中都用到了哪些设计模式",normalizedTitle:"spring 框架中都用到了哪些设计模式",charIndex:1248},{level:3,title:"Spring核心组件",slug:"spring核心组件",normalizedTitle:"spring核心组件",charIndex:1678},{level:3,title:"Spring 控制反转（IOC）",slug:"spring-控制反转-ioc",normalizedTitle:"spring 控制反转（ioc）",charIndex:2451},{level:3,title:"IOC 容器实现",slug:"ioc-容器实现",normalizedTitle:"ioc 容器实现",charIndex:2951},{level:3,title:"ApplicationContext 面向开发应用",slug:"applicationcontext-面向开发应用",normalizedTitle:"applicationcontext 面向开发应用",charIndex:4408},{level:3,title:"BeanFactory 和 ApplicationContext有什么区别？",slug:"beanfactory-和-applicationcontext有什么区别",normalizedTitle:"beanfactory 和 applicationcontext有什么区别？",charIndex:5419},{level:3,title:"Spring的依赖注入",slug:"spring的依赖注入",normalizedTitle:"spring的依赖注入",charIndex:6897},{level:3,title:"构造器依赖注入和 Setter方法注入的区别",slug:"构造器依赖注入和-setter方法注入的区别",normalizedTitle:"构造器依赖注入和 setter方法注入的区别",charIndex:7860},{level:3,title:"WebApplication 体系架构",slug:"webapplication-体系架构",normalizedTitle:"webapplication 体系架构",charIndex:7977},{level:3,title:"Spring Bean 定义",slug:"spring-bean-定义",normalizedTitle:"spring bean 定义",charIndex:8213},{level:3,title:"Spring Bean 作用域",slug:"spring-bean-作用域",normalizedTitle:"spring bean 作用域",charIndex:8372},{level:3,title:"Spring处理线程并发问题",slug:"spring处理线程并发问题",normalizedTitle:"spring处理线程并发问题",charIndex:9278},{level:3,title:"Spring Bean 生命周期",slug:"spring-bean-生命周期",normalizedTitle:"spring bean 生命周期",charIndex:9708},{level:3,title:"bean生命周期方法",slug:"bean生命周期方法",normalizedTitle:"bean生命周期方法",charIndex:11220},{level:3,title:"什么是Spring的内部bean？什么是Spring inner beans？",slug:"什么是spring的内部bean-什么是spring-inner-beans",normalizedTitle:"什么是spring的内部bean？什么是spring inner beans？",charIndex:11452},{level:3,title:"5 种不同方式的自动装配",slug:"_5-种不同方式的自动装配",normalizedTitle:"5 种不同方式的自动装配",charIndex:17297},{level:3,title:"Spring 中注入一个 Java Collection",slug:"spring-中注入一个-java-collection",normalizedTitle:"spring 中注入一个 java collection",charIndex:17846},{level:3,title:"使用@Autowired注解自动装配的过程",slug:"使用-autowired注解自动装配的过程",normalizedTitle:"使用@autowired注解自动装配的过程",charIndex:20702},{level:2,title:"Spring AOP",slug:"spring-aop",normalizedTitle:"spring aop",charIndex:21119},{level:3,title:"AOP原理",slug:"aop原理",normalizedTitle:"aop原理",charIndex:21143},{level:3,title:"AOP 核心概念",slug:"aop-核心概念",normalizedTitle:"aop 核心概念",charIndex:21763},{level:3,title:"Spring 中的代理",slug:"spring-中的代理",normalizedTitle:"spring 中的代理",charIndex:22399},{level:3,title:"AOP 实现方式",slug:"aop-实现方式",normalizedTitle:"aop 实现方式",charIndex:22524},{level:3,title:"AOP 两种代理方式",slug:"aop-两种代理方式",normalizedTitle:"aop 两种代理方式",charIndex:22822},{level:3,title:"JDK 动态接口代理",slug:"jdk-动态接口代理",normalizedTitle:"jdk 动态接口代理",charIndex:22996},{level:3,title:"CGLib 动态代理",slug:"cglib-动态代理",normalizedTitle:"cglib 动态代理",charIndex:23234},{level:3,title:"Spring在运行时通知对象",slug:"spring在运行时通知对象",normalizedTitle:"spring在运行时通知对象",charIndex:25438},{level:3,title:"Spring只支持方法级别的连接点",slug:"spring只支持方法级别的连接点",normalizedTitle:"spring只支持方法级别的连接点",charIndex:25763},{level:3,title:"Spring通知类型",slug:"spring通知类型",normalizedTitle:"spring通知类型",charIndex:26150},{level:2,title:"Spring MVC",slug:"spring-mvc",normalizedTitle:"spring mvc",charIndex:3721},{level:3,title:"Spring MVC 原理",slug:"spring-mvc-原理",normalizedTitle:"spring mvc 原理",charIndex:26890},{level:2,title:"Spring DATA",slug:"spring-data",normalizedTitle:"spring data",charIndex:27605},{level:3,title:"Spring ORM理解",slug:"spring-orm理解",normalizedTitle:"spring orm理解",charIndex:27630},{level:3,title:"Spring DAO 的支持",slug:"spring-dao-的支持",normalizedTitle:"spring dao 的支持",charIndex:27956},{level:3,title:"Spring JDBC API",slug:"spring-jdbc-api",normalizedTitle:"spring jdbc api",charIndex:28104},{level:3,title:"JdbcTemplate是什么",slug:"jdbctemplate是什么",normalizedTitle:"jdbctemplate是什么",charIndex:28253},{level:3,title:"使用Spring通过什么方式访问Hibernate？",slug:"使用spring通过什么方式访问hibernate",normalizedTitle:"使用spring通过什么方式访问hibernate？",charIndex:28368},{level:3,title:"Spring 支持的 ORM",slug:"spring-支持的-orm",normalizedTitle:"spring 支持的 orm",charIndex:28509},{level:3,title:"Spring 支持的事务管理类型",slug:"spring-支持的事务管理类型",normalizedTitle:"spring 支持的事务管理类型",charIndex:28897},{level:3,title:"Spring 框架的事务管理有哪些优点？",slug:"spring-框架的事务管理有哪些优点",normalizedTitle:"spring 框架的事务管理有哪些优点？",charIndex:29060},{level:3,title:"你更倾向用那种事务管理类型？",slug:"你更倾向用那种事务管理类型",normalizedTitle:"你更倾向用那种事务管理类型？",charIndex:29241},{level:3,title:"Spring常用注解",slug:"spring常用注解",normalizedTitle:"spring常用注解",charIndex:29392},{level:3,title:"@Bean的属性支持",slug:"bean的属性支持",normalizedTitle:"@bean的属性支持",charIndex:30912},{level:3,title:"@Value注解",slug:"value注解",normalizedTitle:"@value注解",charIndex:31429},{level:3,title:"环境切换",slug:"环境切换",normalizedTitle:"环境切换",charIndex:31720},{level:3,title:"异步相关",slug:"异步相关",normalizedTitle:"异步相关",charIndex:31912},{level:3,title:"定时任务相关",slug:"定时任务相关",normalizedTitle:"定时任务相关",charIndex:32077},{level:3,title:"@Enable 注解说明",slug:"enable-注解说明",normalizedTitle:"@enable 注解说明",charIndex:32218},{level:3,title:"测试相关注解",slug:"测试相关注解",normalizedTitle:"测试相关注解",charIndex:32635},{level:3,title:"SpringMVC部分",slug:"springmvc部分",normalizedTitle:"springmvc部分",charIndex:32770}],readingTime:{minutes:37.76,words:11327},headersStr:"Spring 特点 Spring 框架优缺点 Spring 框架中都用到了哪些设计模式 Spring核心组件 Spring 控制反转（IOC） IOC 容器实现 ApplicationContext 面向开发应用 BeanFactory 和 ApplicationContext有什么区别？ Spring的依赖注入 构造器依赖注入和 Setter方法注入的区别 WebApplication 体系架构 Spring Bean 定义 Spring Bean 作用域 Spring处理线程并发问题 Spring Bean 生命周期 bean生命周期方法 什么是Spring的内部bean？什么是Spring inner beans？ 5 种不同方式的自动装配 Spring 中注入一个 Java Collection 使用@Autowired注解自动装配的过程 Spring AOP AOP原理 AOP 核心概念 Spring 中的代理 AOP 实现方式 AOP 两种代理方式 JDK 动态接口代理 CGLib 动态代理 Spring在运行时通知对象 Spring只支持方法级别的连接点 Spring通知类型 Spring MVC Spring MVC 原理 Spring DATA Spring ORM理解 Spring DAO 的支持 Spring JDBC API JdbcTemplate是什么 使用Spring通过什么方式访问Hibernate？ Spring 支持的 ORM Spring 支持的事务管理类型 Spring 框架的事务管理有哪些优点？ 你更倾向用那种事务管理类型？ Spring常用注解 @Bean的属性支持 @Value注解 环境切换 异步相关 定时任务相关 @Enable 注解说明 测试相关注解 SpringMVC部分",content:'# Spring 面试63问\n\n * Sping原理\n   \n   Spring是一个轻量级Java开发框架，最早有Rod Johnson创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的JavaSE/JavaEE full-stack（一站式）轻量级开源框架，为开发Java应用程序提供全面的基础架构支持。Spring负责基础架构，因此Java开发者可以专注于应用程序的开发。\n   \n   Spring是一个全面的、企业应用开发一站式的解决方案，贯穿表现层、业务层、持久层。但是它仍然可以和其他的框架无缝整合。\n   \n   \n   # Spring 特点\n   \n   轻量级： 组件大小与开销两方面而言Spring都是轻量的。完整的Spring框架可以在一个大小只有1M多的JAR文件中发布，并且Spring所需的处理开销也是微不足道的。此外，Spring是非侵入式，典型案例，Spring应用中的对象不依赖于Spring特定的类\n   \n   控制反转： Spring通过控制反转（IOC）技术实现解耦。一个对象依赖的其他对象会通过被动的方式传递进来，而不需要对象自己创建或者查找依赖。\n   \n   面向切面： 支持切面（AOP）编程，并且吧应用业务逻辑和系统服务区分开。\n   \n   容器： Spring包含并管理应用对象的配置和生命周期，在这个意义上它是一种容器。可以配置每个bean如何被创建、销毁，bean的作用范围是单例还是每次都生成一个新的实例，以及他们是如何相互关联。\n   \n   框架集合： 将简单的组件配置，组合成为复杂的框架；应用对象被申明式组合；提供许多基础功能（事务管理、持久化框架继承），提供应用逻辑开发接口\n   \n   \n   # Spring 框架优缺点\n   \n   # 优点\n   \n   * 方便解耦，简化开发：Spring就是一个大工厂，可以将所有对象的创建和依赖关系的维护，交给Spring管理。\n   * AOP编程的支持：Spring提供面向切面编程，可以方便的实现对程序进行权限拦截、运行监控等功能。\n   * 声明式事务的支持：只需要通过配置就可以完成对事务的管理，而无需手动编程。\n   * 方便程序的测试：Spring对Junit4支持，可以通过注解方便的测试Spring程序。\n   * 方便集成各种优秀框架：Spring不排斥各种优秀的开源框架，其内部提供了对各种优秀框架的直接支持（如：Struts、Hibernate、MyBatis等）。\n   * 降低JavaEE API的使用难度：Spring对JavaEE开发中非常难用的一些API（JDBC、JavaMail、远程调用等），都提供了封装，使这些API应用难度大大降低。\n   \n   # 缺点\n   \n   * Spring依赖反射，反射影响性能\n   * 使用门槛升高，入门Spring需要较长时间\n   \n   \n   # Spring 框架中都用到了哪些设计模式\n   \n   Spring 框架中使用到了大量的设计模式，下面列举了比较有代表性的：\n   \n   * 代理模式—在 AOP 和 remoting 中被用的比较多。\n   * 单例模式—在 spring 配置文件中定义的 bean 默认为单例模式。\n   * 模板方法—用来解决代码重复的问题。比如. RestTemplate, JmsTemplate, JpaTempl ate。\n   * 前端控制器—Spring 提供了 DispatcherServlet 来对请求进行分发。\n   * 视图帮助(View Helper )—Spring 提供了一系列的 JSP 标签，高效宏来辅助将分散的代码整合在视图里。\n   * 依赖注入—贯穿于 BeanFactory / ApplicationContext 接口的核心理念。\n   * 工厂模式—BeanFactory 用来创建对象的实例\n   \n   \n   # Spring核心组件\n   \n   Spring 总共大约有 20 个模块， 由 1300 多个不同的文件构成。而这些组件被分别整合在核心容器（Core Container） 、 AOP（Aspect Oriented Programming）和设备支持（Instrmentation） 、数据访问与集成（Data Access/Integeration） 、 Web、 消息（Messaging） 、 Test等 6 个模块中。以下是 Spring 5 的模块结构图：\n   \n   \n   \n   * spring core：提供了框架的基本组成部分，包括控制反转（Inversion of Control，IOC）和依赖注入（Dependency Injection，DI）功能。\n   * spring beans：提供了BeanFactory，是工厂模式的一个经典实现，Spring将管理对象称为Bean。\n   * spring context：构建于 core 封装包基础上的 context 封装包，提供了一种框架式的对象访问方法。\n   * spring jdbc：提供了一个JDBC的抽象层，消除了烦琐的JDBC编码和数据库厂商特有的错误代码解析， 用于简化JDBC。\n   * spring aop：提供了面向切面的编程实现，让你可以自定义拦截器、切点等。\n   * spring Web：提供了针对 Web 开发的集成特性，例如文件上传，利用 servlet listeners 进行 ioc 容器初始化和针对 Web 的 ApplicationContext。\n   * spring test：主要为测试提供支持的，支持使用JUnit或TestNG对Spring组件进行单元测试和集成测试。\n   \n   \n   # Spring 控制反转（IOC）\n   \n   # 控制反转（IOC）概念\n   \n   控制反转即IOC (Inversion of Control)，它把传统上由程序代码直接操控的对象的调用权交给容器，通过容器来实现对象组件的装配和管理。\n   \n   Spring 通过一个配置文件描述 Bean 及 Bean 之间的依赖关系，利用 Java 语言的反射功能(依赖注入DI)实例化 Bean 并建立 Bean 之间的依赖关系。Spring 的 IoC 容器在完成这些底层工作的基础上，还提供 了 Bean 实例缓存、生命周期管理、 Bean 实例代理、事件发布、资源装载等高级服务。\n   \n   # Spring 容器高层视图\n   \n   Spring 启动时读取应用程序提供的 Bean 配置信息，并在 Spring 容器中生成一份相应的 Bean 配\n   \n   置注册表，然后根据这张注册表实例化 Bean，装配好 Bean 之间的依赖关系，为上层应用提供准\n   \n   备就绪的运行环境。其中 Bean 缓存池为 HashMap 实现\n   \n   \n   \n   \n   # IOC 容器实现\n   \n   # BeanFactory-框架基础设施\n   \n   BeanFactory 是 Spring 框架的基础设施，面向 Spring 本身；\n   \n   ApplicationContext 面向使用Spring 框架的开发者，几乎所有的应用场合我们都直接使用 ApplicationContext 而非底层的 BeanFactory。\n   \n   \n   \n   * BeanDefinitionRegistry 注册表：Spring 配置文件中每一个节点元素在 Spring 容器里都通过一个 BeanDefinition 对象表示，它描述了 Bean 的配置信息。而 BeanDefinitionRegistry 接口提供了向容器手工注册BeanDefinition 对象的方法。\n   * BeanFactory 顶层接口：位于类结构树的顶端 ，它最主要的方法就是 getBean(String beanName)，该方法从容器中返回特定名称的 Bean，BeanFactory 的功能通过其他的接口得到不断扩展：\n   * ListableBeanFactory：该接口定义了访问容器中 Bean 基本信息的若干方法，如查看 Bean 的个数、获取某一类型Bean 的配置名、查看容器中是否包括某一 Bean 等方法；\n   * HierarchicalBeanFactory 父子级：父子级联 IoC 容器的接口，子容器可以通过接口方法访问父容器；通过HierarchicalBeanFactory 接口， Spring 的 IoC 容器可以建立父子层级关联的容器体系，子容器可以访问父容器中的 Bean，但父容器不能访问子容器的 Bean。Spring 使用父子容器实现了很多功能，比如在 Spring MVC 中，展现层 Bean 位于一个子容器中，而业务层和持久层的 Bean 位于父容器中。这样，展现层 Bean 就可以引用业务层和持久层的 Bean，而业务层和持久层的 Bean 则看不到展现层的 Bean。\n   * ConfigurableBeanFactory：是一个重要的接口，增强了 IoC 容器的可定制性，它定义了设置类装载器、属性编辑器、容器初始化后置处理器等方法；\n   * AutowireCapableBeanFactory 自动装配：定义了将容器中的 Bean 按某种规则（如按名字匹配、按类型匹配等）进行自动装配的方法；\n   * SingletonBeanRegistry 运行期间注册单例 Bean：定义了允许在运行期间向容器注册单实例 Bean 的方法；对于单实例（ singleton）的 Bean 来说，BeanFactory 会缓存 Bean 实例，所以第二次使用 getBean() 获取 Bean 时将直接从IoC 容器的缓存中获取 Bean 实例。Spring 在 DefaultSingletonBeanRegistry 类中提供了一个用于缓存单实例 Bean 的缓存器，它是一个用 HashMap 实现的缓存器，单实例的 Bean 以beanName 为键保存在这个 HashMap 中。\n   * 依赖日志框架：在初始化 BeanFactory 时，必须为其提供一种日志框架，比如使用 Log4J， 即在类路径下提供 Log4J 配置文件，这样启动 Spring 容器才不会报错。\n   \n   \n   # ApplicationContext 面向开发应用\n   \n   ApplicationContext 由 BeanFactory 派生而来，提供了更多面向实际应用的功能。\n   \n   ApplicationContext 继承了 HierarchicalBeanFactory 和 ListableBeanFactory 接口，在此基础\n   \n   上，还通过多个其他的接口扩展了 BeanFactory 的功能：\n   \n   \n   \n   * ClassPathXmlApplicationContext：默认从类路径加载配置文件\n   * FileSystemXmlApplicationContext：默认从文件系统中装载配置文件\n   * ApplicationEventPublisher：让容器拥有发布应用上下文事件的功能，包括容器启动事件、关闭事件等。\n   * MessageSource：为应用提供 i18n 国际化消息访问的功能；\n   * ResourcePatternResolver ：所有 ApplicationContext 实现类都实现了类似于\n   * PathMatchingResourcePatternResolver：通过带前缀的 Ant 风格的资源文件路径装载 Spring 的配置文件。\n   * LifeCycle：该接口是 Spring 2.0 加入的，该接口提供了 start()和 stop()两个方法，主要用于控制异步处理过程。在具体使用时，该接口同时被 ApplicationContext 实现及具体Bean 实现， ApplicationContext 会将 start/stop 的信息传递给容器中所有实现了该接口的 Bean，以达到管理和控制 JMX、任务调度等目的。\n   * ConfigurableApplicationContext ：扩展于 ApplicationContext，它新增加了两个主要的方法：refresh()和 close()，让 ApplicationContext 具有启动、刷新和关闭应用上下文的能力。在应用上下文关闭的情况下调用 refresh()即可启动应用上下文，在已经启动的状态下，调用 refresh()则清除缓存并重新装载配置信息，而调用 close()则可关闭应用上下文。\n   \n   \n   # BeanFactory 和 ApplicationContext有什么区别？\n   \n   BeanFactory和ApplicationContext是Spring的两大核心接口，都可以当做Spring的容器。其中ApplicationContext是BeanFactory的子接口。\n   \n   # 依赖关系\n   \n   BeanFactory：是Spring里面最底层的接口，包含了各种Bean的定义，读取bean配置文档，管理bean的加载、实例化，控制bean的生命周期，维护bean之间的依赖关系。\n   \n   ApplicationContext：接口作为BeanFactory的派生，除了提供BeanFactory所具有的功能外，还提供了更完整的框架功能：\n   \n   * 继承MessageSource，因此支持国际化。\n   * 统一的资源文件访问方式。\n   * 提供在监听器中注册bean的事件。\n   * 同时加载多个配置文件。\n   * 载入多个（有继承关系）上下文 ，使得每一个上下文都专注于一个特定的层次，比如应用的web层。\n   \n   # 加载方式\n   \n   BeanFactroy：采用的是延迟加载形式来注入Bean的，即只有在使用到某个Bean时(调getBean())，才对该Bean进行加载实例化。这样，我们就不能发现一些存在的Spring的配置问题。如果Bean的某一个属性没有注入，BeanFacotry加载后，直至第一次使用调用getBean方法才会抛出异常。\n   \n   ApplicationContext：它是在容器启动时，一次性创建了所有的Bean。这样，在容器启动时，我们就可以发现Spring中存在的配置错误，这样有利于检查所依赖属性是否注入。ApplicationContext启动后预载入所有的单实例Bean，通过预载入单实例bean ,确保当你需要的时候，你就不用等待，因为它们已经创建好了。\n   \n   相对于基本的BeanFactory，ApplicationContext 唯一的不足是占用内存空间。当应用程序配置Bean较多时，程序启动较慢。\n   \n   # 创建方式\n   \n   BeanFactory通常以编程的方式被创建，ApplicationContext还能以声明的方式创建，如使用ContextLoader。\n   \n   # 注册方式\n   \n   BeanFactory和ApplicationContext都支持BeanPostProcessor、BeanFactoryPostProcessor的使用，但两者之间的区别是：BeanFactory需要手动注册，而ApplicationContext则是自动注册。\n   \n   # ApplicationContext通常的实现\n   \n   * FileSystemXmlApplicationContext ：此容器从一个XML文件中加载beans的定义，XML Bean 配置文件的全路径名必须提供给它的构造函数。\n   * ClassPathXmlApplicationContext：此容器也从一个XML文件中加载beans的定义，这里，你需要正确设置classpath因为这个容器将在classpath里找bean配置。\n   * WebXmlApplicationContext：此容器加载一个XML文件，此文件定义了一个WEB应用的所有bean。\n   \n   \n   # Spring的依赖注入\n   \n   其主要实现方式有两种：依赖注入和依赖查找。\n   \n   依赖注入： 相对于IoC而言，依赖注入(DI)更加准确地描述了IoC的设计理念。所谓依赖注入（Dependency Injection），即组件之间的依赖关系由容器在应用系统运行期来决定，也就是由容器动态地将某种依赖关系的目标对象实例注入到应用系统中的各个关联的组件之中。组件不做定位查询，只提供普通的Java方法让容器去决定依赖关系。\n   \n   # 依赖注入的基本原则\n   \n   应用组件不应该负责查找资源或者其他依赖的协作对象。配置对象的工作应该由IoC容器负责，“查找资源”的逻辑应该从应用组件的代码中抽取出来，交给IoC容器负责。容器全权负责组件的装配，它会把符合依赖关系的对象通过属性（JavaBean中的setter）或者是构造器传递给需要的对象。\n   \n   依赖注入优势\n   \n   依赖注入之所以更流行是因为它是一种更可取的方式：让容器全权负责依赖查询，受管组件只需要暴露JavaBean的setter方法或者带参数的构造器或者接口，使容器可以在初始化时组装对象的依赖关系。其与依赖查找方式相比，主要优势为：\n   \n   * 查找定位操作与应用代码完全无关\n   * 不依赖于容器的API，可以很容易地在任何容器以外使用应用对象\n   * 不需要特殊的接口，绝大多数对象可以做到完全不必依赖容器\n   \n   依赖注入实现方式\n   \n   依赖注入是时下最流行的IoC实现方式，依赖注入分为接口注入（Interface Injection），Setter方法注入（Setter Injection）和构造器注入（Constructor Injection）三种方式。其中接口注入由于在灵活性和易用性比较差，现在从Spring4开始已被废弃。\n   \n   * 构造器依赖注入：构造器依赖注入通过容器触发一个类的构造器来实现的，该类有一系列参数，每个参数代表一个对其他类的依赖\n   * Setter方法注入：Setter方法注入是容器通过调用无参构造器或无参static工厂 方法实例化bean之后，调用该bean的setter方法，即实现了基于setter的依赖注入\n   \n   \n   # 构造器依赖注入和 Setter方法注入的区别\n   \n   \n   \n   两种依赖方式都可以使用，构造器注入和Setter方法注入。最好的解决方案是用构造器参数实现强制依赖，setter方法实现可选依赖。\n   \n   \n   # WebApplication 体系架构\n   \n   WebApplicationContext 是专门为 Web 应用准备的，它允许从相对于 Web 根目录的路径中装载配置文件完成初始化工作。从 WebApplicationContext 中可以获得ServletContext 的引用，整个 Web 应用上下文对象将作为属性放置到 ServletContext 中，以便 Web 应用环境可以访问 Spring 应用上下文。\n   \n   \n   \n   \n   # Spring Bean 定义\n   \n   一个Spring Bean 的定义包含容器必知的所有配置元数据，包括如何创建一个bean，它的生命周期详情及它的依赖。\n   \n   * Spring元数据配置方式\n   * XML配置文件\n   * 基于注解的配置\n   * 基于java的配置\n   \n   \n   # Spring Bean 作用域\n   \n   Spring 3 中为 Bean 定义了 5 中作用域，分别为 singleton（单例）、prototype（原型）、request、session 和 global session，5 种作用域说明如下：\n   \n   * singleton：单例模式（多线程下不安全）。Spring IoC 容器中只会存在一个共享的 Bean 实例，无论有多少个Bean 引用它，始终指向同一对象。该模式在多线程下是不安全的。Singleton 作用域是Spring 中的缺省作用域，也可以显示的将 Bean 定义为 singleton 模式，配置为：\n   * prototype:原型模式每次使用时创建。每次通过 Spring 容器获取 prototype 定义的 bean 时，容器都将创建一个新的 Bean 实例，每个 Bean 实例都有自己的属性和状态，而 singleton 全局只有一个对象。根据经验，对有状态的bean使用prototype作用域，而对无状态的bean使用singleton 作用域。\n   * Request：一次 request 一个实例。在一次 Http 请求中，容器会返回该 Bean 的同一实例。而对不同的 Http 请求则会产生新的 Bean，而且该 bean 仅在当前 Http Request 内有效,当前 Http 请求结束，该 bean实例也将会被销毁。\n   * session：在一次 Http Session 中，容器会返回该 Bean 的同一实例。而对不同的 Session 请求则会创建新的实例，该 bean 实例仅在当前 Session 内有效。同 Http 请求相同，每一次session 请求创建新的实例，而不同的实例之间不共享属性，且实例仅在自己的 session 请求内有效，请求结束，则实例将被销毁。\n   * global Session：在一个全局的 Http Session 中，容器会返回该 Bean 的同一个实例，仅在使用 portlet context 时有效。\n   \n   \n   # Spring处理线程并发问题\n   \n   在一般情况下，只有无状态的Bean才可以在多线程环境下共享，在Spring中，绝大部分Bean都可以声明为singleton作用域，因为Spring对一些Bean中非线程安全状态采用ThreadLocal进行处理，解决线程安全问题。\n   \n   ThreadLocal和线程同步机制都是为了解决多线程中相同变量的访问冲突问题。同步机制采用了“时间换空间”的方式，仅提供一份变量，不同的线程在访问前需要获取锁，没获得锁的线程则需要排队。而ThreadLocal采用了“空间换时间”的方式。\n   \n   ThreadLocal会为每一个线程提供一个独立的变量副本，从而隔离了多个线程对数据的访问冲突。因为每一个线程都拥有自己的变量副本，从而也就没有必要对该变量进行同步了。ThreadLocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的变量封装进ThreadLocal。\n   \n   \n   # Spring Bean 生命周期\n   \n   \n   \n   实例化\n   \n   1. 实例化一个 Bean，也就是我们常说的 new。\n   \n   IOC 依赖注入\n   \n   1. 按照 Spring 上下文对实例化的 Bean 进行配置，也就是 IOC 注入。\n   \n   setBeanName 实现\n   \n   1. 如果这个 Bean 已经实现了 BeanNameAware 接口，会调用它实现的 setBeanName(String)方法，此处传递的就是 Spring 配置文件中 Bean 的 id 值\n   \n   BeanFactoryAware 实现\n   \n   1. 如果这个 Bean 已经实现了 BeanFactoryAware 接口，会调用它实现的 setBeanFactory，\n   \n   setBeanFactory(BeanFactory)传递的是 Spring 工厂自身（可以用这个方式来获取其它 Bean，只需在 Spring 配置文件中配置一个普通的 Bean 就可以）。\n   \n   ApplicationContextAware 实现\n   \n   1. 如果这个 Bean 已经实现了 ApplicationContextAware 接口，会调用setApplicationContext(ApplicationContext)方法，传入 Spring 上下文（同样这个方式也可以实现步骤 4 的内容，但比 4 更好，因为 ApplicationContext 是 BeanFactory 的子接口，有更多的实现方法）\n   \n   postProcessBeforeInitialization 接口实现-初始化预处理\n   \n   1. 如果这个 Bean 关联了 BeanPostProcessor 接口，将会调用postProcessBeforeInitialization(Object obj, String s)方法，BeanPostProcessor 经常被用作是 Bean 内容的更改，并且由于这个是在 Bean 初始化结束时调用那个的方法，也可以被应用于内存或缓存技术。\n   \n   init-method\n   \n   1. 如果 Bean 在 Spring 配置文件中配置了 init-method 属性会自动调用其配置的初始化方法。\n   \n   postProcessAfterInitialization\n   \n   1. 如果这个 Bean 关联了 BeanPostProcessor 接口，将会调用postProcessAfterInitialization(Object obj, String s)方法。\n   \n   > 注：以上工作完成以后就可以应用这个 Bean 了，那这个 Bean 是一个 Singleton 的，所以一般情况下我们调用同一个 id 的 Bean 会是在内容地址相同的实例，当然在 Spring 配置文件中也可以配置非 Singleton。\n   \n   Destroy 过期自动清理阶段\n   \n   1. 当 Bean 不再需要时，会经过清理阶段，如果 Bean 实现了 DisposableBean 这个接口，会调用那个其实现的 destroy()方法；\n   \n   destroy-method 自配置清理\n   \n   1. 最后，如果这个 Bean 的 Spring 配置中配置了 destroy-method 属性，会自动调用其配置的销毁方法。\n   \n   \n   # bean生命周期方法\n   \n   bean 标签有两个重要的属性（init-method 和 destroy-method）。用它们你可以自己定制\n   \n   初始化和注销方法。它们也有相应的注解（@PostConstruct 和@PreDestroy）。\n   \n   <bean id="" class="" init-method="初始化方法" destroy-method="销毁方法">\n   \n   \n   1\n   \n   \n   \n   # 什么是Spring的内部bean？什么是Spring inner beans？\n   \n   在Spring框架中，当一个bean仅被用作另一个bean的属性时，它能被声明为一个内部bean。\n   \n   内部bean可以用setter注入“属性”和构造方法注入“构造参数”的方式来实现，内部bean通常是匿名的，它们的Scope一般是prototype。\n   \n   Spring 依赖注入四种方式构造器注入\n   \n   /*带参数，方便利用构造器进行注入*/\n   \n   \n   \n    \n   \n   \n   \n    public CatDaoImpl(String message){\n   \n   \n   \n    \n   \n   \n   \n    this. message = message;\n   \n   \n   \n    \n   \n   \n   \n    }\n   <bean id="CatDaoImpl" class="com.CatDaoImpl">\n   \n   \n   \n    \n   \n   \n   \n   <constructor-arg value=" message "></constructor-arg>\n   \n   \n   \n    \n   \n   \n   \n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   \n   \n   setter 方法注入\n   \n   public class Id {\n   \n   \n   \n    \n   \n   \n   \n    private int id;\n   \n   \n   \n    \n   \n   \n   \n    public int getId() { return id; }\n   \n   \n   \n    \n   \n   \n   \n    public void setId(int id) { this.id = id; }\n   \n   \n   \n    \n   \n   \n   \n   }\n   <bean id="id" class="com.id "> <property name="id" value="123"></property> </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   \n   \n   静态工厂注入\n   \n   静态工厂顾名思义，就是通过调用静态工厂的方法来获取自己需要的对象，为了让 spring 管理所有对象，我们不能直接通过"工程类.静态方法()"来获取对象，而是依然通过 spring 注入的形式获取：\n   \n   public class DaoFactory { //静态工厂\n   \n   \n   \n    \n   \n   \n   \n    public static final FactoryDao getStaticFactoryDaoImpl(){\n   \n   \n   \n    \n   \n   \n   \n    return new StaticFacotryDaoImpl();\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n   }\n   \n   \n   \n    \n   \n   \n   \n   public class SpringAction {\n   \n   \n   \n    \n   \n   \n   \n    private FactoryDao staticFactoryDao; //注入对象\n   \n   \n   \n    \n   \n   \n   \n    //注入对象的 set 方法\n   \n   \n   \n    \n   \n   \n   \n    public void setStaticFactoryDao(FactoryDao staticFactoryDao) {\n   \n   \n   \n    \n   \n   \n   \n    this.staticFactoryDao = staticFactoryDao;\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n   }\n   \x3c!--factory-method="getStaticFactoryDaoImpl"指定调用哪个工厂方法--\x3e\n   \n   \n   \n    \n   \n   \n   \n    <bean name="springAction" class=" SpringAction" >\n   \n   \n   \n    \n   \n   \n   \n    \x3c!--使用静态工厂的方法注入对象,对应下面的配置文件--\x3e\n   \n   \n   \n    \n   \n   \n   \n    <property name="staticFactoryDao" ref="staticFactoryDao"></property>\n   \n   \n   \n    \n   \n   \n   \n    </bean>\n   \n   \n   \n    \n   \n   \n   \n    \x3c!--此处获取对象的方式是从工厂类中获取静态方法--\x3e\n   \n   \n   \n    \n   \n   \n   \n   <bean name="staticFactoryDao" class="DaoFactory"\n   \n   \n   \n    \n   \n   \n   \n   factory-method="getStaticFactoryDaoImpl"></bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   95\n   96\n   97\n   98\n   99\n   100\n   101\n   102\n   103\n   104\n   105\n   106\n   107\n   108\n   109\n   110\n   111\n   112\n   113\n   114\n   115\n   116\n   117\n   118\n   119\n   120\n   121\n   122\n   123\n   124\n   125\n   126\n   127\n   128\n   129\n   130\n   131\n   132\n   133\n   134\n   135\n   136\n   137\n   138\n   139\n   140\n   141\n   142\n   143\n   144\n   145\n   146\n   \n   \n   实例工厂\n   \n   实例工厂的意思是获取对象实例的方法不是静态的，所以你需要首先 new 工厂类，再调用普通的实例方法：\n   \n   public class DaoFactory { //实例工厂\n   \n   \n   \n    \n   \n   \n   \n    public FactoryDao getFactoryDaoImpl(){\n   \n   \n   \n    \n   \n   \n   \n    return new FactoryDaoImpl();\n   \n   \n   \n    \n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n   }\n   \n   \n   \n    \n   \n   \n   \n   public class SpringAction {\n   \n   \n   \n    \n   \n   \n   \n    private FactoryDao factoryDao; //注入对象\n   \n   \n   \n    \n   \n   \n   \n    public void setFactoryDao(FactoryDao factoryDao) {\n   \n   \n   \n    \n   \n   \n   \n    this.factoryDao = factoryDao;\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n   }\n   <bean name="springAction" class="SpringAction">\n   \n   \n   \n    \n   \n   \n   \n    \x3c!--使用实例工厂的方法注入对象,对应下面的配置文件--\x3e\n   \n   \n   \n    \n   \n   \n   \n    <property name="factoryDao" ref="factoryDao"></property>\n   \n   \n   \n    \n   \n   \n   \n    </bean>\n   \n   \n   \n    \n   \n   \n   \n    \x3c!--此处获取对象的方式是从工厂类中获取实例方法--\x3e\n   \n   \n   \n    \n   \n   \n   \n   <bean name="daoFactory" class="com.DaoFactory"></bean>\n   \n   \n   \n    \n   \n   \n   \n   <bean name="factoryDao" factory-bean="daoFactory"\n   \n   \n   \n    \n   \n   \n   \n   factory-method="getFactoryDaoImpl"></bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   95\n   96\n   97\n   98\n   99\n   100\n   101\n   102\n   103\n   104\n   105\n   106\n   107\n   108\n   109\n   110\n   111\n   112\n   113\n   114\n   115\n   116\n   117\n   118\n   119\n   120\n   121\n   122\n   123\n   124\n   125\n   126\n   127\n   128\n   129\n   130\n   131\n   132\n   133\n   134\n   135\n   136\n   137\n   138\n   139\n   140\n   141\n   142\n   \n   \n   \n   # 5 种不同方式的自动装配\n   \n   Spring 装配包括手动装配和自动装配，手动装配是有基于 xml 装配、构造方法、setter 方法等自动装配有五种自动装配的方式，可以用来指导 Spring 容器用自动装配方式来进行依赖注入。\n   \n   * no：默认的方式是不进行自动装配，通过显式设置 ref 属性来进行装配。\n   * byName：通过参数名 自动装配，Spring 容器在配置文件中发现 bean 的 autowire 属性被设置成 byName，之后容器试图匹配、装配和该 bean 的属性具有相同名字的 bean。\n   * byType：通过参数类型自动装配，Spring 容器在配置文件中发现 bean 的 autowire 属性被设置成 byType，之后容器试图匹配、装配和该 bean 的属性具有相同类型的 bean。如果有多个 bean 符合条件，则抛出错误。\n   * constructor：这个方式类似于 byType， 但是要提供给构造器参数，如果没有确定的带参数的构造器参数类型，将会抛出异常。\n   * autodetect：首先尝试使用 constructor 来自动装配，如果无法工作，则使用 byType 方式。\n   \n   \n   # Spring 中注入一个 Java Collection\n   \n   Spring 提供了以下四种集合类的配置元素：\n   \n   * <list> : 该标签用来装配可重复的 list 值。\n   * <set> : 该标签用来装配没有重复的 set 值。\n   * <map>: 该标签可用来注入键和值可以为任何类型的键值对。\n   * <props> : 该标签支持注入键和值都是字符串类型的键值对。\n   \n   <beans> \n   \n   \n   \n    \x3c!-- Definition for javaCollection --\x3e \n   \n   \n   \n    <bean id="javaCollection" class="com.howtodoinjava.JavaCollection"> \n   \n   \n   \n    \x3c!-- java.util.List --\x3e \n   \n   \n   \n    <property name="customList"> \n   \n   \n   \n    <list> \n   \n   \n   \n    <value>INDIA</value> \n   \n   \n   \n    <value>Pakistan</value> \n   \n   \n   \n    <value>USA</value> \n   \n   \n   \n    <value>UK</value> \n   \n   \n   \n    </list> \n   \n   \n   \n    </property> \n   \n   \n   \n    \n   \n   \n   \n    \x3c!-- java.util.Set --\x3e \n   \n   \n   \n    <property name="customSet"> \n   \n   \n   \n    <set> \n   \n   \n   \n    <value>INDIA</value> \n   \n   \n   \n    <value>Pakistan</value> \n   \n   \n   \n    <value>USA</value> \n   \n   \n   \n    <value>UK</value> \n   \n   \n   \n    </set> \n   \n   \n   \n    </property> \n   \n   \n   \n    \n   \n   \n   \n    \x3c!-- java.util.Map --\x3e \n   \n   \n   \n    <property name="customMap"> \n   \n   \n   \n    <map> \n   \n   \n   \n    <entry key="1" value="INDIA"/> \n   \n   \n   \n    <entry key="2" value="Pakistan"/> \n   \n   \n   \n    <entry key="3" value="USA"/> \n   \n   \n   \n    <entry key="4" value="UK"/> \n   \n   \n   \n    </map> \n   \n   \n   \n    </property> \n   \n   \n   \n    \n   \n   \n   \n    \x3c!-- java.util.Properties --\x3e \n   \n   \n   \n    <property name="customProperies"> \n   \n   \n   \n    <props> \n   \n   \n   \n    <prop key="admin">admin@nospam.com</prop> \n   \n   \n   \n    <prop key="support">support@nospam.com</prop> \n   \n   \n   \n    </props> \n   \n   \n   \n    </property> \n   \n   \n   \n    \n   \n   \n   \n    </bean> \n   \n   \n   \n   </beans>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   95\n   96\n   97\n   98\n   99\n   100\n   101\n   102\n   103\n   104\n   105\n   106\n   107\n   108\n   109\n   110\n   111\n   112\n   113\n   114\n   115\n   116\n   117\n   118\n   119\n   120\n   121\n   122\n   123\n   124\n   125\n   126\n   127\n   128\n   129\n   130\n   131\n   132\n   133\n   134\n   135\n   136\n   137\n   138\n   139\n   140\n   141\n   142\n   143\n   144\n   145\n   146\n   147\n   148\n   149\n   150\n   151\n   152\n   153\n   154\n   155\n   156\n   157\n   158\n   159\n   160\n   161\n   162\n   163\n   164\n   165\n   166\n   167\n   168\n   169\n   \n   \n   \n   # 使用@Autowired注解自动装配的过程\n   \n   在使用@Autowired注解之前需要在Spring配置文件进行配置，<context:annotation-config />。\n   \n   在启动spring IoC时，容器自动装载了一个AutowiredAnnotationBeanPostProcessor后置处理器，当容器扫描到@Autowied、@Resource或@Inject时，就会在IoC容器自动查找需要的bean，并装配给该对象的属性。在使用@Autowired时，首先在容器中查询对应类型的bean：\n   \n   * 如果查询结果刚好为一个，就将该bean装配给@Autowired指定的数据；\n   * 如果查询的结果不止一个，那么@Autowired会根据名称来查找；\n   * 如果上述查找的结果为空，那么会抛出异常。解决方法时，使用required=false。\n   \n   \n   # Spring AOP\n   \n   \n   # AOP原理\n   \n   OOP(Object-Oriented Programming)面向对象编程，允许开发者定义纵向的关系，但并适用于定义横向的关系，导致了大量代码的重复，而不利于各个模块的重用。\n   \n   AOP(Aspect-Oriented Programming)，一般称为面向切面编程，作为面向对象的一种补充，用于将那些与业务无关，但却对多个对象产生影响的公共行为和逻辑，抽取并封装为一个可重用的模块，这个模块被命名为“切面”（Aspect），减少系统中的重复代码，降低了模块间的耦合度，同时提高了系统的可维护性。\n   \n   AOP 主要应用场景有\n   \n   * Authentication 权限\n   * Caching 缓存\n   * Context passing 内容传递\n   * Error handling 错误处理\n   * Lazy loading 懒加载\n   * Debugging 调试\n   * logging, tracing, profiling and monitoring 记录跟踪 优化 校准\n   * Performance optimization 性能优化\n   * Persistence 持久化\n   * Resource pooling 资源池\n   * Synchronization 同步\n   * Transactions 事务\n   \n   \n   # AOP 核心概念\n   \n   * 切面（aspect）：类是对物体特征的抽象，切面就是对横切关注点的抽象\n   * 横切关注点：对哪些方法进行拦截，拦截后怎么处理，这些关注点称之为横切关注点\n   * 连接点（joinpoint）：被拦截到的点，因为 Spring 只支持方法类型的连接点，所以在 Spring中连接点指的就是被拦截到的方法，实际上连接点还可以是字段或者构造器\n   * 切入点（pointcut）：对连接点进行拦截的定义\n   * 通知（advice）：所谓通知指的就是指拦截到连接点之后要执行的代码，通知分为前置、后置、异常、最终、环绕通知五类\n   * 目标对象：代理的目标对象\n   * 织入（weave）：将切面应用到目标对象并导致代理对象创建的过程\n     * 编译期：切面在目标类编译时被织入。AspectJ的织入编译器是以这种方式织入切面的；\n     * 类加载期：切面在目标类加载到JVM时被织入。需要特殊的类加载器，它可以在目标类被引入应用之前增强该目标类的字节码。AspectJ5的加载时织入就支持以这种方式织入切面；\n     * 运行期：切面在应用运行的某个时刻被织入。一般情况下，在织入切面时，AOP容器会为目标对象动态地创建一个代理对象。SpringAOP就是以这种方式织入切面。\n   * 引入（introduction）：在不修改代码的前提下，引入可以在运行期为类动态地添加一些方法或字段\n   \n   \n   # Spring 中的代理\n   \n   将 Advice 应用于目标对象后创建的对象称为代理。在客户端对象的情况下，目标对象和代理对象是相同的。\n   \n   > Advice + Target Object = Proxy\n   \n   \n   # AOP 实现方式\n   \n   AOP实现的关键在于代理模式，AOP代理主要分为静态代理和动态代理。\n   \n   * AspectJ 静态代理的增强，所谓静态代理，就是AOP框架会在编译阶段生成AOP代理类，因此也称为编译时增强，他会在编译阶段将AspectJ(切面)织入到Java字节码中，运行的时候就是增强之后的AOP对象。\n   * Spring AOP使用的动态代理，所谓的动态代理就是说AOP框架不会去修改字节码，而是每次运行时在内存中临时为方法生成一个AOP对象，这个AOP对象包含了目标对象的全部方法，并且在特定的切点做了增强处理，并回调原对象的方法。\n   \n   \n   # AOP 两种代理方式\n   \n   Spring 提供了两种方式来生成代理对象: JDK Proxy 和 Cglib，具体使用哪种方式生成由AopProxyFactory 根据 AdvisedSupport 对象的配置来决定。默认的策略是如果目标类是接口，则使用 JDK 动态代理技术，否则使用 Cglib 来生成代理。\n   \n   \n   # JDK 动态接口代理\n   \n   JDK 动态代理主要涉及到 java.lang.reflect 包中的两个类：Proxy 和 InvocationHandler。\n   \n   InvocationHandler是一个接口，通过实现该接口定义横切逻辑，并通过反射机制调用目标类的代码，动态将横切逻辑和业务逻辑编制在一起。\n   \n   Proxy 利用 InvocationHandler 动态创建一个符合某一接口的实例，生成目标类的代理对象。\n   \n   \n   # CGLib 动态代理\n   \n   CGLib 全称为 Code Generation Library，是一个强大的高性能，高质量的代码生成类库，可以在运行期扩展 Java 类与实现 Java 接口，CGLib 封装了 asm，可以再运行期动态生成新的 class。和 JDK 动态代理相比较：JDK 创建代理有一个限制，就是只能为接口创建代理实例，而对于没有通过接口定义业务方法的类，则可以通过 CGLib 创建动态代理。\n   \n   实现原理\n   \n   @Aspect\n   \n   public class TransactionDemo {\n   \n   \n   \n    \n   \n   \n   \n    @Pointcut(value="execution(* com.yangxin.core.service.*.*.*(..))")\n   \n   \n   \n    \n   \n   \n   \n    public void point(){\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n    @Before(value="point()")\n   \n   \n   \n    \n   \n   \n   \n    public void before(){\n   \n   \n   \n    \n   \n   \n   \n    System.out.println("transaction begin");\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n    @AfterReturning(value = "point()")\n   \n   \n   \n    \n   \n   \n   \n    public void after(){\n   \n   \n   \n    \n   \n   \n   \n    System.out.println("transaction commit");\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n    @Around("point()")\n   \n   \n   \n    \n   \n   \n   \n    public void around(ProceedingJoinPoint joinPoint) throws Throwable{\n   \n   \n   \n    \n   \n   \n   \n    System.out.println("transaction begin");\n   \n   \n   \n    \n   \n   \n   \n    joinPoint.proceed();\n   \n   \n   \n    \n   \n   \n   \n    System.out.println("transaction commit");\n   \n   \n   \n    \n   \n   \n   \n    } }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   95\n   96\n   97\n   98\n   99\n   100\n   101\n   102\n   103\n   104\n   105\n   106\n   107\n   108\n   109\n   110\n   111\n   112\n   113\n   114\n   115\n   116\n   117\n   118\n   119\n   120\n   121\n   122\n   123\n   124\n   125\n   126\n   127\n   128\n   129\n   130\n   131\n   132\n   133\n   134\n   135\n   136\n   137\n   138\n   139\n   \n   \n   \n   # Spring在运行时通知对象\n   \n   通过在代理类中包裹切面，Spring在运行期把切面织入到Spring管理的bean中。代理封装了目标类，并拦截被通知方法的调用，再把调用转发给真正的目标bean。当代理拦截到方法调用时，在调用目标bean方法之前，会执行切面逻辑。\n   \n   直到应用需要被代理的bean时，Spring才创建代理对象。如果使用的是ApplicationContext的话，在ApplicationContext从BeanFactory中加载所有bean的时候，Spring才会创建被代理的对象。因为Spring运行时才创建代理对象，所以我们不需要特殊的编译器来织入SpringAOP的切面。\n   \n   \n   # Spring只支持方法级别的连接点\n   \n   因为Spring基于动态代理，所以Spring只支持方法连接点。Spring缺少对字段连接点的支持，而且它不支持构造器连接点。方法之外的连接点拦截功能，我们可以利用Aspect来补充。\n   \n   在Spring AOP 中，关注点和横切关注的区别是什么？在 spring aop 中 concern 和 cross-cutting concern 的不同之处\n   \n   关注点（concern）是应用中一个模块的行为，一个关注点可能会被定义成一个我们想实现的一个功能。\n   \n   横切关注点（cross-cutting concern）是一个关注点，此关注点是整个应用都会使用的功能，并影响整个应用，比如日志，安全和数据传输，几乎应用的每个模块都需要的功能。因此这些都属于横切关注点。\n   \n   \n   # Spring通知类型\n   \n   在AOP术语中，切面的工作被称为通知，实际上是程序执行时要通过SpringAOP框架触发的代码段。Spring切面可以应用5种类型的通知：\n   \n   * 前置通知（Before）：在目标方法被调用之前调用通知功能；\n   * 后置通知（After）：在目标方法完成之后调用通知，此时不会关心方法的输出是什么；\n   * 返回通知（After-returning ）：在目标方法成功执行之后调用通知；\n   * 异常通知（After-throwing）：在目标方法抛出异常后调用通知；\n   * 环绕通知（Around）：通知包裹了被通知的方法，在被通知的方法调用之前和调用之后执行自定义的行为。\n   \n   # 同一个aspect，不同advice的执行顺序：\n   \n   没有异常情况下的执行顺序：\n   \n   * around before advice\n   * before advice\n   * target method 执行\n   * around after advice\n   * after advice\n   * afterReturning\n   \n   有异常情况下的执行顺序：\n   \n   * around before advice\n   * before advice\n   * target method 执行\n   * around after advice\n   * after advice\n   * afterThrowing:异常发生\n   * java.lang.RuntimeException: 异常发生\n   \n   \n   # Spring MVC\n   \n   \n   # Spring MVC 原理\n   \n   Spring 的模型-视图-控制器（MVC）框架是围绕一个 DispatcherServlet 来设计的，这个 Servlet会把请求分发给各个处理器，并支持可配置的处理器映射、视图渲染、本地化、时区与主题渲染等，甚至还能支持文件上传。\n   \n   \n   \n   Http 请求到 DispatcherServlet\n   \n   (1) 客户端请求提交到 DispatcherServlet。\n   \n   HandlerMapping 寻找处理器\n   \n   (2) 由 DispatcherServlet 控制器查询一个或多个 HandlerMapping，找到处理请求的Controller。\n   \n   调用处理器 Controller\n   \n   (3) DispatcherServlet 将请求提交到 Controller。\n   \n   Controller 调用业务逻辑处理后，返回 ModelAndView\n   \n   (4)(5)调用业务处理和返回结果：Controller 调用业务逻辑处理后，返回 ModelAndView。\n   \n   DispatcherServlet 查询 ModelAndView\n   \n   (6)(7)处理视图映射并返回模型：DispatcherServlet 查询一个或多个 ViewResoler 视图解析器，找到 ModelAndView 指定的视图。\n   \n   ModelAndView 反馈浏览器 HTTP\n   \n   (8) Http 响应：视图负责将结果显示到客户端。\n   \n   \n   # Spring DATA\n   \n   \n   # Spring ORM理解\n   \n   Spring 通过提供ORM模块，支持我们在直接JDBC之上使用一个对象/关系映射映射(ORM)工具，Spring 支持集成主流的ORM框架，如Hiberate，JDO和 iBATIS，JPA，TopLink，JDO，OJB 。Spring的事务管理同样支持以上所有ORM框架及JDBC。\n   \n   解释JDBC抽象和DAO模块\n   \n   通过使用JDBC抽象和DAO模块，保证数据库代码的简洁，并能避免数据库资源错误关闭导致的问题，它在各种不同的数据库的错误信息之上，提供了一个统一的异常访问层。它还利用Spring的AOP 模块给Spring应用中的对象提供事务管理服务。\n   \n   \n   # Spring DAO 的支持\n   \n   Spring DAO（数据访问对象） 使得 JDBC，Hibernate 或 JDO 这样的数据访问技术更容易以一种统一的方式工作。这使得用户容易在持久性技术之间切换。它还允许您在编写代码时，无需考虑捕获每种技术不同的异常。\n   \n   \n   # Spring JDBC API\n   \n   * JdbcTemplate\n   * SimpleJdbcTemplate\n   * NamedParameterJdbcTemplate\n   * SimpleJdbcInsert\n   * SimpleJdbcCall\n   \n   \n   # JdbcTemplate是什么\n   \n   JdbcTemplate 类提供了很多便利的方法解决诸如把数据库数据转变成基本数据类型或对象，执行写好的或可调用的数据库操作语句，提供自定义的数据错误处理。\n   \n   \n   # 使用Spring通过什么方式访问Hibernate？\n   \n   有两种方式访问Hibernate：\n   \n   * 使用 Hibernate 模板和回调进行控制反转\n   * 扩展 HibernateDAOSupport 并应用 AOP 拦截器节点\n   \n   \n   # Spring 支持的 ORM\n   \n   Spring 支持以下 ORM：\n   \n   * Hibernate\n   * iBatis\n   * JPA (Java Persistence API)\n   * TopLink\n   * JDO (Java Data Objects)\n   * OJB\n   \n   如何通过 HibernateDaoSupport 将 Spring 和 Hibernate 结合起来？\n   \n   用 Spring 的 SessionFactory 调用 LocalSessionFactory。集成过程分三步：\n   \n   * 配置 the Hibernate SessionFactory\n   * 继承 HibernateDaoSupport\n   * 实现一个 DAO 在 AOP 支持的事务中装配\n   \n   \n   # Spring 支持的事务管理类型\n   \n   Spring 支持两种类型的事务管理：\n   \n   * 编程式事务管理：这意味你通过编程的方式管理事务，给你带来极大的灵活性，但是 难维护。\n   * 声明式事务管理：这意味着你可以将业务代码和事务管理分离，你只需用注解和 XML 配置来管理事务。\n   \n   \n   # Spring 框架的事务管理有哪些优点？\n   \n   它为不同的事务 API 如 JTA，JDBC，Hibernate，JPA 和 JDO，提供一个不变 的编程模式。\n   \n   它为编程式事务管理提供了一套简单的 API 而不是一些复杂的事务 API 如 它支持声明式事务管理。它和 Spring 各种数据访问抽象层很好得集成。\n   \n   \n   # 你更倾向用那种事务管理类型？\n   \n   大多数 Spring 框架的用户选择声明式事务管理，因为它对应用代码的影响最小，因 此更符合一个无侵入的轻量级容器的思想。声明式事务管理要优于编程式事务管理， 虽然比编程式事务管理（这种方式允许你通过代码控制事务）少了一点灵活性。\n   \n   \n   # Spring常用注解\n   \n   # 声明bean的注解\n   \n   * @Component ：组件，没有明确的角色\n   * @Service ：在业务逻辑层使用\n   * @Repository ：在数据访问层使用\n   * @Controller ：在展现层使用，控制层的声明\n   * @RestController ：@Controller和@ResponseBody组合，，控制层的声明\n   \n   # 注入bean的注解\n   \n   * @Autowired：\n   \n   Spring自带的注解，通过AutowiredAnnotationBeanPostProcessor 类实现的依赖注入，作用在CONSTRUCTOR、METHOD、PARAMETER、FIELD、ANNOTATION_TYPE。默认是根据类型（byType ）进行自动装配的。如果有多个类型一样的Bean候选者，需要指定按照名称（byName ）进行装配，则需要配合@Qualifier。\n   \n   指定名称后，如果Spring IOC容器中没有对应的组件bean抛出NoSuchBeanDefinitionException。也可以将@Autowired中required配置为false，如果配置为false之后，当没有找到相应bean的时候，系统不会抛异常\n   \n   * @Inject：\n   \n   JSR330 (Dependency Injection for Java)中的规范，需要导入javax.inject.Inject jar包 ，才能实现注入 作用CONSTRUCTOR、METHOD、FIELD上\n   \n   根据类型进行自动装配的，如果需要按名称进行装配，则需要配合@Named\n   \n   * @Resource：\n   \n   JSR250规范的实现，在javax.annotation包下，作用TYPE、FIELD、METHOD上。\n   \n   默认根据属性名称进行自动装配的，如果有多个类型一样的Bean候选者，则可以通过name进行指定进行注入\n   \n   # java配置类相关注解\n   \n   * @Configuration ：声明当前类为配置类，相当于xml形式的Spring配置（类上），声明当前类为配置类，其中内部组合了@Component注解，表明这个类是一个bean（类上）\n   * @Bean ：注解在方法上，声明当前方法的返回值为一个bean，替代xml中的方式（方法上）\n   * @ComponentScan ：用于对Component进行扫描，相当于xml中的（类上）\n   * @WishlyConfiguration ：为@Configuration与@ComponentScan的组合注解，可以替代这两个注解\n   \n   # 切面（AOP）相关注解\n   \n   Spring支持AspectJ的注解式切面编程\n   \n   * @Aspect：声明一个切面（类上），使用@After、@Before、@Around定义建言（advice），可直接将拦截规则（切点）作为参数。\n   * @After ：在方法执行之后执行（方法上）\n   * @Before ：在方法执行之前执行（方法上）\n   * @Around ：在方法执行之前与之后执行（方法上）\n   * @PointCut ：声明切点在java配置类中使用@EnableAspectJAutoProxy注解开启Spring对AspectJ代理的支持（类上）\n   \n   \n   # @Bean的属性支持\n   \n   @Scope 设置Spring容器如何新建Bean实例（方法上，得有@Bean），其设置类型包括：\n   \n   * Singleton：单例,一个Spring容器中只有一个bean实例，默认模式\n   * Protetype：每次调用新建一个bean\n   * Request：web项目中，给每个http request新建一个bean\n   * Session ：web项目中，给每个http session新建一个bean\n   * Global：Session给每一个 global http session新建一个Bean实例\n   * @StepScope：在Spring Batch中还有涉及(Spring Batch 之 背景框架简介_vincent-CSDN博客)\n   * @PostConstruct ：由JSR-250提供，在构造函数执行完之后执行，等价于xml配置文件中bean的initMethod\n   * @PreDestory ：由JSR-250提供，在Bean销毁之前执行，等价于xml配置文件中bean的destroyMethod\n   \n   \n   # @Value注解\n   \n   为属性注入值,支持如下方式的注入：\n   \n   注入普通字符\n   \n   \n   \n   注入操作系统属性\n   \n   \n   \n   注入表达式结果\n   \n   \n   \n   注入其它bean属性\n   \n   \n   \n   注入文件资源\n   \n   \n   \n   注入网站资源\n   \n   \n   \n   注入配置文件\n   \n   \n   \n   @PropertySource 加载配置文件(类上)，还需配置一个PropertySourcesPlaceholderConfigurer的bean。\n   \n   \n   # 环境切换\n   \n   * @Profile ：通过设定Environment的ActiveProfiles来设定当前context需要使用的配置环境。（类或方法上）\n   * @Conditional：Spring4中可以使用此注解定义条件话的bean，通过实现Condition接口，并重写matches方法，从而决定该bean是否被实例化。（方法上）\n   \n   \n   # 异步相关\n   \n   * @EnableAsync：配置类中，通过此注解开启对异步任务的支持，叙事性AsyncConfigurer接口（类上）\n   * @Async：在实际执行的bean方法使用该注解来申明其是一个异步任务（方法上或类上所有的方法都将异步，需要@EnableAsync开启异步任务）\n   \n   \n   # 定时任务相关\n   \n   * @EnableScheduling ：在配置类上使用，开启计划任务的支持（类上）\n   * @Scheduled ：来申明这是一个任务，包括cron,fixDelay,fixRate等类型（方法上，需先开启计划任务的支持）\n   \n   \n   # @Enable 注解说明\n   \n   这些注解主要用来开启对xxx的支持。\n   \n   * @EnableAspectJAutoProxy ：开启对AspectJ自动代理的支持\n   * @EnableAsync ：开启异步方法的支持\n   * @EnableScheduling ：开启计划任务的支持\n   * @EnableWebMvc ：开启Web MVC的配置支持\n   * @EnableConfigurationProperties ：开启对@ConfigurationProperties注解配置Bean的支持\n   * @EnableJpaRepositories ：开启对SpringData JPA Repository的支持\n   * @EnableTransactionManagement ：开启注解式事务的支持\n   * @EnableCaching ：开启注解式的缓存支持\n   \n   \n   # 测试相关注解\n   \n   * @RunWith ：运行器，Spring中通常用于对JUnit的支持\n   * @ContextConfiguration：用来加载配置ApplicationContext，其中classes属性用来加载配置类\n   \n   \n   # SpringMVC部分\n   \n   * @EnableWebMvc ：在配置类中开启Web MVC的配置支持，如一些ViewResolver或者MessageConverter等，若无此句，重写WebMvcConfigurerAdapter方法（用于对SpringMVC的配置）。\n   * @Controller ：声明该类为SpringMVC中的Controller\n   * @RequestMapping ：用于映射Web请求，包括访问路径和参数（类或方法上）\n   * @ResponseBody ：支持将返回值放在response内，而不是一个页面，通常用户返回json数据（返回值旁或方法上）\n   * @RequestBody ：允许request的参数在request体中，而不是在直接连接在地址后面。（放在参数前）\n   * @PathVariable ：用于接收路径参数，比如@RequestMapping(“/hello/{name}”)申明的路径，将注解放在参数中前，即可获取该值，通常作为Restful的接口实现方法。\n   * @RestController ：该注解为一个组合注解，相当于@Controller和@ResponseBody的组合，注解在类上，意味着，该Controller的所有方法都默认加上了@ResponseBody。\n   * @ControllerAdvice ：通过该注解，我们可以将对于控制器的全局配置放置在同一个位置，注解了@Controller的类的方法可使用@ExceptionHandler、@InitBinder、@ModelAttribute注解到方法上，这对所有注解了 @RequestMapping的控制器内的方法有效。\n   * @ExceptionHandler ：用于全局处理控制器里的异常\n   * @InitBinder ：用来设置WebDataBinder，WebDataBinder用来自动绑定前台请求参数到Model中。\n   * @ModelAttribute ：本来的作用是绑定键值对到Model里，在@ControllerAdvice中是让全局的@RequestMapping：都能获得在此处设置的键值对。',normalizedContent:'# spring 面试63问\n\n * sping原理\n   \n   spring是一个轻量级java开发框架，最早有rod johnson创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的javase/javaee full-stack（一站式）轻量级开源框架，为开发java应用程序提供全面的基础架构支持。spring负责基础架构，因此java开发者可以专注于应用程序的开发。\n   \n   spring是一个全面的、企业应用开发一站式的解决方案，贯穿表现层、业务层、持久层。但是它仍然可以和其他的框架无缝整合。\n   \n   \n   # spring 特点\n   \n   轻量级： 组件大小与开销两方面而言spring都是轻量的。完整的spring框架可以在一个大小只有1m多的jar文件中发布，并且spring所需的处理开销也是微不足道的。此外，spring是非侵入式，典型案例，spring应用中的对象不依赖于spring特定的类\n   \n   控制反转： spring通过控制反转（ioc）技术实现解耦。一个对象依赖的其他对象会通过被动的方式传递进来，而不需要对象自己创建或者查找依赖。\n   \n   面向切面： 支持切面（aop）编程，并且吧应用业务逻辑和系统服务区分开。\n   \n   容器： spring包含并管理应用对象的配置和生命周期，在这个意义上它是一种容器。可以配置每个bean如何被创建、销毁，bean的作用范围是单例还是每次都生成一个新的实例，以及他们是如何相互关联。\n   \n   框架集合： 将简单的组件配置，组合成为复杂的框架；应用对象被申明式组合；提供许多基础功能（事务管理、持久化框架继承），提供应用逻辑开发接口\n   \n   \n   # spring 框架优缺点\n   \n   # 优点\n   \n   * 方便解耦，简化开发：spring就是一个大工厂，可以将所有对象的创建和依赖关系的维护，交给spring管理。\n   * aop编程的支持：spring提供面向切面编程，可以方便的实现对程序进行权限拦截、运行监控等功能。\n   * 声明式事务的支持：只需要通过配置就可以完成对事务的管理，而无需手动编程。\n   * 方便程序的测试：spring对junit4支持，可以通过注解方便的测试spring程序。\n   * 方便集成各种优秀框架：spring不排斥各种优秀的开源框架，其内部提供了对各种优秀框架的直接支持（如：struts、hibernate、mybatis等）。\n   * 降低javaee api的使用难度：spring对javaee开发中非常难用的一些api（jdbc、javamail、远程调用等），都提供了封装，使这些api应用难度大大降低。\n   \n   # 缺点\n   \n   * spring依赖反射，反射影响性能\n   * 使用门槛升高，入门spring需要较长时间\n   \n   \n   # spring 框架中都用到了哪些设计模式\n   \n   spring 框架中使用到了大量的设计模式，下面列举了比较有代表性的：\n   \n   * 代理模式—在 aop 和 remoting 中被用的比较多。\n   * 单例模式—在 spring 配置文件中定义的 bean 默认为单例模式。\n   * 模板方法—用来解决代码重复的问题。比如. resttemplate, jmstemplate, jpatempl ate。\n   * 前端控制器—spring 提供了 dispatcherservlet 来对请求进行分发。\n   * 视图帮助(view helper )—spring 提供了一系列的 jsp 标签，高效宏来辅助将分散的代码整合在视图里。\n   * 依赖注入—贯穿于 beanfactory / applicationcontext 接口的核心理念。\n   * 工厂模式—beanfactory 用来创建对象的实例\n   \n   \n   # spring核心组件\n   \n   spring 总共大约有 20 个模块， 由 1300 多个不同的文件构成。而这些组件被分别整合在核心容器（core container） 、 aop（aspect oriented programming）和设备支持（instrmentation） 、数据访问与集成（data access/integeration） 、 web、 消息（messaging） 、 test等 6 个模块中。以下是 spring 5 的模块结构图：\n   \n   \n   \n   * spring core：提供了框架的基本组成部分，包括控制反转（inversion of control，ioc）和依赖注入（dependency injection，di）功能。\n   * spring beans：提供了beanfactory，是工厂模式的一个经典实现，spring将管理对象称为bean。\n   * spring context：构建于 core 封装包基础上的 context 封装包，提供了一种框架式的对象访问方法。\n   * spring jdbc：提供了一个jdbc的抽象层，消除了烦琐的jdbc编码和数据库厂商特有的错误代码解析， 用于简化jdbc。\n   * spring aop：提供了面向切面的编程实现，让你可以自定义拦截器、切点等。\n   * spring web：提供了针对 web 开发的集成特性，例如文件上传，利用 servlet listeners 进行 ioc 容器初始化和针对 web 的 applicationcontext。\n   * spring test：主要为测试提供支持的，支持使用junit或testng对spring组件进行单元测试和集成测试。\n   \n   \n   # spring 控制反转（ioc）\n   \n   # 控制反转（ioc）概念\n   \n   控制反转即ioc (inversion of control)，它把传统上由程序代码直接操控的对象的调用权交给容器，通过容器来实现对象组件的装配和管理。\n   \n   spring 通过一个配置文件描述 bean 及 bean 之间的依赖关系，利用 java 语言的反射功能(依赖注入di)实例化 bean 并建立 bean 之间的依赖关系。spring 的 ioc 容器在完成这些底层工作的基础上，还提供 了 bean 实例缓存、生命周期管理、 bean 实例代理、事件发布、资源装载等高级服务。\n   \n   # spring 容器高层视图\n   \n   spring 启动时读取应用程序提供的 bean 配置信息，并在 spring 容器中生成一份相应的 bean 配\n   \n   置注册表，然后根据这张注册表实例化 bean，装配好 bean 之间的依赖关系，为上层应用提供准\n   \n   备就绪的运行环境。其中 bean 缓存池为 hashmap 实现\n   \n   \n   \n   \n   # ioc 容器实现\n   \n   # beanfactory-框架基础设施\n   \n   beanfactory 是 spring 框架的基础设施，面向 spring 本身；\n   \n   applicationcontext 面向使用spring 框架的开发者，几乎所有的应用场合我们都直接使用 applicationcontext 而非底层的 beanfactory。\n   \n   \n   \n   * beandefinitionregistry 注册表：spring 配置文件中每一个节点元素在 spring 容器里都通过一个 beandefinition 对象表示，它描述了 bean 的配置信息。而 beandefinitionregistry 接口提供了向容器手工注册beandefinition 对象的方法。\n   * beanfactory 顶层接口：位于类结构树的顶端 ，它最主要的方法就是 getbean(string beanname)，该方法从容器中返回特定名称的 bean，beanfactory 的功能通过其他的接口得到不断扩展：\n   * listablebeanfactory：该接口定义了访问容器中 bean 基本信息的若干方法，如查看 bean 的个数、获取某一类型bean 的配置名、查看容器中是否包括某一 bean 等方法；\n   * hierarchicalbeanfactory 父子级：父子级联 ioc 容器的接口，子容器可以通过接口方法访问父容器；通过hierarchicalbeanfactory 接口， spring 的 ioc 容器可以建立父子层级关联的容器体系，子容器可以访问父容器中的 bean，但父容器不能访问子容器的 bean。spring 使用父子容器实现了很多功能，比如在 spring mvc 中，展现层 bean 位于一个子容器中，而业务层和持久层的 bean 位于父容器中。这样，展现层 bean 就可以引用业务层和持久层的 bean，而业务层和持久层的 bean 则看不到展现层的 bean。\n   * configurablebeanfactory：是一个重要的接口，增强了 ioc 容器的可定制性，它定义了设置类装载器、属性编辑器、容器初始化后置处理器等方法；\n   * autowirecapablebeanfactory 自动装配：定义了将容器中的 bean 按某种规则（如按名字匹配、按类型匹配等）进行自动装配的方法；\n   * singletonbeanregistry 运行期间注册单例 bean：定义了允许在运行期间向容器注册单实例 bean 的方法；对于单实例（ singleton）的 bean 来说，beanfactory 会缓存 bean 实例，所以第二次使用 getbean() 获取 bean 时将直接从ioc 容器的缓存中获取 bean 实例。spring 在 defaultsingletonbeanregistry 类中提供了一个用于缓存单实例 bean 的缓存器，它是一个用 hashmap 实现的缓存器，单实例的 bean 以beanname 为键保存在这个 hashmap 中。\n   * 依赖日志框架：在初始化 beanfactory 时，必须为其提供一种日志框架，比如使用 log4j， 即在类路径下提供 log4j 配置文件，这样启动 spring 容器才不会报错。\n   \n   \n   # applicationcontext 面向开发应用\n   \n   applicationcontext 由 beanfactory 派生而来，提供了更多面向实际应用的功能。\n   \n   applicationcontext 继承了 hierarchicalbeanfactory 和 listablebeanfactory 接口，在此基础\n   \n   上，还通过多个其他的接口扩展了 beanfactory 的功能：\n   \n   \n   \n   * classpathxmlapplicationcontext：默认从类路径加载配置文件\n   * filesystemxmlapplicationcontext：默认从文件系统中装载配置文件\n   * applicationeventpublisher：让容器拥有发布应用上下文事件的功能，包括容器启动事件、关闭事件等。\n   * messagesource：为应用提供 i18n 国际化消息访问的功能；\n   * resourcepatternresolver ：所有 applicationcontext 实现类都实现了类似于\n   * pathmatchingresourcepatternresolver：通过带前缀的 ant 风格的资源文件路径装载 spring 的配置文件。\n   * lifecycle：该接口是 spring 2.0 加入的，该接口提供了 start()和 stop()两个方法，主要用于控制异步处理过程。在具体使用时，该接口同时被 applicationcontext 实现及具体bean 实现， applicationcontext 会将 start/stop 的信息传递给容器中所有实现了该接口的 bean，以达到管理和控制 jmx、任务调度等目的。\n   * configurableapplicationcontext ：扩展于 applicationcontext，它新增加了两个主要的方法：refresh()和 close()，让 applicationcontext 具有启动、刷新和关闭应用上下文的能力。在应用上下文关闭的情况下调用 refresh()即可启动应用上下文，在已经启动的状态下，调用 refresh()则清除缓存并重新装载配置信息，而调用 close()则可关闭应用上下文。\n   \n   \n   # beanfactory 和 applicationcontext有什么区别？\n   \n   beanfactory和applicationcontext是spring的两大核心接口，都可以当做spring的容器。其中applicationcontext是beanfactory的子接口。\n   \n   # 依赖关系\n   \n   beanfactory：是spring里面最底层的接口，包含了各种bean的定义，读取bean配置文档，管理bean的加载、实例化，控制bean的生命周期，维护bean之间的依赖关系。\n   \n   applicationcontext：接口作为beanfactory的派生，除了提供beanfactory所具有的功能外，还提供了更完整的框架功能：\n   \n   * 继承messagesource，因此支持国际化。\n   * 统一的资源文件访问方式。\n   * 提供在监听器中注册bean的事件。\n   * 同时加载多个配置文件。\n   * 载入多个（有继承关系）上下文 ，使得每一个上下文都专注于一个特定的层次，比如应用的web层。\n   \n   # 加载方式\n   \n   beanfactroy：采用的是延迟加载形式来注入bean的，即只有在使用到某个bean时(调getbean())，才对该bean进行加载实例化。这样，我们就不能发现一些存在的spring的配置问题。如果bean的某一个属性没有注入，beanfacotry加载后，直至第一次使用调用getbean方法才会抛出异常。\n   \n   applicationcontext：它是在容器启动时，一次性创建了所有的bean。这样，在容器启动时，我们就可以发现spring中存在的配置错误，这样有利于检查所依赖属性是否注入。applicationcontext启动后预载入所有的单实例bean，通过预载入单实例bean ,确保当你需要的时候，你就不用等待，因为它们已经创建好了。\n   \n   相对于基本的beanfactory，applicationcontext 唯一的不足是占用内存空间。当应用程序配置bean较多时，程序启动较慢。\n   \n   # 创建方式\n   \n   beanfactory通常以编程的方式被创建，applicationcontext还能以声明的方式创建，如使用contextloader。\n   \n   # 注册方式\n   \n   beanfactory和applicationcontext都支持beanpostprocessor、beanfactorypostprocessor的使用，但两者之间的区别是：beanfactory需要手动注册，而applicationcontext则是自动注册。\n   \n   # applicationcontext通常的实现\n   \n   * filesystemxmlapplicationcontext ：此容器从一个xml文件中加载beans的定义，xml bean 配置文件的全路径名必须提供给它的构造函数。\n   * classpathxmlapplicationcontext：此容器也从一个xml文件中加载beans的定义，这里，你需要正确设置classpath因为这个容器将在classpath里找bean配置。\n   * webxmlapplicationcontext：此容器加载一个xml文件，此文件定义了一个web应用的所有bean。\n   \n   \n   # spring的依赖注入\n   \n   其主要实现方式有两种：依赖注入和依赖查找。\n   \n   依赖注入： 相对于ioc而言，依赖注入(di)更加准确地描述了ioc的设计理念。所谓依赖注入（dependency injection），即组件之间的依赖关系由容器在应用系统运行期来决定，也就是由容器动态地将某种依赖关系的目标对象实例注入到应用系统中的各个关联的组件之中。组件不做定位查询，只提供普通的java方法让容器去决定依赖关系。\n   \n   # 依赖注入的基本原则\n   \n   应用组件不应该负责查找资源或者其他依赖的协作对象。配置对象的工作应该由ioc容器负责，“查找资源”的逻辑应该从应用组件的代码中抽取出来，交给ioc容器负责。容器全权负责组件的装配，它会把符合依赖关系的对象通过属性（javabean中的setter）或者是构造器传递给需要的对象。\n   \n   依赖注入优势\n   \n   依赖注入之所以更流行是因为它是一种更可取的方式：让容器全权负责依赖查询，受管组件只需要暴露javabean的setter方法或者带参数的构造器或者接口，使容器可以在初始化时组装对象的依赖关系。其与依赖查找方式相比，主要优势为：\n   \n   * 查找定位操作与应用代码完全无关\n   * 不依赖于容器的api，可以很容易地在任何容器以外使用应用对象\n   * 不需要特殊的接口，绝大多数对象可以做到完全不必依赖容器\n   \n   依赖注入实现方式\n   \n   依赖注入是时下最流行的ioc实现方式，依赖注入分为接口注入（interface injection），setter方法注入（setter injection）和构造器注入（constructor injection）三种方式。其中接口注入由于在灵活性和易用性比较差，现在从spring4开始已被废弃。\n   \n   * 构造器依赖注入：构造器依赖注入通过容器触发一个类的构造器来实现的，该类有一系列参数，每个参数代表一个对其他类的依赖\n   * setter方法注入：setter方法注入是容器通过调用无参构造器或无参static工厂 方法实例化bean之后，调用该bean的setter方法，即实现了基于setter的依赖注入\n   \n   \n   # 构造器依赖注入和 setter方法注入的区别\n   \n   \n   \n   两种依赖方式都可以使用，构造器注入和setter方法注入。最好的解决方案是用构造器参数实现强制依赖，setter方法实现可选依赖。\n   \n   \n   # webapplication 体系架构\n   \n   webapplicationcontext 是专门为 web 应用准备的，它允许从相对于 web 根目录的路径中装载配置文件完成初始化工作。从 webapplicationcontext 中可以获得servletcontext 的引用，整个 web 应用上下文对象将作为属性放置到 servletcontext 中，以便 web 应用环境可以访问 spring 应用上下文。\n   \n   \n   \n   \n   # spring bean 定义\n   \n   一个spring bean 的定义包含容器必知的所有配置元数据，包括如何创建一个bean，它的生命周期详情及它的依赖。\n   \n   * spring元数据配置方式\n   * xml配置文件\n   * 基于注解的配置\n   * 基于java的配置\n   \n   \n   # spring bean 作用域\n   \n   spring 3 中为 bean 定义了 5 中作用域，分别为 singleton（单例）、prototype（原型）、request、session 和 global session，5 种作用域说明如下：\n   \n   * singleton：单例模式（多线程下不安全）。spring ioc 容器中只会存在一个共享的 bean 实例，无论有多少个bean 引用它，始终指向同一对象。该模式在多线程下是不安全的。singleton 作用域是spring 中的缺省作用域，也可以显示的将 bean 定义为 singleton 模式，配置为：\n   * prototype:原型模式每次使用时创建。每次通过 spring 容器获取 prototype 定义的 bean 时，容器都将创建一个新的 bean 实例，每个 bean 实例都有自己的属性和状态，而 singleton 全局只有一个对象。根据经验，对有状态的bean使用prototype作用域，而对无状态的bean使用singleton 作用域。\n   * request：一次 request 一个实例。在一次 http 请求中，容器会返回该 bean 的同一实例。而对不同的 http 请求则会产生新的 bean，而且该 bean 仅在当前 http request 内有效,当前 http 请求结束，该 bean实例也将会被销毁。\n   * session：在一次 http session 中，容器会返回该 bean 的同一实例。而对不同的 session 请求则会创建新的实例，该 bean 实例仅在当前 session 内有效。同 http 请求相同，每一次session 请求创建新的实例，而不同的实例之间不共享属性，且实例仅在自己的 session 请求内有效，请求结束，则实例将被销毁。\n   * global session：在一个全局的 http session 中，容器会返回该 bean 的同一个实例，仅在使用 portlet context 时有效。\n   \n   \n   # spring处理线程并发问题\n   \n   在一般情况下，只有无状态的bean才可以在多线程环境下共享，在spring中，绝大部分bean都可以声明为singleton作用域，因为spring对一些bean中非线程安全状态采用threadlocal进行处理，解决线程安全问题。\n   \n   threadlocal和线程同步机制都是为了解决多线程中相同变量的访问冲突问题。同步机制采用了“时间换空间”的方式，仅提供一份变量，不同的线程在访问前需要获取锁，没获得锁的线程则需要排队。而threadlocal采用了“空间换时间”的方式。\n   \n   threadlocal会为每一个线程提供一个独立的变量副本，从而隔离了多个线程对数据的访问冲突。因为每一个线程都拥有自己的变量副本，从而也就没有必要对该变量进行同步了。threadlocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的变量封装进threadlocal。\n   \n   \n   # spring bean 生命周期\n   \n   \n   \n   实例化\n   \n   1. 实例化一个 bean，也就是我们常说的 new。\n   \n   ioc 依赖注入\n   \n   1. 按照 spring 上下文对实例化的 bean 进行配置，也就是 ioc 注入。\n   \n   setbeanname 实现\n   \n   1. 如果这个 bean 已经实现了 beannameaware 接口，会调用它实现的 setbeanname(string)方法，此处传递的就是 spring 配置文件中 bean 的 id 值\n   \n   beanfactoryaware 实现\n   \n   1. 如果这个 bean 已经实现了 beanfactoryaware 接口，会调用它实现的 setbeanfactory，\n   \n   setbeanfactory(beanfactory)传递的是 spring 工厂自身（可以用这个方式来获取其它 bean，只需在 spring 配置文件中配置一个普通的 bean 就可以）。\n   \n   applicationcontextaware 实现\n   \n   1. 如果这个 bean 已经实现了 applicationcontextaware 接口，会调用setapplicationcontext(applicationcontext)方法，传入 spring 上下文（同样这个方式也可以实现步骤 4 的内容，但比 4 更好，因为 applicationcontext 是 beanfactory 的子接口，有更多的实现方法）\n   \n   postprocessbeforeinitialization 接口实现-初始化预处理\n   \n   1. 如果这个 bean 关联了 beanpostprocessor 接口，将会调用postprocessbeforeinitialization(object obj, string s)方法，beanpostprocessor 经常被用作是 bean 内容的更改，并且由于这个是在 bean 初始化结束时调用那个的方法，也可以被应用于内存或缓存技术。\n   \n   init-method\n   \n   1. 如果 bean 在 spring 配置文件中配置了 init-method 属性会自动调用其配置的初始化方法。\n   \n   postprocessafterinitialization\n   \n   1. 如果这个 bean 关联了 beanpostprocessor 接口，将会调用postprocessafterinitialization(object obj, string s)方法。\n   \n   > 注：以上工作完成以后就可以应用这个 bean 了，那这个 bean 是一个 singleton 的，所以一般情况下我们调用同一个 id 的 bean 会是在内容地址相同的实例，当然在 spring 配置文件中也可以配置非 singleton。\n   \n   destroy 过期自动清理阶段\n   \n   1. 当 bean 不再需要时，会经过清理阶段，如果 bean 实现了 disposablebean 这个接口，会调用那个其实现的 destroy()方法；\n   \n   destroy-method 自配置清理\n   \n   1. 最后，如果这个 bean 的 spring 配置中配置了 destroy-method 属性，会自动调用其配置的销毁方法。\n   \n   \n   # bean生命周期方法\n   \n   bean 标签有两个重要的属性（init-method 和 destroy-method）。用它们你可以自己定制\n   \n   初始化和注销方法。它们也有相应的注解（@postconstruct 和@predestroy）。\n   \n   <bean id="" class="" init-method="初始化方法" destroy-method="销毁方法">\n   \n   \n   1\n   \n   \n   \n   # 什么是spring的内部bean？什么是spring inner beans？\n   \n   在spring框架中，当一个bean仅被用作另一个bean的属性时，它能被声明为一个内部bean。\n   \n   内部bean可以用setter注入“属性”和构造方法注入“构造参数”的方式来实现，内部bean通常是匿名的，它们的scope一般是prototype。\n   \n   spring 依赖注入四种方式构造器注入\n   \n   /*带参数，方便利用构造器进行注入*/\n   \n   \n   \n    \n   \n   \n   \n    public catdaoimpl(string message){\n   \n   \n   \n    \n   \n   \n   \n    this. message = message;\n   \n   \n   \n    \n   \n   \n   \n    }\n   <bean id="catdaoimpl" class="com.catdaoimpl">\n   \n   \n   \n    \n   \n   \n   \n   <constructor-arg value=" message "></constructor-arg>\n   \n   \n   \n    \n   \n   \n   \n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   \n   \n   setter 方法注入\n   \n   public class id {\n   \n   \n   \n    \n   \n   \n   \n    private int id;\n   \n   \n   \n    \n   \n   \n   \n    public int getid() { return id; }\n   \n   \n   \n    \n   \n   \n   \n    public void setid(int id) { this.id = id; }\n   \n   \n   \n    \n   \n   \n   \n   }\n   <bean id="id" class="com.id "> <property name="id" value="123"></property> </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   \n   \n   静态工厂注入\n   \n   静态工厂顾名思义，就是通过调用静态工厂的方法来获取自己需要的对象，为了让 spring 管理所有对象，我们不能直接通过"工程类.静态方法()"来获取对象，而是依然通过 spring 注入的形式获取：\n   \n   public class daofactory { //静态工厂\n   \n   \n   \n    \n   \n   \n   \n    public static final factorydao getstaticfactorydaoimpl(){\n   \n   \n   \n    \n   \n   \n   \n    return new staticfacotrydaoimpl();\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n   }\n   \n   \n   \n    \n   \n   \n   \n   public class springaction {\n   \n   \n   \n    \n   \n   \n   \n    private factorydao staticfactorydao; //注入对象\n   \n   \n   \n    \n   \n   \n   \n    //注入对象的 set 方法\n   \n   \n   \n    \n   \n   \n   \n    public void setstaticfactorydao(factorydao staticfactorydao) {\n   \n   \n   \n    \n   \n   \n   \n    this.staticfactorydao = staticfactorydao;\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n   }\n   \x3c!--factory-method="getstaticfactorydaoimpl"指定调用哪个工厂方法--\x3e\n   \n   \n   \n    \n   \n   \n   \n    <bean name="springaction" class=" springaction" >\n   \n   \n   \n    \n   \n   \n   \n    \x3c!--使用静态工厂的方法注入对象,对应下面的配置文件--\x3e\n   \n   \n   \n    \n   \n   \n   \n    <property name="staticfactorydao" ref="staticfactorydao"></property>\n   \n   \n   \n    \n   \n   \n   \n    </bean>\n   \n   \n   \n    \n   \n   \n   \n    \x3c!--此处获取对象的方式是从工厂类中获取静态方法--\x3e\n   \n   \n   \n    \n   \n   \n   \n   <bean name="staticfactorydao" class="daofactory"\n   \n   \n   \n    \n   \n   \n   \n   factory-method="getstaticfactorydaoimpl"></bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   95\n   96\n   97\n   98\n   99\n   100\n   101\n   102\n   103\n   104\n   105\n   106\n   107\n   108\n   109\n   110\n   111\n   112\n   113\n   114\n   115\n   116\n   117\n   118\n   119\n   120\n   121\n   122\n   123\n   124\n   125\n   126\n   127\n   128\n   129\n   130\n   131\n   132\n   133\n   134\n   135\n   136\n   137\n   138\n   139\n   140\n   141\n   142\n   143\n   144\n   145\n   146\n   \n   \n   实例工厂\n   \n   实例工厂的意思是获取对象实例的方法不是静态的，所以你需要首先 new 工厂类，再调用普通的实例方法：\n   \n   public class daofactory { //实例工厂\n   \n   \n   \n    \n   \n   \n   \n    public factorydao getfactorydaoimpl(){\n   \n   \n   \n    \n   \n   \n   \n    return new factorydaoimpl();\n   \n   \n   \n    \n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n   }\n   \n   \n   \n    \n   \n   \n   \n   public class springaction {\n   \n   \n   \n    \n   \n   \n   \n    private factorydao factorydao; //注入对象\n   \n   \n   \n    \n   \n   \n   \n    public void setfactorydao(factorydao factorydao) {\n   \n   \n   \n    \n   \n   \n   \n    this.factorydao = factorydao;\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n   }\n   <bean name="springaction" class="springaction">\n   \n   \n   \n    \n   \n   \n   \n    \x3c!--使用实例工厂的方法注入对象,对应下面的配置文件--\x3e\n   \n   \n   \n    \n   \n   \n   \n    <property name="factorydao" ref="factorydao"></property>\n   \n   \n   \n    \n   \n   \n   \n    </bean>\n   \n   \n   \n    \n   \n   \n   \n    \x3c!--此处获取对象的方式是从工厂类中获取实例方法--\x3e\n   \n   \n   \n    \n   \n   \n   \n   <bean name="daofactory" class="com.daofactory"></bean>\n   \n   \n   \n    \n   \n   \n   \n   <bean name="factorydao" factory-bean="daofactory"\n   \n   \n   \n    \n   \n   \n   \n   factory-method="getfactorydaoimpl"></bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   95\n   96\n   97\n   98\n   99\n   100\n   101\n   102\n   103\n   104\n   105\n   106\n   107\n   108\n   109\n   110\n   111\n   112\n   113\n   114\n   115\n   116\n   117\n   118\n   119\n   120\n   121\n   122\n   123\n   124\n   125\n   126\n   127\n   128\n   129\n   130\n   131\n   132\n   133\n   134\n   135\n   136\n   137\n   138\n   139\n   140\n   141\n   142\n   \n   \n   \n   # 5 种不同方式的自动装配\n   \n   spring 装配包括手动装配和自动装配，手动装配是有基于 xml 装配、构造方法、setter 方法等自动装配有五种自动装配的方式，可以用来指导 spring 容器用自动装配方式来进行依赖注入。\n   \n   * no：默认的方式是不进行自动装配，通过显式设置 ref 属性来进行装配。\n   * byname：通过参数名 自动装配，spring 容器在配置文件中发现 bean 的 autowire 属性被设置成 byname，之后容器试图匹配、装配和该 bean 的属性具有相同名字的 bean。\n   * bytype：通过参数类型自动装配，spring 容器在配置文件中发现 bean 的 autowire 属性被设置成 bytype，之后容器试图匹配、装配和该 bean 的属性具有相同类型的 bean。如果有多个 bean 符合条件，则抛出错误。\n   * constructor：这个方式类似于 bytype， 但是要提供给构造器参数，如果没有确定的带参数的构造器参数类型，将会抛出异常。\n   * autodetect：首先尝试使用 constructor 来自动装配，如果无法工作，则使用 bytype 方式。\n   \n   \n   # spring 中注入一个 java collection\n   \n   spring 提供了以下四种集合类的配置元素：\n   \n   * <list> : 该标签用来装配可重复的 list 值。\n   * <set> : 该标签用来装配没有重复的 set 值。\n   * <map>: 该标签可用来注入键和值可以为任何类型的键值对。\n   * <props> : 该标签支持注入键和值都是字符串类型的键值对。\n   \n   <beans> \n   \n   \n   \n    \x3c!-- definition for javacollection --\x3e \n   \n   \n   \n    <bean id="javacollection" class="com.howtodoinjava.javacollection"> \n   \n   \n   \n    \x3c!-- java.util.list --\x3e \n   \n   \n   \n    <property name="customlist"> \n   \n   \n   \n    <list> \n   \n   \n   \n    <value>india</value> \n   \n   \n   \n    <value>pakistan</value> \n   \n   \n   \n    <value>usa</value> \n   \n   \n   \n    <value>uk</value> \n   \n   \n   \n    </list> \n   \n   \n   \n    </property> \n   \n   \n   \n    \n   \n   \n   \n    \x3c!-- java.util.set --\x3e \n   \n   \n   \n    <property name="customset"> \n   \n   \n   \n    <set> \n   \n   \n   \n    <value>india</value> \n   \n   \n   \n    <value>pakistan</value> \n   \n   \n   \n    <value>usa</value> \n   \n   \n   \n    <value>uk</value> \n   \n   \n   \n    </set> \n   \n   \n   \n    </property> \n   \n   \n   \n    \n   \n   \n   \n    \x3c!-- java.util.map --\x3e \n   \n   \n   \n    <property name="custommap"> \n   \n   \n   \n    <map> \n   \n   \n   \n    <entry key="1" value="india"/> \n   \n   \n   \n    <entry key="2" value="pakistan"/> \n   \n   \n   \n    <entry key="3" value="usa"/> \n   \n   \n   \n    <entry key="4" value="uk"/> \n   \n   \n   \n    </map> \n   \n   \n   \n    </property> \n   \n   \n   \n    \n   \n   \n   \n    \x3c!-- java.util.properties --\x3e \n   \n   \n   \n    <property name="customproperies"> \n   \n   \n   \n    <props> \n   \n   \n   \n    <prop key="admin">admin@nospam.com</prop> \n   \n   \n   \n    <prop key="support">support@nospam.com</prop> \n   \n   \n   \n    </props> \n   \n   \n   \n    </property> \n   \n   \n   \n    \n   \n   \n   \n    </bean> \n   \n   \n   \n   </beans>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   95\n   96\n   97\n   98\n   99\n   100\n   101\n   102\n   103\n   104\n   105\n   106\n   107\n   108\n   109\n   110\n   111\n   112\n   113\n   114\n   115\n   116\n   117\n   118\n   119\n   120\n   121\n   122\n   123\n   124\n   125\n   126\n   127\n   128\n   129\n   130\n   131\n   132\n   133\n   134\n   135\n   136\n   137\n   138\n   139\n   140\n   141\n   142\n   143\n   144\n   145\n   146\n   147\n   148\n   149\n   150\n   151\n   152\n   153\n   154\n   155\n   156\n   157\n   158\n   159\n   160\n   161\n   162\n   163\n   164\n   165\n   166\n   167\n   168\n   169\n   \n   \n   \n   # 使用@autowired注解自动装配的过程\n   \n   在使用@autowired注解之前需要在spring配置文件进行配置，<context:annotation-config />。\n   \n   在启动spring ioc时，容器自动装载了一个autowiredannotationbeanpostprocessor后置处理器，当容器扫描到@autowied、@resource或@inject时，就会在ioc容器自动查找需要的bean，并装配给该对象的属性。在使用@autowired时，首先在容器中查询对应类型的bean：\n   \n   * 如果查询结果刚好为一个，就将该bean装配给@autowired指定的数据；\n   * 如果查询的结果不止一个，那么@autowired会根据名称来查找；\n   * 如果上述查找的结果为空，那么会抛出异常。解决方法时，使用required=false。\n   \n   \n   # spring aop\n   \n   \n   # aop原理\n   \n   oop(object-oriented programming)面向对象编程，允许开发者定义纵向的关系，但并适用于定义横向的关系，导致了大量代码的重复，而不利于各个模块的重用。\n   \n   aop(aspect-oriented programming)，一般称为面向切面编程，作为面向对象的一种补充，用于将那些与业务无关，但却对多个对象产生影响的公共行为和逻辑，抽取并封装为一个可重用的模块，这个模块被命名为“切面”（aspect），减少系统中的重复代码，降低了模块间的耦合度，同时提高了系统的可维护性。\n   \n   aop 主要应用场景有\n   \n   * authentication 权限\n   * caching 缓存\n   * context passing 内容传递\n   * error handling 错误处理\n   * lazy loading 懒加载\n   * debugging 调试\n   * logging, tracing, profiling and monitoring 记录跟踪 优化 校准\n   * performance optimization 性能优化\n   * persistence 持久化\n   * resource pooling 资源池\n   * synchronization 同步\n   * transactions 事务\n   \n   \n   # aop 核心概念\n   \n   * 切面（aspect）：类是对物体特征的抽象，切面就是对横切关注点的抽象\n   * 横切关注点：对哪些方法进行拦截，拦截后怎么处理，这些关注点称之为横切关注点\n   * 连接点（joinpoint）：被拦截到的点，因为 spring 只支持方法类型的连接点，所以在 spring中连接点指的就是被拦截到的方法，实际上连接点还可以是字段或者构造器\n   * 切入点（pointcut）：对连接点进行拦截的定义\n   * 通知（advice）：所谓通知指的就是指拦截到连接点之后要执行的代码，通知分为前置、后置、异常、最终、环绕通知五类\n   * 目标对象：代理的目标对象\n   * 织入（weave）：将切面应用到目标对象并导致代理对象创建的过程\n     * 编译期：切面在目标类编译时被织入。aspectj的织入编译器是以这种方式织入切面的；\n     * 类加载期：切面在目标类加载到jvm时被织入。需要特殊的类加载器，它可以在目标类被引入应用之前增强该目标类的字节码。aspectj5的加载时织入就支持以这种方式织入切面；\n     * 运行期：切面在应用运行的某个时刻被织入。一般情况下，在织入切面时，aop容器会为目标对象动态地创建一个代理对象。springaop就是以这种方式织入切面。\n   * 引入（introduction）：在不修改代码的前提下，引入可以在运行期为类动态地添加一些方法或字段\n   \n   \n   # spring 中的代理\n   \n   将 advice 应用于目标对象后创建的对象称为代理。在客户端对象的情况下，目标对象和代理对象是相同的。\n   \n   > advice + target object = proxy\n   \n   \n   # aop 实现方式\n   \n   aop实现的关键在于代理模式，aop代理主要分为静态代理和动态代理。\n   \n   * aspectj 静态代理的增强，所谓静态代理，就是aop框架会在编译阶段生成aop代理类，因此也称为编译时增强，他会在编译阶段将aspectj(切面)织入到java字节码中，运行的时候就是增强之后的aop对象。\n   * spring aop使用的动态代理，所谓的动态代理就是说aop框架不会去修改字节码，而是每次运行时在内存中临时为方法生成一个aop对象，这个aop对象包含了目标对象的全部方法，并且在特定的切点做了增强处理，并回调原对象的方法。\n   \n   \n   # aop 两种代理方式\n   \n   spring 提供了两种方式来生成代理对象: jdk proxy 和 cglib，具体使用哪种方式生成由aopproxyfactory 根据 advisedsupport 对象的配置来决定。默认的策略是如果目标类是接口，则使用 jdk 动态代理技术，否则使用 cglib 来生成代理。\n   \n   \n   # jdk 动态接口代理\n   \n   jdk 动态代理主要涉及到 java.lang.reflect 包中的两个类：proxy 和 invocationhandler。\n   \n   invocationhandler是一个接口，通过实现该接口定义横切逻辑，并通过反射机制调用目标类的代码，动态将横切逻辑和业务逻辑编制在一起。\n   \n   proxy 利用 invocationhandler 动态创建一个符合某一接口的实例，生成目标类的代理对象。\n   \n   \n   # cglib 动态代理\n   \n   cglib 全称为 code generation library，是一个强大的高性能，高质量的代码生成类库，可以在运行期扩展 java 类与实现 java 接口，cglib 封装了 asm，可以再运行期动态生成新的 class。和 jdk 动态代理相比较：jdk 创建代理有一个限制，就是只能为接口创建代理实例，而对于没有通过接口定义业务方法的类，则可以通过 cglib 创建动态代理。\n   \n   实现原理\n   \n   @aspect\n   \n   public class transactiondemo {\n   \n   \n   \n    \n   \n   \n   \n    @pointcut(value="execution(* com.yangxin.core.service.*.*.*(..))")\n   \n   \n   \n    \n   \n   \n   \n    public void point(){\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n    @before(value="point()")\n   \n   \n   \n    \n   \n   \n   \n    public void before(){\n   \n   \n   \n    \n   \n   \n   \n    system.out.println("transaction begin");\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n    @afterreturning(value = "point()")\n   \n   \n   \n    \n   \n   \n   \n    public void after(){\n   \n   \n   \n    \n   \n   \n   \n    system.out.println("transaction commit");\n   \n   \n   \n    \n   \n   \n   \n    }\n   \n   \n   \n    \n   \n   \n   \n    @around("point()")\n   \n   \n   \n    \n   \n   \n   \n    public void around(proceedingjoinpoint joinpoint) throws throwable{\n   \n   \n   \n    \n   \n   \n   \n    system.out.println("transaction begin");\n   \n   \n   \n    \n   \n   \n   \n    joinpoint.proceed();\n   \n   \n   \n    \n   \n   \n   \n    system.out.println("transaction commit");\n   \n   \n   \n    \n   \n   \n   \n    } }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   95\n   96\n   97\n   98\n   99\n   100\n   101\n   102\n   103\n   104\n   105\n   106\n   107\n   108\n   109\n   110\n   111\n   112\n   113\n   114\n   115\n   116\n   117\n   118\n   119\n   120\n   121\n   122\n   123\n   124\n   125\n   126\n   127\n   128\n   129\n   130\n   131\n   132\n   133\n   134\n   135\n   136\n   137\n   138\n   139\n   \n   \n   \n   # spring在运行时通知对象\n   \n   通过在代理类中包裹切面，spring在运行期把切面织入到spring管理的bean中。代理封装了目标类，并拦截被通知方法的调用，再把调用转发给真正的目标bean。当代理拦截到方法调用时，在调用目标bean方法之前，会执行切面逻辑。\n   \n   直到应用需要被代理的bean时，spring才创建代理对象。如果使用的是applicationcontext的话，在applicationcontext从beanfactory中加载所有bean的时候，spring才会创建被代理的对象。因为spring运行时才创建代理对象，所以我们不需要特殊的编译器来织入springaop的切面。\n   \n   \n   # spring只支持方法级别的连接点\n   \n   因为spring基于动态代理，所以spring只支持方法连接点。spring缺少对字段连接点的支持，而且它不支持构造器连接点。方法之外的连接点拦截功能，我们可以利用aspect来补充。\n   \n   在spring aop 中，关注点和横切关注的区别是什么？在 spring aop 中 concern 和 cross-cutting concern 的不同之处\n   \n   关注点（concern）是应用中一个模块的行为，一个关注点可能会被定义成一个我们想实现的一个功能。\n   \n   横切关注点（cross-cutting concern）是一个关注点，此关注点是整个应用都会使用的功能，并影响整个应用，比如日志，安全和数据传输，几乎应用的每个模块都需要的功能。因此这些都属于横切关注点。\n   \n   \n   # spring通知类型\n   \n   在aop术语中，切面的工作被称为通知，实际上是程序执行时要通过springaop框架触发的代码段。spring切面可以应用5种类型的通知：\n   \n   * 前置通知（before）：在目标方法被调用之前调用通知功能；\n   * 后置通知（after）：在目标方法完成之后调用通知，此时不会关心方法的输出是什么；\n   * 返回通知（after-returning ）：在目标方法成功执行之后调用通知；\n   * 异常通知（after-throwing）：在目标方法抛出异常后调用通知；\n   * 环绕通知（around）：通知包裹了被通知的方法，在被通知的方法调用之前和调用之后执行自定义的行为。\n   \n   # 同一个aspect，不同advice的执行顺序：\n   \n   没有异常情况下的执行顺序：\n   \n   * around before advice\n   * before advice\n   * target method 执行\n   * around after advice\n   * after advice\n   * afterreturning\n   \n   有异常情况下的执行顺序：\n   \n   * around before advice\n   * before advice\n   * target method 执行\n   * around after advice\n   * after advice\n   * afterthrowing:异常发生\n   * java.lang.runtimeexception: 异常发生\n   \n   \n   # spring mvc\n   \n   \n   # spring mvc 原理\n   \n   spring 的模型-视图-控制器（mvc）框架是围绕一个 dispatcherservlet 来设计的，这个 servlet会把请求分发给各个处理器，并支持可配置的处理器映射、视图渲染、本地化、时区与主题渲染等，甚至还能支持文件上传。\n   \n   \n   \n   http 请求到 dispatcherservlet\n   \n   (1) 客户端请求提交到 dispatcherservlet。\n   \n   handlermapping 寻找处理器\n   \n   (2) 由 dispatcherservlet 控制器查询一个或多个 handlermapping，找到处理请求的controller。\n   \n   调用处理器 controller\n   \n   (3) dispatcherservlet 将请求提交到 controller。\n   \n   controller 调用业务逻辑处理后，返回 modelandview\n   \n   (4)(5)调用业务处理和返回结果：controller 调用业务逻辑处理后，返回 modelandview。\n   \n   dispatcherservlet 查询 modelandview\n   \n   (6)(7)处理视图映射并返回模型：dispatcherservlet 查询一个或多个 viewresoler 视图解析器，找到 modelandview 指定的视图。\n   \n   modelandview 反馈浏览器 http\n   \n   (8) http 响应：视图负责将结果显示到客户端。\n   \n   \n   # spring data\n   \n   \n   # spring orm理解\n   \n   spring 通过提供orm模块，支持我们在直接jdbc之上使用一个对象/关系映射映射(orm)工具，spring 支持集成主流的orm框架，如hiberate，jdo和 ibatis，jpa，toplink，jdo，ojb 。spring的事务管理同样支持以上所有orm框架及jdbc。\n   \n   解释jdbc抽象和dao模块\n   \n   通过使用jdbc抽象和dao模块，保证数据库代码的简洁，并能避免数据库资源错误关闭导致的问题，它在各种不同的数据库的错误信息之上，提供了一个统一的异常访问层。它还利用spring的aop 模块给spring应用中的对象提供事务管理服务。\n   \n   \n   # spring dao 的支持\n   \n   spring dao（数据访问对象） 使得 jdbc，hibernate 或 jdo 这样的数据访问技术更容易以一种统一的方式工作。这使得用户容易在持久性技术之间切换。它还允许您在编写代码时，无需考虑捕获每种技术不同的异常。\n   \n   \n   # spring jdbc api\n   \n   * jdbctemplate\n   * simplejdbctemplate\n   * namedparameterjdbctemplate\n   * simplejdbcinsert\n   * simplejdbccall\n   \n   \n   # jdbctemplate是什么\n   \n   jdbctemplate 类提供了很多便利的方法解决诸如把数据库数据转变成基本数据类型或对象，执行写好的或可调用的数据库操作语句，提供自定义的数据错误处理。\n   \n   \n   # 使用spring通过什么方式访问hibernate？\n   \n   有两种方式访问hibernate：\n   \n   * 使用 hibernate 模板和回调进行控制反转\n   * 扩展 hibernatedaosupport 并应用 aop 拦截器节点\n   \n   \n   # spring 支持的 orm\n   \n   spring 支持以下 orm：\n   \n   * hibernate\n   * ibatis\n   * jpa (java persistence api)\n   * toplink\n   * jdo (java data objects)\n   * ojb\n   \n   如何通过 hibernatedaosupport 将 spring 和 hibernate 结合起来？\n   \n   用 spring 的 sessionfactory 调用 localsessionfactory。集成过程分三步：\n   \n   * 配置 the hibernate sessionfactory\n   * 继承 hibernatedaosupport\n   * 实现一个 dao 在 aop 支持的事务中装配\n   \n   \n   # spring 支持的事务管理类型\n   \n   spring 支持两种类型的事务管理：\n   \n   * 编程式事务管理：这意味你通过编程的方式管理事务，给你带来极大的灵活性，但是 难维护。\n   * 声明式事务管理：这意味着你可以将业务代码和事务管理分离，你只需用注解和 xml 配置来管理事务。\n   \n   \n   # spring 框架的事务管理有哪些优点？\n   \n   它为不同的事务 api 如 jta，jdbc，hibernate，jpa 和 jdo，提供一个不变 的编程模式。\n   \n   它为编程式事务管理提供了一套简单的 api 而不是一些复杂的事务 api 如 它支持声明式事务管理。它和 spring 各种数据访问抽象层很好得集成。\n   \n   \n   # 你更倾向用那种事务管理类型？\n   \n   大多数 spring 框架的用户选择声明式事务管理，因为它对应用代码的影响最小，因 此更符合一个无侵入的轻量级容器的思想。声明式事务管理要优于编程式事务管理， 虽然比编程式事务管理（这种方式允许你通过代码控制事务）少了一点灵活性。\n   \n   \n   # spring常用注解\n   \n   # 声明bean的注解\n   \n   * @component ：组件，没有明确的角色\n   * @service ：在业务逻辑层使用\n   * @repository ：在数据访问层使用\n   * @controller ：在展现层使用，控制层的声明\n   * @restcontroller ：@controller和@responsebody组合，，控制层的声明\n   \n   # 注入bean的注解\n   \n   * @autowired：\n   \n   spring自带的注解，通过autowiredannotationbeanpostprocessor 类实现的依赖注入，作用在constructor、method、parameter、field、annotation_type。默认是根据类型（bytype ）进行自动装配的。如果有多个类型一样的bean候选者，需要指定按照名称（byname ）进行装配，则需要配合@qualifier。\n   \n   指定名称后，如果spring ioc容器中没有对应的组件bean抛出nosuchbeandefinitionexception。也可以将@autowired中required配置为false，如果配置为false之后，当没有找到相应bean的时候，系统不会抛异常\n   \n   * @inject：\n   \n   jsr330 (dependency injection for java)中的规范，需要导入javax.inject.inject jar包 ，才能实现注入 作用constructor、method、field上\n   \n   根据类型进行自动装配的，如果需要按名称进行装配，则需要配合@named\n   \n   * @resource：\n   \n   jsr250规范的实现，在javax.annotation包下，作用type、field、method上。\n   \n   默认根据属性名称进行自动装配的，如果有多个类型一样的bean候选者，则可以通过name进行指定进行注入\n   \n   # java配置类相关注解\n   \n   * @configuration ：声明当前类为配置类，相当于xml形式的spring配置（类上），声明当前类为配置类，其中内部组合了@component注解，表明这个类是一个bean（类上）\n   * @bean ：注解在方法上，声明当前方法的返回值为一个bean，替代xml中的方式（方法上）\n   * @componentscan ：用于对component进行扫描，相当于xml中的（类上）\n   * @wishlyconfiguration ：为@configuration与@componentscan的组合注解，可以替代这两个注解\n   \n   # 切面（aop）相关注解\n   \n   spring支持aspectj的注解式切面编程\n   \n   * @aspect：声明一个切面（类上），使用@after、@before、@around定义建言（advice），可直接将拦截规则（切点）作为参数。\n   * @after ：在方法执行之后执行（方法上）\n   * @before ：在方法执行之前执行（方法上）\n   * @around ：在方法执行之前与之后执行（方法上）\n   * @pointcut ：声明切点在java配置类中使用@enableaspectjautoproxy注解开启spring对aspectj代理的支持（类上）\n   \n   \n   # @bean的属性支持\n   \n   @scope 设置spring容器如何新建bean实例（方法上，得有@bean），其设置类型包括：\n   \n   * singleton：单例,一个spring容器中只有一个bean实例，默认模式\n   * protetype：每次调用新建一个bean\n   * request：web项目中，给每个http request新建一个bean\n   * session ：web项目中，给每个http session新建一个bean\n   * global：session给每一个 global http session新建一个bean实例\n   * @stepscope：在spring batch中还有涉及(spring batch 之 背景框架简介_vincent-csdn博客)\n   * @postconstruct ：由jsr-250提供，在构造函数执行完之后执行，等价于xml配置文件中bean的initmethod\n   * @predestory ：由jsr-250提供，在bean销毁之前执行，等价于xml配置文件中bean的destroymethod\n   \n   \n   # @value注解\n   \n   为属性注入值,支持如下方式的注入：\n   \n   注入普通字符\n   \n   \n   \n   注入操作系统属性\n   \n   \n   \n   注入表达式结果\n   \n   \n   \n   注入其它bean属性\n   \n   \n   \n   注入文件资源\n   \n   \n   \n   注入网站资源\n   \n   \n   \n   注入配置文件\n   \n   \n   \n   @propertysource 加载配置文件(类上)，还需配置一个propertysourcesplaceholderconfigurer的bean。\n   \n   \n   # 环境切换\n   \n   * @profile ：通过设定environment的activeprofiles来设定当前context需要使用的配置环境。（类或方法上）\n   * @conditional：spring4中可以使用此注解定义条件话的bean，通过实现condition接口，并重写matches方法，从而决定该bean是否被实例化。（方法上）\n   \n   \n   # 异步相关\n   \n   * @enableasync：配置类中，通过此注解开启对异步任务的支持，叙事性asyncconfigurer接口（类上）\n   * @async：在实际执行的bean方法使用该注解来申明其是一个异步任务（方法上或类上所有的方法都将异步，需要@enableasync开启异步任务）\n   \n   \n   # 定时任务相关\n   \n   * @enablescheduling ：在配置类上使用，开启计划任务的支持（类上）\n   * @scheduled ：来申明这是一个任务，包括cron,fixdelay,fixrate等类型（方法上，需先开启计划任务的支持）\n   \n   \n   # @enable 注解说明\n   \n   这些注解主要用来开启对xxx的支持。\n   \n   * @enableaspectjautoproxy ：开启对aspectj自动代理的支持\n   * @enableasync ：开启异步方法的支持\n   * @enablescheduling ：开启计划任务的支持\n   * @enablewebmvc ：开启web mvc的配置支持\n   * @enableconfigurationproperties ：开启对@configurationproperties注解配置bean的支持\n   * @enablejparepositories ：开启对springdata jpa repository的支持\n   * @enabletransactionmanagement ：开启注解式事务的支持\n   * @enablecaching ：开启注解式的缓存支持\n   \n   \n   # 测试相关注解\n   \n   * @runwith ：运行器，spring中通常用于对junit的支持\n   * @contextconfiguration：用来加载配置applicationcontext，其中classes属性用来加载配置类\n   \n   \n   # springmvc部分\n   \n   * @enablewebmvc ：在配置类中开启web mvc的配置支持，如一些viewresolver或者messageconverter等，若无此句，重写webmvcconfigureradapter方法（用于对springmvc的配置）。\n   * @controller ：声明该类为springmvc中的controller\n   * @requestmapping ：用于映射web请求，包括访问路径和参数（类或方法上）\n   * @responsebody ：支持将返回值放在response内，而不是一个页面，通常用户返回json数据（返回值旁或方法上）\n   * @requestbody ：允许request的参数在request体中，而不是在直接连接在地址后面。（放在参数前）\n   * @pathvariable ：用于接收路径参数，比如@requestmapping(“/hello/{name}”)申明的路径，将注解放在参数中前，即可获取该值，通常作为restful的接口实现方法。\n   * @restcontroller ：该注解为一个组合注解，相当于@controller和@responsebody的组合，注解在类上，意味着，该controller的所有方法都默认加上了@responsebody。\n   * @controlleradvice ：通过该注解，我们可以将对于控制器的全局配置放置在同一个位置，注解了@controller的类的方法可使用@exceptionhandler、@initbinder、@modelattribute注解到方法上，这对所有注解了 @requestmapping的控制器内的方法有效。\n   * @exceptionhandler ：用于全局处理控制器里的异常\n   * @initbinder ：用来设置webdatabinder，webdatabinder用来自动绑定前台请求参数到model中。\n   * @modelattribute ：本来的作用是绑定键值对到model里，在@controlleradvice中是让全局的@requestmapping：都能获得在此处设置的键值对。',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"March 6, 2022 13:53",updateTimeStamp:1646574803e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"SpringBoot+SpringSecurity前后端分离+Jwt的权限认证",frontmatter:{author:"xlc520",title:"SpringBoot+SpringSecurity前后端分离+Jwt的权限认证",description:"SpringBoot+SpringSecurity前后端分离+Jwt的权限认证",time:"2022-02-13T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/SpringBoot+SpringSecurity%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB+Jwt%E7%9A%84%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81.html",relativePath:"Java/SpringBoot+SpringSecurity前后端分离+Jwt的权限认证.md",key:"v-4df2d3aa",path:"/Java/SpringBoot+SpringSecurity%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB+Jwt%E7%9A%84%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:46},{level:2,title:"一、五个handler一个filter两个User",slug:"一、五个handler一个filter两个user",normalizedTitle:"一、五个handler一个filter两个user",charIndex:368},{level:3,title:"1.1 AuthenticationEntryPoint",slug:"_1-1-authenticationentrypoint",normalizedTitle:"1.1 authenticationentrypoint",charIndex:664},{level:3,title:"1.2 AuthenticationSuccessHandler",slug:"_1-2-authenticationsuccesshandler",normalizedTitle:"1.2 authenticationsuccesshandler",charIndex:1254},{level:3,title:"1.3 AuthenticationFailureHandler",slug:"_1-3-authenticationfailurehandler",normalizedTitle:"1.3 authenticationfailurehandler",charIndex:2248},{level:3,title:"1.4 LogoutSuccessHandler",slug:"_1-4-logoutsuccesshandler",normalizedTitle:"1.4 logoutsuccesshandler",charIndex:2914},{level:3,title:"1.5 AccessDeniedHandler",slug:"_1-5-accessdeniedhandler",normalizedTitle:"1.5 accessdeniedhandler",charIndex:3551},{level:3,title:"1.6 一个过滤器OncePerRequestFilter",slug:"_1-6-一个过滤器onceperrequestfilter",normalizedTitle:"1.6 一个过滤器onceperrequestfilter",charIndex:4039},{level:3,title:"1.7 实现UserDetails扩充字段",slug:"_1-7-实现userdetails扩充字段",normalizedTitle:"1.7 实现userdetails扩充字段",charIndex:7362},{level:3,title:"1.8 实现UserDetailsService",slug:"_1-8-实现userdetailsservice",normalizedTitle:"1.8 实现userdetailsservice",charIndex:9443},{level:3,title:"1.9 userSessionService",slug:"_1-9-usersessionservice",normalizedTitle:"1.9 usersessionservice",charIndex:11657},{level:3,title:"1.10 ResonseUtil",slug:"_1-10-resonseutil",normalizedTitle:"1.10 resonseutil",charIndex:13645},{level:2,title:"二、配置WebSecurityConfigurerAdapter",slug:"二、配置websecurityconfigureradapter",normalizedTitle:"二、配置websecurityconfigureradapter",charIndex:16015},{level:2,title:"三、其他",slug:"三、其他",normalizedTitle:"三、其他",charIndex:21486},{level:3,title:"3.1 不足之处",slug:"_3-1-不足之处",normalizedTitle:"3.1 不足之处",charIndex:21617},{level:3,title:"3.2 解决",slug:"_3-2-解决",normalizedTitle:"3.2 解决",charIndex:22134}],readingTime:{minutes:17.3,words:5191},headersStr:"前言 一、五个handler一个filter两个User 1.1 AuthenticationEntryPoint 1.2 AuthenticationSuccessHandler 1.3 AuthenticationFailureHandler 1.4 LogoutSuccessHandler 1.5 AccessDeniedHandler 1.6 一个过滤器OncePerRequestFilter 1.7 实现UserDetails扩充字段 1.8 实现UserDetailsService 1.9 userSessionService 1.10 ResonseUtil 二、配置WebSecurityConfigurerAdapter 三、其他 3.1 不足之处 3.2 解决",content:'# SpringBoot+SpringSecurity前后端分离+Jwt的权限认证\n\n\n# 前言\n\n一般来说，我们用SpringSecurity默认的话是前后端整在一起的，比如thymeleaf或者Freemarker，SpringSecurity还自带login登录页,还让你配置登出页,错误页。 但是现在前后端分离才是正道，前后端分离的话，那就需要将返回的页面换成Json格式交给前端处理了\n\nSpringSecurity默认的是采用Session来判断请求的用户是否登录的，但是不方便分布式的扩展，虽然SpringSecurity也支持采用SpringSession来管理分布式下的用户状态，不过现在分布式的还是无状态的Jwt比较主流。 所以下面说下怎么让SpringSecurity变成前后端分离，采用Jwt来做认证的\n\n\n# 一、五个handler一个filter两个User\n\n5个handler，分别是\n\n * 实现AuthenticationEntryPoint接口,当匿名请求需要登录的接口时,拦截处理\n * 实现AuthenticationSuccessHandler接口,当登录成功后,该处理类的方法被调用\n * 实现AuthenticationFailureHandler接口,当登录失败后,该处理类的方法被调用\n * 实现AccessDeniedHandler接口,当登录后,访问接口没有权限的时候,该处理类的方法被调用\n * 实现LogoutSuccessHandler接口,注销的时候调用\n\n\n# 1.1 AuthenticationEntryPoint\n\n匿名未登录的时候访问，遇到需要登录认证的时候被调用\n\n/**\n * 匿名未登录的时候访问,需要登录的资源的调用类\n * @author zzzgd\n */\n@Component\npublic class CustomerAuthenticationEntryPoint implements AuthenticationEntryPoint {\n    @Override\n    public void commence(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, AuthenticationException e) throws IOException, ServletException {\n\t    //设置response状态码，返回错误信息等\n\t    ...\n        ResponseUtil.out(401, ResultUtil.failure(ErrorCodeConstants.REQUIRED_LOGIN_ERROR));\n    }\n}\n\n1234567891011121314\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 1.2 AuthenticationSuccessHandler\n\n这里是我们输入的用户名和密码登录成功后，调用的方法 简单的说就是获取用户信息，使用JWT生成token，然后返回token\n\n/**\n * 登录成功处理类,登录成功后会调用里面的方法\n * @author Exrickx\n */\n@Slf4j\n@Component\npublic class CustomerAuthenticationSuccessHandler implements AuthenticationSuccessHandler {\n\n\n    @Override\n    public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {\n    \t//简单的说就是获取当前用户，拿到用户名或者userId，创建token，返回\n        log.info("登陆成功...");\n        CustomerUserDetails principal = (CustomerUserDetails) authentication.getPrincipal();\n        //颁发token\n        Map<String,Object> emptyMap = new HashMap<>(4);\n        emptyMap.put(UserConstants.USER_ID,principal.getId());\n        String token = JwtTokenUtil.generateToken(principal.getUsername(), emptyMap);\n        ResponseUtil.out(ResultUtil.success(token));\n    }\n}\n12345678910111213141516171819202122\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 1.3 AuthenticationFailureHandler\n\n有登陆成功就有登录失败 登录失败的时候调用这个方法，可以在其中做登录错误限制或者其他操作，我这里直接就是设置响应头的状态码为401，返回\n\n/**\n * 登录账号密码错误等情况下,会调用的处理类\n * @author Exrickx\n */\n@Slf4j\n@Component\npublic class CustomerAuthenticationFailHandler implements AuthenticationFailureHandler {\n\n\n    @Override\n    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException e) throws IOException, ServletException {\n    //设置response状态码，返回错误信息等\n    \t....\n        ResponseUtil.out(401, ResultUtil.failure(ErrorCodeConstants.LOGIN_UNMATCH_ERROR));\n    }\n\n}\n\n12345678910111213141516171819\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 1.4 LogoutSuccessHandler\n\n登出注销的时候调用，Jwt有个缺点就是无法主动控制失效，可以采用Jwt+session的方式，比如删除存储在Redis的token\n\n这里需要注意，如果将SpringSecurity的session配置为无状态，或者不保存session，这里authentication为null！！ ，注意空指针问题。（详情见下面的配置WebSecurityConfigurerAdapter）\n\n/**\n * 登出成功的调用类\n * @author zzzgd\n */\n@Component\npublic class CustomerLogoutSuccessHandler implements LogoutSuccessHandler {\n    @Override\n    public void onLogoutSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {\n        ResponseUtil.out(ResultUtil.success("Logout Success!"));\n    }\n}\n1234567891011\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 1.5 AccessDeniedHandler\n\n登录后，访问缺失权限的资源会调用。\n\n/**\n * 没有权限,被拒绝访问时的调用类\n * @author Exrickx\n */\n@Component\n@Slf4j\npublic class CustomerRestAccessDeniedHandler implements AccessDeniedHandler {\n\n    @Override\n    public void handle(HttpServletRequest request, HttpServletResponse response, AccessDeniedException accessDeniedException) {\n        ResponseUtil.out(403, ResultUtil.failure(ErrorCodeConstants.PERMISSION_DENY));\n    }\n\n}\n1234567891011121314\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 1.6 一个过滤器OncePerRequestFilter\n\n这里算是一个小重点。 上面我们在登录成功后，返回了一个token，那怎么使用这个token呢？\n\n前端发起请求的时候将token放在请求头中，在过滤器中对请求头进行解析。\n\n 1. 如果有accessToken的请求头（可以自已定义名字），取出token，解析token，解析成功说明token正确，将解析出来的用户信息放到SpringSecurity的上下文中\n 2. 如果有accessToken的请求头，解析token失败（无效token，或者过期失效），取不到用户信息，放行\n 3. 没有accessToken的请求头，放行\n\n这里可能有人会疑惑，为什么token失效都要放行呢？ 这是因为SpringSecurity会自己去做登录的认证和权限的校验，靠的就是我们放在SpringSecurity上下文中的SecurityContextHolder.getContext().setAuthentication(authentication);，没有拿到authentication，放行了，SpringSecurity还是会走到认证和校验，这个时候就会发现没有登录没有权限。\n\n> 旧版本, 最新在底部\n\npackage com.zgd.shop.web.config.auth.filter;\n\nimport com.zgd.shop.common.constants.SecurityConstants;\nimport com.zgd.shop.common.util.jwt.JwtTokenUtil;\nimport com.zgd.shop.web.config.auth.user.CustomerUserDetailService;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.filter.OncePerRequestFilter;\n\nimport javax.servlet.FilterChain;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n/**\n * 过滤器,在请求过来的时候,解析请求头中的token,再解析token得到用户信息,再存到SecurityContextHolder中\n * @author zzzgd\n */\n@Component\n@Slf4j\npublic class CustomerJwtAuthenticationTokenFilter extends OncePerRequestFilter {\n\n    @Autowired\n    CustomerUserDetailService customerUserDetailService;\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws ServletException, IOException {\n        \n    \t//请求头为 accessToken\n    \t//请求体为 Bearer token\n\n    \tString authHeader = request.getHeader(SecurityConstants.HEADER);\n\n        if (authHeader != null && authHeader.startsWith(SecurityConstants.TOKEN_SPLIT)) {\n\n            final String authToken = authHeader.substring(SecurityConstants.TOKEN_SPLIT.length());\n            String username = JwtTokenUtil.parseTokenGetUsername(authToken);\n            if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {\n                UserDetails userDetails = customerUserDetailService.loadUserByUsername(username);\n                if (userDetails != null) {\n                    UsernamePasswordAuthenticationToken authentication =\n                            new UsernamePasswordAuthenticationToken(userDetails, userDetails.getPassword(), userDetails.getAuthorities());\n                    authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n                    SecurityContextHolder.getContext().setAuthentication(authentication);\n                }\n            }\n        }\n        chain.doFilter(request, response);\n    }\n}\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# 1.7 实现UserDetails扩充字段\n\n这个接口表示的用户信息，SpringSecurity默认实现了一个User，不过字段寥寥无几，只有username，password这些，而且后面获取用户信息的时候也是获取的UserDetail。\n\n于是我们将自己的数据库的User作为拓展，自己实现这个接口。继承的是数据库对应的User，而不是SpringSecurity的User\n\npackage com.zgd.shop.web.config.auth.user;\n\nimport com.zgd.shop.common.constants.UserConstants;\nimport com.zgd.shop.dao.entity.model.User;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\n\nimport java.util.Collection;\n\n/**\n * CustomerUserDetails\n *\n * @author zgd\n * @date 2019/7/17 15:29\n */\npublic class CustomerUserDetails extends User implements UserDetails {\n\n  private Collection<? extends GrantedAuthority> authorities;\n\n  public CustomerUserDetails(User user){\n    this.setId(user.getId());\n    this.setUsername(user.getUsername());\n    this.setPassword(user.getPassword());\n    this.setRoles(user.getRoles());\n    this.setStatus(user.getStatus());\n  }\n\n  public void setAuthorities(Collection<? extends GrantedAuthority> authorities) {\n    this.authorities = authorities;\n  }\n\n  /**\n   * 添加用户拥有的权限和角色\n   * @return\n   */\n  @Override\n  public Collection<? extends GrantedAuthority> getAuthorities() {\n    return this.authorities;\n  }\n\n  /**\n   * 账户是否过期\n   * @return\n   */\n  @Override\n  public boolean isAccountNonExpired() {\n    return true;\n  }\n\n  /**\n   * 是否禁用\n   * @return\n   */\n  @Override\n  public boolean isAccountNonLocked() {\n    return  true;\n  }\n\n  /**\n   * 密码是否过期\n   * @return\n   */\n  @Override\n  public boolean isCredentialsNonExpired() {\n    return true;\n  }\n\n  /**\n   * 是否启用\n   * @return\n   */\n  @Override\n  public boolean isEnabled() {\n    return UserConstants.USER_STATUS_NORMAL.equals(this.getStatus());\n  }\n}\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n\n\n\n# 1.8 实现UserDetailsService\n\nSpringSecurity在登录的时候，回去数据库（或其他来源），根据username获取正确的user信息，就会根据这个service类，拿到用户的信息和权限。我们自己实现\n\nimport com.alibaba.fastjson.JSON;\nimport com.zgd.shop.dao.entity.model.User;\nimport com.zgd.shop.service.IUserService;\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.commons.collections.CollectionUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\nimport org.springframework.stereotype.Service;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * @author zgd\n * @date 2019/1/16 16:27\n * @description 自己实现UserDetailService,用与SpringSecurity获取用户信息\n */\n@Service\n@Slf4j\npublic class CustomerUserDetailService implements UserDetailsService {\n\n  @Autowired\n  private IUserService userService;\n\n  /**\n   * 获取用户信息,然后交给spring去校验权限\n   * @param username\n   * @return\n   * @throws UsernameNotFoundException\n   */\n  @Override\n  public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n    //获取用户信息\n    User user = userService.getUserRoleByUserName(username);\n    if(user == null){\n      throw new UsernameNotFoundException("用户名不存在");\n    }\n    CustomerUserDetails customerUserDetails = new CustomerUserDetails(user);\n\n    List<SimpleGrantedAuthority> authorities = new ArrayList<>();\n    //用于添加用户的权限。只要把用户权限添加到authorities 就万事大吉。\n    if (CollectionUtils.isNotEmpty(user.getRoles())){\n      user.getRoles().forEach(r -> authorities.add(new SimpleGrantedAuthority("ROLE_"+r.getRoleName())));\n    }\n    customerUserDetails.setAuthorities(authorities);\n    log.info("authorities:{}", JSON.toJSONString(authorities));\n    \n    //这里返回的是我们自己定义的UserDetail\n    return customerUserDetails;\n  }\n}\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 1.9 userSessionService\n\npackage com.zgd.springboot.web.common.user;\n\n\nimport com.zgd.springboot.web.auth.user.CustomerUserDetails;\nimport com.zgd.springboot.web.manager.RedisManager;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n/**\n * CacheUserSessionServiceImpl\n * 使用redis实现的，存储用户会话session\n * @author zgd\n * @date 2019/7/19 14:29\n */\n@Service\npublic class UserCacheSessionServiceImpl implements UserSessionService  {\n\n  @Autowired\n  private RedisManager redisManager;\n\n  private static final String USER_SESSION_PREFIX = "USER-SESSION:";\n  private static final String USER_TOKEN_TIMESTAMP_PREFIX = "USER-TOKEN-TIMESTAMP:";\n\n\n  @Override\n  public void saveSession(CustomerUserDetails userDetails, int second) {\n    String username = userDetails.getUsername();\n    String key = USER_SESSION_PREFIX + username;\n    redisManager.setexToJson(key,second,userDetails);\n  }\n\n  @Override\n  public CustomerUserDetails getSessionByUsername(String username) {\n    String key = USER_SESSION_PREFIX + username;\n    return redisManager.getFromJson(key,CustomerUserDetails.class);\n  }\n\n  @Override\n  public void destroySession(String username) {\n    String key = USER_SESSION_PREFIX + username;\n    String key1 = USER_TOKEN_TIMESTAMP_PREFIX + username;\n    redisManager.del(key,key1);\n  }\n\n\n  @Override\n  public void saveTokenTimestamp(String username, long mills) {\n    String key = USER_TOKEN_TIMESTAMP_PREFIX + username;\n    redisManager.set(key, String.valueOf(mills));\n  }\n\n  @Override\n  public Long getTokenTimestamp(String username) {\n    String key = USER_TOKEN_TIMESTAMP_PREFIX + username;\n    return Long.valueOf(redisManager.get(key));\n  }\n}\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n# 1.10 ResonseUtil\n\nimport com.alibaba.fastjson.JSON;\nimport java.io.IOException;\nimport java.util.Map;\nimport javax.servlet.ServletOutputStream;\nimport javax.servlet.http.HttpServletResponse;\nimport org.apache.commons.collections4.MapUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\npublic class ResponseUtil {\n  private static final Logger log = LoggerFactory.getLogger(ResponseUtil.class);\n\n  public ResponseUtil() {\n  }\n\n  public static void out(Result result) {\n    out(200, result, (Map)null);\n  }\n\n  public static void out(int statusCode, Result result) {\n    out(statusCode, result, (Map)null);\n  }\n\n  public static void outWithHeader(int statusCode, Result result, Map<String, String> map) {\n    out(statusCode, result, map);\n  }\n\n  public static void out(int statusCode, Result result, Map<String, String> header) {\n    ServletOutputStream out = null;\n\n    try {\n      ServletRequestAttributes servletRequestAttributes = (ServletRequestAttributes)RequestContextHolder.getRequestAttributes();\n      if (servletRequestAttributes != null) {\n        HttpServletResponse response = servletRequestAttributes.getResponse();\n        if (response != null && !response.isCommitted()) {\n        //如果发现乱码,这里注释\n          response.setCharacterEncoding("UTF-8");\n          response.setContentType("application/json;charset=UTF-8");\n          response.setStatus(statusCode);\n          if (MapUtils.isNotEmpty(header)) {\n            header.forEach(response::setHeader);\n          }\n\n          out = response.getOutputStream();\n          out.write(JSON.toJSONString(result).getBytes());\n        }\n      }\n    } catch (Exception var14) {\n      log.error("[ResponseUtil] 响应出错 ", var14);\n    } finally {\n      if (out != null) {\n        try {\n          out.flush();\n          out.close();\n        } catch (IOException var13) {\n          log.error("关闭流出错 ", var13);\n        }\n      }\n\n    }\n\n  }\n}\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n\n\n\n# 二、配置WebSecurityConfigurerAdapter\n\n我们需要将上面定义的handler和filter，注册到SpringSecurity。同时配置一些放行的url\n\n这里有一点需要注意：如果配置了下面的SessionCreationPolicy.STATELESS，则SpringSecurity不会保存session会话，在/logout登出的时候会拿不到用户实体对象。\n\nhttp.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);\n\n\n1\n\n\n如果登出注销不依赖SpringSecurity，并且session交给redis的token来管理的话，可以按上面的配置。\n\npackage com.zgd.shop.web.config;\n\nimport com.zgd.shop.web.config.auth.encoder.MyAesPasswordEncoder;\nimport com.zgd.shop.web.config.auth.encoder.MyEmptyPasswordEncoder;\nimport com.zgd.shop.web.config.auth.handler.*;\nimport com.zgd.shop.web.config.auth.filter.CustomerJwtAuthenticationTokenFilter;\nimport com.zgd.shop.web.config.auth.user.CustomerUserDetailService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.builders.WebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.config.http.SessionCreationPolicy;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n\n/**\n * @Author: zgd\n * @Date: 2019/1/15 17:42\n * @Description:\n */\n@Configuration\n@EnableWebSecurity\n@EnableGlobalMethodSecurity(securedEnabled = true, prePostEnabled = true)// 控制@Secured权限注解\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n  /**\n   * 这里需要交给spring注入,而不是直接new\n   */\n  @Autowired\n  private PasswordEncoder passwordEncoder;\n  @Autowired\n  private CustomerUserDetailService customerUserDetailService;\n  @Autowired\n  private CustomerAuthenticationFailHandler customerAuthenticationFailHandler;\n  @Autowired\n  private CustomerAuthenticationSuccessHandler customerAuthenticationSuccessHandler;\n  @Autowired\n  private CustomerJwtAuthenticationTokenFilter customerJwtAuthenticationTokenFilter;\n  @Autowired\n  private CustomerRestAccessDeniedHandler customerRestAccessDeniedHandler;\n  @Autowired\n  private CustomerLogoutSuccessHandler customerLogoutSuccessHandler;\n  @Autowired\n  private CustomerAuthenticationEntryPoint customerAuthenticationEntryPoint;\n\n\n \n  /**\n   * 该方法定义认证用户信息获取的来源、密码校验的规则\n   *\n   * @param auth\n   * @throws Exception\n   */\n  @Override\n  protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n    //auth.authenticationProvider(myauthenticationProvider)  自定义密码校验的规则\n\n    //如果需要改变认证的用户信息来源，我们可以实现UserDetailsService\n    auth.userDetailsService(customerUserDetailService).passwordEncoder(passwordEncoder);\n  }\n\n\n  @Override\n  protected void configure(HttpSecurity http) throws Exception {\n    /**\n     * antMatchers: ant的通配符规则\n     * ?\t匹配任何单字符\n     * *\t匹配0或者任意数量的字符，不包含"/"\n     * **\t匹配0或者更多的目录，包含"/"\n     */\n    http\n            .headers()\n            .frameOptions().disable();\n\n    http\n            //登录后,访问没有权限处理类\n            .exceptionHandling().accessDeniedHandler(customerRestAccessDeniedHandler)\n            //匿名访问,没有权限的处理类\n            .authenticationEntryPoint(customerAuthenticationEntryPoint)\n    ;\n\n    //使用jwt的Authentication,来解析过来的请求是否有token\n    http\n            .addFilterBefore(customerJwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);\n\n\n    http\n            .authorizeRequests()\n            //这里表示"/any"和"/ignore"不需要权限校验\n            .antMatchers("/ignore/**", "/login", "/**/register/**").permitAll()\n            .anyRequest().authenticated()\n            // 这里表示任何请求都需要校验认证(上面配置的放行)\n\n\n            .and()\n            //配置登录,检测到用户未登录时跳转的url地址,登录放行\n            .formLogin()\n            //需要跟前端表单的action地址一致\n            .loginProcessingUrl("/login")\n            .successHandler(customerAuthenticationSuccessHandler)\n            .failureHandler(customerAuthenticationFailHandler)\n            .permitAll()\n\n            //配置取消session管理,又Jwt来获取用户状态,否则即使token无效,也会有session信息,依旧判断用户为登录状态\n            .and()\n            .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)\n\n            //配置登出,登出放行\n            .and()\n            .logout()\n            .logoutSuccessHandler(customerLogoutSuccessHandler)\n            .permitAll()\n            \n            .and()\n            .csrf().disable()\n    ;\n  }\n\n\n}\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n\n\n\n# 三、其他\n\n大概到这就差不多了，启动，localhost:8080/login，使用postman，采用form-data，post提交，参数是username和password，调用，返回token。\n\n将token放在header中，请求接口。ok\n\n\n# 3.1 不足之处\n\n上面是最简单的处理，还有很多优化的地方。比如\n\n 1. 控制token销毁？ 使用redis+token组合，不仅解析token，还判断redis是否有这个token。注销和主动失效token：删除redis的key\n 2. 控制token过期时间？如果用户在token过期前1秒还在操作，下1秒就需要重新登录，肯定不好 1、考虑加入refreshToken，过期时间比token长，前端在拿到token的同时获取过期时间，在过期前一分钟用refreshToken调用refresh接口，重新获取新的token。 2、 将返回的jwtToken设置短一点的过期时间，redis再存这个token，过期时间设置长一点。如果请求过来token过期，查询redis，如果redis还存在，返回新的token。（为什么redis的过期时间大于token的？因为redis的过期是可控的，手动可删除，以redis的为准）\n 3. 每次请求都会被OncePerRequestFilter 拦截，每次都会被UserDetailService中的获取用户数据请求数据库，可以考虑做缓存，还是用redis或者直接保存内存中\n\n\n# 3.2 解决\n\n> 更新 2019-07-19\n\n这是针对上面的2.2说的，也就是redis时间久一点，jwt过期后如果redis没过期，颁发新的jwt。 不过更推荐的是前端判断过期时间，在过期之前调用refresh接口拿到新的jwt。\n\n为什么这样？ 如果redis过期时间是一周，jwt是一个小时，那么一个小时后，拿着这个过期的jwt去调，就可以想创建多少个新的jwt就创建，只要没过redis的过期时间。 当然这是在没对过期的jwt做限制的情况下，如果要考虑做限制，比如对redis的value加一个字段，保存当前jwt，刷新后就用新的jwt覆盖，refresh接口判断当前的过期jwt是不是和redis这个一样。\n\n总之还需要判断刷新token的时候，过期jwt是否合法的问题。总不能去年的过期token也拿来刷新吧。 而在过期前去刷新token的话，至少不会发生这种事情\n\n不过我这里自己写demo，采用的还是2.2的方式，也就是过期后给个新的，思路如下：\n\n 1. 登录后颁发token，token有个时间戳，同时以username拼装作为key，保存这个时间戳到缓存（redis，cache）\n 2. 请求来了，过滤器解析token，没过期的话，还需要比较缓存中的时间戳和token的时间戳是不是一样 ，如果时间戳不一样，说明该token不能刷新。无视\n 3. 注销，清除缓存数据\n\n这样就可以避免token过期后，我还能拿到这个token无限制的refresh。\n\n不过这个还是有细节方面问题，并发下同时刷新token这些并没有考虑，部分代码如下\n\n> 旧版本, 最新在底部\n\npackage com.zgd.shop.web.auth.filter;\n\nimport com.zgd.shop.common.constants.SecurityConstants;\nimport com.zgd.shop.common.util.jwt.JwtTokenUtil;\nimport com.zgd.shop.web.auth.user.CustomerUserDetailService;\nimport com.zgd.shop.web.auth.user.CustomerUserDetails;\nimport com.zgd.shop.web.auth.user.UserSessionService;\nimport com.zgd.shop.web.auth.user.UserTokenManager;\nimport io.jsonwebtoken.Claims;\nimport io.jsonwebtoken.ExpiredJwtException;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.filter.OncePerRequestFilter;\n\nimport javax.servlet.FilterChain;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n/**\n * 过滤器,在请求过来的时候,解析请求头中的token,再解析token得到用户信息,再存到SecurityContextHolder中\n * @author zzzgd\n */\n@Component\n@Slf4j\npublic class CustomerJwtAuthenticationTokenFilter extends OncePerRequestFilter {\n\n    @Autowired\n    CustomerUserDetailService customerUserDetailService;\n    @Autowired\n    UserSessionService userSessionService;\n    @Autowired\n    UserTokenManager userTokenManager;\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws ServletException, IOException {\n        \n    \t//请求头为 accessToken\n    \t//请求体为 Bearer token\n\n    \tString authHeader = request.getHeader(SecurityConstants.HEADER);\n\n        if (authHeader != null && authHeader.startsWith(SecurityConstants.TOKEN_SPLIT)) {\n\n            final String authToken = authHeader.substring(SecurityConstants.TOKEN_SPLIT.length());\n\n            String username;\n            Claims claims;\n            try {\n                claims = JwtTokenUtil.parseToken(authToken);\n                username = claims.getSubject();\n            } catch (ExpiredJwtException e) {\n                //token过期\n                claims = e.getClaims();\n                username = claims.getSubject();\n                CustomerUserDetails userDetails = userSessionService.getSessionByUsername(username);\n                if (userDetails != null){\n                    //session未过期，比对时间戳是否一致，是则重新颁发token\n                    if (isSameTimestampToken(username,e.getClaims())){\n                        userTokenManager.awardAccessToken(userDetails,true);\n                    }\n                }\n            }\n            //避免每次请求都请求数据库查询用户信息，从缓存中查询\n            CustomerUserDetails userDetails = userSessionService.getSessionByUsername(username);\n            if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {\n//                UserDetails userDetails = customerUserDetailService.loadUserByUsername(username);\n                if (userDetails != null) {\n                    if(isSameTimestampToken(username,claims)){\n                        //必须token解析的时间戳和session保存的一致\n                        UsernamePasswordAuthenticationToken authentication =\n                                new UsernamePasswordAuthenticationToken(userDetails, userDetails.getPassword(), userDetails.getAuthorities());\n                        authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n                        SecurityContextHolder.getContext().setAuthentication(authentication);\n                    }\n                }\n            }\n        }\n        chain.doFilter(request, response);\n    }\n\n    /**\n     * 判断是否同一个时间戳\n     * @param username \n     * @param claims\n     * @return\n     */\n    private boolean isSameTimestampToken(String username, Claims claims){\n        Long timestamp = userSessionService.getTokenTimestamp(username);\n        Long jwtTimestamp = (Long) claims.get(SecurityConstants.TIME_STAMP);\n        return timestamp.equals(jwtTimestamp);\n    }\n}\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798\npackage com.zgd.shop.web.auth.user;\n\nimport com.google.common.collect.Maps;\nimport com.zgd.shop.common.constants.SecurityConstants;\nimport com.zgd.shop.common.constants.UserConstants;\nimport com.zgd.shop.common.util.ResponseUtil;\nimport com.zgd.shop.common.util.jwt.JwtTokenUtil;\nimport com.zgd.shop.core.result.ResultUtil;\nimport com.zgd.shop.web.config.auth.UserAuthProperties;\nimport org.apache.commons.collections.MapUtils;\nimport org.checkerframework.checker.units.qual.A;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.stereotype.Component;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * UserTokenManager\n * token管理\n *\n * @author zgd\n * @date 2019/7/19 15:25\n */\n@Component\npublic class UserTokenManager {\n\n  @Autowired\n  private UserAuthProperties userAuthProperties;\n  @Autowired\n  private UserSessionService userSessionService;\n\n  /**\n   * 颁发token\n   * @param principal\n   * @author zgd\n   * @date 2019/7/19 15:34\n   * @return void\n   */\n  public void awardAccessToken(CustomerUserDetails principal,boolean isRefresh) {\n    //颁发token 确定时间戳，保存在session中和token中\n    long mill = System.currentTimeMillis();\n    userSessionService.saveSession(principal);\n    userSessionService.saveTokenTimestamp(principal.getUsername(),mill);\n\n    Map<String,Object> param = new HashMap<>(4);\n    param.put(UserConstants.USER_ID,principal.getId());\n    param.put(SecurityConstants.TIME_STAMP,mill);\n\n    String token = JwtTokenUtil.generateToken(principal.getUsername(), param,userAuthProperties.getJwtExpirationTime());\n    HashMap<String, String> map = Maps.newHashMapWithExpectedSize(1);\n    map.put(SecurityConstants.HEADER,token);\n    int code = isRefresh ? 201 : 200;\n    ResponseUtil.outWithHeader(code,ResultUtil.success(),map);\n  }\n}\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n\n\n# 更新\n\n> 2019-09-30\n\n针对token解析的过滤器做了优化:\n\n 1. 如果redis的session没过期, 但是请求头的token过期了, 判断时间戳一致后, 颁发新token并返回\n 2. 如果redis的session没过期, 但是请求头的token过期了, 时间戳不一致, 说明当前请求的token无法刷新token, 设置响应码为401返回\n 3. 如果请求头的token过期了, 但是redis的session失效或未找到, 直接放行, 交给后面的权限校验处理(也就是没有给上下文SecurityContextHolder设置登录信息, 后面如果判断这个请求缺少权限会自行处理)\n\npackage com.zgd.shop.web.auth.filter;\n\nimport com.zgd.shop.common.constants.SecurityConstants;\nimport com.zgd.shop.common.util.ResponseUtil;\nimport com.zgd.shop.common.util.jwt.JwtTokenUtil;\nimport com.zgd.shop.core.error.ErrorCodeConstants;\nimport com.zgd.shop.core.result.ResultUtil;\nimport com.zgd.shop.web.auth.user.CustomerUserDetailService;\nimport com.zgd.shop.web.auth.user.CustomerUserDetails;\nimport com.zgd.shop.web.auth.user.UserSessionService;\nimport com.zgd.shop.web.auth.user.UserTokenManager;\nimport io.jsonwebtoken.Claims;\nimport io.jsonwebtoken.ExpiredJwtException;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.filter.OncePerRequestFilter;\n\nimport javax.servlet.FilterChain;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n/**\n * 过滤器,在请求过来的时候,解析请求头中的token,再解析token得到用户信息,再存到SecurityContextHolder中\n * @author zzzgd\n */\n@Component\n@Slf4j\npublic class CustomerJwtAuthenticationTokenFilter extends OncePerRequestFilter {\n\n    @Autowired\n    CustomerUserDetailService customerUserDetailService;\n    @Autowired\n    UserSessionService userSessionService;\n    @Autowired\n    UserTokenManager userTokenManager;\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws ServletException, IOException {\n        \n    \t//请求头为 accessToken\n    \t//请求体为 Bearer token\n\n    \tString authHeader = request.getHeader(SecurityConstants.HEADER);\n\n        if (authHeader != null && authHeader.startsWith(SecurityConstants.TOKEN_SPLIT)) {\n            //请求头有token\n            final String authToken = authHeader.substring(SecurityConstants.TOKEN_SPLIT.length());\n\n            String username;\n            Claims claims;\n            try {\n                claims = JwtTokenUtil.parseToken(authToken);\n                username = claims.getSubject();\n            } catch (ExpiredJwtException e) {\n                //token过期\n                claims = e.getClaims();\n                username = claims.getSubject();\n                CustomerUserDetails userDetails = userSessionService.getSessionByUsername(username);\n                if (userDetails != null){\n                    //session未过期，比对时间戳是否一致，是则重新颁发token\n                    if (isSameTimestampToken(username,e.getClaims())){\n                        userTokenManager.awardAccessToken(userDetails,true);\n                        //直接设置响应码为201,直接返回\n                        return;\n                    }else{\n                        //时间戳不一致.无效token,无法刷新token,响应码401,前端跳转登录页\n                        ResponseUtil.out(HttpStatus.UNAUTHORIZED.value(),ResultUtil.failure(ErrorCodeConstants.REQUIRED_LOGIN_ERROR));\n                        return;\n                    }\n                }else{\n                    //直接放行,交给后面的handler处理,如果当前请求是需要访问权限,则会由CustomerRestAccessDeniedHandler处理\n                    chain.doFilter(request, response);\n                    return;\n                }\n            }\n\n            //避免每次请求都请求数据库查询用户信息，从缓存中查询\n            CustomerUserDetails userDetails = userSessionService.getSessionByUsername(username);\n            if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {\n//                UserDetails userDetails = customerUserDetailService.loadUserByUsername(username);\n                if (userDetails != null) {\n                    if(isSameTimestampToken(username,claims)){\n                        //必须token解析的时间戳和session保存的一致\n                        UsernamePasswordAuthenticationToken authentication =\n                                new UsernamePasswordAuthenticationToken(userDetails, userDetails.getPassword(), userDetails.getAuthorities());\n                        authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n\n                        SecurityContextHolder.getContext().setAuthentication(authentication);\n                    }\n                }\n            }\n        }\n        chain.doFilter(request, response);\n    }\n\n    /**\n     * 判断是否同一个时间戳\n     * @param username\n     * @param claims\n     * @return\n     */\n    private boolean isSameTimestampToken(String username, Claims claims){\n        Long timestamp = userSessionService.getTokenTimestamp(username);\n        Long jwtTimestamp = (Long) claims.get(SecurityConstants.TIME_STAMP);\n        return timestamp.equals(jwtTimestamp);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n',normalizedContent:'# springboot+springsecurity前后端分离+jwt的权限认证\n\n\n# 前言\n\n一般来说，我们用springsecurity默认的话是前后端整在一起的，比如thymeleaf或者freemarker，springsecurity还自带login登录页,还让你配置登出页,错误页。 但是现在前后端分离才是正道，前后端分离的话，那就需要将返回的页面换成json格式交给前端处理了\n\nspringsecurity默认的是采用session来判断请求的用户是否登录的，但是不方便分布式的扩展，虽然springsecurity也支持采用springsession来管理分布式下的用户状态，不过现在分布式的还是无状态的jwt比较主流。 所以下面说下怎么让springsecurity变成前后端分离，采用jwt来做认证的\n\n\n# 一、五个handler一个filter两个user\n\n5个handler，分别是\n\n * 实现authenticationentrypoint接口,当匿名请求需要登录的接口时,拦截处理\n * 实现authenticationsuccesshandler接口,当登录成功后,该处理类的方法被调用\n * 实现authenticationfailurehandler接口,当登录失败后,该处理类的方法被调用\n * 实现accessdeniedhandler接口,当登录后,访问接口没有权限的时候,该处理类的方法被调用\n * 实现logoutsuccesshandler接口,注销的时候调用\n\n\n# 1.1 authenticationentrypoint\n\n匿名未登录的时候访问，遇到需要登录认证的时候被调用\n\n/**\n * 匿名未登录的时候访问,需要登录的资源的调用类\n * @author zzzgd\n */\n@component\npublic class customerauthenticationentrypoint implements authenticationentrypoint {\n    @override\n    public void commence(httpservletrequest httpservletrequest, httpservletresponse httpservletresponse, authenticationexception e) throws ioexception, servletexception {\n\t    //设置response状态码，返回错误信息等\n\t    ...\n        responseutil.out(401, resultutil.failure(errorcodeconstants.required_login_error));\n    }\n}\n\n1234567891011121314\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 1.2 authenticationsuccesshandler\n\n这里是我们输入的用户名和密码登录成功后，调用的方法 简单的说就是获取用户信息，使用jwt生成token，然后返回token\n\n/**\n * 登录成功处理类,登录成功后会调用里面的方法\n * @author exrickx\n */\n@slf4j\n@component\npublic class customerauthenticationsuccesshandler implements authenticationsuccesshandler {\n\n\n    @override\n    public void onauthenticationsuccess(httpservletrequest request, httpservletresponse response, authentication authentication) throws ioexception, servletexception {\n    \t//简单的说就是获取当前用户，拿到用户名或者userid，创建token，返回\n        log.info("登陆成功...");\n        customeruserdetails principal = (customeruserdetails) authentication.getprincipal();\n        //颁发token\n        map<string,object> emptymap = new hashmap<>(4);\n        emptymap.put(userconstants.user_id,principal.getid());\n        string token = jwttokenutil.generatetoken(principal.getusername(), emptymap);\n        responseutil.out(resultutil.success(token));\n    }\n}\n12345678910111213141516171819202122\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 1.3 authenticationfailurehandler\n\n有登陆成功就有登录失败 登录失败的时候调用这个方法，可以在其中做登录错误限制或者其他操作，我这里直接就是设置响应头的状态码为401，返回\n\n/**\n * 登录账号密码错误等情况下,会调用的处理类\n * @author exrickx\n */\n@slf4j\n@component\npublic class customerauthenticationfailhandler implements authenticationfailurehandler {\n\n\n    @override\n    public void onauthenticationfailure(httpservletrequest request, httpservletresponse response, authenticationexception e) throws ioexception, servletexception {\n    //设置response状态码，返回错误信息等\n    \t....\n        responseutil.out(401, resultutil.failure(errorcodeconstants.login_unmatch_error));\n    }\n\n}\n\n12345678910111213141516171819\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 1.4 logoutsuccesshandler\n\n登出注销的时候调用，jwt有个缺点就是无法主动控制失效，可以采用jwt+session的方式，比如删除存储在redis的token\n\n这里需要注意，如果将springsecurity的session配置为无状态，或者不保存session，这里authentication为null！！ ，注意空指针问题。（详情见下面的配置websecurityconfigureradapter）\n\n/**\n * 登出成功的调用类\n * @author zzzgd\n */\n@component\npublic class customerlogoutsuccesshandler implements logoutsuccesshandler {\n    @override\n    public void onlogoutsuccess(httpservletrequest request, httpservletresponse response, authentication authentication) throws ioexception, servletexception {\n        responseutil.out(resultutil.success("logout success!"));\n    }\n}\n1234567891011\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 1.5 accessdeniedhandler\n\n登录后，访问缺失权限的资源会调用。\n\n/**\n * 没有权限,被拒绝访问时的调用类\n * @author exrickx\n */\n@component\n@slf4j\npublic class customerrestaccessdeniedhandler implements accessdeniedhandler {\n\n    @override\n    public void handle(httpservletrequest request, httpservletresponse response, accessdeniedexception accessdeniedexception) {\n        responseutil.out(403, resultutil.failure(errorcodeconstants.permission_deny));\n    }\n\n}\n1234567891011121314\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 1.6 一个过滤器onceperrequestfilter\n\n这里算是一个小重点。 上面我们在登录成功后，返回了一个token，那怎么使用这个token呢？\n\n前端发起请求的时候将token放在请求头中，在过滤器中对请求头进行解析。\n\n 1. 如果有accesstoken的请求头（可以自已定义名字），取出token，解析token，解析成功说明token正确，将解析出来的用户信息放到springsecurity的上下文中\n 2. 如果有accesstoken的请求头，解析token失败（无效token，或者过期失效），取不到用户信息，放行\n 3. 没有accesstoken的请求头，放行\n\n这里可能有人会疑惑，为什么token失效都要放行呢？ 这是因为springsecurity会自己去做登录的认证和权限的校验，靠的就是我们放在springsecurity上下文中的securitycontextholder.getcontext().setauthentication(authentication);，没有拿到authentication，放行了，springsecurity还是会走到认证和校验，这个时候就会发现没有登录没有权限。\n\n> 旧版本, 最新在底部\n\npackage com.zgd.shop.web.config.auth.filter;\n\nimport com.zgd.shop.common.constants.securityconstants;\nimport com.zgd.shop.common.util.jwt.jwttokenutil;\nimport com.zgd.shop.web.config.auth.user.customeruserdetailservice;\nimport lombok.extern.slf4j.slf4j;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.security.authentication.usernamepasswordauthenticationtoken;\nimport org.springframework.security.core.context.securitycontextholder;\nimport org.springframework.security.core.userdetails.userdetails;\nimport org.springframework.security.web.authentication.webauthenticationdetailssource;\nimport org.springframework.stereotype.component;\nimport org.springframework.web.filter.onceperrequestfilter;\n\nimport javax.servlet.filterchain;\nimport javax.servlet.servletexception;\nimport javax.servlet.http.httpservletrequest;\nimport javax.servlet.http.httpservletresponse;\nimport java.io.ioexception;\n\n/**\n * 过滤器,在请求过来的时候,解析请求头中的token,再解析token得到用户信息,再存到securitycontextholder中\n * @author zzzgd\n */\n@component\n@slf4j\npublic class customerjwtauthenticationtokenfilter extends onceperrequestfilter {\n\n    @autowired\n    customeruserdetailservice customeruserdetailservice;\n\n    @override\n    protected void dofilterinternal(httpservletrequest request, httpservletresponse response, filterchain chain) throws servletexception, ioexception {\n        \n    \t//请求头为 accesstoken\n    \t//请求体为 bearer token\n\n    \tstring authheader = request.getheader(securityconstants.header);\n\n        if (authheader != null && authheader.startswith(securityconstants.token_split)) {\n\n            final string authtoken = authheader.substring(securityconstants.token_split.length());\n            string username = jwttokenutil.parsetokengetusername(authtoken);\n            if (username != null && securitycontextholder.getcontext().getauthentication() == null) {\n                userdetails userdetails = customeruserdetailservice.loaduserbyusername(username);\n                if (userdetails != null) {\n                    usernamepasswordauthenticationtoken authentication =\n                            new usernamepasswordauthenticationtoken(userdetails, userdetails.getpassword(), userdetails.getauthorities());\n                    authentication.setdetails(new webauthenticationdetailssource().builddetails(request));\n                    securitycontextholder.getcontext().setauthentication(authentication);\n                }\n            }\n        }\n        chain.dofilter(request, response);\n    }\n}\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# 1.7 实现userdetails扩充字段\n\n这个接口表示的用户信息，springsecurity默认实现了一个user，不过字段寥寥无几，只有username，password这些，而且后面获取用户信息的时候也是获取的userdetail。\n\n于是我们将自己的数据库的user作为拓展，自己实现这个接口。继承的是数据库对应的user，而不是springsecurity的user\n\npackage com.zgd.shop.web.config.auth.user;\n\nimport com.zgd.shop.common.constants.userconstants;\nimport com.zgd.shop.dao.entity.model.user;\nimport org.springframework.security.core.grantedauthority;\nimport org.springframework.security.core.userdetails.userdetails;\n\nimport java.util.collection;\n\n/**\n * customeruserdetails\n *\n * @author zgd\n * @date 2019/7/17 15:29\n */\npublic class customeruserdetails extends user implements userdetails {\n\n  private collection<? extends grantedauthority> authorities;\n\n  public customeruserdetails(user user){\n    this.setid(user.getid());\n    this.setusername(user.getusername());\n    this.setpassword(user.getpassword());\n    this.setroles(user.getroles());\n    this.setstatus(user.getstatus());\n  }\n\n  public void setauthorities(collection<? extends grantedauthority> authorities) {\n    this.authorities = authorities;\n  }\n\n  /**\n   * 添加用户拥有的权限和角色\n   * @return\n   */\n  @override\n  public collection<? extends grantedauthority> getauthorities() {\n    return this.authorities;\n  }\n\n  /**\n   * 账户是否过期\n   * @return\n   */\n  @override\n  public boolean isaccountnonexpired() {\n    return true;\n  }\n\n  /**\n   * 是否禁用\n   * @return\n   */\n  @override\n  public boolean isaccountnonlocked() {\n    return  true;\n  }\n\n  /**\n   * 密码是否过期\n   * @return\n   */\n  @override\n  public boolean iscredentialsnonexpired() {\n    return true;\n  }\n\n  /**\n   * 是否启用\n   * @return\n   */\n  @override\n  public boolean isenabled() {\n    return userconstants.user_status_normal.equals(this.getstatus());\n  }\n}\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n\n\n\n# 1.8 实现userdetailsservice\n\nspringsecurity在登录的时候，回去数据库（或其他来源），根据username获取正确的user信息，就会根据这个service类，拿到用户的信息和权限。我们自己实现\n\nimport com.alibaba.fastjson.json;\nimport com.zgd.shop.dao.entity.model.user;\nimport com.zgd.shop.service.iuserservice;\nimport lombok.extern.slf4j.slf4j;\nimport org.apache.commons.collections.collectionutils;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.security.core.authority.simplegrantedauthority;\nimport org.springframework.security.core.userdetails.userdetails;\nimport org.springframework.security.core.userdetails.userdetailsservice;\nimport org.springframework.security.core.userdetails.usernamenotfoundexception;\nimport org.springframework.stereotype.service;\n\nimport java.util.arraylist;\nimport java.util.list;\n\n/**\n * @author zgd\n * @date 2019/1/16 16:27\n * @description 自己实现userdetailservice,用与springsecurity获取用户信息\n */\n@service\n@slf4j\npublic class customeruserdetailservice implements userdetailsservice {\n\n  @autowired\n  private iuserservice userservice;\n\n  /**\n   * 获取用户信息,然后交给spring去校验权限\n   * @param username\n   * @return\n   * @throws usernamenotfoundexception\n   */\n  @override\n  public userdetails loaduserbyusername(string username) throws usernamenotfoundexception {\n    //获取用户信息\n    user user = userservice.getuserrolebyusername(username);\n    if(user == null){\n      throw new usernamenotfoundexception("用户名不存在");\n    }\n    customeruserdetails customeruserdetails = new customeruserdetails(user);\n\n    list<simplegrantedauthority> authorities = new arraylist<>();\n    //用于添加用户的权限。只要把用户权限添加到authorities 就万事大吉。\n    if (collectionutils.isnotempty(user.getroles())){\n      user.getroles().foreach(r -> authorities.add(new simplegrantedauthority("role_"+r.getrolename())));\n    }\n    customeruserdetails.setauthorities(authorities);\n    log.info("authorities:{}", json.tojsonstring(authorities));\n    \n    //这里返回的是我们自己定义的userdetail\n    return customeruserdetails;\n  }\n}\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 1.9 usersessionservice\n\npackage com.zgd.springboot.web.common.user;\n\n\nimport com.zgd.springboot.web.auth.user.customeruserdetails;\nimport com.zgd.springboot.web.manager.redismanager;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.stereotype.service;\n\n/**\n * cacheusersessionserviceimpl\n * 使用redis实现的，存储用户会话session\n * @author zgd\n * @date 2019/7/19 14:29\n */\n@service\npublic class usercachesessionserviceimpl implements usersessionservice  {\n\n  @autowired\n  private redismanager redismanager;\n\n  private static final string user_session_prefix = "user-session:";\n  private static final string user_token_timestamp_prefix = "user-token-timestamp:";\n\n\n  @override\n  public void savesession(customeruserdetails userdetails, int second) {\n    string username = userdetails.getusername();\n    string key = user_session_prefix + username;\n    redismanager.setextojson(key,second,userdetails);\n  }\n\n  @override\n  public customeruserdetails getsessionbyusername(string username) {\n    string key = user_session_prefix + username;\n    return redismanager.getfromjson(key,customeruserdetails.class);\n  }\n\n  @override\n  public void destroysession(string username) {\n    string key = user_session_prefix + username;\n    string key1 = user_token_timestamp_prefix + username;\n    redismanager.del(key,key1);\n  }\n\n\n  @override\n  public void savetokentimestamp(string username, long mills) {\n    string key = user_token_timestamp_prefix + username;\n    redismanager.set(key, string.valueof(mills));\n  }\n\n  @override\n  public long gettokentimestamp(string username) {\n    string key = user_token_timestamp_prefix + username;\n    return long.valueof(redismanager.get(key));\n  }\n}\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n# 1.10 resonseutil\n\nimport com.alibaba.fastjson.json;\nimport java.io.ioexception;\nimport java.util.map;\nimport javax.servlet.servletoutputstream;\nimport javax.servlet.http.httpservletresponse;\nimport org.apache.commons.collections4.maputils;\nimport org.slf4j.logger;\nimport org.slf4j.loggerfactory;\nimport org.springframework.web.context.request.requestcontextholder;\nimport org.springframework.web.context.request.servletrequestattributes;\n\npublic class responseutil {\n  private static final logger log = loggerfactory.getlogger(responseutil.class);\n\n  public responseutil() {\n  }\n\n  public static void out(result result) {\n    out(200, result, (map)null);\n  }\n\n  public static void out(int statuscode, result result) {\n    out(statuscode, result, (map)null);\n  }\n\n  public static void outwithheader(int statuscode, result result, map<string, string> map) {\n    out(statuscode, result, map);\n  }\n\n  public static void out(int statuscode, result result, map<string, string> header) {\n    servletoutputstream out = null;\n\n    try {\n      servletrequestattributes servletrequestattributes = (servletrequestattributes)requestcontextholder.getrequestattributes();\n      if (servletrequestattributes != null) {\n        httpservletresponse response = servletrequestattributes.getresponse();\n        if (response != null && !response.iscommitted()) {\n        //如果发现乱码,这里注释\n          response.setcharacterencoding("utf-8");\n          response.setcontenttype("application/json;charset=utf-8");\n          response.setstatus(statuscode);\n          if (maputils.isnotempty(header)) {\n            header.foreach(response::setheader);\n          }\n\n          out = response.getoutputstream();\n          out.write(json.tojsonstring(result).getbytes());\n        }\n      }\n    } catch (exception var14) {\n      log.error("[responseutil] 响应出错 ", var14);\n    } finally {\n      if (out != null) {\n        try {\n          out.flush();\n          out.close();\n        } catch (ioexception var13) {\n          log.error("关闭流出错 ", var13);\n        }\n      }\n\n    }\n\n  }\n}\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n\n\n\n# 二、配置websecurityconfigureradapter\n\n我们需要将上面定义的handler和filter，注册到springsecurity。同时配置一些放行的url\n\n这里有一点需要注意：如果配置了下面的sessioncreationpolicy.stateless，则springsecurity不会保存session会话，在/logout登出的时候会拿不到用户实体对象。\n\nhttp.sessionmanagement().sessioncreationpolicy(sessioncreationpolicy.stateless);\n\n\n1\n\n\n如果登出注销不依赖springsecurity，并且session交给redis的token来管理的话，可以按上面的配置。\n\npackage com.zgd.shop.web.config;\n\nimport com.zgd.shop.web.config.auth.encoder.myaespasswordencoder;\nimport com.zgd.shop.web.config.auth.encoder.myemptypasswordencoder;\nimport com.zgd.shop.web.config.auth.handler.*;\nimport com.zgd.shop.web.config.auth.filter.customerjwtauthenticationtokenfilter;\nimport com.zgd.shop.web.config.auth.user.customeruserdetailservice;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.context.annotation.bean;\nimport org.springframework.context.annotation.configuration;\nimport org.springframework.security.config.annotation.authentication.builders.authenticationmanagerbuilder;\nimport org.springframework.security.config.annotation.method.configuration.enableglobalmethodsecurity;\nimport org.springframework.security.config.annotation.web.builders.httpsecurity;\nimport org.springframework.security.config.annotation.web.builders.websecurity;\nimport org.springframework.security.config.annotation.web.configuration.enablewebsecurity;\nimport org.springframework.security.config.annotation.web.configuration.websecurityconfigureradapter;\nimport org.springframework.security.config.http.sessioncreationpolicy;\nimport org.springframework.security.crypto.bcrypt.bcryptpasswordencoder;\nimport org.springframework.security.crypto.password.passwordencoder;\nimport org.springframework.security.web.authentication.usernamepasswordauthenticationfilter;\n\n/**\n * @author: zgd\n * @date: 2019/1/15 17:42\n * @description:\n */\n@configuration\n@enablewebsecurity\n@enableglobalmethodsecurity(securedenabled = true, prepostenabled = true)// 控制@secured权限注解\npublic class websecurityconfig extends websecurityconfigureradapter {\n\n  /**\n   * 这里需要交给spring注入,而不是直接new\n   */\n  @autowired\n  private passwordencoder passwordencoder;\n  @autowired\n  private customeruserdetailservice customeruserdetailservice;\n  @autowired\n  private customerauthenticationfailhandler customerauthenticationfailhandler;\n  @autowired\n  private customerauthenticationsuccesshandler customerauthenticationsuccesshandler;\n  @autowired\n  private customerjwtauthenticationtokenfilter customerjwtauthenticationtokenfilter;\n  @autowired\n  private customerrestaccessdeniedhandler customerrestaccessdeniedhandler;\n  @autowired\n  private customerlogoutsuccesshandler customerlogoutsuccesshandler;\n  @autowired\n  private customerauthenticationentrypoint customerauthenticationentrypoint;\n\n\n \n  /**\n   * 该方法定义认证用户信息获取的来源、密码校验的规则\n   *\n   * @param auth\n   * @throws exception\n   */\n  @override\n  protected void configure(authenticationmanagerbuilder auth) throws exception {\n    //auth.authenticationprovider(myauthenticationprovider)  自定义密码校验的规则\n\n    //如果需要改变认证的用户信息来源，我们可以实现userdetailsservice\n    auth.userdetailsservice(customeruserdetailservice).passwordencoder(passwordencoder);\n  }\n\n\n  @override\n  protected void configure(httpsecurity http) throws exception {\n    /**\n     * antmatchers: ant的通配符规则\n     * ?\t匹配任何单字符\n     * *\t匹配0或者任意数量的字符，不包含"/"\n     * **\t匹配0或者更多的目录，包含"/"\n     */\n    http\n            .headers()\n            .frameoptions().disable();\n\n    http\n            //登录后,访问没有权限处理类\n            .exceptionhandling().accessdeniedhandler(customerrestaccessdeniedhandler)\n            //匿名访问,没有权限的处理类\n            .authenticationentrypoint(customerauthenticationentrypoint)\n    ;\n\n    //使用jwt的authentication,来解析过来的请求是否有token\n    http\n            .addfilterbefore(customerjwtauthenticationtokenfilter, usernamepasswordauthenticationfilter.class);\n\n\n    http\n            .authorizerequests()\n            //这里表示"/any"和"/ignore"不需要权限校验\n            .antmatchers("/ignore/**", "/login", "/**/register/**").permitall()\n            .anyrequest().authenticated()\n            // 这里表示任何请求都需要校验认证(上面配置的放行)\n\n\n            .and()\n            //配置登录,检测到用户未登录时跳转的url地址,登录放行\n            .formlogin()\n            //需要跟前端表单的action地址一致\n            .loginprocessingurl("/login")\n            .successhandler(customerauthenticationsuccesshandler)\n            .failurehandler(customerauthenticationfailhandler)\n            .permitall()\n\n            //配置取消session管理,又jwt来获取用户状态,否则即使token无效,也会有session信息,依旧判断用户为登录状态\n            .and()\n            .sessionmanagement().sessioncreationpolicy(sessioncreationpolicy.stateless)\n\n            //配置登出,登出放行\n            .and()\n            .logout()\n            .logoutsuccesshandler(customerlogoutsuccesshandler)\n            .permitall()\n            \n            .and()\n            .csrf().disable()\n    ;\n  }\n\n\n}\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n\n\n\n# 三、其他\n\n大概到这就差不多了，启动，localhost:8080/login，使用postman，采用form-data，post提交，参数是username和password，调用，返回token。\n\n将token放在header中，请求接口。ok\n\n\n# 3.1 不足之处\n\n上面是最简单的处理，还有很多优化的地方。比如\n\n 1. 控制token销毁？ 使用redis+token组合，不仅解析token，还判断redis是否有这个token。注销和主动失效token：删除redis的key\n 2. 控制token过期时间？如果用户在token过期前1秒还在操作，下1秒就需要重新登录，肯定不好 1、考虑加入refreshtoken，过期时间比token长，前端在拿到token的同时获取过期时间，在过期前一分钟用refreshtoken调用refresh接口，重新获取新的token。 2、 将返回的jwttoken设置短一点的过期时间，redis再存这个token，过期时间设置长一点。如果请求过来token过期，查询redis，如果redis还存在，返回新的token。（为什么redis的过期时间大于token的？因为redis的过期是可控的，手动可删除，以redis的为准）\n 3. 每次请求都会被onceperrequestfilter 拦截，每次都会被userdetailservice中的获取用户数据请求数据库，可以考虑做缓存，还是用redis或者直接保存内存中\n\n\n# 3.2 解决\n\n> 更新 2019-07-19\n\n这是针对上面的2.2说的，也就是redis时间久一点，jwt过期后如果redis没过期，颁发新的jwt。 不过更推荐的是前端判断过期时间，在过期之前调用refresh接口拿到新的jwt。\n\n为什么这样？ 如果redis过期时间是一周，jwt是一个小时，那么一个小时后，拿着这个过期的jwt去调，就可以想创建多少个新的jwt就创建，只要没过redis的过期时间。 当然这是在没对过期的jwt做限制的情况下，如果要考虑做限制，比如对redis的value加一个字段，保存当前jwt，刷新后就用新的jwt覆盖，refresh接口判断当前的过期jwt是不是和redis这个一样。\n\n总之还需要判断刷新token的时候，过期jwt是否合法的问题。总不能去年的过期token也拿来刷新吧。 而在过期前去刷新token的话，至少不会发生这种事情\n\n不过我这里自己写demo，采用的还是2.2的方式，也就是过期后给个新的，思路如下：\n\n 1. 登录后颁发token，token有个时间戳，同时以username拼装作为key，保存这个时间戳到缓存（redis，cache）\n 2. 请求来了，过滤器解析token，没过期的话，还需要比较缓存中的时间戳和token的时间戳是不是一样 ，如果时间戳不一样，说明该token不能刷新。无视\n 3. 注销，清除缓存数据\n\n这样就可以避免token过期后，我还能拿到这个token无限制的refresh。\n\n不过这个还是有细节方面问题，并发下同时刷新token这些并没有考虑，部分代码如下\n\n> 旧版本, 最新在底部\n\npackage com.zgd.shop.web.auth.filter;\n\nimport com.zgd.shop.common.constants.securityconstants;\nimport com.zgd.shop.common.util.jwt.jwttokenutil;\nimport com.zgd.shop.web.auth.user.customeruserdetailservice;\nimport com.zgd.shop.web.auth.user.customeruserdetails;\nimport com.zgd.shop.web.auth.user.usersessionservice;\nimport com.zgd.shop.web.auth.user.usertokenmanager;\nimport io.jsonwebtoken.claims;\nimport io.jsonwebtoken.expiredjwtexception;\nimport lombok.extern.slf4j.slf4j;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.security.authentication.usernamepasswordauthenticationtoken;\nimport org.springframework.security.core.context.securitycontextholder;\nimport org.springframework.security.web.authentication.webauthenticationdetailssource;\nimport org.springframework.stereotype.component;\nimport org.springframework.web.filter.onceperrequestfilter;\n\nimport javax.servlet.filterchain;\nimport javax.servlet.servletexception;\nimport javax.servlet.http.httpservletrequest;\nimport javax.servlet.http.httpservletresponse;\nimport java.io.ioexception;\n\n/**\n * 过滤器,在请求过来的时候,解析请求头中的token,再解析token得到用户信息,再存到securitycontextholder中\n * @author zzzgd\n */\n@component\n@slf4j\npublic class customerjwtauthenticationtokenfilter extends onceperrequestfilter {\n\n    @autowired\n    customeruserdetailservice customeruserdetailservice;\n    @autowired\n    usersessionservice usersessionservice;\n    @autowired\n    usertokenmanager usertokenmanager;\n\n    @override\n    protected void dofilterinternal(httpservletrequest request, httpservletresponse response, filterchain chain) throws servletexception, ioexception {\n        \n    \t//请求头为 accesstoken\n    \t//请求体为 bearer token\n\n    \tstring authheader = request.getheader(securityconstants.header);\n\n        if (authheader != null && authheader.startswith(securityconstants.token_split)) {\n\n            final string authtoken = authheader.substring(securityconstants.token_split.length());\n\n            string username;\n            claims claims;\n            try {\n                claims = jwttokenutil.parsetoken(authtoken);\n                username = claims.getsubject();\n            } catch (expiredjwtexception e) {\n                //token过期\n                claims = e.getclaims();\n                username = claims.getsubject();\n                customeruserdetails userdetails = usersessionservice.getsessionbyusername(username);\n                if (userdetails != null){\n                    //session未过期，比对时间戳是否一致，是则重新颁发token\n                    if (issametimestamptoken(username,e.getclaims())){\n                        usertokenmanager.awardaccesstoken(userdetails,true);\n                    }\n                }\n            }\n            //避免每次请求都请求数据库查询用户信息，从缓存中查询\n            customeruserdetails userdetails = usersessionservice.getsessionbyusername(username);\n            if (username != null && securitycontextholder.getcontext().getauthentication() == null) {\n//                userdetails userdetails = customeruserdetailservice.loaduserbyusername(username);\n                if (userdetails != null) {\n                    if(issametimestamptoken(username,claims)){\n                        //必须token解析的时间戳和session保存的一致\n                        usernamepasswordauthenticationtoken authentication =\n                                new usernamepasswordauthenticationtoken(userdetails, userdetails.getpassword(), userdetails.getauthorities());\n                        authentication.setdetails(new webauthenticationdetailssource().builddetails(request));\n                        securitycontextholder.getcontext().setauthentication(authentication);\n                    }\n                }\n            }\n        }\n        chain.dofilter(request, response);\n    }\n\n    /**\n     * 判断是否同一个时间戳\n     * @param username \n     * @param claims\n     * @return\n     */\n    private boolean issametimestamptoken(string username, claims claims){\n        long timestamp = usersessionservice.gettokentimestamp(username);\n        long jwttimestamp = (long) claims.get(securityconstants.time_stamp);\n        return timestamp.equals(jwttimestamp);\n    }\n}\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798\npackage com.zgd.shop.web.auth.user;\n\nimport com.google.common.collect.maps;\nimport com.zgd.shop.common.constants.securityconstants;\nimport com.zgd.shop.common.constants.userconstants;\nimport com.zgd.shop.common.util.responseutil;\nimport com.zgd.shop.common.util.jwt.jwttokenutil;\nimport com.zgd.shop.core.result.resultutil;\nimport com.zgd.shop.web.config.auth.userauthproperties;\nimport org.apache.commons.collections.maputils;\nimport org.checkerframework.checker.units.qual.a;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.http.httpstatus;\nimport org.springframework.stereotype.component;\n\nimport java.util.hashmap;\nimport java.util.map;\n\n/**\n * usertokenmanager\n * token管理\n *\n * @author zgd\n * @date 2019/7/19 15:25\n */\n@component\npublic class usertokenmanager {\n\n  @autowired\n  private userauthproperties userauthproperties;\n  @autowired\n  private usersessionservice usersessionservice;\n\n  /**\n   * 颁发token\n   * @param principal\n   * @author zgd\n   * @date 2019/7/19 15:34\n   * @return void\n   */\n  public void awardaccesstoken(customeruserdetails principal,boolean isrefresh) {\n    //颁发token 确定时间戳，保存在session中和token中\n    long mill = system.currenttimemillis();\n    usersessionservice.savesession(principal);\n    usersessionservice.savetokentimestamp(principal.getusername(),mill);\n\n    map<string,object> param = new hashmap<>(4);\n    param.put(userconstants.user_id,principal.getid());\n    param.put(securityconstants.time_stamp,mill);\n\n    string token = jwttokenutil.generatetoken(principal.getusername(), param,userauthproperties.getjwtexpirationtime());\n    hashmap<string, string> map = maps.newhashmapwithexpectedsize(1);\n    map.put(securityconstants.header,token);\n    int code = isrefresh ? 201 : 200;\n    responseutil.outwithheader(code,resultutil.success(),map);\n  }\n}\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n\n\n# 更新\n\n> 2019-09-30\n\n针对token解析的过滤器做了优化:\n\n 1. 如果redis的session没过期, 但是请求头的token过期了, 判断时间戳一致后, 颁发新token并返回\n 2. 如果redis的session没过期, 但是请求头的token过期了, 时间戳不一致, 说明当前请求的token无法刷新token, 设置响应码为401返回\n 3. 如果请求头的token过期了, 但是redis的session失效或未找到, 直接放行, 交给后面的权限校验处理(也就是没有给上下文securitycontextholder设置登录信息, 后面如果判断这个请求缺少权限会自行处理)\n\npackage com.zgd.shop.web.auth.filter;\n\nimport com.zgd.shop.common.constants.securityconstants;\nimport com.zgd.shop.common.util.responseutil;\nimport com.zgd.shop.common.util.jwt.jwttokenutil;\nimport com.zgd.shop.core.error.errorcodeconstants;\nimport com.zgd.shop.core.result.resultutil;\nimport com.zgd.shop.web.auth.user.customeruserdetailservice;\nimport com.zgd.shop.web.auth.user.customeruserdetails;\nimport com.zgd.shop.web.auth.user.usersessionservice;\nimport com.zgd.shop.web.auth.user.usertokenmanager;\nimport io.jsonwebtoken.claims;\nimport io.jsonwebtoken.expiredjwtexception;\nimport lombok.extern.slf4j.slf4j;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.http.httpstatus;\nimport org.springframework.security.authentication.usernamepasswordauthenticationtoken;\nimport org.springframework.security.core.context.securitycontextholder;\nimport org.springframework.security.web.authentication.webauthenticationdetailssource;\nimport org.springframework.stereotype.component;\nimport org.springframework.web.filter.onceperrequestfilter;\n\nimport javax.servlet.filterchain;\nimport javax.servlet.servletexception;\nimport javax.servlet.http.httpservletrequest;\nimport javax.servlet.http.httpservletresponse;\nimport java.io.ioexception;\n\n/**\n * 过滤器,在请求过来的时候,解析请求头中的token,再解析token得到用户信息,再存到securitycontextholder中\n * @author zzzgd\n */\n@component\n@slf4j\npublic class customerjwtauthenticationtokenfilter extends onceperrequestfilter {\n\n    @autowired\n    customeruserdetailservice customeruserdetailservice;\n    @autowired\n    usersessionservice usersessionservice;\n    @autowired\n    usertokenmanager usertokenmanager;\n\n    @override\n    protected void dofilterinternal(httpservletrequest request, httpservletresponse response, filterchain chain) throws servletexception, ioexception {\n        \n    \t//请求头为 accesstoken\n    \t//请求体为 bearer token\n\n    \tstring authheader = request.getheader(securityconstants.header);\n\n        if (authheader != null && authheader.startswith(securityconstants.token_split)) {\n            //请求头有token\n            final string authtoken = authheader.substring(securityconstants.token_split.length());\n\n            string username;\n            claims claims;\n            try {\n                claims = jwttokenutil.parsetoken(authtoken);\n                username = claims.getsubject();\n            } catch (expiredjwtexception e) {\n                //token过期\n                claims = e.getclaims();\n                username = claims.getsubject();\n                customeruserdetails userdetails = usersessionservice.getsessionbyusername(username);\n                if (userdetails != null){\n                    //session未过期，比对时间戳是否一致，是则重新颁发token\n                    if (issametimestamptoken(username,e.getclaims())){\n                        usertokenmanager.awardaccesstoken(userdetails,true);\n                        //直接设置响应码为201,直接返回\n                        return;\n                    }else{\n                        //时间戳不一致.无效token,无法刷新token,响应码401,前端跳转登录页\n                        responseutil.out(httpstatus.unauthorized.value(),resultutil.failure(errorcodeconstants.required_login_error));\n                        return;\n                    }\n                }else{\n                    //直接放行,交给后面的handler处理,如果当前请求是需要访问权限,则会由customerrestaccessdeniedhandler处理\n                    chain.dofilter(request, response);\n                    return;\n                }\n            }\n\n            //避免每次请求都请求数据库查询用户信息，从缓存中查询\n            customeruserdetails userdetails = usersessionservice.getsessionbyusername(username);\n            if (username != null && securitycontextholder.getcontext().getauthentication() == null) {\n//                userdetails userdetails = customeruserdetailservice.loaduserbyusername(username);\n                if (userdetails != null) {\n                    if(issametimestamptoken(username,claims)){\n                        //必须token解析的时间戳和session保存的一致\n                        usernamepasswordauthenticationtoken authentication =\n                                new usernamepasswordauthenticationtoken(userdetails, userdetails.getpassword(), userdetails.getauthorities());\n                        authentication.setdetails(new webauthenticationdetailssource().builddetails(request));\n\n                        securitycontextholder.getcontext().setauthentication(authentication);\n                    }\n                }\n            }\n        }\n        chain.dofilter(request, response);\n    }\n\n    /**\n     * 判断是否同一个时间戳\n     * @param username\n     * @param claims\n     * @return\n     */\n    private boolean issametimestamptoken(string username, claims claims){\n        long timestamp = usersessionservice.gettokentimestamp(username);\n        long jwttimestamp = (long) claims.get(securityconstants.time_stamp);\n        return timestamp.equals(jwttimestamp);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"March 6, 2022 13:53",updateTimeStamp:1646574803e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Spring Boot启动的时候默认的banner",frontmatter:{author:"xlc520",title:"Spring Boot启动的时候默认的banner",description:"Spring Boot启动的时候默认的banner是spring的字样",time:"2022-03-02T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/SpringBoot%E5%90%AF%E5%8A%A8banner.html",relativePath:"Java/SpringBoot启动banner.md",key:"v-37b40c7e",path:"/Java/SpringBoot%E5%90%AF%E5%8A%A8banner/",headers:[{level:2,title:"控制banner样式",slug:"控制banner样式",normalizedTitle:"控制banner样式",charIndex:862},{level:2,title:"显示应用信息",slug:"显示应用信息",normalizedTitle:"显示应用信息",charIndex:1807},{level:2,title:"控制banner是否开启，输出位置",slug:"控制banner是否开启-输出位置",normalizedTitle:"控制banner是否开启，输出位置",charIndex:2090},{level:2,title:"几个常用的字符画生成网站",slug:"几个常用的字符画生成网站",normalizedTitle:"几个常用的字符画生成网站",charIndex:2697},{level:2,title:"补充",slug:"补充",normalizedTitle:"补充",charIndex:2952}],readingTime:{minutes:4.15,words:1245},headersStr:"控制banner样式 显示应用信息 控制banner是否开启，输出位置 几个常用的字符画生成网站 补充",content:"# Spring Boot启动默认的banner\n\n自定义banner只需要在resource下新建一个banner.txt文件，将我们需要的banner字样放进去，启动的时候就会去读取使用这个文本文件中的banner。\n\nbanner.txt\n\n                   _ooOoo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  O\\  =  /O\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n         \t佛祖保佑       永无BUG\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 控制banner样式\n\nSpring提供了三个枚举类来设定字符的颜色，分别是：\n\nAnsiColor： 用来设定字符的前景色\n\nAnsiBackground： 用来设定字符的背景色\n\nAnsiStyle： 用来控制加粗、斜体、下划线等等。\n\n使用${AnsiFoo.Bar}来指定样式，当指定样式的时候会有提示的：\n\n\n\n指定一种试一下，比如下面这种：\n\n${AnsiColor.BRIGHT_YELLOW}\n                   _ooOoo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  O\\  =  /O\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n         佛祖保佑       永无BUG\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 显示应用信息\n\n除了上面的指定样式之外，还可以显示一些与应用相关的版本信息：\n\n${application.version} 与MANIFEST.MF文件中相同的版本号，比如1.5.4.RELEASE\n\n${application.formatted-version} 格式化过的版本号就是加个v然后用括号包起来，比如(v1.5.4.RELEASE)\n\n${application.title}\n\n${spring-boot.version} Spring Boot的版本\n\n${spring-boot.formatted-version} 格式化过的版本\n\n\n# 控制banner是否开启，输出位置\n\n设置banner mode为OFF关闭banner：\n\npackage org.cc11001100;\n \nimport org.springframework.boot.Banner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n \n@SpringBootApplication\npublic class SpringBootStudy002Application {\n \n    public static void main(String[] args) {\n        SpringApplication springApplication = new SpringApplication(SpringBootStudy002Application.class);\n        springApplication.setBannerMode(Banner.Mode.OFF);\n        springApplication.run(args);\n    }\n \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 几个常用的字符画生成网站\n\n介绍几个常用的字符画生成网站：\n\nhttps://www.bootschool.net/ascii\n\nhttp://patorjk.com/software/taag/\n\nhttps://spring-boot-banner-gen.cfapps.io/ 可以将上传图片转为文本形式的字符画，只是感觉风格比较鬼畜\n\nhttp://www.degraeve.com/img2txt.php 可以根据在线的图片网址生成字符画，比如可以直接将公司logo的地址粘贴进去生成字符画\n\n\n# 补充\n\n通过将 banner.txt 文件添加到类路径或将 spring.banner.location 属性设置为此类文件的位置，可以更改启动时打印的横幅。如果文件的编码不是UTF-8，则可以设置 spring.banner.charset 。除了文本文件，您还可以将 banner.gif ， banner.jpg 或 banner.png 图像文件添加到类路径或设置 spring.banner.image.location 属性。图像将转换为ASCII艺术表示，并打印在任何文本横幅上方。在 banner.txt 文件中，您可以使用以下任何占位符：\n\n表23.1。横幅变量\n\n变量 描述\n\n${application.version} 应用程序的版本号，如 MANIFEST.MF 中声明的那样。例\n\n如， Implementation-Version: 1.0 打印为 1.0 。\n\n${application.formatted-version} 应用程序的版本号，在 MANIFEST.MF 中声明并格式化以显示（用括号括起来并以 v 为前缀）。例如 (v1.0) 。\n\n${spring-boot.version} 您正在使用的Spring Boot版本。例如 2.1.1.RELEASE 。\n\n如果要以编程方式生成横幅，可以使用 SpringApplication.setBanner(… ) 方法。使用 org.springframework.boot.Banner\n\n接口并实现您自己的 printBanner() 方法。\n\n您还可以使用 spring.main.banner-mode 属性来确定是否必须在 System.out （ console ）上打印横幅，发送到配置的记录器（ log ），或者根本不产生横幅（ off ）。\n\n打印的横幅以下列名称注册为单身bean：springBootBanner 。\n\nYAML将 off 映射到 false ，因此如果要在应用程序中禁用横幅，请务必添加引号，如以下示例所示：\n\nspring:\n\nmain:\n\nbanner-mode: \"off\"\n\n23.3自定义SpringApplication\n\n如果 SpringApplication 默认值不符合您的口味，您可以改为创建本地实例并对其进行自定义。例如，要关闭横幅，您可以写：\n\npublic static void main(String[] args) {\n\nSpringApplication app = new SpringApplication(MySpringConfiguration.class);\n\napp.setBannerMode(Banner.Mode.OFF);\n\napp.run(args);\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n传递给 SpringApplication 的构造函数参数是Spring beans的配置源。在大多数情况下，这些是对 @Configuration 类的引用，\n\n但它们也可以是对XML配置或应扫描的包的引用。\n\n也可以使用 application.properties 文件配置 SpringApplication 。有关详细信息，请参见第24章，外部化配置。\n\n有关配置选项的完整列表，请参阅 SpringApplication Javadoc。\n\n23.4 Fluent Builder API\n\n如果您需要构建 ApplicationContext 层次结构（具有父/子关系的多个上下文）或者您更喜欢使用“流畅”构建器API，则可以使用 SpringApplicationBuilder 。\n\nSpringApplicationBuilder 允许您将多个方法调用链接在一起，并包含允许您创建层次结构的 parent 和 child 方法，如以下示例所示：\n\nnew SpringApplicationBuilder()\n\n.sources(Parent.class)\n\n.child(Application.class)\n\n\n1\n2\n3\n4\n5\n\n\n创建 ApplicationContext 层次结构时存在一些限制。例如，Web组件必须包含在子上下文中，并且父/子上下文使用相同\n\n的 Environment 。有关详细信息，请参阅 SpringApplicationBuilder Javadoc。",normalizedContent:"# spring boot启动默认的banner\n\n自定义banner只需要在resource下新建一个banner.txt文件，将我们需要的banner字样放进去，启动的时候就会去读取使用这个文本文件中的banner。\n\nbanner.txt\n\n                   _ooooo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  o\\  =  /o\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n         \t佛祖保佑       永无bug\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 控制banner样式\n\nspring提供了三个枚举类来设定字符的颜色，分别是：\n\nansicolor： 用来设定字符的前景色\n\nansibackground： 用来设定字符的背景色\n\nansistyle： 用来控制加粗、斜体、下划线等等。\n\n使用${ansifoo.bar}来指定样式，当指定样式的时候会有提示的：\n\n\n\n指定一种试一下，比如下面这种：\n\n${ansicolor.bright_yellow}\n                   _ooooo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  o\\  =  /o\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n         佛祖保佑       永无bug\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 显示应用信息\n\n除了上面的指定样式之外，还可以显示一些与应用相关的版本信息：\n\n${application.version} 与manifest.mf文件中相同的版本号，比如1.5.4.release\n\n${application.formatted-version} 格式化过的版本号就是加个v然后用括号包起来，比如(v1.5.4.release)\n\n${application.title}\n\n${spring-boot.version} spring boot的版本\n\n${spring-boot.formatted-version} 格式化过的版本\n\n\n# 控制banner是否开启，输出位置\n\n设置banner mode为off关闭banner：\n\npackage org.cc11001100;\n \nimport org.springframework.boot.banner;\nimport org.springframework.boot.springapplication;\nimport org.springframework.boot.autoconfigure.springbootapplication;\n \n@springbootapplication\npublic class springbootstudy002application {\n \n    public static void main(string[] args) {\n        springapplication springapplication = new springapplication(springbootstudy002application.class);\n        springapplication.setbannermode(banner.mode.off);\n        springapplication.run(args);\n    }\n \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 几个常用的字符画生成网站\n\n介绍几个常用的字符画生成网站：\n\nhttps://www.bootschool.net/ascii\n\nhttp://patorjk.com/software/taag/\n\nhttps://spring-boot-banner-gen.cfapps.io/ 可以将上传图片转为文本形式的字符画，只是感觉风格比较鬼畜\n\nhttp://www.degraeve.com/img2txt.php 可以根据在线的图片网址生成字符画，比如可以直接将公司logo的地址粘贴进去生成字符画\n\n\n# 补充\n\n通过将 banner.txt 文件添加到类路径或将 spring.banner.location 属性设置为此类文件的位置，可以更改启动时打印的横幅。如果文件的编码不是utf-8，则可以设置 spring.banner.charset 。除了文本文件，您还可以将 banner.gif ， banner.jpg 或 banner.png 图像文件添加到类路径或设置 spring.banner.image.location 属性。图像将转换为ascii艺术表示，并打印在任何文本横幅上方。在 banner.txt 文件中，您可以使用以下任何占位符：\n\n表23.1。横幅变量\n\n变量 描述\n\n${application.version} 应用程序的版本号，如 manifest.mf 中声明的那样。例\n\n如， implementation-version: 1.0 打印为 1.0 。\n\n${application.formatted-version} 应用程序的版本号，在 manifest.mf 中声明并格式化以显示（用括号括起来并以 v 为前缀）。例如 (v1.0) 。\n\n${spring-boot.version} 您正在使用的spring boot版本。例如 2.1.1.release 。\n\n如果要以编程方式生成横幅，可以使用 springapplication.setbanner(… ) 方法。使用 org.springframework.boot.banner\n\n接口并实现您自己的 printbanner() 方法。\n\n您还可以使用 spring.main.banner-mode 属性来确定是否必须在 system.out （ console ）上打印横幅，发送到配置的记录器（ log ），或者根本不产生横幅（ off ）。\n\n打印的横幅以下列名称注册为单身bean：springbootbanner 。\n\nyaml将 off 映射到 false ，因此如果要在应用程序中禁用横幅，请务必添加引号，如以下示例所示：\n\nspring:\n\nmain:\n\nbanner-mode: \"off\"\n\n23.3自定义springapplication\n\n如果 springapplication 默认值不符合您的口味，您可以改为创建本地实例并对其进行自定义。例如，要关闭横幅，您可以写：\n\npublic static void main(string[] args) {\n\nspringapplication app = new springapplication(myspringconfiguration.class);\n\napp.setbannermode(banner.mode.off);\n\napp.run(args);\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n传递给 springapplication 的构造函数参数是spring beans的配置源。在大多数情况下，这些是对 @configuration 类的引用，\n\n但它们也可以是对xml配置或应扫描的包的引用。\n\n也可以使用 application.properties 文件配置 springapplication 。有关详细信息，请参见第24章，外部化配置。\n\n有关配置选项的完整列表，请参阅 springapplication javadoc。\n\n23.4 fluent builder api\n\n如果您需要构建 applicationcontext 层次结构（具有父/子关系的多个上下文）或者您更喜欢使用“流畅”构建器api，则可以使用 springapplicationbuilder 。\n\nspringapplicationbuilder 允许您将多个方法调用链接在一起，并包含允许您创建层次结构的 parent 和 child 方法，如以下示例所示：\n\nnew springapplicationbuilder()\n\n.sources(parent.class)\n\n.child(application.class)\n\n\n1\n2\n3\n4\n5\n\n\n创建 applicationcontext 层次结构时存在一些限制。例如，web组件必须包含在子上下文中，并且父/子上下文使用相同\n\n的 environment 。有关详细信息，请参阅 springapplicationbuilder javadoc。",charsets:{cjk:!0},createdTime:1646572761e3,updateTime:"March 18, 2022 05:25",updateTimeStamp:1647581119e3,createTime:"March 6, 2022 13:19",createTimeStamp:1646572761e3,contributors:[]},{title:"SpringBoot 定时任务动态管理通用解决方案",frontmatter:{author:"xlc520",title:"SpringBoot 定时任务动态管理通用解决方案",description:"SpringBoot 定时任务动态管理通用解决方案",time:"2022-03-19T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8A%A8%E6%80%81%E7%AE%A1%E7%90%86%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html",relativePath:"Java/SpringBoot定时任务动态管理通用解决方案.md",key:"v-74e721b4",path:"/Java/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8A%A8%E6%80%81%E7%AE%A1%E7%90%86%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/",headers:[{level:2,title:"一、功能说明",slug:"一、功能说明",normalizedTitle:"一、功能说明",charIndex:32},{level:2,title:"二、快速使用",slug:"二、快速使用",normalizedTitle:"二、快速使用",charIndex:287},{level:2,title:"三、实现原理",slug:"三、实现原理",normalizedTitle:"三、实现原理",charIndex:772}],readingTime:{minutes:10.1,words:3030},headersStr:"一、功能说明 二、快速使用 三、实现原理",content:'# SpringBoot 定时任务动态管理通用解决方案\n\n\n# 一、功能说明\n\nSpringBoot的定时任务的加强工具，实现对SpringBoot原生的定时任务进行动态管理,完全兼容原生@Scheduled注解,无需对原本的定时任务进行修改\n\n> 基于 Spring Boot + MyBatis Plus + Vue & Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能。\n> \n> 项目地址：https://github.com/YunaiV/ruoyi-vue-pro\n\n\n# 二、快速使用\n\n具体的功能已经封装成SpringBoot-starter即插即用\n\n<dependency>\n    <groupId>com.github.guoyixing</groupId>\n    <artifactId>spring-boot-starter-super-scheduled</artifactId>\n    <version>0.3.1</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n使用方法和源码：\n\n> 码云：https://gitee.com/qiaodaimadewangcai/super-scheduled\n> \n> github：https://github.com/guoyixing/super-scheduled\n\n> 基于微服务的思想，构建在 B2C 电商场景下的项目实战。核心技术栈，是 Spring Boot + Dubbo 。未来，会重构成 Spring Cloud Alibaba 。\n> \n> 项目地址：https://github.com/YunaiV/onemall\n\n\n# 三、实现原理\n\n# 1、动态管理实现\n\n(1) 配置管理介绍\n\n@Component("superScheduledConfig")\npublic class SuperScheduledConfig {\n    /**\n     * 执行定时任务的线程池\n     */\n    private ThreadPoolTaskScheduler taskScheduler;\n\n    /**\n     * 定时任务名称与定时任务回调钩子  的关联关系容器\n     */\n    private Map<String, ScheduledFuture> nameToScheduledFuture = new ConcurrentHashMap<>();\n\n    /**\n     * 定时任务名称与定时任务需要执行的逻辑  的关联关系容器\n     */\n    private Map<String, Runnable> nameToRunnable = new ConcurrentHashMap<>();\n\n    /**\n     * 定时任务名称与定时任务的源信息  的关联关系容器\n     */\n    private Map<String, ScheduledSource> nameToScheduledSource = new ConcurrentHashMap<>();\n /* 普通的get/sets省略 */\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n(2) 使用后处理器拦截SpringBoot原本的定时任务\n\n * 实现ApplicationContextAware接口拿到SpringBoot的上下文\n * 实现BeanPostProcessor接口，将这个类标记为后处理器，后处理器会在每个bean实例化之后执行\n * 使用@DependsOn注解强制依赖SuperScheduledConfig类，让SpringBoot实例化SuperScheduledPostProcessor类之前先实例化SuperScheduledConfig类\n * 主要实现逻辑在postProcessAfterInitialization()方法中\n\n@DependsOn({"superScheduledConfig"})\n@Component\n@Order\npublic class SuperScheduledPostProcessor implements BeanPostProcessor, ApplicationContextAware {\n    protected final Log logger = LogFactory.getLog(getClass());\n\n    private ApplicationContext applicationContext;\n\n    /**\n     * 实例化bean之前的操作\n     * @param bean bean实例\n     * @param beanName bean的Name\n     */\n    @Override\n    public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {\n        return bean;\n    }\n\n    /**\n     * 实例化bean之后的操作\n     * @param bean bean实例\n     * @param beanName bean的Name\n     */\n    @Override\n    public Object postProcessAfterInitialization(Object bean,\n                                                 String beanName) throws BeansException {\n        //1.获取配置管理器\n        SuperScheduledConfig superScheduledConfig = applicationContext.getBean(SuperScheduledConfig.class);\n\n        //2.获取当前实例化完成的bean的所有方法\n        Method[] methods = bean.getClass().getDeclaredMethods();\n        //循环处理对每个方法逐一处理\n        if (methods.length > 0) {\n            for (Method method : methods) {\n             //3.尝试在该方法上获取@Scheduled注解（SpringBoot的定时任务注解）\n                Scheduled annotation = method.getAnnotation(Scheduled.class);\n                //如果无法获取到@Scheduled注解，就跳过这个方法\n                if (annotation == null) {\n                    continue;\n                }\n                //4.创建定时任务的源属性\n                //创建定时任务的源属性（用来记录定时任务的配置，初始化的时候记录的是注解上原本的属性）\n                ScheduledSource scheduledSource = new ScheduledSource(annotation, method, bean);\n                //对注解上获取到源属性中的属性进行检测\n                if (!scheduledSource.check()) {\n                    throw new SuperScheduledException("在" + beanName + "Bean中" + method.getName() + "方法的注解参数错误");\n                }\n                //生成定时任务的名称（id），使用beanName+“.”+方法名\n                String name = beanName + "." + method.getName();\n                //将以key-value的形式，将源数据存入配置管理器中，key：定时任务的名称 value：源数据\n                superScheduledConfig.addScheduledSource(name, scheduledSource);\n                try {\n                 //5.将原本SpringBoot的定时任务取消掉\n                    clearOriginalScheduled(annotation);\n                } catch (Exception e) {\n                    throw new SuperScheduledException("在关闭原始方法" + beanName + method.getName() + "时出现错误");\n                }\n            }\n        }\n        //最后bean保持原有返回\n        return bean;\n    }\n\n    /**\n     * 修改注解原先的属性\n     * @param annotation 注解实例对象\n     * @throws Exception\n     */\n    private void clearOriginalScheduled(Scheduled annotation) throws Exception {\n        changeAnnotationValue(annotation, "cron", Scheduled.CRON_DISABLED);\n        changeAnnotationValue(annotation, "fixedDelay", -1L);\n        changeAnnotationValue(annotation, "fixedDelayString", "");\n        changeAnnotationValue(annotation, "fixedRate", -1L);\n        changeAnnotationValue(annotation, "fixedRateString", "");\n        changeAnnotationValue(annotation, "initialDelay", -1L);\n        changeAnnotationValue(annotation, "initialDelayString", "");\n    }\n\n\n    /**\n     * 获取SpringBoot的上下文\n     * @param applicationContext SpringBoot的上下文\n     */\n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        this.applicationContext = applicationContext;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n\n\n(3) 使用ApplicationRunner初始化自定义的定时任务运行器\n\n * 实现ApplicationContextAware接口拿到SpringBoot的上下文\n * 使用@DependsOn注解强制依赖threadPoolTaskScheduler类\n * 实现ApplicationRunner接口，在所有bean初始化结束之后，运行自定义逻辑\n * 主要实现逻辑在run()方法中\n\n@DependsOn("threadPoolTaskScheduler")\n@Component\npublic class SuperScheduledApplicationRunner implements ApplicationRunner, ApplicationContextAware {\n    protected final Log logger = LogFactory.getLog(getClass());\n    private DateTimeFormatter df = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");\n    private ApplicationContext applicationContext;\n \n /**\n     * 定时任务配置管理器\n     */\n    @Autowired\n    private SuperScheduledConfig superScheduledConfig;\n    /**\n     * 定时任务执行线程\n     */\n    @Autowired\n    private ThreadPoolTaskScheduler threadPoolTaskScheduler;\n\n    @Override\n    public void run(ApplicationArguments args) {\n     //1.定时任务配置管理器中缓存  定时任务执行线程\n        superScheduledConfig.setTaskScheduler(threadPoolTaskScheduler);\n        //2.获取所有定时任务源数据\n        Map<String, ScheduledSource> nameToScheduledSource = superScheduledConfig.getNameToScheduledSource();\n        //逐一处理定时任务\n        for (String name : nameToScheduledSource.keySet()) {\n            //3.获取定时任务源数据\n            ScheduledSource scheduledSource = nameToScheduledSource.get(name);\n            //4.获取所有增强类\n            String[] baseStrengthenBeanNames = applicationContext.getBeanNamesForType(BaseStrengthen.class);\n            //5.创建执行控制器\n            SuperScheduledRunnable runnable = new SuperScheduledRunnable();\n            //配置执行控制器\n            runnable.setMethod(scheduledSource.getMethod());\n            runnable.setBean(scheduledSource.getBean());\n            //6.逐一处理增强类（增强器实现原理后面具体分析）\n            List<Point> points = new ArrayList<>(baseStrengthenBeanNames.length);\n            for (String baseStrengthenBeanName : baseStrengthenBeanNames) {\n             //7.将增强器代理成point\n                Object baseStrengthenBean = applicationContext.getBean(baseStrengthenBeanName);\n                //创建代理\n                Point proxy = ProxyUtils.getInstance(Point.class, new RunnableBaseInterceptor(baseStrengthenBean, runnable));\n                proxy.setSuperScheduledName(name);\n                //8.所有的points连成起来\n                points.add(proxy);\n            }\n   //将point形成调用链\n            runnable.setChain(new Chain(points));\n            //将执行逻辑封装并缓存到定时任务配置管理器中\n            superScheduledConfig.addRunnable(name, runnable::invoke);\n            try {\n             //8.启动定时任务\n                ScheduledFuture<?> schedule = ScheduledFutureFactory.create(threadPoolTaskScheduler\n                        , scheduledSource, runnable::invoke);\n                //将线程回调钩子存到任务配置管理器中\n                superScheduledConfig.addScheduledFuture(name, schedule);\n                logger.info(df.format(LocalDateTime.now()) + "任务" + name + "已经启动...");\n\n            } catch (Exception e) {\n                throw new SuperScheduledException("任务" + name + "启动失败，错误信息：" + e.getLocalizedMessage());\n            }\n        }\n    }\n\n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        this.applicationContext = applicationContext;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n\n\n(4) 进行动态管理\n\n@Component\npublic class SuperScheduledManager {\n    protected final Log logger = LogFactory.getLog(getClass());\n    private DateTimeFormatter df = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");\n\n    @Autowired\n    private SuperScheduledConfig superScheduledConfig;\n\n    /**\n     * 修改Scheduled的执行周期\n     *\n     * @param name scheduled的名称\n     * @param cron cron表达式\n     */\n    public void setScheduledCron(String name, String cron) {\n        //终止原先的任务\n        cancelScheduled(name);\n        //创建新的任务\n        ScheduledSource scheduledSource = superScheduledConfig.getScheduledSource(name);\n        scheduledSource.clear();\n        scheduledSource.setCron(cron);\n        addScheduled(name, scheduledSource);\n    }\n\n    /**\n     * 修改Scheduled的fixedDelay\n     *\n     * @param name       scheduled的名称\n     * @param fixedDelay 上一次执行完毕时间点之后多长时间再执行\n     */\n    public void setScheduledFixedDelay(String name, Long fixedDelay) {\n        //终止原先的任务\n        cancelScheduled(name);\n        //创建新的任务\n        ScheduledSource scheduledSource = superScheduledConfig.getScheduledSource(name);\n        scheduledSource.clear();\n        scheduledSource.setFixedDelay(fixedDelay);\n        addScheduled(name, scheduledSource);\n    }\n\n    /**\n     * 修改Scheduled的fixedRate\n     *\n     * @param name      scheduled的名称\n     * @param fixedRate 上一次开始执行之后多长时间再执行\n     */\n    public void setScheduledFixedRate(String name, Long fixedRate) {\n        //终止原先的任务\n        cancelScheduled(name);\n        //创建新的任务\n        ScheduledSource scheduledSource = superScheduledConfig.getScheduledSource(name);\n        scheduledSource.clear();\n        scheduledSource.setFixedRate(fixedRate);\n        addScheduled(name, scheduledSource);\n    }\n\n    /**\n     * 查询所有启动的Scheduled\n     */\n    public List<String> getRunScheduledName() {\n        Set<String> names = superScheduledConfig.getNameToScheduledFuture().keySet();\n        return new ArrayList<>(names);\n    }\n\n    /**\n     * 查询所有的Scheduled\n     */\n    public List<String> getAllSuperScheduledName() {\n        Set<String> names = superScheduledConfig.getNameToRunnable().keySet();\n        return new ArrayList<>(names);\n    }\n\n    /**\n     * 终止Scheduled\n     *\n     * @param name scheduled的名称\n     */\n    public void cancelScheduled(String name) {\n        ScheduledFuture scheduledFuture = superScheduledConfig.getScheduledFuture(name);\n        scheduledFuture.cancel(true);\n        superScheduledConfig.removeScheduledFuture(name);\n        logger.info(df.format(LocalDateTime.now()) + "任务" + name + "已经终止...");\n    }\n\n    /**\n     * 启动Scheduled\n     *\n     * @param name            scheduled的名称\n     * @param scheduledSource 定时任务的源信息\n     */\n    public void addScheduled(String name, ScheduledSource scheduledSource) {\n        if (getRunScheduledName().contains(name)) {\n            throw new SuperScheduledException("定时任务" + name + "已经被启动过了");\n        }\n        if (!scheduledSource.check()) {\n            throw new SuperScheduledException("定时任务" + name + "源数据内容错误");\n        }\n\n        scheduledSource.refreshType();\n\n        Runnable runnable = superScheduledConfig.getRunnable(name);\n        ThreadPoolTaskScheduler taskScheduler = superScheduledConfig.getTaskScheduler();\n\n\n        ScheduledFuture<?> schedule = ScheduledFutureFactory.create(taskScheduler, scheduledSource, runnable);\n        logger.info(df.format(LocalDateTime.now()) + "任务" + name + "已经启动...");\n\n        superScheduledConfig.addScheduledSource(name, scheduledSource);\n        superScheduledConfig.addScheduledFuture(name, schedule);\n    }\n\n    /**\n     * 以cron类型启动Scheduled\n     *\n     * @param name scheduled的名称\n     * @param cron cron表达式\n     */\n    public void addCronScheduled(String name, String cron) {\n        ScheduledSource scheduledSource = new ScheduledSource();\n        scheduledSource.setCron(cron);\n\n        addScheduled(name, scheduledSource);\n    }\n\n    /**\n     * 以fixedDelay类型启动Scheduled\n     *\n     * @param name         scheduled的名称\n     * @param fixedDelay   上一次执行完毕时间点之后多长时间再执行\n     * @param initialDelay 第一次执行的延迟时间\n     */\n    public void addFixedDelayScheduled(String name, Long fixedDelay, Long... initialDelay) {\n        ScheduledSource scheduledSource = new ScheduledSource();\n        scheduledSource.setFixedDelay(fixedDelay);\n        if (initialDelay != null && initialDelay.length == 1) {\n            scheduledSource.setInitialDelay(initialDelay[0]);\n        } else if (initialDelay != null && initialDelay.length > 1) {\n            throw new SuperScheduledException("第一次执行的延迟时间只能传入一个参数");\n        }\n\n        addScheduled(name, scheduledSource);\n    }\n\n    /**\n     * 以fixedRate类型启动Scheduled\n     *\n     * @param name         scheduled的名称\n     * @param fixedRate    上一次开始执行之后多长时间再执行\n     * @param initialDelay 第一次执行的延迟时间\n     */\n    public void addFixedRateScheduled(String name, Long fixedRate, Long... initialDelay) {\n        ScheduledSource scheduledSource = new ScheduledSource();\n        scheduledSource.setFixedRate(fixedRate);\n        if (initialDelay != null && initialDelay.length == 1) {\n            scheduledSource.setInitialDelay(initialDelay[0]);\n        } else if (initialDelay != null && initialDelay.length > 1) {\n            throw new SuperScheduledException("第一次执行的延迟时间只能传入一个参数");\n        }\n\n        addScheduled(name, scheduledSource);\n    }\n\n    /**\n     * 手动执行一次任务\n     *\n     * @param name scheduled的名称\n     */\n    public void runScheduled(String name) {\n        Runnable runnable = superScheduledConfig.getRunnable(name);\n        runnable.run();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n\n\n# 2、增强接口实现\n\n增强器实现的整体思路与SpringAop的思路一致，实现没有Aop复杂\n\n(1) 增强接口\n\n@Order(Ordered.HIGHEST_PRECEDENCE)\npublic interface BaseStrengthen {\n    /**\n     * 前置强化方法\n     *\n     * @param bean   bean实例（或者是被代理的bean）\n     * @param method 执行的方法对象\n     * @param args   方法参数\n     */\n    void before(Object bean, Method method, Object[] args);\n\n    /**\n     * 后置强化方法\n     * 出现异常不会执行\n     * 如果未出现异常，在afterFinally方法之后执行\n     *\n     * @param bean   bean实例（或者是被代理的bean）\n     * @param method 执行的方法对象\n     * @param args   方法参数\n     */\n    void after(Object bean, Method method, Object[] args);\n\n    /**\n     * 异常强化方法\n     *\n     * @param bean   bean实例（或者是被代理的bean）\n     * @param method 执行的方法对象\n     * @param args   方法参数\n     */\n    void exception(Object bean, Method method, Object[] args);\n\n    /**\n     * Finally强化方法，出现异常也会执行\n     *\n     * @param bean   bean实例（或者是被代理的bean）\n     * @param method 执行的方法对象\n     * @param args   方法参数\n     */\n    void afterFinally(Object bean, Method method, Object[] args);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n(2) 代理抽象类\n\npublic abstract class Point {\n    /**\n     * 定时任务名\n     */\n    private String superScheduledName;\n\n    /**\n     * 抽象的执行方法，使用代理实现\n     * @param runnable 定时任务执行器\n     */\n    public abstract Object invoke(SuperScheduledRunnable runnable);\n    \n    /* 普通的get/sets省略 */\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n(3) 调用链类\n\npublic class Chain {\n    private List<Point> list;\n    private int index = -1;\n    /**\n     * 索引自增1\n     */\n    public int incIndex() {\n        return ++index;\n    }\n\n    /**\n     * 索引还原\n     */\n    public void resetIndex() {\n        this.index = -1;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n(4) cglib动态代理实现\n\n使用cglib代理增强器，将增强器全部代理成调用链节点Point\n\npublic class RunnableBaseInterceptor implements MethodInterceptor {\n    /**\n     * 定时任务执行器\n     */\n    private SuperScheduledRunnable runnable;\n    /**\n     * 定时任务增强类\n     */\n    private BaseStrengthen strengthen;\n\n    @Override\n    public Object intercept(Object obj, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {\n        Object result;\n        //如果执行的是invoke()方法\n        if ("invoke".equals(method.getName())) {\n         //前置强化方法\n            strengthen.before(obj, method, args);\n            try {\n             //调用执行器中的invoke()方法\n                result = runnable.invoke();\n            } catch (Exception e) {\n             //异常强化方法\n                strengthen.exception(obj, method, args);\n                throw new SuperScheduledException(strengthen.getClass() + "中强化执行时发生错误", e);\n            } finally {\n             //Finally强化方法，出现异常也会执行\n                strengthen.afterFinally(obj, method, args);\n            }\n            //后置强化方法\n            strengthen.after(obj, method, args);\n\n        } else {\n         //直接执行方法\n            result = methodProxy.invokeSuper(obj, args);\n        }\n        return result;\n    }\n\n    public RunnableBaseInterceptor(Object object, SuperScheduledRunnable runnable) {\n        this.runnable = runnable;\n        if (BaseStrengthen.class.isAssignableFrom(object.getClass())) {\n            this.strengthen = (BaseStrengthen) object;\n        } else {\n            throw new SuperScheduledException(object.getClass() + "对象不是BaseStrengthen类型");\n        }\n    }\n\n    public RunnableBaseInterceptor() {\n\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n\n\n(5) 定时任务执行器实现\n\npublic class SuperScheduledRunnable {\n    /**\n     * 原始的方法\n     */\n    private Method method;\n    /**\n     * 方法所在的bean\n     */\n    private Object bean;\n    /**\n     * 增强器的调用链\n     */\n    private Chain chain;\n\n\n    public Object invoke() {\n        Object result;\n        //索引自增1\n        if (chain.incIndex() == chain.getList().size()) {\n            //调用链中的增强方法已经全部执行结束\n            try {\n                //调用链索引初始化\n                chain.resetIndex();\n                //增强器全部执行完毕，执行原本的方法\n                result = method.invoke(bean);\n            } catch (IllegalAccessException | InvocationTargetException e) {\n                throw new SuperScheduledException(e.getLocalizedMessage());\n            }\n        } else {\n            //获取被代理后的方法增强器\n            Point point = chain.getList().get(chain.getIndex());\n            //执行增强器代理\n            //增强器代理中，会回调方法执行器，形成调用链，逐一运行调用链中的增强器\n            result = point.invoke(this);\n        }\n        return result;\n    }\n    \n    /* 普通的get/sets省略 */\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n(6) 增强器代理逻辑\n\ncom.gyx.superscheduled.core.SuperScheduledApplicationRunner类中的代码片段\n\n//创建执行控制器\nSuperScheduledRunnable runnable = new SuperScheduledRunnable();\nrunnable.setMethod(scheduledSource.getMethod());\nrunnable.setBean(scheduledSource.getBean());\n//用来存放 增强器的代理对象\nList<Point> points = new ArrayList<>(baseStrengthenBeanNames.length);\n//循环所有的增强器的beanName\nfor (String baseStrengthenBeanName : baseStrengthenBeanNames) {\n //获取增强器的bean对象\n    Object baseStrengthenBean = applicationContext.getBean(baseStrengthenBeanName);\n    //将增强器代理成Point节点\n    Point proxy = ProxyUtils.getInstance(Point.class, new RunnableBaseInterceptor(baseStrengthenBean, runnable));\n    proxy.setSuperScheduledName(name);\n    //增强器的代理对象缓存到list中\n    points.add(proxy);\n}\n//将增强器代理实例的集合生成调用链\n//执行控制器中设置调用链\nrunnable.setChain(new Chain(points));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# springboot 定时任务动态管理通用解决方案\n\n\n# 一、功能说明\n\nspringboot的定时任务的加强工具，实现对springboot原生的定时任务进行动态管理,完全兼容原生@scheduled注解,无需对原本的定时任务进行修改\n\n> 基于 spring boot + mybatis plus + vue & element 实现的后台管理系统 + 用户小程序，支持 rbac 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能。\n> \n> 项目地址：https://github.com/yunaiv/ruoyi-vue-pro\n\n\n# 二、快速使用\n\n具体的功能已经封装成springboot-starter即插即用\n\n<dependency>\n    <groupid>com.github.guoyixing</groupid>\n    <artifactid>spring-boot-starter-super-scheduled</artifactid>\n    <version>0.3.1</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n使用方法和源码：\n\n> 码云：https://gitee.com/qiaodaimadewangcai/super-scheduled\n> \n> github：https://github.com/guoyixing/super-scheduled\n\n> 基于微服务的思想，构建在 b2c 电商场景下的项目实战。核心技术栈，是 spring boot + dubbo 。未来，会重构成 spring cloud alibaba 。\n> \n> 项目地址：https://github.com/yunaiv/onemall\n\n\n# 三、实现原理\n\n# 1、动态管理实现\n\n(1) 配置管理介绍\n\n@component("superscheduledconfig")\npublic class superscheduledconfig {\n    /**\n     * 执行定时任务的线程池\n     */\n    private threadpooltaskscheduler taskscheduler;\n\n    /**\n     * 定时任务名称与定时任务回调钩子  的关联关系容器\n     */\n    private map<string, scheduledfuture> nametoscheduledfuture = new concurrenthashmap<>();\n\n    /**\n     * 定时任务名称与定时任务需要执行的逻辑  的关联关系容器\n     */\n    private map<string, runnable> nametorunnable = new concurrenthashmap<>();\n\n    /**\n     * 定时任务名称与定时任务的源信息  的关联关系容器\n     */\n    private map<string, scheduledsource> nametoscheduledsource = new concurrenthashmap<>();\n /* 普通的get/sets省略 */\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n(2) 使用后处理器拦截springboot原本的定时任务\n\n * 实现applicationcontextaware接口拿到springboot的上下文\n * 实现beanpostprocessor接口，将这个类标记为后处理器，后处理器会在每个bean实例化之后执行\n * 使用@dependson注解强制依赖superscheduledconfig类，让springboot实例化superscheduledpostprocessor类之前先实例化superscheduledconfig类\n * 主要实现逻辑在postprocessafterinitialization()方法中\n\n@dependson({"superscheduledconfig"})\n@component\n@order\npublic class superscheduledpostprocessor implements beanpostprocessor, applicationcontextaware {\n    protected final log logger = logfactory.getlog(getclass());\n\n    private applicationcontext applicationcontext;\n\n    /**\n     * 实例化bean之前的操作\n     * @param bean bean实例\n     * @param beanname bean的name\n     */\n    @override\n    public object postprocessbeforeinitialization(object bean, string beanname) throws beansexception {\n        return bean;\n    }\n\n    /**\n     * 实例化bean之后的操作\n     * @param bean bean实例\n     * @param beanname bean的name\n     */\n    @override\n    public object postprocessafterinitialization(object bean,\n                                                 string beanname) throws beansexception {\n        //1.获取配置管理器\n        superscheduledconfig superscheduledconfig = applicationcontext.getbean(superscheduledconfig.class);\n\n        //2.获取当前实例化完成的bean的所有方法\n        method[] methods = bean.getclass().getdeclaredmethods();\n        //循环处理对每个方法逐一处理\n        if (methods.length > 0) {\n            for (method method : methods) {\n             //3.尝试在该方法上获取@scheduled注解（springboot的定时任务注解）\n                scheduled annotation = method.getannotation(scheduled.class);\n                //如果无法获取到@scheduled注解，就跳过这个方法\n                if (annotation == null) {\n                    continue;\n                }\n                //4.创建定时任务的源属性\n                //创建定时任务的源属性（用来记录定时任务的配置，初始化的时候记录的是注解上原本的属性）\n                scheduledsource scheduledsource = new scheduledsource(annotation, method, bean);\n                //对注解上获取到源属性中的属性进行检测\n                if (!scheduledsource.check()) {\n                    throw new superscheduledexception("在" + beanname + "bean中" + method.getname() + "方法的注解参数错误");\n                }\n                //生成定时任务的名称（id），使用beanname+“.”+方法名\n                string name = beanname + "." + method.getname();\n                //将以key-value的形式，将源数据存入配置管理器中，key：定时任务的名称 value：源数据\n                superscheduledconfig.addscheduledsource(name, scheduledsource);\n                try {\n                 //5.将原本springboot的定时任务取消掉\n                    clearoriginalscheduled(annotation);\n                } catch (exception e) {\n                    throw new superscheduledexception("在关闭原始方法" + beanname + method.getname() + "时出现错误");\n                }\n            }\n        }\n        //最后bean保持原有返回\n        return bean;\n    }\n\n    /**\n     * 修改注解原先的属性\n     * @param annotation 注解实例对象\n     * @throws exception\n     */\n    private void clearoriginalscheduled(scheduled annotation) throws exception {\n        changeannotationvalue(annotation, "cron", scheduled.cron_disabled);\n        changeannotationvalue(annotation, "fixeddelay", -1l);\n        changeannotationvalue(annotation, "fixeddelaystring", "");\n        changeannotationvalue(annotation, "fixedrate", -1l);\n        changeannotationvalue(annotation, "fixedratestring", "");\n        changeannotationvalue(annotation, "initialdelay", -1l);\n        changeannotationvalue(annotation, "initialdelaystring", "");\n    }\n\n\n    /**\n     * 获取springboot的上下文\n     * @param applicationcontext springboot的上下文\n     */\n    @override\n    public void setapplicationcontext(applicationcontext applicationcontext) throws beansexception {\n        this.applicationcontext = applicationcontext;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n\n\n(3) 使用applicationrunner初始化自定义的定时任务运行器\n\n * 实现applicationcontextaware接口拿到springboot的上下文\n * 使用@dependson注解强制依赖threadpooltaskscheduler类\n * 实现applicationrunner接口，在所有bean初始化结束之后，运行自定义逻辑\n * 主要实现逻辑在run()方法中\n\n@dependson("threadpooltaskscheduler")\n@component\npublic class superscheduledapplicationrunner implements applicationrunner, applicationcontextaware {\n    protected final log logger = logfactory.getlog(getclass());\n    private datetimeformatter df = datetimeformatter.ofpattern("yyyy-mm-dd hh:mm:ss");\n    private applicationcontext applicationcontext;\n \n /**\n     * 定时任务配置管理器\n     */\n    @autowired\n    private superscheduledconfig superscheduledconfig;\n    /**\n     * 定时任务执行线程\n     */\n    @autowired\n    private threadpooltaskscheduler threadpooltaskscheduler;\n\n    @override\n    public void run(applicationarguments args) {\n     //1.定时任务配置管理器中缓存  定时任务执行线程\n        superscheduledconfig.settaskscheduler(threadpooltaskscheduler);\n        //2.获取所有定时任务源数据\n        map<string, scheduledsource> nametoscheduledsource = superscheduledconfig.getnametoscheduledsource();\n        //逐一处理定时任务\n        for (string name : nametoscheduledsource.keyset()) {\n            //3.获取定时任务源数据\n            scheduledsource scheduledsource = nametoscheduledsource.get(name);\n            //4.获取所有增强类\n            string[] basestrengthenbeannames = applicationcontext.getbeannamesfortype(basestrengthen.class);\n            //5.创建执行控制器\n            superscheduledrunnable runnable = new superscheduledrunnable();\n            //配置执行控制器\n            runnable.setmethod(scheduledsource.getmethod());\n            runnable.setbean(scheduledsource.getbean());\n            //6.逐一处理增强类（增强器实现原理后面具体分析）\n            list<point> points = new arraylist<>(basestrengthenbeannames.length);\n            for (string basestrengthenbeanname : basestrengthenbeannames) {\n             //7.将增强器代理成point\n                object basestrengthenbean = applicationcontext.getbean(basestrengthenbeanname);\n                //创建代理\n                point proxy = proxyutils.getinstance(point.class, new runnablebaseinterceptor(basestrengthenbean, runnable));\n                proxy.setsuperscheduledname(name);\n                //8.所有的points连成起来\n                points.add(proxy);\n            }\n   //将point形成调用链\n            runnable.setchain(new chain(points));\n            //将执行逻辑封装并缓存到定时任务配置管理器中\n            superscheduledconfig.addrunnable(name, runnable::invoke);\n            try {\n             //8.启动定时任务\n                scheduledfuture<?> schedule = scheduledfuturefactory.create(threadpooltaskscheduler\n                        , scheduledsource, runnable::invoke);\n                //将线程回调钩子存到任务配置管理器中\n                superscheduledconfig.addscheduledfuture(name, schedule);\n                logger.info(df.format(localdatetime.now()) + "任务" + name + "已经启动...");\n\n            } catch (exception e) {\n                throw new superscheduledexception("任务" + name + "启动失败，错误信息：" + e.getlocalizedmessage());\n            }\n        }\n    }\n\n    @override\n    public void setapplicationcontext(applicationcontext applicationcontext) throws beansexception {\n        this.applicationcontext = applicationcontext;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n\n\n(4) 进行动态管理\n\n@component\npublic class superscheduledmanager {\n    protected final log logger = logfactory.getlog(getclass());\n    private datetimeformatter df = datetimeformatter.ofpattern("yyyy-mm-dd hh:mm:ss");\n\n    @autowired\n    private superscheduledconfig superscheduledconfig;\n\n    /**\n     * 修改scheduled的执行周期\n     *\n     * @param name scheduled的名称\n     * @param cron cron表达式\n     */\n    public void setscheduledcron(string name, string cron) {\n        //终止原先的任务\n        cancelscheduled(name);\n        //创建新的任务\n        scheduledsource scheduledsource = superscheduledconfig.getscheduledsource(name);\n        scheduledsource.clear();\n        scheduledsource.setcron(cron);\n        addscheduled(name, scheduledsource);\n    }\n\n    /**\n     * 修改scheduled的fixeddelay\n     *\n     * @param name       scheduled的名称\n     * @param fixeddelay 上一次执行完毕时间点之后多长时间再执行\n     */\n    public void setscheduledfixeddelay(string name, long fixeddelay) {\n        //终止原先的任务\n        cancelscheduled(name);\n        //创建新的任务\n        scheduledsource scheduledsource = superscheduledconfig.getscheduledsource(name);\n        scheduledsource.clear();\n        scheduledsource.setfixeddelay(fixeddelay);\n        addscheduled(name, scheduledsource);\n    }\n\n    /**\n     * 修改scheduled的fixedrate\n     *\n     * @param name      scheduled的名称\n     * @param fixedrate 上一次开始执行之后多长时间再执行\n     */\n    public void setscheduledfixedrate(string name, long fixedrate) {\n        //终止原先的任务\n        cancelscheduled(name);\n        //创建新的任务\n        scheduledsource scheduledsource = superscheduledconfig.getscheduledsource(name);\n        scheduledsource.clear();\n        scheduledsource.setfixedrate(fixedrate);\n        addscheduled(name, scheduledsource);\n    }\n\n    /**\n     * 查询所有启动的scheduled\n     */\n    public list<string> getrunscheduledname() {\n        set<string> names = superscheduledconfig.getnametoscheduledfuture().keyset();\n        return new arraylist<>(names);\n    }\n\n    /**\n     * 查询所有的scheduled\n     */\n    public list<string> getallsuperscheduledname() {\n        set<string> names = superscheduledconfig.getnametorunnable().keyset();\n        return new arraylist<>(names);\n    }\n\n    /**\n     * 终止scheduled\n     *\n     * @param name scheduled的名称\n     */\n    public void cancelscheduled(string name) {\n        scheduledfuture scheduledfuture = superscheduledconfig.getscheduledfuture(name);\n        scheduledfuture.cancel(true);\n        superscheduledconfig.removescheduledfuture(name);\n        logger.info(df.format(localdatetime.now()) + "任务" + name + "已经终止...");\n    }\n\n    /**\n     * 启动scheduled\n     *\n     * @param name            scheduled的名称\n     * @param scheduledsource 定时任务的源信息\n     */\n    public void addscheduled(string name, scheduledsource scheduledsource) {\n        if (getrunscheduledname().contains(name)) {\n            throw new superscheduledexception("定时任务" + name + "已经被启动过了");\n        }\n        if (!scheduledsource.check()) {\n            throw new superscheduledexception("定时任务" + name + "源数据内容错误");\n        }\n\n        scheduledsource.refreshtype();\n\n        runnable runnable = superscheduledconfig.getrunnable(name);\n        threadpooltaskscheduler taskscheduler = superscheduledconfig.gettaskscheduler();\n\n\n        scheduledfuture<?> schedule = scheduledfuturefactory.create(taskscheduler, scheduledsource, runnable);\n        logger.info(df.format(localdatetime.now()) + "任务" + name + "已经启动...");\n\n        superscheduledconfig.addscheduledsource(name, scheduledsource);\n        superscheduledconfig.addscheduledfuture(name, schedule);\n    }\n\n    /**\n     * 以cron类型启动scheduled\n     *\n     * @param name scheduled的名称\n     * @param cron cron表达式\n     */\n    public void addcronscheduled(string name, string cron) {\n        scheduledsource scheduledsource = new scheduledsource();\n        scheduledsource.setcron(cron);\n\n        addscheduled(name, scheduledsource);\n    }\n\n    /**\n     * 以fixeddelay类型启动scheduled\n     *\n     * @param name         scheduled的名称\n     * @param fixeddelay   上一次执行完毕时间点之后多长时间再执行\n     * @param initialdelay 第一次执行的延迟时间\n     */\n    public void addfixeddelayscheduled(string name, long fixeddelay, long... initialdelay) {\n        scheduledsource scheduledsource = new scheduledsource();\n        scheduledsource.setfixeddelay(fixeddelay);\n        if (initialdelay != null && initialdelay.length == 1) {\n            scheduledsource.setinitialdelay(initialdelay[0]);\n        } else if (initialdelay != null && initialdelay.length > 1) {\n            throw new superscheduledexception("第一次执行的延迟时间只能传入一个参数");\n        }\n\n        addscheduled(name, scheduledsource);\n    }\n\n    /**\n     * 以fixedrate类型启动scheduled\n     *\n     * @param name         scheduled的名称\n     * @param fixedrate    上一次开始执行之后多长时间再执行\n     * @param initialdelay 第一次执行的延迟时间\n     */\n    public void addfixedratescheduled(string name, long fixedrate, long... initialdelay) {\n        scheduledsource scheduledsource = new scheduledsource();\n        scheduledsource.setfixedrate(fixedrate);\n        if (initialdelay != null && initialdelay.length == 1) {\n            scheduledsource.setinitialdelay(initialdelay[0]);\n        } else if (initialdelay != null && initialdelay.length > 1) {\n            throw new superscheduledexception("第一次执行的延迟时间只能传入一个参数");\n        }\n\n        addscheduled(name, scheduledsource);\n    }\n\n    /**\n     * 手动执行一次任务\n     *\n     * @param name scheduled的名称\n     */\n    public void runscheduled(string name) {\n        runnable runnable = superscheduledconfig.getrunnable(name);\n        runnable.run();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n\n\n# 2、增强接口实现\n\n增强器实现的整体思路与springaop的思路一致，实现没有aop复杂\n\n(1) 增强接口\n\n@order(ordered.highest_precedence)\npublic interface basestrengthen {\n    /**\n     * 前置强化方法\n     *\n     * @param bean   bean实例（或者是被代理的bean）\n     * @param method 执行的方法对象\n     * @param args   方法参数\n     */\n    void before(object bean, method method, object[] args);\n\n    /**\n     * 后置强化方法\n     * 出现异常不会执行\n     * 如果未出现异常，在afterfinally方法之后执行\n     *\n     * @param bean   bean实例（或者是被代理的bean）\n     * @param method 执行的方法对象\n     * @param args   方法参数\n     */\n    void after(object bean, method method, object[] args);\n\n    /**\n     * 异常强化方法\n     *\n     * @param bean   bean实例（或者是被代理的bean）\n     * @param method 执行的方法对象\n     * @param args   方法参数\n     */\n    void exception(object bean, method method, object[] args);\n\n    /**\n     * finally强化方法，出现异常也会执行\n     *\n     * @param bean   bean实例（或者是被代理的bean）\n     * @param method 执行的方法对象\n     * @param args   方法参数\n     */\n    void afterfinally(object bean, method method, object[] args);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n(2) 代理抽象类\n\npublic abstract class point {\n    /**\n     * 定时任务名\n     */\n    private string superscheduledname;\n\n    /**\n     * 抽象的执行方法，使用代理实现\n     * @param runnable 定时任务执行器\n     */\n    public abstract object invoke(superscheduledrunnable runnable);\n    \n    /* 普通的get/sets省略 */\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n(3) 调用链类\n\npublic class chain {\n    private list<point> list;\n    private int index = -1;\n    /**\n     * 索引自增1\n     */\n    public int incindex() {\n        return ++index;\n    }\n\n    /**\n     * 索引还原\n     */\n    public void resetindex() {\n        this.index = -1;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n(4) cglib动态代理实现\n\n使用cglib代理增强器，将增强器全部代理成调用链节点point\n\npublic class runnablebaseinterceptor implements methodinterceptor {\n    /**\n     * 定时任务执行器\n     */\n    private superscheduledrunnable runnable;\n    /**\n     * 定时任务增强类\n     */\n    private basestrengthen strengthen;\n\n    @override\n    public object intercept(object obj, method method, object[] args, methodproxy methodproxy) throws throwable {\n        object result;\n        //如果执行的是invoke()方法\n        if ("invoke".equals(method.getname())) {\n         //前置强化方法\n            strengthen.before(obj, method, args);\n            try {\n             //调用执行器中的invoke()方法\n                result = runnable.invoke();\n            } catch (exception e) {\n             //异常强化方法\n                strengthen.exception(obj, method, args);\n                throw new superscheduledexception(strengthen.getclass() + "中强化执行时发生错误", e);\n            } finally {\n             //finally强化方法，出现异常也会执行\n                strengthen.afterfinally(obj, method, args);\n            }\n            //后置强化方法\n            strengthen.after(obj, method, args);\n\n        } else {\n         //直接执行方法\n            result = methodproxy.invokesuper(obj, args);\n        }\n        return result;\n    }\n\n    public runnablebaseinterceptor(object object, superscheduledrunnable runnable) {\n        this.runnable = runnable;\n        if (basestrengthen.class.isassignablefrom(object.getclass())) {\n            this.strengthen = (basestrengthen) object;\n        } else {\n            throw new superscheduledexception(object.getclass() + "对象不是basestrengthen类型");\n        }\n    }\n\n    public runnablebaseinterceptor() {\n\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n\n\n(5) 定时任务执行器实现\n\npublic class superscheduledrunnable {\n    /**\n     * 原始的方法\n     */\n    private method method;\n    /**\n     * 方法所在的bean\n     */\n    private object bean;\n    /**\n     * 增强器的调用链\n     */\n    private chain chain;\n\n\n    public object invoke() {\n        object result;\n        //索引自增1\n        if (chain.incindex() == chain.getlist().size()) {\n            //调用链中的增强方法已经全部执行结束\n            try {\n                //调用链索引初始化\n                chain.resetindex();\n                //增强器全部执行完毕，执行原本的方法\n                result = method.invoke(bean);\n            } catch (illegalaccessexception | invocationtargetexception e) {\n                throw new superscheduledexception(e.getlocalizedmessage());\n            }\n        } else {\n            //获取被代理后的方法增强器\n            point point = chain.getlist().get(chain.getindex());\n            //执行增强器代理\n            //增强器代理中，会回调方法执行器，形成调用链，逐一运行调用链中的增强器\n            result = point.invoke(this);\n        }\n        return result;\n    }\n    \n    /* 普通的get/sets省略 */\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n(6) 增强器代理逻辑\n\ncom.gyx.superscheduled.core.superscheduledapplicationrunner类中的代码片段\n\n//创建执行控制器\nsuperscheduledrunnable runnable = new superscheduledrunnable();\nrunnable.setmethod(scheduledsource.getmethod());\nrunnable.setbean(scheduledsource.getbean());\n//用来存放 增强器的代理对象\nlist<point> points = new arraylist<>(basestrengthenbeannames.length);\n//循环所有的增强器的beanname\nfor (string basestrengthenbeanname : basestrengthenbeannames) {\n //获取增强器的bean对象\n    object basestrengthenbean = applicationcontext.getbean(basestrengthenbeanname);\n    //将增强器代理成point节点\n    point proxy = proxyutils.getinstance(point.class, new runnablebaseinterceptor(basestrengthenbean, runnable));\n    proxy.setsuperscheduledname(name);\n    //增强器的代理对象缓存到list中\n    points.add(proxy);\n}\n//将增强器代理实例的集合生成调用链\n//执行控制器中设置调用链\nrunnable.setchain(new chain(points));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},createdTime:1647670901e3,updateTime:"March 19, 2022 06:26",updateTimeStamp:1647671163e3,createTime:"March 19, 2022 06:21",createTimeStamp:1647670901e3,contributors:[]},{title:"Spring Boot 项目鉴权的 4 种方式",frontmatter:{author:"xlc520",title:"Spring Boot 项目鉴权的 4 种方式",description:"Spring Boot 项目鉴权的 4 种方式",time:"2022-03-01T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/SpringBoot%E9%A1%B9%E7%9B%AE%E9%89%B4%E6%9D%83%E7%9A%84%204%20%E7%A7%8D%E6%96%B9%E5%BC%8F.html",relativePath:"Java/SpringBoot项目鉴权的 4 种方式.md",key:"v-036ddef0",path:"/Java/SpringBoot%E9%A1%B9%E7%9B%AE%E9%89%B4%E6%9D%83%E7%9A%84%204%20%E7%A7%8D%E6%96%B9%E5%BC%8F/",headers:[{level:2,title:"传统AOP",slug:"传统aop",normalizedTitle:"传统aop",charIndex:30},{level:3,title:"实现",slug:"实现",normalizedTitle:"实现",charIndex:118},{level:3,title:"扩展",slug:"扩展",normalizedTitle:"扩展",charIndex:857},{level:2,title:"Interceptor",slug:"interceptor",normalizedTitle:"interceptor",charIndex:1135},{level:3,title:"实现",slug:"实现-2",normalizedTitle:"实现",charIndex:118},{level:3,title:"扩展",slug:"扩展-2",normalizedTitle:"扩展",charIndex:857},{level:2,title:"ArgumentResolver",slug:"argumentresolver",normalizedTitle:"argumentresolver",charIndex:3065},{level:3,title:"实现",slug:"实现-3",normalizedTitle:"实现",charIndex:118},{level:3,title:"扩展",slug:"扩展-3",normalizedTitle:"扩展",charIndex:857},{level:2,title:"Filter",slug:"filter",normalizedTitle:"filter",charIndex:4717},{level:3,title:"扩展",slug:"扩展-4",normalizedTitle:"扩展",charIndex:857},{level:2,title:"小结",slug:"小结",normalizedTitle:"小结",charIndex:6032}],readingTime:{minutes:5.64,words:1691},headersStr:"传统AOP 实现 扩展 Interceptor 实现 扩展 ArgumentResolver 实现 扩展 Filter 扩展 小结",content:'# Spring Boot 项目鉴权的 4 种方式\n\n\n# 传统AOP\n\n对于这种需求，首先想到的当然是 Spring-boot 提供的 AOP 接口，只需要在 Controller 方法前添加切点，然后再对切点进行处理即可。\n\n\n# 实现\n\n其使用步骤如下：\n\n 1. 使用 @Aspect 声明一下切面类 WhitelistAspect；\n 2. 在切面类内添加一个切点 whitelistPointcut()，为了实现此切点灵活可装配的能力，这里不使用 execution 全部拦截，而是添加一个注解 @Whitelist，被注解的方法才会校验白名单。\n 3. 在切面类中使用 spring 的 AOP 注解 @Before 声明一个通知方法 checkWhitelist() 在 Controller 方法被执行之前校验白名单。\n\n切面类伪代码如下：\n\n@Aspect\npublic class WhitelistAspect {\n   \n @Before(value = "whitelistPointcut() && @annotation(whitelist)")\n public void checkAppkeyWhitelist(JoinPoint joinPoint, Whitelist whitelist) {\n     checkWhitelist();\n     // 可使用 joinPoint.getArgs() 获取Controller方法的参数\n     // 可以使用 whitelist 变量获取注解参数\n }\n   \n   \n @Pointcut("@annotation(com.zhenbianshu.Whitelist)")\n public void whitelistPointCut() {\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n在Controller方法上添加 @Whitelist 注解实现功能。\n\n\n# 扩展\n\n本例中使用了 注解 来声明切点，并且我实现了通过注解参数来声明要校验的白名单，如果之后还需要添加其他白名单的话，如通过 UID 来校验，则可以为此注解添加 uid() 等方法，实现自定义校验。此外，spring 的 AOP 还支持 execution（执行方法） 、bean（匹配特定名称的 Bean 对象的执行方法）等切点声明方法和 @Around（在目标函数执行中执行） 、@After（方法执行后） 等通知方法。如此，功能已经实现了，但领导并不满意=_=，原因是项目中 AOP 用得太多了，都用滥了，建议我换一种方式。嗯，只好搞起。\n\n\n# Interceptor\n\nSpring 的 拦截器(Interceptor) 实现这个功能也非常合适。顾名思义，拦截器用于在 Controller 内 Action 被执行前通过一些参数判断是否要执行此方法，要实现一个拦截器，可以实现 Spring 的 HandlerInterceptor 接口。\n\n\n# 实现\n\n实现步骤如下：\n\n 1. 定义拦截器类 AppkeyInterceptor 类并实现 HandlerInterceptor 接口。\n 2. 实现其 preHandle() 方法；\n 3. 在 preHandle 方法内通过注解和参数判断是否需要拦截请求，拦截请求时接口返回 false；\n 4. 在自定义的 WebMvcConfigurerAdapter 类内注册此拦截器；\n\nAppkeyInterceptor 类如下：\n\n@Component\npublic class WhitelistInterceptor implements HandlerInterceptor {\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        Whitelist whitelist = ((HandlerMethod) handler).getMethodAnnotation(Whitelist.class);\n        // whitelist.values(); 通过 request 获取请求参数，通过 whitelist 变量获取注解参数\n        return true;\n    }\n\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n  // 方法在Controller方法执行结束后执行\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n  // 在view视图渲染完成后执行\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 扩展\n\n要启用 拦截器还要显式配置它启用，这里我们使用 WebMvcConfigurerAdapter 对它进行配置。需要注意，继承它的的 MvcConfiguration 需要在 ComponentScan 路径下。\n\n@Configuration\npublic class MvcConfiguration extends WebMvcConfigurerAdapter {\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(new WhitelistInterceptor()).addPathPatterns("/*").order(1);\n        // 这里可以配置拦截器启用的 path 的顺序，在有多个拦截器存在时，任一拦截器返回 false 都会使后续的请求方法不再执行\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n还需要注意，拦截器执行成功后响应码为 200，但响应数据为空。Spring Boot 基础教程和示例源码在这里学习：https://github.com/javastacks/javastack，非常全了。当使用拦截器实现功能后，领导终于祭出大招了：我们已经有一个 Auth 参数了，appkey 可以从 Auth 参数里取到，可以把在不在白名单作为 Auth 的一种方式，为什么不在 Auth 时校验？emmm… 吐血中。\n\n搜索公纵号：MarkerHub，关注回复[ vue ]获取前后端入门教程！\n\n\n# ArgumentResolver\n\n参数解析器是 Spring 提供的用于解析自定义参数的工具，我们常用的 @RequestParam 注解就有它的影子，使用它，我们可以将参数在进入Controller Action之前就组合成我们想要的样子。Spring 会维护一个 ResolverList， 在请求到达时，Spring 发现有自定义类型参数（非基本类型）， 会依次尝试这些 Resolver，直到有一个 Resolver 能解析需要的参数。要实现一个参数解析器，需要实现 HandlerMethodArgumentResolver 接口。\n\n\n# 实现\n\n 1. 定义自定义参数类型 AuthParam，类内有 appkey 相关字段；\n 2. 定义 AuthParamResolver 并实现 HandlerMethodArgumentResolver 接口；\n 3. 实现 supportsParameter() 接口方法将 AuthParam 与 AuthParamResolver 适配起来；\n 4. 实现 resolveArgument() 接口方法解析 reqest 对象生成 AuthParam 对象，并在此校验 AuthParam ，确认 appkey 是否在白名单内；\n 5. 在 Controller Action 方法上签名内添加 AuthParam 参数以启用此 Resolver;\n\n实现的 AuthParamResolver 类如下：\n\n@Component\npublic class AuthParamResolver implements HandlerMethodArgumentResolver {\n\n    @Override\n    public boolean supportsParameter(MethodParameter parameter) {\n        return parameter.getParameterType().equals(AuthParam.class);\n    }\n\n    @Override\n    public Object resolveArgument(MethodParameter parameter, ModelAndViewContainer mavContainer, NativeWebRequest webRequest, WebDataBinderFactory binderFactory) throws Exception {\n        Whitelist whitelist = parameter.getMethodAnnotation(Whitelist.class);\n        // 通过 webRequest 和 whitelist 校验白名单\n        return new AuthParam();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 扩展\n\n当然，使用参数解析器也需要单独配置，我们同样在 WebMvcConfigurerAdapter内配置：\n\n@Configuration\npublic class MvcConfiguration extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {\n        argumentResolvers.add(new AuthParamResolver());\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n这次实现完了，我还有些不放心，于是在网上查找是否还有其他方式可以实现此功能，发现常见的还有 Filter。\n\n\n# Filter\n\nFilter 并不是 Spring 提供的，它是在 Servlet 规范中定义的，是 Servlet 容器支持的。被 Filter 过滤的请求，不会派发到 Spring 容器中。它的实现也比较简单，实现 javax.servlet.Filter接口即可。由于不在 Spring 容器中，Filter 获取不到 Spring 容器的资源，只能使用原生 Java 的 ServletRequest 和 ServletResponse 来获取请求参数。另外，在一个 Filter 中要显示调用 FilterChain 的 doFilter 方法，不然认为请求被拦截。实现类似：\n\npublic class WhitelistFilter implements javax.servlet.Filter {\n\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n  // 初始化后被调用一次\n    }\n\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n     // 判断是否需要拦截\n       chain.doFilter(request, response); // 请求通过要显示调用\n    }\n\n    @Override\n    public void destroy() {\n     // 被销毁时调用一次\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 扩展\n\nFilter 也需要显示配置：\n\n@Configuration\npublic class FilterConfiguration {\n\n    @Bean\n    public FilterRegistrationBean someFilterRegistration() {\n        FilterRegistrationBean registration = new FilterRegistrationBean();\n        registration.setFilter(new WhitelistFilter());\n        registration.addUrlPatterns("/*");\n        registration.setName("whitelistFilter");\n        registration.setOrder(1); // 设置过滤器被调用的顺序\n        return registration;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 小结\n\n四种实现方式都有其适合的场 景，那么它们之间的调用顺序如何呢？Filter 是 Servlet 实现的，自然是最先被调用，后续被调用的是 Interceptor 被拦截了自然不需要后续再进行处理，然后是 参数解析器，最后才是切面的切点。',normalizedContent:'# spring boot 项目鉴权的 4 种方式\n\n\n# 传统aop\n\n对于这种需求，首先想到的当然是 spring-boot 提供的 aop 接口，只需要在 controller 方法前添加切点，然后再对切点进行处理即可。\n\n\n# 实现\n\n其使用步骤如下：\n\n 1. 使用 @aspect 声明一下切面类 whitelistaspect；\n 2. 在切面类内添加一个切点 whitelistpointcut()，为了实现此切点灵活可装配的能力，这里不使用 execution 全部拦截，而是添加一个注解 @whitelist，被注解的方法才会校验白名单。\n 3. 在切面类中使用 spring 的 aop 注解 @before 声明一个通知方法 checkwhitelist() 在 controller 方法被执行之前校验白名单。\n\n切面类伪代码如下：\n\n@aspect\npublic class whitelistaspect {\n   \n @before(value = "whitelistpointcut() && @annotation(whitelist)")\n public void checkappkeywhitelist(joinpoint joinpoint, whitelist whitelist) {\n     checkwhitelist();\n     // 可使用 joinpoint.getargs() 获取controller方法的参数\n     // 可以使用 whitelist 变量获取注解参数\n }\n   \n   \n @pointcut("@annotation(com.zhenbianshu.whitelist)")\n public void whitelistpointcut() {\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n在controller方法上添加 @whitelist 注解实现功能。\n\n\n# 扩展\n\n本例中使用了 注解 来声明切点，并且我实现了通过注解参数来声明要校验的白名单，如果之后还需要添加其他白名单的话，如通过 uid 来校验，则可以为此注解添加 uid() 等方法，实现自定义校验。此外，spring 的 aop 还支持 execution（执行方法） 、bean（匹配特定名称的 bean 对象的执行方法）等切点声明方法和 @around（在目标函数执行中执行） 、@after（方法执行后） 等通知方法。如此，功能已经实现了，但领导并不满意=_=，原因是项目中 aop 用得太多了，都用滥了，建议我换一种方式。嗯，只好搞起。\n\n\n# interceptor\n\nspring 的 拦截器(interceptor) 实现这个功能也非常合适。顾名思义，拦截器用于在 controller 内 action 被执行前通过一些参数判断是否要执行此方法，要实现一个拦截器，可以实现 spring 的 handlerinterceptor 接口。\n\n\n# 实现\n\n实现步骤如下：\n\n 1. 定义拦截器类 appkeyinterceptor 类并实现 handlerinterceptor 接口。\n 2. 实现其 prehandle() 方法；\n 3. 在 prehandle 方法内通过注解和参数判断是否需要拦截请求，拦截请求时接口返回 false；\n 4. 在自定义的 webmvcconfigureradapter 类内注册此拦截器；\n\nappkeyinterceptor 类如下：\n\n@component\npublic class whitelistinterceptor implements handlerinterceptor {\n\n    @override\n    public boolean prehandle(httpservletrequest request, httpservletresponse response, object handler) throws exception {\n        whitelist whitelist = ((handlermethod) handler).getmethodannotation(whitelist.class);\n        // whitelist.values(); 通过 request 获取请求参数，通过 whitelist 变量获取注解参数\n        return true;\n    }\n\n    @override\n    public void posthandle(httpservletrequest request, httpservletresponse response, object handler, modelandview modelandview) throws exception {\n  // 方法在controller方法执行结束后执行\n    }\n\n    @override\n    public void aftercompletion(httpservletrequest request, httpservletresponse response, object handler, exception ex) throws exception {\n  // 在view视图渲染完成后执行\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 扩展\n\n要启用 拦截器还要显式配置它启用，这里我们使用 webmvcconfigureradapter 对它进行配置。需要注意，继承它的的 mvcconfiguration 需要在 componentscan 路径下。\n\n@configuration\npublic class mvcconfiguration extends webmvcconfigureradapter {\n    @override\n    public void addinterceptors(interceptorregistry registry) {\n        registry.addinterceptor(new whitelistinterceptor()).addpathpatterns("/*").order(1);\n        // 这里可以配置拦截器启用的 path 的顺序，在有多个拦截器存在时，任一拦截器返回 false 都会使后续的请求方法不再执行\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n还需要注意，拦截器执行成功后响应码为 200，但响应数据为空。spring boot 基础教程和示例源码在这里学习：https://github.com/javastacks/javastack，非常全了。当使用拦截器实现功能后，领导终于祭出大招了：我们已经有一个 auth 参数了，appkey 可以从 auth 参数里取到，可以把在不在白名单作为 auth 的一种方式，为什么不在 auth 时校验？emmm… 吐血中。\n\n搜索公纵号：markerhub，关注回复[ vue ]获取前后端入门教程！\n\n\n# argumentresolver\n\n参数解析器是 spring 提供的用于解析自定义参数的工具，我们常用的 @requestparam 注解就有它的影子，使用它，我们可以将参数在进入controller action之前就组合成我们想要的样子。spring 会维护一个 resolverlist， 在请求到达时，spring 发现有自定义类型参数（非基本类型）， 会依次尝试这些 resolver，直到有一个 resolver 能解析需要的参数。要实现一个参数解析器，需要实现 handlermethodargumentresolver 接口。\n\n\n# 实现\n\n 1. 定义自定义参数类型 authparam，类内有 appkey 相关字段；\n 2. 定义 authparamresolver 并实现 handlermethodargumentresolver 接口；\n 3. 实现 supportsparameter() 接口方法将 authparam 与 authparamresolver 适配起来；\n 4. 实现 resolveargument() 接口方法解析 reqest 对象生成 authparam 对象，并在此校验 authparam ，确认 appkey 是否在白名单内；\n 5. 在 controller action 方法上签名内添加 authparam 参数以启用此 resolver;\n\n实现的 authparamresolver 类如下：\n\n@component\npublic class authparamresolver implements handlermethodargumentresolver {\n\n    @override\n    public boolean supportsparameter(methodparameter parameter) {\n        return parameter.getparametertype().equals(authparam.class);\n    }\n\n    @override\n    public object resolveargument(methodparameter parameter, modelandviewcontainer mavcontainer, nativewebrequest webrequest, webdatabinderfactory binderfactory) throws exception {\n        whitelist whitelist = parameter.getmethodannotation(whitelist.class);\n        // 通过 webrequest 和 whitelist 校验白名单\n        return new authparam();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 扩展\n\n当然，使用参数解析器也需要单独配置，我们同样在 webmvcconfigureradapter内配置：\n\n@configuration\npublic class mvcconfiguration extends webmvcconfigureradapter {\n\n    @override\n    public void addargumentresolvers(list<handlermethodargumentresolver> argumentresolvers) {\n        argumentresolvers.add(new authparamresolver());\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n这次实现完了，我还有些不放心，于是在网上查找是否还有其他方式可以实现此功能，发现常见的还有 filter。\n\n\n# filter\n\nfilter 并不是 spring 提供的，它是在 servlet 规范中定义的，是 servlet 容器支持的。被 filter 过滤的请求，不会派发到 spring 容器中。它的实现也比较简单，实现 javax.servlet.filter接口即可。由于不在 spring 容器中，filter 获取不到 spring 容器的资源，只能使用原生 java 的 servletrequest 和 servletresponse 来获取请求参数。另外，在一个 filter 中要显示调用 filterchain 的 dofilter 方法，不然认为请求被拦截。实现类似：\n\npublic class whitelistfilter implements javax.servlet.filter {\n\n    @override\n    public void init(filterconfig filterconfig) throws servletexception {\n  // 初始化后被调用一次\n    }\n\n    @override\n    public void dofilter(servletrequest request, servletresponse response, filterchain chain) throws ioexception, servletexception {\n     // 判断是否需要拦截\n       chain.dofilter(request, response); // 请求通过要显示调用\n    }\n\n    @override\n    public void destroy() {\n     // 被销毁时调用一次\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 扩展\n\nfilter 也需要显示配置：\n\n@configuration\npublic class filterconfiguration {\n\n    @bean\n    public filterregistrationbean somefilterregistration() {\n        filterregistrationbean registration = new filterregistrationbean();\n        registration.setfilter(new whitelistfilter());\n        registration.addurlpatterns("/*");\n        registration.setname("whitelistfilter");\n        registration.setorder(1); // 设置过滤器被调用的顺序\n        return registration;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 小结\n\n四种实现方式都有其适合的场 景，那么它们之间的调用顺序如何呢？filter 是 servlet 实现的，自然是最先被调用，后续被调用的是 interceptor 被拦截了自然不需要后续再进行处理，然后是 参数解析器，最后才是切面的切点。',charsets:{cjk:!0},createdTime:1646147144e3,updateTime:"March 1, 2022 15:05",updateTimeStamp:1646147144e3,createTime:"March 1, 2022 15:05",createTimeStamp:1646147144e3,contributors:[]},{title:"Intellij idea高效使用教程",frontmatter:{icon:"page",title:"Intellij idea高效使用教程",author:"xlc520",time:"2022-03-17T00:00:00.000Z",category:"IDEA",tag:["IDEA"],sticky:!1,star:!0},regularPath:"/Java/idea-tips.html",relativePath:"Java/idea-tips.md",key:"v-31b7b02f",path:"/Java/idea-tips/",headers:[{level:2,title:"一. 安装插件",slug:"一-安装插件",normalizedTitle:"一. 安装插件",charIndex:26},{level:2,title:"二. 自定义创建live template，快速写代码",slug:"二-自定义创建live-template-快速写代码",normalizedTitle:"二. 自定义创建live template，快速写代码",charIndex:986},{level:2,title:"三. 修改全局配置，提升工作效率",slug:"三-修改全局配置-提升工作效率",normalizedTitle:"三. 修改全局配置，提升工作效率",charIndex:1088},{level:2,title:"IDEA必备20款插件",slug:"idea必备20款插件",normalizedTitle:"idea必备20款插件",charIndex:1375},{level:3,title:"Leetcode Editor",slug:"leetcode-editor",normalizedTitle:"leetcode editor",charIndex:1497},{level:3,title:"Jrebel",slug:"jrebel",normalizedTitle:"jrebel",charIndex:1656},{level:3,title:"Background Image Plus",slug:"background-image-plus",normalizedTitle:"background image plus",charIndex:1953},{level:3,title:"Codota",slug:"codota",normalizedTitle:"codota",charIndex:38},{level:3,title:"EasyCode",slug:"easycode",normalizedTitle:"easycode",charIndex:2353},{level:3,title:"Translation",slug:"translation",normalizedTitle:"translation",charIndex:901},{level:3,title:"Key Promoter X",slug:"key-promoter-x",normalizedTitle:"key promoter x",charIndex:158},{level:3,title:"Maven Helper",slug:"maven-helper",normalizedTitle:"maven helper",charIndex:2897},{level:3,title:"Alibaba Java Coding Guidelines",slug:"alibaba-java-coding-guidelines",normalizedTitle:"alibaba java coding guidelines",charIndex:333},{level:3,title:"CodeGlance",slug:"codeglance",normalizedTitle:"codeglance",charIndex:214},{level:3,title:"GsonFormat",slug:"gsonformat",normalizedTitle:"gsonformat",charIndex:3525},{level:3,title:"JavaDoc",slug:"javadoc",normalizedTitle:"javadoc",charIndex:3688},{level:3,title:"ignore",slug:"ignore",normalizedTitle:"ignore",charIndex:3829},{level:3,title:"Rainbow Brackets",slug:"rainbow-brackets",normalizedTitle:"rainbow brackets",charIndex:925},{level:3,title:"AceJump",slug:"acejump",normalizedTitle:"acejump",charIndex:4218},{level:3,title:"Material Theme UI",slug:"material-theme-ui",normalizedTitle:"material theme ui",charIndex:4586},{level:3,title:"GenerateAllSetter",slug:"generateallsetter",normalizedTitle:"generateallsetter",charIndex:4734},{level:3,title:"Statistic",slug:"statistic",normalizedTitle:"statistic",charIndex:877},{level:3,title:"Free MyBatis plugin",slug:"free-mybatis-plugin",normalizedTitle:"free mybatis plugin",charIndex:5124},{level:3,title:"Stop Coding",slug:"stop-coding",normalizedTitle:"stop coding",charIndex:5303}],readingTime:{minutes:10.87,words:3261},headersStr:"一. 安装插件 二. 自定义创建live template，快速写代码 三. 修改全局配置，提升工作效率 IDEA必备20款插件 Leetcode Editor Jrebel Background Image Plus Codota EasyCode Translation Key Promoter X Maven Helper Alibaba Java Coding Guidelines CodeGlance GsonFormat JavaDoc ignore Rainbow Brackets AceJump Material Theme UI GenerateAllSetter Statistic Free MyBatis plugin Stop Coding",content:"# Intellij idea高效使用教程\n\n\n# 一. 安装插件\n\n1. Codota 代码智能提示插件\n\n\n\n只要打出首字母就能联想出一整条语句，这也太智能了，还显示了每条语句使用频率。\n\n原因是它学习了我的项目代码，总结出了我的代码偏好。\n\n\n\n如果让它再加上机器学习，人工智能写代码的时代还会远吗？\n\n2. Key Promoter X 快捷键提示插件\n\n\n\n每次都会在右下角弹窗提示，帮助我们快速熟悉快捷键。\n\n3. CodeGlance 显示代码缩略图插件\n\n\n\n当代码很多的时候，方便查看，很有用。\n\n4. Lombok 简化臃肿代码插件\n\n\n\n实体类中的get/set/构造/toString/hashCode等方法，都不需要我们再手动写了\n\n5. Alibaba Java Coding Guidelines 阿里巴巴代码规范检查插件\n\n\n\n会按照阿里Java开发手册上规范帮我们检查代码，然后对代码做不同颜色展示，鼠标放上去，会看到提示内容，帮助我们写出更规范的代码。\n\n6. CamelCase 驼峰命名和下划线命名转换\n\n\n\n这几种风格的命名方式，用快捷键 ⇧ + ⌥ + U / Shift + Alt + U可以进行快速转换，当我们需要修改大量变量名称的时候很方便。\n\n7. MybatisX 高效操作Mybatis插件\n\n\n\n8. SonarLint 代码质量检查插件\n\n\n\n提示我不要用System.out输出，要用logger输出，诸如此类，帮助我们提升代码质量。\n\n9. Save Actions 格式化代码插件\n\n\n\n可以帮忙我们优化包导入，自动给没有修改的变量添加final修饰符，调用方法的时候自动添加this关键字等，使我们的代码更规范统一。\n\n10. CheckStyle 代码风格检查插件\n\n功能跟Alibaba Java Coding Guidelines类似\n\n11. Grep Console 自定义控制台输出格式插件\n\n\n\n12. MetricsReloaded 代码复杂度检查插件\n\n\n\n13. Statistic 代码统计插件\n\n\n\n14. Translation 翻译插件\n\n\n\n15. Rainbow Brackets 彩虹括号插件\n\n\n\n成对儿的括号显示相同的颜色，有了这个插件，我的近视都好了。\n\n\n# 二. 自定义创建live template，快速写代码\n\n\n\n只要输入apr，就能自动提示，并且生成Autowired语句了。可以根据自己的代码习惯，自定义一些代码模板，帮助我们快速写代码。\n\n\n\n\n# 三. 修改全局配置，提升工作效率\n\n1. 优化导包配置\n\n\n\n2. 取消tab页单行显示\n\n\n\n\n\n多行显示更多的文件，方便查看。\n\n3. 双斜杠注释改成紧跟代码头\n\n\n\n\n\n4. 选中复制整行\n\n\n\n\n\n原本只会复制你选中的代码，改完配置后，就能复制整行，无论你是否完全选中。\n\n5. 取消匹配大小写\n\n\n\n取消勾选后，输入小写 s，也能提示出 String\n\n6. 优化版本控制的目录颜色展示\n\n\n\n7. 创建文件时，自动生成作者和时间信息\n\n\n\n8 . 显示行号和方法分割线\n\n\n\n你还知道哪些关于Intelij idea高效操作或插件，一起在评论区分享吧！\n\n\n# IDEA必备20款插件\n\n以下插件已经为大家下载打包了，如果IDEA版本不一致的话，部分插件可能无法安装，可以根据我提供的地址自行下载相应插件： 插件打包下载地址：https://www.lanzouw.com/iV3XKwvq2de\n\n\n# Leetcode Editor\n\n这是一个上班摸鱼神器，也是一个可以在IDEA中刷算法题目的插件，有很多题目供我们学习， 表面在写代码，其实是在刷题。每道题都有很详细的解题思路 插件下载地址：https://plugins.jetbrains.com/plugin/12132-leetcode-editor\n\n\n# Jrebel\n\n这个插件真的是强烈推荐，有时候改一点点代码都要重启才能生效，很浪费时间。 有了这个插件，修改代码之后不需要重启也能生效。尤其跟别的同事联调的时候特别爽！ 热部署插件，这个插件是收费的，但是可以免费激活， 访问这个https://www.guidgen.com网址生成一个GUID,然后将生成的ID，拼接到下面的URL中，粘贴到激活界面就可以啦 插件下载地址：https://plugins.jetbrains.com/plugin/4441-jrebel-and-xrebel-for-intellij https://jrebel.qekang.com/你生成的ID\n\n\n# Background Image Plus\n\n一个设置背景图片的插件，有时候纯黑或者纯白看腻的话，可以使用这个插件自定义背景图片。 也支持动态的更换壁纸 插件下载地址：https://plugins.jetbrains.com/plugin/8502-background-image-plus\n\n\n# Codota\n\nIDEA的自动补全功能已经很强大了，但是这个插件的自动补全功能更加强大，这是一个基于AI技术，学习了大量的开源项目，智能提示更加的可靠 插件下载地址：https://plugins.jetbrains.com/plugin/7638-codota-ai-autocomplete-for-java-and-javascript 有绿色图标的就是codota自动提示的代码\n\n还有个更强的功能是，它可以从github、stackoverflow上快速的找到你想要的相关代码\n\n\n# EasyCode\n\n这个插件真的特别强大，它可以通过数据库表自动的生成实体类、Controller、Dao、Service、mapper，简单而且强大。 通过IDEA内置的数据库，在对应的表中右键选择easy code- generate Code，然后选择路径，勾选想要生成的代码就可以啦 插件下载地址：https://plugins.jetbrains.com/plugin/10954-easy-code\n\n\n# Translation\n\n这是翻译插件，阅读源码有不认识的英文，或者编写变量时，不知道英文怎么写的时候可以直接进行翻译 在菜单栏上也可以直接进行翻译，不用再去打开一些在线翻译网站了 插件下载地址：https://plugins.jetbrains.com/plugin/8579-translation\n\n\n# Key Promoter X\n\n一个可以让你慢慢脱离鼠标操作的插件，在IDEA中操作时，他会将对应的快捷键，进行提示。 并且右侧会有一个列表，将你近期使用的功能进行展示，对于高频操作我们可以使用快捷键，这样可以提升效率 插件下载地址：https://plugins.jetbrains.com/plugin/9792-key-promoter-x\n\n\n# Maven Helper\n\n插件下载地址：https://plugins.jetbrains.com/plugin/7179-maven-helper 安装之后，在pom文件中会多出一个Dependcy Analyzer选项卡\n\nConflicts：显示冲突依赖 All Dependencies as List：以列表形式显示依赖 All Dependencies as Tree：以树的形式显示依赖 遇到冲突的依赖，可以点击右键，跳到源文件或者直接选择Exclude 排除这个依赖\n\n\n# Alibaba Java Coding Guidelines\n\n阿里巴巴开发的一款插件，可以扫描代码中可能存在的问题 插件下载地址：https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines\n\n将不符合规约的代码按 Blocker/Critical/Major(崩溃/严重/重要 ) 三个等级显示在下方，双击可以定位至代码处，右侧窗口还有针对代码的批量修复功能。\n\n\n# CodeGlance\n\n用过sublime的同学对这个功能一定很熟悉，它是一个迷你缩放图插件 当代码过长的时候可以使用这个插件，相比如下拉框，这个插件更加的直观和方便 插件下载地址：https://plugins.jetbrains.com/plugin/7275-codeglance\n\n\n# GsonFormat\n\n这是一个将Json字符串自动转换成实体类的插件 安装完插件之后，在实体类中使用快捷键 'alt+insert'，mac是‘control + 回车’选择GsonFormat 插件下载地址：https://plugins.jetbrains.com/plugin/7654-gsonformat\n\n\n# JavaDoc\n\n这是一个快速生成文档注释的插件 插件下载地址：https://plugins.jetbrains.com/plugin/7157-javadoc windows上可以通过alt + insert 快捷键，mac是control+回车 可以快速生成注释模板\n\n\n# ignore\n\n我们在使用git提交项目的时候，有时候会把 .idea 文件提交上去， 这个文件只是一些历史记录，版本信息。完全不用提交。 插件下载地址：https://plugins.jetbrains.com/plugin/7495--ignore 这个时候可以使用ignore这个插件，去配置 在 File- new - .ignore File· 中选择 gitignore File(Git) 选择Example user template，右侧面板表示要忽略的文件，点击Generate\n\n\n# Rainbow Brackets\n\n这个插件主要是让我们代码中的括号变成彩虹颜色的括号，除了好看还可以帮我们分清括号，防止错乱 插件下载地址：https://plugins.jetbrains.com/plugin/10080-rainbow-brackets\n\n\n# AceJump\n\n插件下载地址：https://plugins.jetbrains.com/plugin/7086-acejump 这是一个快速光标跳转的插件，可以很大的减少我们使用鼠标的频率 可以查看他的激活快捷键 比如我的是ctrl + 分号，\n\n激活之后，输入你想跳转的字符，比如O键，那么当前界面的O都会打上标签，再输入相应的字母跳转到对应的位置\n\n按向上的键，可以行选定，方法跟上面的一致。 按左右键，是选择开头和结尾 RestfulTool 这是一个接口测试工具， 插件下载地址：https://plugins.jetbrains.com/plugin/14280-restfultool 安装成功之后在右侧会有一个RestfulTool的选项卡，点击之后会显示出当前项目的所有请求地址 并且支持各种各样的请求类型\n\n\n# Material Theme UI\n\n插件下载地址：https://plugins.jetbrains.com/plugin/8006-material-theme-ui 这是一款不错的主题插件，颜值非常的高，安装之后重启即可生效 可以在设置中，对一些细节，比如调整字体、大小、行间距等\n\n\n# GenerateAllSetter\n\n插件下载地址：https://plugins.jetbrains.com/plugin/9360-generateallsetter/versions 这个插件可以快速的对实体类生成set代码，这样就不用我们一个一个的去手动set了 使用方法也非常简单，当我们new一个对象的时候，在对象上使用快简介\"alt + 回车\" 选择Generate all setter with default value就可以自动生成所有set方法啦\n\n\n# Statistic\n\n一款分析项目代码的工具，按照扩展名列出清单，统计代码数量和行数 点击具体的类别，比如Java，可以统计总行数，有效代码行数，注释行数，以及有效代码比重 插件下载地址：https://plugins.jetbrains.com/plugin/4509-statistic\n\n\n# Free MyBatis plugin\n\n插件下载地址：https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin 在使用mybatis时，它可以通过mapper接口中的方法，直接跳转到mapper.xml文件中， 同样也可以从mapper.xml跳转到mapper接口中 非常实用！\n\n\n# Stop Coding\n\n插件下载地址：https://plugins.jetbrains.com/plugin/15740-stopcoding 最后推荐大家一下防沉迷代码的插件，如果你也经常沉迷于写代码,忘了起身休息喝水,那么试试这个插件吧\n\n当写代码到设定的时间时,它会弹出下框进行提醒,当然,这个框是关不掉的.只有你休息了足够的时间它才会自动关闭.",normalizedContent:"# intellij idea高效使用教程\n\n\n# 一. 安装插件\n\n1. codota 代码智能提示插件\n\n\n\n只要打出首字母就能联想出一整条语句，这也太智能了，还显示了每条语句使用频率。\n\n原因是它学习了我的项目代码，总结出了我的代码偏好。\n\n\n\n如果让它再加上机器学习，人工智能写代码的时代还会远吗？\n\n2. key promoter x 快捷键提示插件\n\n\n\n每次都会在右下角弹窗提示，帮助我们快速熟悉快捷键。\n\n3. codeglance 显示代码缩略图插件\n\n\n\n当代码很多的时候，方便查看，很有用。\n\n4. lombok 简化臃肿代码插件\n\n\n\n实体类中的get/set/构造/tostring/hashcode等方法，都不需要我们再手动写了\n\n5. alibaba java coding guidelines 阿里巴巴代码规范检查插件\n\n\n\n会按照阿里java开发手册上规范帮我们检查代码，然后对代码做不同颜色展示，鼠标放上去，会看到提示内容，帮助我们写出更规范的代码。\n\n6. camelcase 驼峰命名和下划线命名转换\n\n\n\n这几种风格的命名方式，用快捷键 ⇧ + ⌥ + u / shift + alt + u可以进行快速转换，当我们需要修改大量变量名称的时候很方便。\n\n7. mybatisx 高效操作mybatis插件\n\n\n\n8. sonarlint 代码质量检查插件\n\n\n\n提示我不要用system.out输出，要用logger输出，诸如此类，帮助我们提升代码质量。\n\n9. save actions 格式化代码插件\n\n\n\n可以帮忙我们优化包导入，自动给没有修改的变量添加final修饰符，调用方法的时候自动添加this关键字等，使我们的代码更规范统一。\n\n10. checkstyle 代码风格检查插件\n\n功能跟alibaba java coding guidelines类似\n\n11. grep console 自定义控制台输出格式插件\n\n\n\n12. metricsreloaded 代码复杂度检查插件\n\n\n\n13. statistic 代码统计插件\n\n\n\n14. translation 翻译插件\n\n\n\n15. rainbow brackets 彩虹括号插件\n\n\n\n成对儿的括号显示相同的颜色，有了这个插件，我的近视都好了。\n\n\n# 二. 自定义创建live template，快速写代码\n\n\n\n只要输入apr，就能自动提示，并且生成autowired语句了。可以根据自己的代码习惯，自定义一些代码模板，帮助我们快速写代码。\n\n\n\n\n# 三. 修改全局配置，提升工作效率\n\n1. 优化导包配置\n\n\n\n2. 取消tab页单行显示\n\n\n\n\n\n多行显示更多的文件，方便查看。\n\n3. 双斜杠注释改成紧跟代码头\n\n\n\n\n\n4. 选中复制整行\n\n\n\n\n\n原本只会复制你选中的代码，改完配置后，就能复制整行，无论你是否完全选中。\n\n5. 取消匹配大小写\n\n\n\n取消勾选后，输入小写 s，也能提示出 string\n\n6. 优化版本控制的目录颜色展示\n\n\n\n7. 创建文件时，自动生成作者和时间信息\n\n\n\n8 . 显示行号和方法分割线\n\n\n\n你还知道哪些关于intelij idea高效操作或插件，一起在评论区分享吧！\n\n\n# idea必备20款插件\n\n以下插件已经为大家下载打包了，如果idea版本不一致的话，部分插件可能无法安装，可以根据我提供的地址自行下载相应插件： 插件打包下载地址：https://www.lanzouw.com/iv3xkwvq2de\n\n\n# leetcode editor\n\n这是一个上班摸鱼神器，也是一个可以在idea中刷算法题目的插件，有很多题目供我们学习， 表面在写代码，其实是在刷题。每道题都有很详细的解题思路 插件下载地址：https://plugins.jetbrains.com/plugin/12132-leetcode-editor\n\n\n# jrebel\n\n这个插件真的是强烈推荐，有时候改一点点代码都要重启才能生效，很浪费时间。 有了这个插件，修改代码之后不需要重启也能生效。尤其跟别的同事联调的时候特别爽！ 热部署插件，这个插件是收费的，但是可以免费激活， 访问这个https://www.guidgen.com网址生成一个guid,然后将生成的id，拼接到下面的url中，粘贴到激活界面就可以啦 插件下载地址：https://plugins.jetbrains.com/plugin/4441-jrebel-and-xrebel-for-intellij https://jrebel.qekang.com/你生成的id\n\n\n# background image plus\n\n一个设置背景图片的插件，有时候纯黑或者纯白看腻的话，可以使用这个插件自定义背景图片。 也支持动态的更换壁纸 插件下载地址：https://plugins.jetbrains.com/plugin/8502-background-image-plus\n\n\n# codota\n\nidea的自动补全功能已经很强大了，但是这个插件的自动补全功能更加强大，这是一个基于ai技术，学习了大量的开源项目，智能提示更加的可靠 插件下载地址：https://plugins.jetbrains.com/plugin/7638-codota-ai-autocomplete-for-java-and-javascript 有绿色图标的就是codota自动提示的代码\n\n还有个更强的功能是，它可以从github、stackoverflow上快速的找到你想要的相关代码\n\n\n# easycode\n\n这个插件真的特别强大，它可以通过数据库表自动的生成实体类、controller、dao、service、mapper，简单而且强大。 通过idea内置的数据库，在对应的表中右键选择easy code- generate code，然后选择路径，勾选想要生成的代码就可以啦 插件下载地址：https://plugins.jetbrains.com/plugin/10954-easy-code\n\n\n# translation\n\n这是翻译插件，阅读源码有不认识的英文，或者编写变量时，不知道英文怎么写的时候可以直接进行翻译 在菜单栏上也可以直接进行翻译，不用再去打开一些在线翻译网站了 插件下载地址：https://plugins.jetbrains.com/plugin/8579-translation\n\n\n# key promoter x\n\n一个可以让你慢慢脱离鼠标操作的插件，在idea中操作时，他会将对应的快捷键，进行提示。 并且右侧会有一个列表，将你近期使用的功能进行展示，对于高频操作我们可以使用快捷键，这样可以提升效率 插件下载地址：https://plugins.jetbrains.com/plugin/9792-key-promoter-x\n\n\n# maven helper\n\n插件下载地址：https://plugins.jetbrains.com/plugin/7179-maven-helper 安装之后，在pom文件中会多出一个dependcy analyzer选项卡\n\nconflicts：显示冲突依赖 all dependencies as list：以列表形式显示依赖 all dependencies as tree：以树的形式显示依赖 遇到冲突的依赖，可以点击右键，跳到源文件或者直接选择exclude 排除这个依赖\n\n\n# alibaba java coding guidelines\n\n阿里巴巴开发的一款插件，可以扫描代码中可能存在的问题 插件下载地址：https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines\n\n将不符合规约的代码按 blocker/critical/major(崩溃/严重/重要 ) 三个等级显示在下方，双击可以定位至代码处，右侧窗口还有针对代码的批量修复功能。\n\n\n# codeglance\n\n用过sublime的同学对这个功能一定很熟悉，它是一个迷你缩放图插件 当代码过长的时候可以使用这个插件，相比如下拉框，这个插件更加的直观和方便 插件下载地址：https://plugins.jetbrains.com/plugin/7275-codeglance\n\n\n# gsonformat\n\n这是一个将json字符串自动转换成实体类的插件 安装完插件之后，在实体类中使用快捷键 'alt+insert'，mac是‘control + 回车’选择gsonformat 插件下载地址：https://plugins.jetbrains.com/plugin/7654-gsonformat\n\n\n# javadoc\n\n这是一个快速生成文档注释的插件 插件下载地址：https://plugins.jetbrains.com/plugin/7157-javadoc windows上可以通过alt + insert 快捷键，mac是control+回车 可以快速生成注释模板\n\n\n# ignore\n\n我们在使用git提交项目的时候，有时候会把 .idea 文件提交上去， 这个文件只是一些历史记录，版本信息。完全不用提交。 插件下载地址：https://plugins.jetbrains.com/plugin/7495--ignore 这个时候可以使用ignore这个插件，去配置 在 file- new - .ignore file· 中选择 gitignore file(git) 选择example user template，右侧面板表示要忽略的文件，点击generate\n\n\n# rainbow brackets\n\n这个插件主要是让我们代码中的括号变成彩虹颜色的括号，除了好看还可以帮我们分清括号，防止错乱 插件下载地址：https://plugins.jetbrains.com/plugin/10080-rainbow-brackets\n\n\n# acejump\n\n插件下载地址：https://plugins.jetbrains.com/plugin/7086-acejump 这是一个快速光标跳转的插件，可以很大的减少我们使用鼠标的频率 可以查看他的激活快捷键 比如我的是ctrl + 分号，\n\n激活之后，输入你想跳转的字符，比如o键，那么当前界面的o都会打上标签，再输入相应的字母跳转到对应的位置\n\n按向上的键，可以行选定，方法跟上面的一致。 按左右键，是选择开头和结尾 restfultool 这是一个接口测试工具， 插件下载地址：https://plugins.jetbrains.com/plugin/14280-restfultool 安装成功之后在右侧会有一个restfultool的选项卡，点击之后会显示出当前项目的所有请求地址 并且支持各种各样的请求类型\n\n\n# material theme ui\n\n插件下载地址：https://plugins.jetbrains.com/plugin/8006-material-theme-ui 这是一款不错的主题插件，颜值非常的高，安装之后重启即可生效 可以在设置中，对一些细节，比如调整字体、大小、行间距等\n\n\n# generateallsetter\n\n插件下载地址：https://plugins.jetbrains.com/plugin/9360-generateallsetter/versions 这个插件可以快速的对实体类生成set代码，这样就不用我们一个一个的去手动set了 使用方法也非常简单，当我们new一个对象的时候，在对象上使用快简介\"alt + 回车\" 选择generate all setter with default value就可以自动生成所有set方法啦\n\n\n# statistic\n\n一款分析项目代码的工具，按照扩展名列出清单，统计代码数量和行数 点击具体的类别，比如java，可以统计总行数，有效代码行数，注释行数，以及有效代码比重 插件下载地址：https://plugins.jetbrains.com/plugin/4509-statistic\n\n\n# free mybatis plugin\n\n插件下载地址：https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin 在使用mybatis时，它可以通过mapper接口中的方法，直接跳转到mapper.xml文件中， 同样也可以从mapper.xml跳转到mapper接口中 非常实用！\n\n\n# stop coding\n\n插件下载地址：https://plugins.jetbrains.com/plugin/15740-stopcoding 最后推荐大家一下防沉迷代码的插件，如果你也经常沉迷于写代码,忘了起身休息喝水,那么试试这个插件吧\n\n当写代码到设定的时间时,它会弹出下框进行提醒,当然,这个框是关不掉的.只有你休息了足够的时间它才会自动关闭.",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"March 19, 2022 06:21",updateTimeStamp:1647670889e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"使用docker快速安装oracle",frontmatter:{author:"xlc520",title:"使用docker快速安装oracle",description:"使用docker快速安装oracle",time:"2022-03-02T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85oracle.html",relativePath:"Java/使用docker快速安装oracle.md",key:"v-538311d8",path:"/Java/%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85oracle/",readingTime:{minutes:.89,words:267},headersStr:null,content:"# 使用docker快速安装oracle\n\n1.拉取镜像:\n\ndocker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\n\n\n1\n\n\n2.创建容器\n\ndocker run -d -p 1521:1521 --name oracle11g registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\n\n\n1\n\n\n3.进入镜像配置\n\ndocker exec -it oracle11g bash\n\nsu root;\n\n密码:helowin\n\n\n1\n2\n3\n4\n5\n\n\n编辑环境变量:\n\nvi /etc/profile\nexport ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2\nexport ORACLE_SID=helowin\nexport PATH=$ORACLE_HOME/bin:$PATH\n\n\n1\n2\n3\n4\n\n\n创建软连接\n\nln -s $ORACLE_HOME/bin/sqlplus /usr/bin\n\nsource /etc/profile\n\n\n1\n2\n3\n\n\n切换到oracle 用户\n\nsu - oracle\n\n登录sqlplus并修改sys、system用户密码\n\n * 登录sqlplus\n\nsqlplus /nolog\n\nconn /as sysdba\n\n\n1\n2\n3\n\n * 接着更改用户密码\n\nalter user system identified by system;\n\nalter user sys identified by sys;\n\n\n1\n2\n3\n\n * 设置密码永不过期\n\nALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;\n\n\n1\n\n\n * scott用户的开启\n   \n   SCOTT 是 ORACLE 内部的一个实例用户，下面有 emp、dept 等实例表，这些表和表间的关系演示了关系型数据库的一些基本原理。\n\nalter user scott account unlock;\nalter user scott identified by abc;\ncommit;\n\n\n1\n2\n3\n\n\n4.重启容器后就可以直接用了\n\ndocker restart oracle11g\n\n\n1\n\n\n现在可以用system用户连接,密码:system",normalizedContent:"# 使用docker快速安装oracle\n\n1.拉取镜像:\n\ndocker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\n\n\n1\n\n\n2.创建容器\n\ndocker run -d -p 1521:1521 --name oracle11g registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\n\n\n1\n\n\n3.进入镜像配置\n\ndocker exec -it oracle11g bash\n\nsu root;\n\n密码:helowin\n\n\n1\n2\n3\n4\n5\n\n\n编辑环境变量:\n\nvi /etc/profile\nexport oracle_home=/home/oracle/app/oracle/product/11.2.0/dbhome_2\nexport oracle_sid=helowin\nexport path=$oracle_home/bin:$path\n\n\n1\n2\n3\n4\n\n\n创建软连接\n\nln -s $oracle_home/bin/sqlplus /usr/bin\n\nsource /etc/profile\n\n\n1\n2\n3\n\n\n切换到oracle 用户\n\nsu - oracle\n\n登录sqlplus并修改sys、system用户密码\n\n * 登录sqlplus\n\nsqlplus /nolog\n\nconn /as sysdba\n\n\n1\n2\n3\n\n * 接着更改用户密码\n\nalter user system identified by system;\n\nalter user sys identified by sys;\n\n\n1\n2\n3\n\n * 设置密码永不过期\n\nalter profile default limit password_life_time unlimited;\n\n\n1\n\n\n * scott用户的开启\n   \n   scott 是 oracle 内部的一个实例用户，下面有 emp、dept 等实例表，这些表和表间的关系演示了关系型数据库的一些基本原理。\n\nalter user scott account unlock;\nalter user scott identified by abc;\ncommit;\n\n\n1\n2\n3\n\n\n4.重启容器后就可以直接用了\n\ndocker restart oracle11g\n\n\n1\n\n\n现在可以用system用户连接,密码:system",charsets:{cjk:!0},createdTime:1646572761e3,updateTime:"March 6, 2022 13:53",updateTimeStamp:1646574803e3,createTime:"March 6, 2022 13:19",createTimeStamp:1646572761e3,contributors:[]},{title:"SpringBoot将Bean放入Spring容器中的五种方式",frontmatter:{author:"xlc520",title:"SpringBoot将Bean放入Spring容器中的五种方式",description:"SpringBoot将Bean放入Spring容器中的五种方式",time:"2022-02-12T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/%E5%B0%86Bean%E6%94%BE%E5%85%A5Spring%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F.html",relativePath:"Java/将Bean放入Spring容器中的五种方式.md",key:"v-fc410702",path:"/Java/%E5%B0%86Bean%E6%94%BE%E5%85%A5Spring%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F/",headers:[{level:2,title:"1、@Configuration + @Bean",slug:"_1、-configuration-bean",normalizedTitle:"1、@configuration + @bean",charIndex:38},{level:2,title:"2、@Componet + @ComponentScan",slug:"_2、-componet-componentscan",normalizedTitle:"2、@componet + @componentscan",charIndex:383},{level:2,title:"3、@Import注解导入",slug:"_3、-import注解导入",normalizedTitle:"3、@import注解导入",charIndex:1351},{level:3,title:"3.1 @Import直接导入类",slug:"_3-1-import直接导入类",normalizedTitle:"3.1 @import直接导入类",charIndex:1890},{level:3,title:"3.2 @Import + ImportSelector",slug:"_3-2-import-importselector",normalizedTitle:"3.2 @import + importselector",charIndex:2793},{level:3,title:"3.3 @Import + ImportBeanDefinitionRegistrar",slug:"_3-3-import-importbeandefinitionregistrar",normalizedTitle:"3.3 @import + importbeandefinitionregistrar",charIndex:3587},{level:3,title:"3.4 @Import + DeferredImportSelector",slug:"_3-4-import-deferredimportselector",normalizedTitle:"3.4 @import + deferredimportselector",charIndex:4764},{level:2,title:"4、使用FactoryBean接口",slug:"_4、使用factorybean接口",normalizedTitle:"4、使用factorybean接口",charIndex:5648},{level:2,title:"5、使用 BeanDefinitionRegistryPostProcessor",slug:"_5、使用-beandefinitionregistrypostprocessor",normalizedTitle:"5、使用 beandefinitionregistrypostprocessor",charIndex:6769},{level:2,title:"小结",slug:"小结",normalizedTitle:"小结",charIndex:8319}],readingTime:{minutes:5.22,words:1567},headersStr:"1、@Configuration + @Bean 2、@Componet + @ComponentScan 3、@Import注解导入 3.1 @Import直接导入类 3.2 @Import + ImportSelector 3.3 @Import + ImportBeanDefinitionRegistrar 3.4 @Import + DeferredImportSelector 4、使用FactoryBean接口 5、使用 BeanDefinitionRegistryPostProcessor 小结",content:'# SpringBoot将Bean放入Spring容器中的五种方式\n\n\n# 1、@Configuration + @Bean\n\n这种方式其实，在上一篇文章已经介绍过了，也是我们最常用的一种方式，@Configuration用来声明一个配置类，然后使用 @Bean 注解，用于声明一个bean，将其加入到Spring容器中。具体代码如下:\n\n@Configuration\npublic class MyConfiguration {\n    @Bean\n    public Person person() {\n        Person person = new Person();\n        person.setName("spring");\n        return person;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 2、@Componet + @ComponentScan\n\n这种方式也是我们用的比较多的方式，@Componet中文译为组件，放在类名上面，然后@ComponentScan放置在我们的配置类上，然后可以指定一个路径，进行扫描带有@Componet注解的bean，然后加至容器中。具体代码如下:\n\n@Component\npublic class Person {\n    private String name;\n\n    public String getName() {\n     \n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n    @Override\n    public String toString() {\n        return "Person{" +\n                "name=\'" + name + \'\\\'\' +\n                \'}\';\n    }\n}\n\n@ComponentScan(basePackages = "com.springboot.initbean.*")\npublic class Demo1 {\n    public static void main(String[] args) {\n        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(Demo1.class);\n        Person bean = applicationContext.getBean(Person.class);\n        System.out.println(bean);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n结果输出:\n\nPerson{name=\'null\'}\n\n\n1\n\n\n表示成功将Person放置在了IOC容器中。\n\n\n# 3、@Import注解导入\n\n前两种方式，大家用的可能比较多，也是平时开发中必须要知道的，@Import注解用的可能不是特别多了，但是也是非常重要的，在进行Spring扩展时经常会用到，它经常搭配自定义注解进行使用，然后往容器中导入一个配置文件。关于@Import注解，我会多介绍一点，它有四种使用方式。这是@Import注解的源码，表示只能放置在类上。\n\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\npublic @interface Import {\n\n    /**\n   * 用于导入一个class文件\n     * {@link Configuration @Configuration}, {@link ImportSelector},\n     * {@link ImportBeanDefinitionRegistrar}, or regular component classes to import.\n     */\n\n    Class<?>[] value();\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 3.1 @Import直接导入类\n\n代码示例如下:\n\npublic class Person {\n    private String name;\n\n    public String getName() {\n     \n        return name;\n    }\n     \n    public void setName(String name) {\n        this.name = name;\n    }\n     \n    @Override\n    public String toString() {\n        return "Person{" +\n                "name=\'" + name + \'\\\'\' +\n                \'}\';\n    }\n}\n/**\n* 直接使用@Import导入person类，然后尝试从applicationContext中取，成功拿到\n**/\n@Import(Person.class)\npublic class Demo1 {\n\n    public static void main(String[] args) {\n        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(Demo1.class);\n        Person bean = applicationContext.getBean(Person.class);\n        System.out.println(bean);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n上述代码直接使用@Import导入了一个类，然后自动的就被放置在IOC容器中了。注意 我们的Person类上 就不需要任何的注解了，直接导入即可。\n\n\n# 3.2 @Import + ImportSelector\n\n其实在@Import注解的源码中，说的已经很清楚了，感兴趣的可以看下，我们实现一个ImportSelector的接口，然后实现其中的方法，进行导入。\n\n代码如下:\n\n@Import(MyImportSelector.class)\npublic class Demo1 {\n\n    public static void main(String[] args) {\n        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(Demo1.class);\n        Person bean = applicationContext.getBean(Person.class);\n        System.out.println(bean);\n    }\n}\n\nclass MyImportSelector implements ImportSelector {\n    @Override\n    public String[] selectImports(AnnotationMetadata importingClassMetadata) {\n        return new String[]{"com.springboot.pojo.Person"};\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n我自定义了一个 MyImportSelector 实现了 ImportSelector 接口，重写selectImports 方法，然后将我们要导入的类的全限定名写在里面即可，实现起来也是非常简单。\n\n\n# 3.3 @Import + ImportBeanDefinitionRegistrar\n\n这种方式也需要我们实现 ImportBeanDefinitionRegistrar 接口中的方法，具体代码如下:\n\n@Import(MyImportBeanDefinitionRegistrar.class)\npublic class Demo1 {\n\n    public static void main(String[] args) {\n        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(Demo1.class);\n        Person bean = applicationContext.getBean(Person.class);\n        System.out.println(bean);\n    }\n}\n\nclass MyImportBeanDefinitionRegistrar implements ImportBeanDefinitionRegistrar {\n\n    @Override\n    public void registerBeanDefinitions(AnnotationMetadata importingClassMetadata, BeanDefinitionRegistry registry) {\n        // 构建一个beanDefinition, 关于beanDefinition我后续会介绍，可以简单理解为bean的定义.\n        AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder.rootBeanDefinition(Person.class).getBeanDefinition();\n        // 将beanDefinition注册到Ioc容器中.\n        registry.registerBeanDefinition("person", beanDefinition);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n上述实现其实和Import的第二种方式差不多，都需要去实现接口，然后进行导入。接触到了一个新的概念，BeanDefinition，可以简单理解为bean的定义(bean的元数据)，也是需要放在IOC容器中进行管理的，先有bean的元数据，applicationContext再根据bean的元数据去创建Bean。\n\n\n# 3.4 @Import + DeferredImportSelector\n\n这种方式也需要我们进行实现接口，其实它和@Import的第二种方式差不多，DeferredImportSelector 它是 ImportSelector 的子接口，所以实现的方法和第二种无异。只是Spring的处理方式不同，它和Spring Boot中的自动导入配置文件 延迟导入有关，非常重要。使用方式如下:\n\n@Import(MyDeferredImportSelector.class)\npublic class Demo1 {\n    public static void main(String[] args) {\n        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(Demo1.class);\n        Person bean = applicationContext.getBean(Person.class);\n        System.out.println(bean);\n    }\n}\nclass MyDeferredImportSelector implements DeferredImportSelector {\n    @Override\n    public String[] selectImports(AnnotationMetadata importingClassMetadata) {\n        // 也是直接将Person的全限定名放进去\n        return new String[]{Person.class.getName()};\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n关于@Import注解的使用方式，大概就以上三种，当然它还可以搭配@Configuration注解使用，用于导入一个配置类。\n\n\n# 4、使用FactoryBean接口\n\nFactoryBean接口和BeanFactory千万不要弄混了，从名字其实可以大概的区分开，FactoryBean, 后缀为bean，那么它其实就是一个bean, BeanFactory，顾名思义 bean工厂，它是IOC容器的顶级接口，这俩接口都很重要。代码示例:\n\n@Configuration\npublic class Demo1 {\n    @Bean\n    public PersonFactoryBean personFactoryBean() {\n        return new PersonFactoryBean();\n    }\n\n    public static void main(String[] args) {\n        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(Demo1.class);\n        Person bean = applicationContext.getBean(Person.class);\n        System.out.println(bean);\n    }\n}\n\nclass PersonFactoryBean implements FactoryBean<Person> {\n\n    /**\n     *  直接new出来Person进行返回.\n     */\n    @Override\n    public Person getObject() throws Exception {\n        return new Person();\n    }\n    /**\n     *  指定返回bean的类型.\n     */\n    @Override\n    public Class<?> getObjectType() {\n        return Person.class;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n上述代码，我使用@Configuration + @Bean的方式将 PersonFactoryBean 加入到容器中，注意，我没有向容器中注入 Person, 而是直接注入的 PersonFactoryBean 然后从容器中拿Person这个类型的bean,成功运行。\n\n\n# 5、使用 BeanDefinitionRegistryPostProcessor\n\n其实这种方式也是利用到了 BeanDefinitionRegistry，在Spring容器启动的时候会执行 BeanDefinitionRegistryPostProcessor 的 postProcessBeanDefinitionRegistry 方法，大概意思就是等beanDefinition加载完毕之后，对beanDefinition进行后置处理，可以在此进行调整IOC容器中的beanDefinition，从而干扰到后面进行初始化bean。\n\n具体代码如下:\n\npublic class Demo1 {\n    public static void main(String[] args) {\n        AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext();\n        MyBeanDefinitionRegistryPostProcessor beanDefinitionRegistryPostProcessor = new MyBeanDefinitionRegistryPostProcessor();\n        applicationContext.addBeanFactoryPostProcessor(beanDefinitionRegistryPostProcessor);\n        applicationContext.refresh();\n        Person bean = applicationContext.getBean(Person.class);\n        System.out.println(bean);\n    }\n}\n\nclass MyBeanDefinitionRegistryPostProcessor implements BeanDefinitionRegistryPostProcessor {\n\n    @Override\n    public void postProcessBeanDefinitionRegistry(BeanDefinitionRegistry registry) throws BeansException {\n        AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder.rootBeanDefinition(Person.class).getBeanDefinition();\n        registry.registerBeanDefinition("person", beanDefinition);\n    }\n    @Override\n    public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {\n     \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n上述代码中，我们手动向beanDefinitionRegistry中注册了person的BeanDefinition。最终成功将person加入到applicationContext中，上述的几种方式的具体原理，我后面会进行介绍。\n\n\n# 小结\n\n向spring容器中加入bean的几种方式.\n\n@Configuration + @Bean\n\n@ComponentScan + @Component\n\n@Import 配合接口进行导入\n\n使用FactoryBean。\n\n实现BeanDefinitionRegistryPostProcessor进行后置处理。',normalizedContent:'# springboot将bean放入spring容器中的五种方式\n\n\n# 1、@configuration + @bean\n\n这种方式其实，在上一篇文章已经介绍过了，也是我们最常用的一种方式，@configuration用来声明一个配置类，然后使用 @bean 注解，用于声明一个bean，将其加入到spring容器中。具体代码如下:\n\n@configuration\npublic class myconfiguration {\n    @bean\n    public person person() {\n        person person = new person();\n        person.setname("spring");\n        return person;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 2、@componet + @componentscan\n\n这种方式也是我们用的比较多的方式，@componet中文译为组件，放在类名上面，然后@componentscan放置在我们的配置类上，然后可以指定一个路径，进行扫描带有@componet注解的bean，然后加至容器中。具体代码如下:\n\n@component\npublic class person {\n    private string name;\n\n    public string getname() {\n     \n        return name;\n    }\n    public void setname(string name) {\n        this.name = name;\n    }\n    @override\n    public string tostring() {\n        return "person{" +\n                "name=\'" + name + \'\\\'\' +\n                \'}\';\n    }\n}\n\n@componentscan(basepackages = "com.springboot.initbean.*")\npublic class demo1 {\n    public static void main(string[] args) {\n        annotationconfigapplicationcontext applicationcontext = new annotationconfigapplicationcontext(demo1.class);\n        person bean = applicationcontext.getbean(person.class);\n        system.out.println(bean);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n结果输出:\n\nperson{name=\'null\'}\n\n\n1\n\n\n表示成功将person放置在了ioc容器中。\n\n\n# 3、@import注解导入\n\n前两种方式，大家用的可能比较多，也是平时开发中必须要知道的，@import注解用的可能不是特别多了，但是也是非常重要的，在进行spring扩展时经常会用到，它经常搭配自定义注解进行使用，然后往容器中导入一个配置文件。关于@import注解，我会多介绍一点，它有四种使用方式。这是@import注解的源码，表示只能放置在类上。\n\n@target(elementtype.type)\n@retention(retentionpolicy.runtime)\n@documented\npublic @interface import {\n\n    /**\n   * 用于导入一个class文件\n     * {@link configuration @configuration}, {@link importselector},\n     * {@link importbeandefinitionregistrar}, or regular component classes to import.\n     */\n\n    class<?>[] value();\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 3.1 @import直接导入类\n\n代码示例如下:\n\npublic class person {\n    private string name;\n\n    public string getname() {\n     \n        return name;\n    }\n     \n    public void setname(string name) {\n        this.name = name;\n    }\n     \n    @override\n    public string tostring() {\n        return "person{" +\n                "name=\'" + name + \'\\\'\' +\n                \'}\';\n    }\n}\n/**\n* 直接使用@import导入person类，然后尝试从applicationcontext中取，成功拿到\n**/\n@import(person.class)\npublic class demo1 {\n\n    public static void main(string[] args) {\n        annotationconfigapplicationcontext applicationcontext = new annotationconfigapplicationcontext(demo1.class);\n        person bean = applicationcontext.getbean(person.class);\n        system.out.println(bean);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n上述代码直接使用@import导入了一个类，然后自动的就被放置在ioc容器中了。注意 我们的person类上 就不需要任何的注解了，直接导入即可。\n\n\n# 3.2 @import + importselector\n\n其实在@import注解的源码中，说的已经很清楚了，感兴趣的可以看下，我们实现一个importselector的接口，然后实现其中的方法，进行导入。\n\n代码如下:\n\n@import(myimportselector.class)\npublic class demo1 {\n\n    public static void main(string[] args) {\n        annotationconfigapplicationcontext applicationcontext = new annotationconfigapplicationcontext(demo1.class);\n        person bean = applicationcontext.getbean(person.class);\n        system.out.println(bean);\n    }\n}\n\nclass myimportselector implements importselector {\n    @override\n    public string[] selectimports(annotationmetadata importingclassmetadata) {\n        return new string[]{"com.springboot.pojo.person"};\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n我自定义了一个 myimportselector 实现了 importselector 接口，重写selectimports 方法，然后将我们要导入的类的全限定名写在里面即可，实现起来也是非常简单。\n\n\n# 3.3 @import + importbeandefinitionregistrar\n\n这种方式也需要我们实现 importbeandefinitionregistrar 接口中的方法，具体代码如下:\n\n@import(myimportbeandefinitionregistrar.class)\npublic class demo1 {\n\n    public static void main(string[] args) {\n        annotationconfigapplicationcontext applicationcontext = new annotationconfigapplicationcontext(demo1.class);\n        person bean = applicationcontext.getbean(person.class);\n        system.out.println(bean);\n    }\n}\n\nclass myimportbeandefinitionregistrar implements importbeandefinitionregistrar {\n\n    @override\n    public void registerbeandefinitions(annotationmetadata importingclassmetadata, beandefinitionregistry registry) {\n        // 构建一个beandefinition, 关于beandefinition我后续会介绍，可以简单理解为bean的定义.\n        abstractbeandefinition beandefinition = beandefinitionbuilder.rootbeandefinition(person.class).getbeandefinition();\n        // 将beandefinition注册到ioc容器中.\n        registry.registerbeandefinition("person", beandefinition);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n上述实现其实和import的第二种方式差不多，都需要去实现接口，然后进行导入。接触到了一个新的概念，beandefinition，可以简单理解为bean的定义(bean的元数据)，也是需要放在ioc容器中进行管理的，先有bean的元数据，applicationcontext再根据bean的元数据去创建bean。\n\n\n# 3.4 @import + deferredimportselector\n\n这种方式也需要我们进行实现接口，其实它和@import的第二种方式差不多，deferredimportselector 它是 importselector 的子接口，所以实现的方法和第二种无异。只是spring的处理方式不同，它和spring boot中的自动导入配置文件 延迟导入有关，非常重要。使用方式如下:\n\n@import(mydeferredimportselector.class)\npublic class demo1 {\n    public static void main(string[] args) {\n        annotationconfigapplicationcontext applicationcontext = new annotationconfigapplicationcontext(demo1.class);\n        person bean = applicationcontext.getbean(person.class);\n        system.out.println(bean);\n    }\n}\nclass mydeferredimportselector implements deferredimportselector {\n    @override\n    public string[] selectimports(annotationmetadata importingclassmetadata) {\n        // 也是直接将person的全限定名放进去\n        return new string[]{person.class.getname()};\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n关于@import注解的使用方式，大概就以上三种，当然它还可以搭配@configuration注解使用，用于导入一个配置类。\n\n\n# 4、使用factorybean接口\n\nfactorybean接口和beanfactory千万不要弄混了，从名字其实可以大概的区分开，factorybean, 后缀为bean，那么它其实就是一个bean, beanfactory，顾名思义 bean工厂，它是ioc容器的顶级接口，这俩接口都很重要。代码示例:\n\n@configuration\npublic class demo1 {\n    @bean\n    public personfactorybean personfactorybean() {\n        return new personfactorybean();\n    }\n\n    public static void main(string[] args) {\n        annotationconfigapplicationcontext applicationcontext = new annotationconfigapplicationcontext(demo1.class);\n        person bean = applicationcontext.getbean(person.class);\n        system.out.println(bean);\n    }\n}\n\nclass personfactorybean implements factorybean<person> {\n\n    /**\n     *  直接new出来person进行返回.\n     */\n    @override\n    public person getobject() throws exception {\n        return new person();\n    }\n    /**\n     *  指定返回bean的类型.\n     */\n    @override\n    public class<?> getobjecttype() {\n        return person.class;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n上述代码，我使用@configuration + @bean的方式将 personfactorybean 加入到容器中，注意，我没有向容器中注入 person, 而是直接注入的 personfactorybean 然后从容器中拿person这个类型的bean,成功运行。\n\n\n# 5、使用 beandefinitionregistrypostprocessor\n\n其实这种方式也是利用到了 beandefinitionregistry，在spring容器启动的时候会执行 beandefinitionregistrypostprocessor 的 postprocessbeandefinitionregistry 方法，大概意思就是等beandefinition加载完毕之后，对beandefinition进行后置处理，可以在此进行调整ioc容器中的beandefinition，从而干扰到后面进行初始化bean。\n\n具体代码如下:\n\npublic class demo1 {\n    public static void main(string[] args) {\n        annotationconfigapplicationcontext applicationcontext = new annotationconfigapplicationcontext();\n        mybeandefinitionregistrypostprocessor beandefinitionregistrypostprocessor = new mybeandefinitionregistrypostprocessor();\n        applicationcontext.addbeanfactorypostprocessor(beandefinitionregistrypostprocessor);\n        applicationcontext.refresh();\n        person bean = applicationcontext.getbean(person.class);\n        system.out.println(bean);\n    }\n}\n\nclass mybeandefinitionregistrypostprocessor implements beandefinitionregistrypostprocessor {\n\n    @override\n    public void postprocessbeandefinitionregistry(beandefinitionregistry registry) throws beansexception {\n        abstractbeandefinition beandefinition = beandefinitionbuilder.rootbeandefinition(person.class).getbeandefinition();\n        registry.registerbeandefinition("person", beandefinition);\n    }\n    @override\n    public void postprocessbeanfactory(configurablelistablebeanfactory beanfactory) throws beansexception {\n     \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n上述代码中，我们手动向beandefinitionregistry中注册了person的beandefinition。最终成功将person加入到applicationcontext中，上述的几种方式的具体原理，我后面会进行介绍。\n\n\n# 小结\n\n向spring容器中加入bean的几种方式.\n\n@configuration + @bean\n\n@componentscan + @component\n\n@import 配合接口进行导入\n\n使用factorybean。\n\n实现beandefinitionregistrypostprocessor进行后置处理。',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"March 6, 2022 13:53",updateTimeStamp:1646574803e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"开发中报错异常解决",frontmatter:{author:"xlc520",title:"开发中报错异常解决",description:"开发中报错异常解决",time:"2022-02-20T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/%E6%8A%A5%E9%94%99%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3.html",relativePath:"Java/报错异常解决.md",key:"v-859be4b2",path:"/Java/%E6%8A%A5%E9%94%99%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3/",headers:[{level:2,title:"1.Spring Boot集成Druid异常discard long time none received connection.",slug:"_1-spring-boot集成druid异常discard-long-time-none-received-connection",normalizedTitle:"1.spring boot集成druid异常discard long time none received connection.",charIndex:40},{level:3,title:"Spring Boot集成Druid异常",slug:"spring-boot集成druid异常",normalizedTitle:"spring boot集成druid异常",charIndex:42},{level:3,title:"异常分析",slug:"异常分析",normalizedTitle:"异常分析",charIndex:494},{level:3,title:"原理追踪",slug:"原理追踪",normalizedTitle:"原理追踪",charIndex:1641},{level:3,title:"禁用Ping Method",slug:"禁用ping-method",normalizedTitle:"禁用ping method",charIndex:4209},{level:3,title:"为什么要清空空闲60秒以上的连接",slug:"为什么要清空空闲60秒以上的连接",normalizedTitle:"为什么要清空空闲60秒以上的连接",charIndex:4687},{level:2,title:"2.数据库语句错误",slug:"_2-数据库语句错误",normalizedTitle:"2.数据库语句错误",charIndex:4859}],readingTime:{minutes:3.76,words:1129},headersStr:"1.Spring Boot集成Druid异常discard long time none received connection. Spring Boot集成Druid异常 异常分析 原理追踪 禁用Ping Method 为什么要清空空闲60秒以上的连接 2.数据库语句错误",content:'# 开发中报错异常解决\n\n2022年2月6日 开始整理开发中遇到的问题\n\n\n# 1.Spring Boot集成Druid异常discard long time none received connection.\n\n> 2022年2月6日15:54:03\n\n\n# Spring Boot集成Druid异常\n\n在Spring Boot集成Druid项目中，发现错误日志中频繁的出现如下错误信息：\n\ndiscard long time none received connection. , jdbcUrl : jdbc:mysql://******?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8, version : 1.2.3, lastPacketReceivedIdleMillis : 172675\n\n\n1\n\n\n经过排查发现是Druid版本导致的异常，在1.2.2及以前版本并未出现如此异常。而在其以上版本均存在此问题，下面就来分析一下异常原因及解决方案。\n\n\n# 异常分析\n\n首先上面的异常并不影响程序的正常运行，但作为程序员看到程序中不停的出现异常还是难以忍受的。所以还是要刨根问底的解决一下的。\n\n跟踪堆栈信息会发现对应的异常是从com.alibaba.druid.pool.DruidAbstractDataSource#testConnectionInternal方法中抛出的，对应的代码如下：\n\nif (valid && isMySql) { // unexcepted branch\n    long lastPacketReceivedTimeMs = MySqlUtils.getLastPacketReceivedTimeMs(conn);\n    if (lastPacketReceivedTimeMs > 0) {\n        long mysqlIdleMillis = currentTimeMillis - lastPacketReceivedTimeMs;\n        if (lastPacketReceivedTimeMs > 0 //\n                && mysqlIdleMillis >= timeBetweenEvictionRunsMillis) {\n            discardConnection(holder);\n            String errorMsg = "discard long time none received connection. "\n                    + ", jdbcUrl : " + jdbcUrl\n                    + ", jdbcUrl : " + jdbcUrl\n                    + ", lastPacketReceivedIdleMillis : " + mysqlIdleMillis;\n            LOG.error(errorMsg);\n            return false;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n上述代码中，MySqlUtils.getLastPacketReceivedTimeMs(conn) 是获取上一次使用的时间，mysqlIdleMillis 就是计算出来空闲的时间，timeBetweenEvictionRunsMillis 是常量60秒。如果连接空闲了60秒以上，那就discardConnection(holder) 丢弃这个旧连接并顺带打印了一个日志LOG.warn(errorMsg)。\n\n\n# 原理追踪\n\n在上述代码中，我们看到进入该业务逻辑是有前提条件的，也就是valid和isMySql变量同时为true。isMySql为true是必须的，我们使用的本身就是Mysql数据库。那么是否可以让valid为false呢？这样不就不会进入该业务处理了吗？\n\n来看看valid的来源，还是在该方法的上面：\n\nboolean valid = validConnectionChecker.isValidConnection(conn, validationQuery, validationQueryTimeout);\n\n\n1\n\n\n我们找到validConnectionChecker的Mysql实现子类MySqlValidConnectionChecker，该类中对isValidConnection的实现如下：\n\npublic boolean isValidConnection(Connection conn, String validateQuery, int validationQueryTimeout) throws Exception {\n    if (conn.isClosed()) {\n        return false;\n    }\n\n    if (usePingMethod) {\n        if (conn instanceof DruidPooledConnection) {\n            conn = ((DruidPooledConnection) conn).getConnection();\n        }\n\n        if (conn instanceof ConnectionProxy) {\n            conn = ((ConnectionProxy) conn).getRawObject();\n        }\n\n        if (clazz.isAssignableFrom(conn.getClass())) {\n            if (validationQueryTimeout <= 0) {\n                validationQueryTimeout = DEFAULT_VALIDATION_QUERY_TIMEOUT;\n            }\n\n            try {\n                ping.invoke(conn, true, validationQueryTimeout * 1000);\n            } catch (InvocationTargetException e) {\n                Throwable cause = e.getCause();\n                if (cause instanceof SQLException) {\n                    throw (SQLException) cause;\n                }\n                throw e;\n            }\n            return true;\n        }\n    }\n\n    String query = validateQuery;\n    if (validateQuery == null || validateQuery.isEmpty()) {\n        query = DEFAULT_VALIDATION_QUERY;\n    }\n\n    Statement stmt = null;\n    ResultSet rs = null;\n    try {\n        stmt = conn.createStatement();\n        if (validationQueryTimeout > 0) {\n            stmt.setQueryTimeout(validationQueryTimeout);\n        }\n        rs = stmt.executeQuery(query);\n        return true;\n    } finally {\n        JdbcUtils.close(rs);\n        JdbcUtils.close(stmt);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n我们可以看到上述方法中有三个返回的地方：第一个连接已关闭；第二个使用ping的形式进行检查；第三，使用select 1的方式进行检查。而使用ping的形式检查时，无论是否抛异常都会返回true。这里我们禁用该模式即可。\n\n进入ping的业务逻辑主要靠变量usePingMethod来判断，追踪代码会发现在这里进行的设置：\n\npublic void configFromProperties(Properties properties) {\n    String property = properties.getProperty("druid.mysql.usePingMethod");\n    if ("true".equals(property)) {\n        setUsePingMethod(true);\n    } else if ("false".equals(property)) {\n        setUsePingMethod(false);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n那么，也就是说，当我们把系统属性druid.mysql.usePingMethod设置为false即可禁用该功能。\n\n\n# 禁用Ping Method\n\n找到了问题的根源，那么剩下的就是如何禁用了，通常有三种形式。\n\n第一，在启动程序时在运行参数中增加：-Ddruid.mysql.usePingMethod=false。\n\n第二，在Spring Boot项目中，可在启动类中添加如下静态代码快：\n\nstatic {\n    System.setProperty("druid.mysql.usePingMethod","false");\n}\n\n\n1\n2\n3\n\n\n第三，类文件配置。在项目的DruidConfig类中新增加：\n\n/*\n* 解决druid 日志报错：discard long time none received connection:xxx\n* */\n@PostConstruct\npublic void setProperties(){\n    System.setProperty("druid.mysql.usePingMethod","false");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n至此，已可以成功关闭该功能，异常信息再也不会出现了。\n\n\n# 为什么要清空空闲60秒以上的连接\n\n猜测，阿里给数据库设置的数据库空闲等待时间是60秒，mysql数据库到了空闲等待时间将关闭空闲的连接，以提升数据库服务器的处理能力。\n\nMySQL的默认空闲等待时间是8小时，就是「wait_timeout」的配置值。如果数据库主动关闭了空闲的连接，而连接池并不知道，还在使用这个连接，就会产生异常。\n\n\n# 2.数据库语句错误\n\n1.limit放在where后面\n\n正确：\n\nselect * from table where delete=1 limit 1,5;\n\n\n1\n\n\n错误：\n\nselect * from table limit 1,5 where delete=1;\n\n\n1\n',normalizedContent:'# 开发中报错异常解决\n\n2022年2月6日 开始整理开发中遇到的问题\n\n\n# 1.spring boot集成druid异常discard long time none received connection.\n\n> 2022年2月6日15:54:03\n\n\n# spring boot集成druid异常\n\n在spring boot集成druid项目中，发现错误日志中频繁的出现如下错误信息：\n\ndiscard long time none received connection. , jdbcurl : jdbc:mysql://******?usessl=false&allowpublickeyretrieval=true&useunicode=true&characterencoding=utf-8, version : 1.2.3, lastpacketreceivedidlemillis : 172675\n\n\n1\n\n\n经过排查发现是druid版本导致的异常，在1.2.2及以前版本并未出现如此异常。而在其以上版本均存在此问题，下面就来分析一下异常原因及解决方案。\n\n\n# 异常分析\n\n首先上面的异常并不影响程序的正常运行，但作为程序员看到程序中不停的出现异常还是难以忍受的。所以还是要刨根问底的解决一下的。\n\n跟踪堆栈信息会发现对应的异常是从com.alibaba.druid.pool.druidabstractdatasource#testconnectioninternal方法中抛出的，对应的代码如下：\n\nif (valid && ismysql) { // unexcepted branch\n    long lastpacketreceivedtimems = mysqlutils.getlastpacketreceivedtimems(conn);\n    if (lastpacketreceivedtimems > 0) {\n        long mysqlidlemillis = currenttimemillis - lastpacketreceivedtimems;\n        if (lastpacketreceivedtimems > 0 //\n                && mysqlidlemillis >= timebetweenevictionrunsmillis) {\n            discardconnection(holder);\n            string errormsg = "discard long time none received connection. "\n                    + ", jdbcurl : " + jdbcurl\n                    + ", jdbcurl : " + jdbcurl\n                    + ", lastpacketreceivedidlemillis : " + mysqlidlemillis;\n            log.error(errormsg);\n            return false;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n上述代码中，mysqlutils.getlastpacketreceivedtimems(conn) 是获取上一次使用的时间，mysqlidlemillis 就是计算出来空闲的时间，timebetweenevictionrunsmillis 是常量60秒。如果连接空闲了60秒以上，那就discardconnection(holder) 丢弃这个旧连接并顺带打印了一个日志log.warn(errormsg)。\n\n\n# 原理追踪\n\n在上述代码中，我们看到进入该业务逻辑是有前提条件的，也就是valid和ismysql变量同时为true。ismysql为true是必须的，我们使用的本身就是mysql数据库。那么是否可以让valid为false呢？这样不就不会进入该业务处理了吗？\n\n来看看valid的来源，还是在该方法的上面：\n\nboolean valid = validconnectionchecker.isvalidconnection(conn, validationquery, validationquerytimeout);\n\n\n1\n\n\n我们找到validconnectionchecker的mysql实现子类mysqlvalidconnectionchecker，该类中对isvalidconnection的实现如下：\n\npublic boolean isvalidconnection(connection conn, string validatequery, int validationquerytimeout) throws exception {\n    if (conn.isclosed()) {\n        return false;\n    }\n\n    if (usepingmethod) {\n        if (conn instanceof druidpooledconnection) {\n            conn = ((druidpooledconnection) conn).getconnection();\n        }\n\n        if (conn instanceof connectionproxy) {\n            conn = ((connectionproxy) conn).getrawobject();\n        }\n\n        if (clazz.isassignablefrom(conn.getclass())) {\n            if (validationquerytimeout <= 0) {\n                validationquerytimeout = default_validation_query_timeout;\n            }\n\n            try {\n                ping.invoke(conn, true, validationquerytimeout * 1000);\n            } catch (invocationtargetexception e) {\n                throwable cause = e.getcause();\n                if (cause instanceof sqlexception) {\n                    throw (sqlexception) cause;\n                }\n                throw e;\n            }\n            return true;\n        }\n    }\n\n    string query = validatequery;\n    if (validatequery == null || validatequery.isempty()) {\n        query = default_validation_query;\n    }\n\n    statement stmt = null;\n    resultset rs = null;\n    try {\n        stmt = conn.createstatement();\n        if (validationquerytimeout > 0) {\n            stmt.setquerytimeout(validationquerytimeout);\n        }\n        rs = stmt.executequery(query);\n        return true;\n    } finally {\n        jdbcutils.close(rs);\n        jdbcutils.close(stmt);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n我们可以看到上述方法中有三个返回的地方：第一个连接已关闭；第二个使用ping的形式进行检查；第三，使用select 1的方式进行检查。而使用ping的形式检查时，无论是否抛异常都会返回true。这里我们禁用该模式即可。\n\n进入ping的业务逻辑主要靠变量usepingmethod来判断，追踪代码会发现在这里进行的设置：\n\npublic void configfromproperties(properties properties) {\n    string property = properties.getproperty("druid.mysql.usepingmethod");\n    if ("true".equals(property)) {\n        setusepingmethod(true);\n    } else if ("false".equals(property)) {\n        setusepingmethod(false);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n那么，也就是说，当我们把系统属性druid.mysql.usepingmethod设置为false即可禁用该功能。\n\n\n# 禁用ping method\n\n找到了问题的根源，那么剩下的就是如何禁用了，通常有三种形式。\n\n第一，在启动程序时在运行参数中增加：-ddruid.mysql.usepingmethod=false。\n\n第二，在spring boot项目中，可在启动类中添加如下静态代码快：\n\nstatic {\n    system.setproperty("druid.mysql.usepingmethod","false");\n}\n\n\n1\n2\n3\n\n\n第三，类文件配置。在项目的druidconfig类中新增加：\n\n/*\n* 解决druid 日志报错：discard long time none received connection:xxx\n* */\n@postconstruct\npublic void setproperties(){\n    system.setproperty("druid.mysql.usepingmethod","false");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n至此，已可以成功关闭该功能，异常信息再也不会出现了。\n\n\n# 为什么要清空空闲60秒以上的连接\n\n猜测，阿里给数据库设置的数据库空闲等待时间是60秒，mysql数据库到了空闲等待时间将关闭空闲的连接，以提升数据库服务器的处理能力。\n\nmysql的默认空闲等待时间是8小时，就是「wait_timeout」的配置值。如果数据库主动关闭了空闲的连接，而连接池并不知道，还在使用这个连接，就会产生异常。\n\n\n# 2.数据库语句错误\n\n1.limit放在where后面\n\n正确：\n\nselect * from table where delete=1 limit 1,5;\n\n\n1\n\n\n错误：\n\nselect * from table limit 1,5 where delete=1;\n\n\n1\n',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"March 6, 2022 13:53",updateTimeStamp:1646574803e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"数据类型Java类型",frontmatter:{author:"xlc520",title:"数据类型Java类型",description:"Java数据类型和MySql数据类型对应表",time:"2022-03-03T00:00:00.000Z",category:"Java",tags:"Java",article:!0,timeline:!0,icon:null,password:null},regularPath:"/Java/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BJava%E7%B1%BB%E5%9E%8B.html",relativePath:"Java/数据类型Java类型.md",key:"v-9f7140b2",path:"/Java/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BJava%E7%B1%BB%E5%9E%8B/",readingTime:{minutes:2.64,words:793},headersStr:null,content:"# 数据类型Java类型\n\njava mysql 数据类型对照\n\n类型名称        显示长度    数据库类型                   JAVA类型                 JDBC类型索引(INT)   描述\nVARCHAR     L+N     VARCHAR                 java.lang.String       12              \nCHAR        N       CHAR                    java.lang.String       1               \nBLOB        L+N     BLOB                    java.lang.byte[]       -4              \nTEXT        65535   VARCHAR                 java.lang.String       -1              \n                                                                                   \nINTEGER     4       INTEGER UNSIGNED        java.lang.Long         4               \nTINYINT     3       TINYINT UNSIGNED        java.lang.Integer      -6              \nSMALLINT    5       SMALLINT UNSIGNED       java.lang.Integer      5               \nMEDIUMINT   8       MEDIUMINT UNSIGNED      java.lang.Integer      4               \nBIT         1       BIT                     java.lang.Boolean      -7              \nBIGINT      20      BIGINT UNSIGNED         java.math.BigInteger   -5              \nFLOAT       4+8     FLOAT                   java.lang.Float        7               \nDOUBLE      22      DOUBLE                  java.lang.Double       8               \nDECIMAL     11      DECIMAL                 java.math.BigDecimal   3               \nBOOLEAN     1       同TINYINT                                                       \n                                                                                   \nID          11      PK (INTEGER UNSIGNED)   java.lang.Long         4               \n                                                                                   \nDATE        10      DATE                    java.sql.Date          91              \nTIME        8       TIME                    java.sql.Time          92              \nDATETIME    19      DATETIME                java.sql.Timestamp     93              \nTIMESTAMP   19      TIMESTAMP               java.sql.Timestamp     93              \nYEAR        4       YEAR                    java.sql.Date          91              \n\n对于bolb，一般用于对图片的数据库存储，原理是把图片打成二进制，然后进行的一种存储方式，在java中对应byte［］数组。\n\n对于boolen类型，在mysql数据库中，个人认为用int类型代替较好，对bit操作不是很方便，尤其是在具有web页面开发的项目中，表示0/1，对应java类型的Integer较好。\n\ndecimal列的声明语法是decimal(m,d)。\n\n在mysql5.1中，参数的取值范围： 1、M是数字的最大数（精度）。其范围为1～65（在较旧的MySQL版本中，允许的范围是1～254）。 2、D是小数点右侧数字的数目（标度）。其范围是0～30，但不得超过M。 说明：float占4个字节，double占8个字节，decimail(M,D)占M+2个字节。 如DECIMAL(5, 2) 的最大值为9 9 9 9 . 9 9，因为有7 个字节可用。\n\nSQL数据类型                          JDBC类型代码                               标准的JAVA类型              ORACLE扩展的JAVA类型\n                                 1.标准的JDBC类型:                                                  \nCHAR                             java.sql.Types.CHAR                    java.lang.String       oracle.sql.CHAR\nVARCHAR2                         java.sql.Types.VARCHAR                 java.lang.String       oracle.sql.CHAR\nLONG                             java.sql.Types.LONGVARCHAR             java.lang.String       oracle.sql.CHAR\nNUMBER                           java.sql.Types.NUMERIC                 java.math.BigDecimal   oracle.sql.NUMBER\nNUMBER                           java.sql.Types.DECIMAL                 java.math.BigDecimal   oracle.sql.NUMBER\nNUMBER                           java.sql.Types.BIT                     boolean                oracle.sql.NUMBER\nNUMBER                           java.sql.Types.TINYINT                 byte                   oracle.sql.NUMBER\nNUMBER                           java.sql.Types.SMALLINT                short                  oracle.sql.NUMBER\nNUMBER                           java.sql.Types.INTEGER                 int                    oracle.sql.NUMBER\nNUMBER                           java.sql.Types.BIGINT                  long                   oracle.sql.NUMBER\nNUMBER                           java.sql.Types.REAL                    float                  oracle.sql.NUMBER\nNUMBER                           java.sql.Types.FLOAT                   double                 oracle.sql.NUMBER\nNUMBER                           java.sql.Types.DOUBLE                  double                 oracle.sql.NUMBER\nRAW                              java.sql.Types.BINARY                  byte[]                 oracle.sql.RAW\nRAW                              java.sql.Types.VARBINARY               byte[]                 oracle.sql.RAW\nLONGRAW                          java.sql.Types.LONGVARBINARY           byte[]                 oracle.sql.RAW\nDATE                             java.sql.Types.DATE                    java.sql.Date          oracle.sql.DATE\nDATE                             java.sql.Types.TIME                    java.sql.Time          oracle.sql.DATE\nTIMESTAMP                        java.sql.Types.TIMESTAMP               javal.sql.Timestamp    oracle.sql.TIMESTAMP\n                                 2.标准的JDBC类型:                                                  \nBLOB                             java.sql.Types.BLOB                    java.sql.Blob          oracle.sql.BLOB\nCLOB                             java.sql.Types.CLOB                    java.sql.Clob          oracle.sql.CLOB\n用户定义的对象                          java.sql.Types.STRUCT                  java.sql.Struct        oracle.sql.STRUCT\n用户定义的参考                          java.sql.Types.REF                     java.sql.Ref           oracle.sql.REF\n用户定义的集合                          java.sql.Types.ARRAY                   java.sql.Array         oracle.sql.ARRAY\n                                 Oracle扩展:                                                     \nBFILE                            oracle.jdbc.OracleTypes.BFILE          N/A                    oracle.sql.BFILE\nROWID                            oracle.jdbc.OracleTypes.ROWID          N/A                    oracle.sql.ROWID\nREF CURSOR                       oracle.jdbc.OracleTypes.CURSOR         java.sql.ResultSet     oracle.jdbc.OracleResultSet\nTIMESTAMP                        oracle.jdbc.OracleTypes.TIMESTAMP      java.sql.Timestamp     oracle.sql.TIMESTAMP\nTIMESTAMP WITH TIME ZONE         oracle.jdbc.OracleTypes.TIMESTAMPTZ    java.sql.Timestamp     oracle.sql.TIMESTAMPTZ\nTIMESTAMP WITH LOCAL TIME ZONE   oracle.jdbc.OracleTypes.TIMESTAMPLTZ   java.sql.Timestamp     oracle.sql.TIMESTAMPLTZ",normalizedContent:"# 数据类型java类型\n\njava mysql 数据类型对照\n\n类型名称        显示长度    数据库类型                   java类型                 jdbc类型索引(int)   描述\nvarchar     l+n     varchar                 java.lang.string       12              \nchar        n       char                    java.lang.string       1               \nblob        l+n     blob                    java.lang.byte[]       -4              \ntext        65535   varchar                 java.lang.string       -1              \n                                                                                   \ninteger     4       integer unsigned        java.lang.long         4               \ntinyint     3       tinyint unsigned        java.lang.integer      -6              \nsmallint    5       smallint unsigned       java.lang.integer      5               \nmediumint   8       mediumint unsigned      java.lang.integer      4               \nbit         1       bit                     java.lang.boolean      -7              \nbigint      20      bigint unsigned         java.math.biginteger   -5              \nfloat       4+8     float                   java.lang.float        7               \ndouble      22      double                  java.lang.double       8               \ndecimal     11      decimal                 java.math.bigdecimal   3               \nboolean     1       同tinyint                                                       \n                                                                                   \nid          11      pk (integer unsigned)   java.lang.long         4               \n                                                                                   \ndate        10      date                    java.sql.date          91              \ntime        8       time                    java.sql.time          92              \ndatetime    19      datetime                java.sql.timestamp     93              \ntimestamp   19      timestamp               java.sql.timestamp     93              \nyear        4       year                    java.sql.date          91              \n\n对于bolb，一般用于对图片的数据库存储，原理是把图片打成二进制，然后进行的一种存储方式，在java中对应byte［］数组。\n\n对于boolen类型，在mysql数据库中，个人认为用int类型代替较好，对bit操作不是很方便，尤其是在具有web页面开发的项目中，表示0/1，对应java类型的integer较好。\n\ndecimal列的声明语法是decimal(m,d)。\n\n在mysql5.1中，参数的取值范围： 1、m是数字的最大数（精度）。其范围为1～65（在较旧的mysql版本中，允许的范围是1～254）。 2、d是小数点右侧数字的数目（标度）。其范围是0～30，但不得超过m。 说明：float占4个字节，double占8个字节，decimail(m,d)占m+2个字节。 如decimal(5, 2) 的最大值为9 9 9 9 . 9 9，因为有7 个字节可用。\n\nsql数据类型                          jdbc类型代码                               标准的java类型              oracle扩展的java类型\n                                 1.标准的jdbc类型:                                                  \nchar                             java.sql.types.char                    java.lang.string       oracle.sql.char\nvarchar2                         java.sql.types.varchar                 java.lang.string       oracle.sql.char\nlong                             java.sql.types.longvarchar             java.lang.string       oracle.sql.char\nnumber                           java.sql.types.numeric                 java.math.bigdecimal   oracle.sql.number\nnumber                           java.sql.types.decimal                 java.math.bigdecimal   oracle.sql.number\nnumber                           java.sql.types.bit                     boolean                oracle.sql.number\nnumber                           java.sql.types.tinyint                 byte                   oracle.sql.number\nnumber                           java.sql.types.smallint                short                  oracle.sql.number\nnumber                           java.sql.types.integer                 int                    oracle.sql.number\nnumber                           java.sql.types.bigint                  long                   oracle.sql.number\nnumber                           java.sql.types.real                    float                  oracle.sql.number\nnumber                           java.sql.types.float                   double                 oracle.sql.number\nnumber                           java.sql.types.double                  double                 oracle.sql.number\nraw                              java.sql.types.binary                  byte[]                 oracle.sql.raw\nraw                              java.sql.types.varbinary               byte[]                 oracle.sql.raw\nlongraw                          java.sql.types.longvarbinary           byte[]                 oracle.sql.raw\ndate                             java.sql.types.date                    java.sql.date          oracle.sql.date\ndate                             java.sql.types.time                    java.sql.time          oracle.sql.date\ntimestamp                        java.sql.types.timestamp               javal.sql.timestamp    oracle.sql.timestamp\n                                 2.标准的jdbc类型:                                                  \nblob                             java.sql.types.blob                    java.sql.blob          oracle.sql.blob\nclob                             java.sql.types.clob                    java.sql.clob          oracle.sql.clob\n用户定义的对象                          java.sql.types.struct                  java.sql.struct        oracle.sql.struct\n用户定义的参考                          java.sql.types.ref                     java.sql.ref           oracle.sql.ref\n用户定义的集合                          java.sql.types.array                   java.sql.array         oracle.sql.array\n                                 oracle扩展:                                                     \nbfile                            oracle.jdbc.oracletypes.bfile          n/a                    oracle.sql.bfile\nrowid                            oracle.jdbc.oracletypes.rowid          n/a                    oracle.sql.rowid\nref cursor                       oracle.jdbc.oracletypes.cursor         java.sql.resultset     oracle.jdbc.oracleresultset\ntimestamp                        oracle.jdbc.oracletypes.timestamp      java.sql.timestamp     oracle.sql.timestamp\ntimestamp with time zone         oracle.jdbc.oracletypes.timestamptz    java.sql.timestamp     oracle.sql.timestamptz\ntimestamp with local time zone   oracle.jdbc.oracletypes.timestampltz   java.sql.timestamp     oracle.sql.timestampltz",charsets:{cjk:!0},createdTime:1646572761e3,updateTime:"March 6, 2022 13:19",updateTimeStamp:1646572761e3,createTime:"March 6, 2022 13:19",createTimeStamp:1646572761e3,contributors:[]},{title:"首页",frontmatter:{blog:!0,home:!0,icon:"home",title:"首页",hero:!0,heroImage:"/assets/icon/study.jpg",bgImage:"https://7ed.net/bing/api?rand=true",heroText:"StudyNote",heroFullScreen:!0,tagline:"加油",action:[{text:"快速预览 →",link:"/study/",type:"primary"}],project:[{type:"project",name:"学习",desc:"学习笔记",link:"/study/"},{type:"link",name:"IDEA",desc:"IDEA学习",link:"/idea/"},{type:"book",name:"Linux",desc:"Linux学习",link:"/linux/"},{type:"article",name:"脚本",desc:"各种脚本",link:"/script/"}],footer:"业精于勤而荒于嬉，行成于思而毁于随"},regularPath:"/",relativePath:"README.md",key:"v-a219eb54",path:"/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1644739094e3,updateTime:"March 6, 2022 13:45",updateTimeStamp:1646574303e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"daily",frontmatter:{author:"xlc520",title:"daily",description:"daily分类",time:"2022-02-05T00:00:00.000Z",category:"daily",tags:"daily",article:!0,timeline:!0,icon:null,password:null},regularPath:"/daily/",relativePath:"daily/README.md",key:"v-2497bc7c",path:"/daily/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1645264503e3,updateTime:"February 19, 2022 09:55",updateTimeStamp:1645264503e3,createTime:"February 19, 2022 09:55",createTimeStamp:1645264503e3,contributors:[]},{title:"Xposed edge pro入门教程",frontmatter:{author:"xlc520",title:"Xposed edge pro入门教程",description:"Xposed edge pro小白入门教程详解，即学即会！",time:"2022-02-06T00:00:00.000Z",category:"daily",tags:"daily",article:!0,timeline:!0,icon:null,password:null},regularPath:"/daily/Xposed%20edge%20pro%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html",relativePath:"daily/Xposed edge pro入门教程.md",key:"v-e8ca5fb8",path:"/daily/Xposed%20edge%20pro%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/",readingTime:{minutes:10.53,words:3159},headersStr:null,content:"# Xposed edge pro入门教程\n\n●教程目录 一、软件简介 二、运行环境 三、文件路径 四、偏好设置 五、多重动作详解（核心功能） 六、其他功能详解（基础功能） 七、多重动作的思路步骤分享（实例讲解） 八、教程的测试环境 九、结语 ----------------------------------\n\n一、软件简介 ●Xposed edge pro 是一款提供手势控制、按键控制以及其他触发器以快速触发用户所需的操作的 Xposed 模块。 ●开发者jozein大佬@jozein ，偶尔活跃在酷安。 ●下载地址 抗揍云☁️：查看链接 Xposed 仓库：查看链接 Google play商店：查看链接 ●优点：神器——简单高效稳定 ●不足：缺少布局层次分析/范围分析，自动化动作有一定限制。\n\n----------------------------------\n\n二、运行环境 ●需要Xposed环境，安装好模块重启激活 ●授予其读取应用、读写存储等基础权限 ●shell命令调用需要勾选“以root权限执行”\n\n----------------------------------\n\n三、文件路径 ●sd卡目录：默认是/storage/emulated/0，或者是/mnt/sdcard，或者是/sdcard ●配置文件目录：sd卡目录/Android/data/XEdgePro ●⚠️⚠️备份的配置保存在以上的配置文件目录中；导入配置会覆盖导致原配置丢失，建议导入他人配置前先备份！\n\n----------------------------------\n\n四、偏好设置 ●软键盘禁用手势-勾选后在弹出软键盘时禁用手势 ●锁屏禁用手势-勾选后在锁屏时禁用手势 ●游戏模式-可以屏蔽按键手势防误触 ●允许通过广播执行-建议勾选 ●其他设置看个人喜好\n\n----------------------------------\n\n五、多重动作详解（核心功能） ●通过“延时”将各单个动作组合成的多重动作，是edge pro的一个核心功能，可以说是以下第六节中“手势”、“按键”、“定时计划”等等功能的基础。\n\n●新建某个多重动作的步骤： - 点击 [保存的多重动作] - 点击 [添加] - 点击 [添加] - 选择 [“动作1”] - 点击 [添加] - 选择 [延时] - 点击 [添加] - 选择 [“动作2”] - 点击 [添加] - 选择 [延时] - ……\n\n「多重动作-选择动作」之动作类型 ●㈠提示类型\n\n\n\n※通过添加提示类型的动作可以反馈当前的执行情况，例如：在锁屏前添加Toast提示“即将锁屏”，当弹出“即将锁屏”的Toast后，你就知道马上要锁屏了。\n\n1.通知-执行后会在通知栏弹出通知 2.Toast提示-执行后会在当前窗口弹出Toast 3.语音-执行后会自动朗读文字\n\n※※小技巧：在编辑以上提示类型的动作时，可以通过输入“%d”、“%b”等实现提示实时时间、实时电量等。\n\n\n\n●㈡语句类型\n\n\n\n※通过“逻辑语句”来执行动作，类似于编程思维，但edge pro将其超级简化，小白都能看懂。\n\n1.重复-相当于循环语句，循环执行动作 2.条件-相当于if判断语句，根据结果判定执行对应操作\n\n※※注：条件-如果-应用获得了焦点 这里解释一下“应用获得了焦点”的含义。“应用获得了焦点”表示当前已跳转至/切换至/正处于对应的应用程序窗口。通过“判断焦点”的条件可以选择对应的操作，可以有效的保证后续动作不出错。例如在执行多重动作“解锁-打开支付宝-点击「我的」- 点击 [设置]-- 点击 [切换账号登录] … ”时，如果因为各种各样的原因导致没能成功打开支付宝，后续的点击操作继续执行就可能会导致各种误操作。为避免此类问题，可以选择添加一个条件，“如果应用获得了焦点-支付宝，则点击…，否则重新打开支付宝…”。\n\n●㈢“注入”类型\n\n\n\n1.注入按键-执行后可以实现模拟点击按键 2.注入手势-执行后可以模拟完成录制的手势操作 3.注入文本-执行后可以在光标位置直接输入文本\n\n※※小技巧：通过「注入按键」可以实现模拟点击所有数字键、26字母键、空格键、回车键、三大金刚键、以及拨号键等等，其中数字键和回车键用得相对较多；通过「注入文本」可以在光标处直接快速输入已设置好的文本，秒杀活动选填商品信息有奇效…\n\n●㈣系统基础类型\n\n\n\n※返回、主页、打开/结束/停止应用等应用相关、数据WiFi亮屏/锁屏等系统基础设置…非常简单直接，不做过多介绍\n\n●㈤多重动作类型\n\n\n\n※多重动作中包含多重动作，套娃行为。多个简单的多重动作组合成复杂的多重动作，有利于执行检测排查error，且不容易出错。\n\n●㈥shell类型（★★★）\n\n\n\n※调用shell命令可以完成绝大多数任务，例如打开QQ微信指定好友界面、打开支付宝蚂蚁森林、模拟点击滑动按键输入、更改手机系统设置等等。关于具体shell命令的调用可参考“adb shell操作命令详解”——查看链接 ※⚠️⚠️以上链接中的adb shell命令在手机执行的时候去掉命令前面的“adb shell”，勾选“以root权限执行”即可。\n\n\n\n※常用的shell类型（具体操作戳☞查看链接） 1.启动应用/Activity 2.模拟点击滑动按键输入 3.更改手机系统设置\n\n※※补充: 一、抓取Activity工具: 【当前界面(当前Activity)】 ； 【Activity】 ； 【MT管理器2】 二、获取支付宝相关的APPID:部分文档查看链接、抓APPID的方法查看链接\n\n●㈦延时（★★★）\n\n\n\n※延时，相当于sleep语句，主要是添加在各动作之间，使得前后两个动作之间有一定的时间间隔，确保前一个动作执行完成再继续后面的动作。延时所需的具体时长由于不同机型设备系统反应的快慢程度决定，手机反应快延时时长可以适当缩短，但仍然建议各动作之间的延时时长适当增长。另外，测试执行新建的动作时最好在动作前再加几秒延时。\n\n※※换算：1s（秒）＝1000ms（毫秒）\n\n----------------------------------\n\n六、其他功能详解（基础功能） ●㈠手势 ※通过设置手势可以快速触发单个动作或者多重动作 ※步骤（以设置“右中左划-返回”为例）： - 点击 [手势] 复选框启用手势 - 点击 [手势] 项进入手势设置 - 点击 [右中] 复选框启用右中边缘手势 - 点击 [右中] 项展开子项 - 点击子项 [左划] 进入动作选择 - 点击 [返回] 项选择动作 【注：若选择保存的多重动作即可实现触发多重动作】 - 完成。右中边缘往左划即可执行 [返回] 动作\n\n\n\n●㈡按键 ●㈢其他拓展 ※设置按键及其他拓展的步骤均参考“手势设置”\n\n●㈣定时计划 ※通过定时计划可以实现定时自动完成指定动作，例如：定时打卡签到、定时给QQ微信好友发消息等 ※步骤(以“7:00定时解锁打开支付宝XQE”为例）： - 点击 [添加] - 选择 [按星期/按日期] - 点击 刚创建的定时计划 展开子项 - 点击 [时间] 设置具体的时间点7:00 - 点击 [星期/日期] 选择执行的具体日子 - 点击 [无] 选择相应的动作 - 点击 [7:00] 复选框启用定时计划 - 点击 右上角[保存] 成功设置完成定时计划\n\n\n\n●㈤应用状态触发 ※通过判断相关应用的应用状态（运行/结束/获得了焦点/未获得焦点），触发相应的动作。 ※步骤(以“结束支付宝立即触发支付宝后台”为例）： - 点击 [应用状态触发] - 找到 [支付宝] - 点击 「支付宝」 展开子项 - 点击 [结束] - 点击 [shell命令] 新建“启动支付宝后台”的shell命令 - 输入 [am startservice com.eg.android.AlipayGphone/com.alipay.android.launcher.service.LauncherService] - 点击 [以root身份运行] 复选框 - 点击 [返回] 完成\n\n\n\n●㈥更多触发器 ※偏向系统应用转态触发，例如亮屏/息屏/插入耳机/电量低/收到短信等等 ※步骤参考“应用状态触发”\n\n----------------------------------\n\n七、多重动作的思路步骤分享（实例讲解） ●以“每间隔30分钟自启一次支付宝XQE”为例 ●主要思路：亮屏的时候，后台启动支付宝（防止支付宝界面突然弹出造成干扰）；锁屏的时候，唤醒手机、保持亮屏、解锁屏幕、启动支付宝、锁屏；通过条件语句判断亮屏/锁屏分别执行各自动作；通过“重复”可以实现循环，每间隔30分钟——动作前/后添加延时1800000ms（30分钟），重复次数48即可保证每天24小时保持“每30分钟自启一次支付宝”的状态；设置一个定时计划，确定执行任务的时间。\n\n●具体步骤操作： ●㈠亮屏时，自启支付宝后台服务\n\n\n\n●㈡锁屏时，唤醒亮屏、解锁、启动支付宝、锁屏\n\n\n\n※※补充： ●自动解锁手机的方法（★★★） 1.无密码：使用edge基础功能动作“解锁”\n\n\n\n2.图案锁屏：「手势记录」添加录制解锁动作保存 -「保存的多重动作」-「添加」-「添加」-「注入手势」-选择刚保存的解锁动作-「确定保存」\n\n\n\n3.数字锁屏： ①注入手势：方法同“图案解锁” ②注入按键：注入密码对应的数字按键\n\n\n\n③shell-通过输入文本：input text 密码\n\n\n\n④shell-通过模拟按键：input keyevent 密码对应的键值\n\n\n\n⑤shell-通过模拟点击：input tap 密码对应的屏幕坐标\n\n\n\n※⚠️⚠️在都能成功解锁的情况下，优先级排序为③②④⑤①；由于安卓版本或者机型等问题，①②③④往往或多或少会出现无效的情况，而⑤模拟点击是最稳定的。\n\n※keyevent事件参考查看链接 ※解锁②注入按键-只看keycode值 ※解锁④模拟按键-只看数字值 例如：输入数字5\n\n\n\n※解锁⑤获取屏幕坐标的方法：开启指针 shell命令开启指针：settings put system pointer_location 1 shell命令关闭指针：settings put system pointer_location 0\n\n●㈢条件语句\n\n\n\n●㈣循环重复执行\n\n\n\n●㈤设置定时计划\n\n\n\n----------------------------------\n\n八、教程的测试环境： ●小米6 MIUI11 Edxp； ●安卓9 星空rom ●XEdgePro版本：5.4.2\n\n----------------------------------\n\n九、结语 关于XEdgePro的教程到这基本就全部结束了，欢迎大家批评指正，互相学习。XEdgePro使用真的不难，只需要你稍微肯琢磨一下，愿意去主动学习。",normalizedContent:"# xposed edge pro入门教程\n\n●教程目录 一、软件简介 二、运行环境 三、文件路径 四、偏好设置 五、多重动作详解（核心功能） 六、其他功能详解（基础功能） 七、多重动作的思路步骤分享（实例讲解） 八、教程的测试环境 九、结语 ----------------------------------\n\n一、软件简介 ●xposed edge pro 是一款提供手势控制、按键控制以及其他触发器以快速触发用户所需的操作的 xposed 模块。 ●开发者jozein大佬@jozein ，偶尔活跃在酷安。 ●下载地址 抗揍云☁️：查看链接 xposed 仓库：查看链接 google play商店：查看链接 ●优点：神器——简单高效稳定 ●不足：缺少布局层次分析/范围分析，自动化动作有一定限制。\n\n----------------------------------\n\n二、运行环境 ●需要xposed环境，安装好模块重启激活 ●授予其读取应用、读写存储等基础权限 ●shell命令调用需要勾选“以root权限执行”\n\n----------------------------------\n\n三、文件路径 ●sd卡目录：默认是/storage/emulated/0，或者是/mnt/sdcard，或者是/sdcard ●配置文件目录：sd卡目录/android/data/xedgepro ●⚠️⚠️备份的配置保存在以上的配置文件目录中；导入配置会覆盖导致原配置丢失，建议导入他人配置前先备份！\n\n----------------------------------\n\n四、偏好设置 ●软键盘禁用手势-勾选后在弹出软键盘时禁用手势 ●锁屏禁用手势-勾选后在锁屏时禁用手势 ●游戏模式-可以屏蔽按键手势防误触 ●允许通过广播执行-建议勾选 ●其他设置看个人喜好\n\n----------------------------------\n\n五、多重动作详解（核心功能） ●通过“延时”将各单个动作组合成的多重动作，是edge pro的一个核心功能，可以说是以下第六节中“手势”、“按键”、“定时计划”等等功能的基础。\n\n●新建某个多重动作的步骤： - 点击 [保存的多重动作] - 点击 [添加] - 点击 [添加] - 选择 [“动作1”] - 点击 [添加] - 选择 [延时] - 点击 [添加] - 选择 [“动作2”] - 点击 [添加] - 选择 [延时] - ……\n\n「多重动作-选择动作」之动作类型 ●㈠提示类型\n\n\n\n※通过添加提示类型的动作可以反馈当前的执行情况，例如：在锁屏前添加toast提示“即将锁屏”，当弹出“即将锁屏”的toast后，你就知道马上要锁屏了。\n\n1.通知-执行后会在通知栏弹出通知 2.toast提示-执行后会在当前窗口弹出toast 3.语音-执行后会自动朗读文字\n\n※※小技巧：在编辑以上提示类型的动作时，可以通过输入“%d”、“%b”等实现提示实时时间、实时电量等。\n\n\n\n●㈡语句类型\n\n\n\n※通过“逻辑语句”来执行动作，类似于编程思维，但edge pro将其超级简化，小白都能看懂。\n\n1.重复-相当于循环语句，循环执行动作 2.条件-相当于if判断语句，根据结果判定执行对应操作\n\n※※注：条件-如果-应用获得了焦点 这里解释一下“应用获得了焦点”的含义。“应用获得了焦点”表示当前已跳转至/切换至/正处于对应的应用程序窗口。通过“判断焦点”的条件可以选择对应的操作，可以有效的保证后续动作不出错。例如在执行多重动作“解锁-打开支付宝-点击「我的」- 点击 [设置]-- 点击 [切换账号登录] … ”时，如果因为各种各样的原因导致没能成功打开支付宝，后续的点击操作继续执行就可能会导致各种误操作。为避免此类问题，可以选择添加一个条件，“如果应用获得了焦点-支付宝，则点击…，否则重新打开支付宝…”。\n\n●㈢“注入”类型\n\n\n\n1.注入按键-执行后可以实现模拟点击按键 2.注入手势-执行后可以模拟完成录制的手势操作 3.注入文本-执行后可以在光标位置直接输入文本\n\n※※小技巧：通过「注入按键」可以实现模拟点击所有数字键、26字母键、空格键、回车键、三大金刚键、以及拨号键等等，其中数字键和回车键用得相对较多；通过「注入文本」可以在光标处直接快速输入已设置好的文本，秒杀活动选填商品信息有奇效…\n\n●㈣系统基础类型\n\n\n\n※返回、主页、打开/结束/停止应用等应用相关、数据wifi亮屏/锁屏等系统基础设置…非常简单直接，不做过多介绍\n\n●㈤多重动作类型\n\n\n\n※多重动作中包含多重动作，套娃行为。多个简单的多重动作组合成复杂的多重动作，有利于执行检测排查error，且不容易出错。\n\n●㈥shell类型（★★★）\n\n\n\n※调用shell命令可以完成绝大多数任务，例如打开qq微信指定好友界面、打开支付宝蚂蚁森林、模拟点击滑动按键输入、更改手机系统设置等等。关于具体shell命令的调用可参考“adb shell操作命令详解”——查看链接 ※⚠️⚠️以上链接中的adb shell命令在手机执行的时候去掉命令前面的“adb shell”，勾选“以root权限执行”即可。\n\n\n\n※常用的shell类型（具体操作戳☞查看链接） 1.启动应用/activity 2.模拟点击滑动按键输入 3.更改手机系统设置\n\n※※补充: 一、抓取activity工具: 【当前界面(当前activity)】 ； 【activity】 ； 【mt管理器2】 二、获取支付宝相关的appid:部分文档查看链接、抓appid的方法查看链接\n\n●㈦延时（★★★）\n\n\n\n※延时，相当于sleep语句，主要是添加在各动作之间，使得前后两个动作之间有一定的时间间隔，确保前一个动作执行完成再继续后面的动作。延时所需的具体时长由于不同机型设备系统反应的快慢程度决定，手机反应快延时时长可以适当缩短，但仍然建议各动作之间的延时时长适当增长。另外，测试执行新建的动作时最好在动作前再加几秒延时。\n\n※※换算：1s（秒）＝1000ms（毫秒）\n\n----------------------------------\n\n六、其他功能详解（基础功能） ●㈠手势 ※通过设置手势可以快速触发单个动作或者多重动作 ※步骤（以设置“右中左划-返回”为例）： - 点击 [手势] 复选框启用手势 - 点击 [手势] 项进入手势设置 - 点击 [右中] 复选框启用右中边缘手势 - 点击 [右中] 项展开子项 - 点击子项 [左划] 进入动作选择 - 点击 [返回] 项选择动作 【注：若选择保存的多重动作即可实现触发多重动作】 - 完成。右中边缘往左划即可执行 [返回] 动作\n\n\n\n●㈡按键 ●㈢其他拓展 ※设置按键及其他拓展的步骤均参考“手势设置”\n\n●㈣定时计划 ※通过定时计划可以实现定时自动完成指定动作，例如：定时打卡签到、定时给qq微信好友发消息等 ※步骤(以“7:00定时解锁打开支付宝xqe”为例）： - 点击 [添加] - 选择 [按星期/按日期] - 点击 刚创建的定时计划 展开子项 - 点击 [时间] 设置具体的时间点7:00 - 点击 [星期/日期] 选择执行的具体日子 - 点击 [无] 选择相应的动作 - 点击 [7:00] 复选框启用定时计划 - 点击 右上角[保存] 成功设置完成定时计划\n\n\n\n●㈤应用状态触发 ※通过判断相关应用的应用状态（运行/结束/获得了焦点/未获得焦点），触发相应的动作。 ※步骤(以“结束支付宝立即触发支付宝后台”为例）： - 点击 [应用状态触发] - 找到 [支付宝] - 点击 「支付宝」 展开子项 - 点击 [结束] - 点击 [shell命令] 新建“启动支付宝后台”的shell命令 - 输入 [am startservice com.eg.android.alipaygphone/com.alipay.android.launcher.service.launcherservice] - 点击 [以root身份运行] 复选框 - 点击 [返回] 完成\n\n\n\n●㈥更多触发器 ※偏向系统应用转态触发，例如亮屏/息屏/插入耳机/电量低/收到短信等等 ※步骤参考“应用状态触发”\n\n----------------------------------\n\n七、多重动作的思路步骤分享（实例讲解） ●以“每间隔30分钟自启一次支付宝xqe”为例 ●主要思路：亮屏的时候，后台启动支付宝（防止支付宝界面突然弹出造成干扰）；锁屏的时候，唤醒手机、保持亮屏、解锁屏幕、启动支付宝、锁屏；通过条件语句判断亮屏/锁屏分别执行各自动作；通过“重复”可以实现循环，每间隔30分钟——动作前/后添加延时1800000ms（30分钟），重复次数48即可保证每天24小时保持“每30分钟自启一次支付宝”的状态；设置一个定时计划，确定执行任务的时间。\n\n●具体步骤操作： ●㈠亮屏时，自启支付宝后台服务\n\n\n\n●㈡锁屏时，唤醒亮屏、解锁、启动支付宝、锁屏\n\n\n\n※※补充： ●自动解锁手机的方法（★★★） 1.无密码：使用edge基础功能动作“解锁”\n\n\n\n2.图案锁屏：「手势记录」添加录制解锁动作保存 -「保存的多重动作」-「添加」-「添加」-「注入手势」-选择刚保存的解锁动作-「确定保存」\n\n\n\n3.数字锁屏： ①注入手势：方法同“图案解锁” ②注入按键：注入密码对应的数字按键\n\n\n\n③shell-通过输入文本：input text 密码\n\n\n\n④shell-通过模拟按键：input keyevent 密码对应的键值\n\n\n\n⑤shell-通过模拟点击：input tap 密码对应的屏幕坐标\n\n\n\n※⚠️⚠️在都能成功解锁的情况下，优先级排序为③②④⑤①；由于安卓版本或者机型等问题，①②③④往往或多或少会出现无效的情况，而⑤模拟点击是最稳定的。\n\n※keyevent事件参考查看链接 ※解锁②注入按键-只看keycode值 ※解锁④模拟按键-只看数字值 例如：输入数字5\n\n\n\n※解锁⑤获取屏幕坐标的方法：开启指针 shell命令开启指针：settings put system pointer_location 1 shell命令关闭指针：settings put system pointer_location 0\n\n●㈢条件语句\n\n\n\n●㈣循环重复执行\n\n\n\n●㈤设置定时计划\n\n\n\n----------------------------------\n\n八、教程的测试环境： ●小米6 miui11 edxp； ●安卓9 星空rom ●xedgepro版本：5.4.2\n\n----------------------------------\n\n九、结语 关于xedgepro的教程到这基本就全部结束了，欢迎大家批评指正，互相学习。xedgepro使用真的不难，只需要你稍微肯琢磨一下，愿意去主动学习。",charsets:{cjk:!0},createdTime:1645264503e3,updateTime:"February 19, 2022 09:55",updateTimeStamp:1645264503e3,createTime:"February 19, 2022 09:55",createTimeStamp:1645264503e3,contributors:[]},{title:"Xposed-edge-pro Shell命令-打开微信好友聊天界面",frontmatter:{author:"xlc520",title:"Xposed-edge-pro Shell命令-打开微信好友聊天界面",description:"打开微信好友聊天界面",time:"2022-02-06T00:00:00.000Z",category:"daily",tags:"daily",article:!0,timeline:!0,icon:null,password:null},regularPath:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4-%E6%89%93%E5%BC%80%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2.html",relativePath:"daily/Xposed-edge-pro Shell命令-打开微信好友聊天界面.md",key:"v-7bce7152",path:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4-%E6%89%93%E5%BC%80%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2/",headers:[{level:2,title:"一、核心思想",slug:"一、核心思想",normalizedTitle:"一、核心思想",charIndex:112},{level:3,title:"方法一：适用于国内版",slug:"方法一-适用于国内版",normalizedTitle:"方法一：适用于国内版",charIndex:123},{level:3,title:"方法二：适用于谷歌版或者方法一不行的和打开桌面图标",slug:"方法二-适用于谷歌版或者方法一不行的和打开桌面图标",normalizedTitle:"方法二：适用于谷歌版或者方法一不行的和打开桌面图标",charIndex:314},{level:2,title:"二、安卓7及以下 Shell命令打开微信好友聊天界面",slug:"二、安卓7及以下-shell命令打开微信好友聊天界面",normalizedTitle:"二、安卓7及以下 shell命令打开微信好友聊天界面",charIndex:398},{level:3,title:"1.聊天好友添加至桌面",slug:"_1-聊天好友添加至桌面",normalizedTitle:"1.聊天好友添加至桌面",charIndex:429},{level:3,title:"2.找桌面数据库.db里的intent值",slug:"_2-找桌面数据库-db里的intent值",normalizedTitle:"2.找桌面数据库.db里的intent值",charIndex:510},{level:3,title:"3.组合命令并运行",slug:"_3-组合命令并运行",normalizedTitle:"3.组合命令并运行",charIndex:932},{level:2,title:"三、安卓8及以上 Shell命令打开微信好友聊天界面",slug:"三、安卓8及以上-shell命令打开微信好友聊天界面",normalizedTitle:"三、安卓8及以上 shell命令打开微信好友聊天界面",charIndex:1150},{level:3,title:"1.聊天好友添加至桌面（同 二.1 ）",slug:"_1-聊天好友添加至桌面-同-二-1",normalizedTitle:"1.聊天好友添加至桌面（同 二.1 ）",charIndex:1181},{level:3,title:"2.复制/data/systemce/0/shortcutservice/shortcuts.xml下有关字段",slug:"_2-复制-data-system-ce-0-shortcut-service-shortcuts-xml下有关字段",normalizedTitle:"2.复制/data/systemce/0/shortcutservice/shortcuts.xml下有关字段",charIndex:null},{level:3,title:"3.修改字段为命令并运行",slug:"_3-修改字段为命令并运行",normalizedTitle:"3.修改字段为命令并运行",charIndex:1369},{level:2,title:"四、拓展",slug:"四、拓展",normalizedTitle:"四、拓展",charIndex:1679}],readingTime:{minutes:3.22,words:967},headersStr:"一、核心思想 方法一：适用于国内版 方法二：适用于谷歌版或者方法一不行的和打开桌面图标 二、安卓7及以下 Shell命令打开微信好友聊天界面 1.聊天好友添加至桌面 2.找桌面数据库.db里的intent值 3.组合命令并运行 三、安卓8及以上 Shell命令打开微信好友聊天界面 1.聊天好友添加至桌面（同 二.1 ） 2.复制/data/systemce/0/shortcutservice/shortcuts.xml下有关字段 3.修改字段为命令并运行 四、拓展",content:'# Xposed-edge-pro Shell命令-打开微信好友聊天界面\n\n\n\n本教程框架图\n\n首先你要是不会用软件运行shell命令先看我这个帖子：查看链接\n\n正文开始\n\nShell命令01_打开微信好友聊天界面\n\n\n# 一、核心思想\n\n\n# 方法一：适用于国内版\n\n如果只有这一个需求，能用的话可以止步，不看方法二了\n\n微信号：聊天界面点好友头像显示的微信账号（Chat_User之后有空格）， am start -n com.tencent.mm/com.tencent.mm.ui.chatting.ChattingUI --ei Chat_Mode 1 --es Chat_User 微信号\n\n\n\n微信号查看\n\n\n# 方法二：适用于谷歌版或者方法一不行的和打开桌面图标\n\n获取intent值，用am start "intent:intent值" 命令启动，以下就是方法二的介绍\n\n\n# 二、安卓7及以下 Shell命令打开微信好友聊天界面\n\n\n# 1.聊天好友添加至桌面\n\n在这我以我的微信好友“小号”为例（因为备注小号）\n\n微信好友聊天界面→头像→右上角三个点→添加到桌面\n\n\n\n添加微信好友到桌面\n\n\n# 2.找桌面数据库.db里的intent值\n\n这个就分不同的手机桌面了，安卓7一般在/data/data/桌面程序包名/databases/下\n\n我举一个例子吧，小米手机安卓7桌面的数据库文件夹是\n\n/data/data/com.miui.home/databases/\n\n这个文件夹里一般最大的.db 文件就是当前桌面的布局数据文件，这里建议用 【MiXplorer文件管理器】来打开文件，滑\n\n到最下方找到intent值，我这里用相机这个代替，长按#Intent那个，并复制出来\n\n\n\n复制相机的intent值\n\n得到该值\n\n\\#Intent;action=android.intent.action.MAIN;category=android.intent.category.LAUNCHER;launchFlags=0x10200000;component=com.android.camera/.Camera;end\n\n\n1\n\n\n\n# 3.组合命令并运行\n\nam start "intent:#Intent;action=android.intent.action.MAIN;category=android.intent.category.LAUNCHER;launchFlags=0x10200000;component=com.android.camera/.Camera;end"\n\n\n1\n\n\n即可打开相机，（我这里用相机代替了，别在这和我说为什么不对）\n\n\n# 三、安卓8及以上 Shell命令打开微信好友聊天界面\n\n\n# 1.聊天好友添加至桌面（同 二.1 ）\n\n我这里添加的是我的 小号 ，（备注就是小号）\n\n\n# 2.复制/data/system_ce/0/shortcut_service/shortcuts.xml下有关字段\n\nMT管理器打开这个文件，搜索“小号”（备注是什么就搜什么)，复制shortcut id的值\n\n\n\n复制shortcut id的值，包括shortcut_\n\n\n# 3.修改字段为命令并运行\n\n将该值替换下列命令里的两个地方\n\nam start "intent:#Intent;action=com.tencent.mm.action.BIZSHORTCUT;launchFlags=0x4000000;package=com.tencent.mm;B.LauncherUI.From.Biz.Shortcut=true;S.app_shortcut_custom_id=替换;S.LauncherUI.Shortcut.Username=替换;end"\n\n\n1\n\n\n这样就得到需要的命令了。\n\n----------------------------------------\n\n\n# 四、拓展\n\n1.其实三就是对二的另一种解决方式，安卓的一些机制，导致不能用二来启动桌面图标了\n\n2.如果你足够细心的话，就能发现三最后那个模板是怎么来的了，在那个shortcuts.xml文件里找到那个关键字再往下找一下，修改如下图，如果有这个思想，其他的也可以拓展了\n\n\n\n大写字母和.代替一些代码\n\n3.shortcuts.xml文件里有许多值得推敲的命令，安卓开发者的话可以参考一下 4.对于shortcuts.xml，发散思维的话参考这个软件 【Anywhere- 快捷方式】',normalizedContent:'# xposed-edge-pro shell命令-打开微信好友聊天界面\n\n\n\n本教程框架图\n\n首先你要是不会用软件运行shell命令先看我这个帖子：查看链接\n\n正文开始\n\nshell命令01_打开微信好友聊天界面\n\n\n# 一、核心思想\n\n\n# 方法一：适用于国内版\n\n如果只有这一个需求，能用的话可以止步，不看方法二了\n\n微信号：聊天界面点好友头像显示的微信账号（chat_user之后有空格）， am start -n com.tencent.mm/com.tencent.mm.ui.chatting.chattingui --ei chat_mode 1 --es chat_user 微信号\n\n\n\n微信号查看\n\n\n# 方法二：适用于谷歌版或者方法一不行的和打开桌面图标\n\n获取intent值，用am start "intent:intent值" 命令启动，以下就是方法二的介绍\n\n\n# 二、安卓7及以下 shell命令打开微信好友聊天界面\n\n\n# 1.聊天好友添加至桌面\n\n在这我以我的微信好友“小号”为例（因为备注小号）\n\n微信好友聊天界面→头像→右上角三个点→添加到桌面\n\n\n\n添加微信好友到桌面\n\n\n# 2.找桌面数据库.db里的intent值\n\n这个就分不同的手机桌面了，安卓7一般在/data/data/桌面程序包名/databases/下\n\n我举一个例子吧，小米手机安卓7桌面的数据库文件夹是\n\n/data/data/com.miui.home/databases/\n\n这个文件夹里一般最大的.db 文件就是当前桌面的布局数据文件，这里建议用 【mixplorer文件管理器】来打开文件，滑\n\n到最下方找到intent值，我这里用相机这个代替，长按#intent那个，并复制出来\n\n\n\n复制相机的intent值\n\n得到该值\n\n\\#intent;action=android.intent.action.main;category=android.intent.category.launcher;launchflags=0x10200000;component=com.android.camera/.camera;end\n\n\n1\n\n\n\n# 3.组合命令并运行\n\nam start "intent:#intent;action=android.intent.action.main;category=android.intent.category.launcher;launchflags=0x10200000;component=com.android.camera/.camera;end"\n\n\n1\n\n\n即可打开相机，（我这里用相机代替了，别在这和我说为什么不对）\n\n\n# 三、安卓8及以上 shell命令打开微信好友聊天界面\n\n\n# 1.聊天好友添加至桌面（同 二.1 ）\n\n我这里添加的是我的 小号 ，（备注就是小号）\n\n\n# 2.复制/data/system_ce/0/shortcut_service/shortcuts.xml下有关字段\n\nmt管理器打开这个文件，搜索“小号”（备注是什么就搜什么)，复制shortcut id的值\n\n\n\n复制shortcut id的值，包括shortcut_\n\n\n# 3.修改字段为命令并运行\n\n将该值替换下列命令里的两个地方\n\nam start "intent:#intent;action=com.tencent.mm.action.bizshortcut;launchflags=0x4000000;package=com.tencent.mm;b.launcherui.from.biz.shortcut=true;s.app_shortcut_custom_id=替换;s.launcherui.shortcut.username=替换;end"\n\n\n1\n\n\n这样就得到需要的命令了。\n\n----------------------------------------\n\n\n# 四、拓展\n\n1.其实三就是对二的另一种解决方式，安卓的一些机制，导致不能用二来启动桌面图标了\n\n2.如果你足够细心的话，就能发现三最后那个模板是怎么来的了，在那个shortcuts.xml文件里找到那个关键字再往下找一下，修改如下图，如果有这个思想，其他的也可以拓展了\n\n\n\n大写字母和.代替一些代码\n\n3.shortcuts.xml文件里有许多值得推敲的命令，安卓开发者的话可以参考一下 4.对于shortcuts.xml，发散思维的话参考这个软件 【anywhere- 快捷方式】',charsets:{cjk:!0},createdTime:1645264503e3,updateTime:"February 19, 2022 09:55",updateTimeStamp:1645264503e3,createTime:"February 19, 2022 09:55",createTimeStamp:1645264503e3,contributors:[]},{title:"Xposed-edge-pro Shell命令",frontmatter:{author:"xlc520",title:"Xposed-edge-pro Shell命令",description:"定时自动签到、发送消息、定时自动偷能量及刷支付宝步数、游戏定时登录做任务……【shell命令】",time:"2022-02-07T00:00:00.000Z",category:"daily",tags:"daily",article:!0,timeline:!0,icon:null,password:null},regularPath:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4.html",relativePath:"daily/Xposed-edge-pro Shell命令.md",key:"v-104d80a7",path:"/daily/Xposed-edge-pro%20Shell%E5%91%BD%E4%BB%A4/",readingTime:{minutes:5.37,words:1610},headersStr:null,content:'# Xposed-edge-pro Shell命令\n\n一、主要思路：通过xp模块XEdgePro实现手机定时自动解锁、定时自动完成各种指定任务（签到打卡，模拟点击等，理论上只要权限够你能想到的操作都能完成）\n\n二、所需软件（模块）： 【MT管理器2】 、 【超级点击器】 、Xposed edge pro（XP模块） 查看链接\n\n三、使用方法（步骤）：安装Xposed edge pro模块勾选重启-打开Xposed edge pro-保存的多重动作-添加-添加-【添加唤醒、解锁等需实现的各种操作指令】-右上角✔保存-返回-定时计划-添加-设置好日期时间-选择好刚保存的多重动作-勾选任务并保存。整体的使用步骤就这样，非常简单，自己稍微摸索一下就能搞定；具体的操作命令接着往下看～\n\n四、具体的操作命令如何实现？ （一）通过Xposed edge pro的基础动作 适用于实现唤醒/锁屏、展开通知栏、截屏、开启/关闭WiFi及数据、延时、打开/关闭应用、注入手势等等较简单的操作。\n\n\n\nedge pro的基础动作截取\n\n（二）通过shell命令 1.添加shell命令的方法：Xposed edge pro-保存的多重动作-添加-添加-具体的shell命令-勾选以root运行-确定-右上角✔保存。注：应长按刚保存shell命令-执行来自我检查是否有效。\n\n\n\n添加shell命令并以root身份运行\n\n2.具体的shell命令如何写？（参考来源 查看链接 ） （1）模拟用户操作的shell命令 ⭕点击屏幕坐标：input tap X Y ⭕长按屏幕250ms：input swipe X1 Y1 X1 Y1 250 ⭕划动屏幕250ms：input swipe X1 Y1 X2 Y2 250 ⭕输入文本（仅数字、英文）：input text 文本 ⭕输入文本（支持所有文本）：am broadcast -a ADB_INPUT_TEXT --es msg 文本 👉注：由于原生命令不支持中文输入，所以input text 类只能支持输入数字英文字符。然而作为一名中国人🇨🇳，压根就避免不了需要输入中文字符的情况，所以这里给大家介绍一种曲线救国的办法。利用"ADBKeyBoard"输入法 查看链接 来进行中文的输入，通过广播的方式达到输入中文字符，具体命令：am broadcast -a ADB_INPUT_TEXT --es msg 文本\n\n\n\n定时自启QQ-切换ADBKeyBoard-发送-切回搜狗输入法-关闭QQ\n\n✔获取屏幕坐标（X Y）的方法： ①打开超级点击器-给它辅助权限-启动点击器-点＋号插入一个点击①-把点击①移到你想要获取屏幕坐标的位置-长按点击①下滑即可看到点击坐标（这是笨方法，但是很实用）\n\n\n\n超级点击器01中心点坐标\n\n②设置-更多设置-开发者选项-开启指针位置（状态栏显示）\n\n\n\n状态栏显示点击处坐标\n\n③shell命令执行（升级版方法②） 开启指针位置：settings get system pointer_location 1 关闭指针位置：settings get system pointer_location 0 👉实用举例： 通过获取屏幕坐标，执行shell命令，可以实现模拟点击、长按及滑动。各型号手机分辨率不同，一些具体的屏幕坐标就不放出来了，大家自己去弄。\n\n（2）启动软件界面的shell命令 ⭕am start -n 类 👉介绍：打开的是软件的activity界面，比如QQ、微信、贴吧等等一些应用界面。 👉模板：am start -n 应用包名/抓取到的活动名 ✔获取包名/活动名方法：应用包名在应用信息里复制，活动名通过MT管理器-工具-Activity记录抓取复制。\n\n\n\n贴吧应用包名、Activity活动名\n\n👉实用举例： 打开贴吧一键签到界面：am start -n com.baidu.tieba/com.baidu.tieba.signall.SignAllForumActivity\n\n⭕am start “intent:Intent值” 类 👉介绍：可打开软件较复杂的活动界面、桌面快捷方式等，比如指定超话签到界面、贴吧一键签到界面、指定公众号界面、小程序等等。 👉模板：am start “intent:#Intent值” ✔抓取Intent值的方法：打开活动界面-通过手势或者按键调出Xposed edge pro应用菜单-活动-带参数提取应用活动，然后打开MT管理器的/data/user_de/0/com.jozein.xedgepro/prefs/collection目录-打开方式选文本编辑-复制最后一行的相关Intent值。\n\n\n\n抓取Intent\n\n👉实用举例： 打开“蔡徐坤”超话签到界面：am start "intent:#Intent;action=android.intent.action.MAIN;launchFlags=0x10000000;component=com.sina.weibo/.page.SuperPageActivity;sourceBounds=93%20709%20237%20853;S.from=shortcut;S.containerid=10080817c0fee819b9c79696a382f9634dbd87;end"\n\n⭕am start -a android.intent.action.VIEW -d ‘URL Shemes’类 👉介绍：部分常用软件界面‘URL Shemes’参数戳 查看链接 👉模板：am start -a android.intent.action.VIEW -d ‘URL Shemes’ 👉实用举例： 打开蚂蚁森林：am start -a android.intent.action.VIEW -d alipays://platformapi/startapp?appId=60000002 打开支付宝运动：am start -a android.intent.action.VIEW -d alipays://platformapi/startapp?appId=20000869\n\n五、总结 （一）通过edge打开应用或者通过shell一步打开指定界面，配合shell模拟点击命令、延时命令等组合而成的多重动作就是简单的自动脚本。配合edge的定时计划，就能实现定时自动操作。 （二）抓到的shell参数不一定有效，自己执行多检查完善。am start -n 类、 “Intent值” 类、 ‘URL Shemes’类哪个有效用哪个，都不行就尝试加上shell模拟点击进行组合。 （三）支付宝相关xp模块 查看链接 、王者荣耀相关任务思路 查看链接 （四）每天可以自动完成一些小任务，再也不用担心忘记了，真香！发挥脑洞，举一反三，写好以后就可以一劳永逸啦！等待你的发掘～',normalizedContent:'# xposed-edge-pro shell命令\n\n一、主要思路：通过xp模块xedgepro实现手机定时自动解锁、定时自动完成各种指定任务（签到打卡，模拟点击等，理论上只要权限够你能想到的操作都能完成）\n\n二、所需软件（模块）： 【mt管理器2】 、 【超级点击器】 、xposed edge pro（xp模块） 查看链接\n\n三、使用方法（步骤）：安装xposed edge pro模块勾选重启-打开xposed edge pro-保存的多重动作-添加-添加-【添加唤醒、解锁等需实现的各种操作指令】-右上角✔保存-返回-定时计划-添加-设置好日期时间-选择好刚保存的多重动作-勾选任务并保存。整体的使用步骤就这样，非常简单，自己稍微摸索一下就能搞定；具体的操作命令接着往下看～\n\n四、具体的操作命令如何实现？ （一）通过xposed edge pro的基础动作 适用于实现唤醒/锁屏、展开通知栏、截屏、开启/关闭wifi及数据、延时、打开/关闭应用、注入手势等等较简单的操作。\n\n\n\nedge pro的基础动作截取\n\n（二）通过shell命令 1.添加shell命令的方法：xposed edge pro-保存的多重动作-添加-添加-具体的shell命令-勾选以root运行-确定-右上角✔保存。注：应长按刚保存shell命令-执行来自我检查是否有效。\n\n\n\n添加shell命令并以root身份运行\n\n2.具体的shell命令如何写？（参考来源 查看链接 ） （1）模拟用户操作的shell命令 ⭕点击屏幕坐标：input tap x y ⭕长按屏幕250ms：input swipe x1 y1 x1 y1 250 ⭕划动屏幕250ms：input swipe x1 y1 x2 y2 250 ⭕输入文本（仅数字、英文）：input text 文本 ⭕输入文本（支持所有文本）：am broadcast -a adb_input_text --es msg 文本 👉注：由于原生命令不支持中文输入，所以input text 类只能支持输入数字英文字符。然而作为一名中国人🇨🇳，压根就避免不了需要输入中文字符的情况，所以这里给大家介绍一种曲线救国的办法。利用"adbkeyboard"输入法 查看链接 来进行中文的输入，通过广播的方式达到输入中文字符，具体命令：am broadcast -a adb_input_text --es msg 文本\n\n\n\n定时自启qq-切换adbkeyboard-发送-切回搜狗输入法-关闭qq\n\n✔获取屏幕坐标（x y）的方法： ①打开超级点击器-给它辅助权限-启动点击器-点＋号插入一个点击①-把点击①移到你想要获取屏幕坐标的位置-长按点击①下滑即可看到点击坐标（这是笨方法，但是很实用）\n\n\n\n超级点击器01中心点坐标\n\n②设置-更多设置-开发者选项-开启指针位置（状态栏显示）\n\n\n\n状态栏显示点击处坐标\n\n③shell命令执行（升级版方法②） 开启指针位置：settings get system pointer_location 1 关闭指针位置：settings get system pointer_location 0 👉实用举例： 通过获取屏幕坐标，执行shell命令，可以实现模拟点击、长按及滑动。各型号手机分辨率不同，一些具体的屏幕坐标就不放出来了，大家自己去弄。\n\n（2）启动软件界面的shell命令 ⭕am start -n 类 👉介绍：打开的是软件的activity界面，比如qq、微信、贴吧等等一些应用界面。 👉模板：am start -n 应用包名/抓取到的活动名 ✔获取包名/活动名方法：应用包名在应用信息里复制，活动名通过mt管理器-工具-activity记录抓取复制。\n\n\n\n贴吧应用包名、activity活动名\n\n👉实用举例： 打开贴吧一键签到界面：am start -n com.baidu.tieba/com.baidu.tieba.signall.signallforumactivity\n\n⭕am start “intent:intent值” 类 👉介绍：可打开软件较复杂的活动界面、桌面快捷方式等，比如指定超话签到界面、贴吧一键签到界面、指定公众号界面、小程序等等。 👉模板：am start “intent:#intent值” ✔抓取intent值的方法：打开活动界面-通过手势或者按键调出xposed edge pro应用菜单-活动-带参数提取应用活动，然后打开mt管理器的/data/user_de/0/com.jozein.xedgepro/prefs/collection目录-打开方式选文本编辑-复制最后一行的相关intent值。\n\n\n\n抓取intent\n\n👉实用举例： 打开“蔡徐坤”超话签到界面：am start "intent:#intent;action=android.intent.action.main;launchflags=0x10000000;component=com.sina.weibo/.page.superpageactivity;sourcebounds=93%20709%20237%20853;s.from=shortcut;s.containerid=10080817c0fee819b9c79696a382f9634dbd87;end"\n\n⭕am start -a android.intent.action.view -d ‘url shemes’类 👉介绍：部分常用软件界面‘url shemes’参数戳 查看链接 👉模板：am start -a android.intent.action.view -d ‘url shemes’ 👉实用举例： 打开蚂蚁森林：am start -a android.intent.action.view -d alipays://platformapi/startapp?appid=60000002 打开支付宝运动：am start -a android.intent.action.view -d alipays://platformapi/startapp?appid=20000869\n\n五、总结 （一）通过edge打开应用或者通过shell一步打开指定界面，配合shell模拟点击命令、延时命令等组合而成的多重动作就是简单的自动脚本。配合edge的定时计划，就能实现定时自动操作。 （二）抓到的shell参数不一定有效，自己执行多检查完善。am start -n 类、 “intent值” 类、 ‘url shemes’类哪个有效用哪个，都不行就尝试加上shell模拟点击进行组合。 （三）支付宝相关xp模块 查看链接 、王者荣耀相关任务思路 查看链接 （四）每天可以自动完成一些小任务，再也不用担心忘记了，真香！发挥脑洞，举一反三，写好以后就可以一劳永逸啦！等待你的发掘～',charsets:{cjk:!0},createdTime:1645264503e3,updateTime:"February 19, 2022 09:55",updateTimeStamp:1645264503e3,createTime:"February 19, 2022 09:55",createTimeStamp:1645264503e3,contributors:[]},{title:"全球各大免费电子图书馆汇集",frontmatter:{author:"xlc520",title:"全球各大免费电子图书馆汇集",description:"全球各大免费电子图书馆汇集",time:"2022-02-08T00:00:00.000Z",category:"daily",tags:"daily",article:!0,timeline:!0,icon:null,password:null},regularPath:"/daily/%E5%85%A8%E7%90%83%E5%90%84%E5%A4%A7%E5%85%8D%E8%B4%B9%E7%94%B5%E5%AD%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E6%B1%87%E9%9B%86.html",relativePath:"daily/全球各大免费电子图书馆汇集.md",key:"v-4178ed9a",path:"/daily/%E5%85%A8%E7%90%83%E5%90%84%E5%A4%A7%E5%85%8D%E8%B4%B9%E7%94%B5%E5%AD%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E6%B1%87%E9%9B%86/",readingTime:{minutes:6.19,words:1856},headersStr:null,content:'# 全球各大免费电子图书馆汇集\n\n【世界数字图书馆】\n\n官网：www.wdl.org/zh/\n\n世界数字图书馆由联合国教科文组织同32个公共团体合作建立，由全球规模最大的图书馆美国国会图书馆主导开发。\n\n世界数字图书馆(WDL)让世界各地的读者可以在同一个网站上以各种不同的方式发现、学习和欣赏世界各地的文化珍宝。这些珍贵文物包括，但不限于手稿、地图、珍本书籍、乐谱、录音、电影、印刷品、照片和建筑图纸。 也就是说世界数字图书馆馆藏包罗万象，从图书到各种档案都有。\n\n0.美国的国家学术出版社（National Academies Press）所有PDF版图书对所有读者免费开放下载 ：查看链接\n\n1.澳大利亚国立大学ANU电子出版库：查看链接\n\n2.阿德雷德大学电子文本收藏中心，包括古典文学，哲学，科学和医学著作：查看链接\n\n3.澳大利亚数字化人文门户(澳大利亚人文学界的数字化资源门户) 查看链接\n\n4.科廷大学技术文献库(科廷技术大学科研人员和研究生的科研成果)查看链接\n\n5.墨尔本大学电子出版物收藏网 查看链接\n\n6.昆士兰大学数字文库 查看链接\n\n7.SETIS悉尼大学学术电子文本及图像服务 查看链接\n\n8.新西兰数字文献收集网 查看链接\n\n9.古腾堡数字化图书馆 查看链接\n\n10.Infomotions 西方文学/哲学网 (包括自美国/英国的文学和西方哲学公开著作) 查看链接\n\n11.康奈尔大学Arxiv (收藏了物理,数学,非线性科学和计算机科学方面的数字化 "预印本" 出版物) 查看链接\n\n12.Bartleby.com (包含世界历史百科全书,以及哈佛经典著作,提供免费的电子文本) 查看链接\n\n13.Bibliomania (提供超过2000部免费电子文献，以及研究成果) 查看链接\n\n14.Cogprints(有各类心理学，神经科学，语言学，哲学，生物学，人类学和计算机科学电子文献, 部分区域需要注册) 查看链接\n\n15.印第安纳大学国际文献档案库(这是一个服务公众的全文数字图书馆，作者可以提交著作，并被连入参考文献) 查看链接\n\n16.DLESE地球系统教育数字图书馆( 涵盖了环境，地理，地质，海洋以及其他物理科学；空间科学与技术；教育方法和科学哲学内容) 查看链接\n\n17.Elfwood(拥有超过两万部文学和艺术作品，来自超过一千五百名幻想/科幻艺术家和作家) 查看链接\n\n18.Eserver.org(收藏了大量在线智慧文学和资源,由华盛顿大学创立)查看链接\n\n19.IPL互联网公共图书馆 (密歇根大学信息学院的学习和教学环境) 查看链接\n\n20.库尔特·斯塔博的在线图书馆(收藏了古代和现代的大量生物学著作，其中很多珍本, 可在线阅读)查看链接\n\n21.麻省理工学院的开放文献网站 查看链接\n\n22.美国国家科学院在线数据据库(超过3000部科学,工程和健康卫生方面的著作,可以在线阅读,这些文献代表了美国在这些领域的研究精华) 查看链接\n\n23.Ndltd.org (搜集了来自澳大利亚，加拿大，许多欧洲国家，香港，台湾和美国的论文)查看链接\n\n24.宾夕法尼亚大学网站 (有超过 16000 部在线电子书 ,值得一读) :查看链接\n\n25.牛津大学档案馆 (建于1976年,这里有用于研究和教学的大量高品质文献 资料公共区域可以免费在线检索目录，下载):查看链接\n\n26.弗吉尼亚大学电子文献中心 (超过10000 部可以公开或取的著作（以及超过 164000 幅图像）:查看链接\n\n27.Gallica.bnf.fr (法兰西国家图书馆资助的网站,法文):查看链接\n\n28.世界图书馆(世界图书馆，法语) 查看链接\n\n29.意大利电子书网站(包括小说,诗歌,古典文学，戏剧，传记，恐怖和幻想小说，新经济学等)查看链接\n\n30.日本文学著作( 格式包括 HTML , ZIP(下载)和日文电子书格式)查看链接\n\n31.今日美国开放图书计划 (一家报纸网站的独立部门，一些有名的小说家开放了他们的版权，供所有的访客阅)查看链接 ... unding-gutter_x.htm\n\n32.英语文学网站 (超过一千位学生为这个巨大的网站捐助成果，焦点是英语文学) 查看链接\n\n33.计算机程序设计电子书 (包括:Abap, Java, Linux, Php, Oracle & Vb.net 。 PDF 格式。注意，在下载之前，需先建立一个账户) 查看链接\n\n34.数学世界 (为学生，教育家，数学爱好者和研究者准备的全面地数学百科全书)查看链接\n\n35.在线医学百科全书 (超过1500主题的在线医学百科全书，包括康复，疾病，伤害，营养，手术，症状，试验)查看链接\n\n36.医生的免费电子书(免费使用的医学电子书) 查看链接\n\n37.奥地利文献 (超过12000 部奥地利文献,甚至包括明信片,可以在因特网上访问)查看链接\n\n38.GPO Access(美国政府文献):查看链接\n\n39.世界最大的社会科学文献网站(ICPSR) （Inter-university Consortium for Political and Social Research）:查看链接\n\n40.National Academy Press (美国国家科学院、国家工程院、医学协会等机构的论文/报告/PPT,内容几乎涵盖所有学科) 查看链接\n\n41.UNESCO (联合国教科文组织提供的文档,包含自然科学与社会科学,有多种语言,包括中文） 查看链接\n\n\n\n\n\n\n\n\n\n',normalizedContent:'# 全球各大免费电子图书馆汇集\n\n【世界数字图书馆】\n\n官网：www.wdl.org/zh/\n\n世界数字图书馆由联合国教科文组织同32个公共团体合作建立，由全球规模最大的图书馆美国国会图书馆主导开发。\n\n世界数字图书馆(wdl)让世界各地的读者可以在同一个网站上以各种不同的方式发现、学习和欣赏世界各地的文化珍宝。这些珍贵文物包括，但不限于手稿、地图、珍本书籍、乐谱、录音、电影、印刷品、照片和建筑图纸。 也就是说世界数字图书馆馆藏包罗万象，从图书到各种档案都有。\n\n0.美国的国家学术出版社（national academies press）所有pdf版图书对所有读者免费开放下载 ：查看链接\n\n1.澳大利亚国立大学anu电子出版库：查看链接\n\n2.阿德雷德大学电子文本收藏中心，包括古典文学，哲学，科学和医学著作：查看链接\n\n3.澳大利亚数字化人文门户(澳大利亚人文学界的数字化资源门户) 查看链接\n\n4.科廷大学技术文献库(科廷技术大学科研人员和研究生的科研成果)查看链接\n\n5.墨尔本大学电子出版物收藏网 查看链接\n\n6.昆士兰大学数字文库 查看链接\n\n7.setis悉尼大学学术电子文本及图像服务 查看链接\n\n8.新西兰数字文献收集网 查看链接\n\n9.古腾堡数字化图书馆 查看链接\n\n10.infomotions 西方文学/哲学网 (包括自美国/英国的文学和西方哲学公开著作) 查看链接\n\n11.康奈尔大学arxiv (收藏了物理,数学,非线性科学和计算机科学方面的数字化 "预印本" 出版物) 查看链接\n\n12.bartleby.com (包含世界历史百科全书,以及哈佛经典著作,提供免费的电子文本) 查看链接\n\n13.bibliomania (提供超过2000部免费电子文献，以及研究成果) 查看链接\n\n14.cogprints(有各类心理学，神经科学，语言学，哲学，生物学，人类学和计算机科学电子文献, 部分区域需要注册) 查看链接\n\n15.印第安纳大学国际文献档案库(这是一个服务公众的全文数字图书馆，作者可以提交著作，并被连入参考文献) 查看链接\n\n16.dlese地球系统教育数字图书馆( 涵盖了环境，地理，地质，海洋以及其他物理科学；空间科学与技术；教育方法和科学哲学内容) 查看链接\n\n17.elfwood(拥有超过两万部文学和艺术作品，来自超过一千五百名幻想/科幻艺术家和作家) 查看链接\n\n18.eserver.org(收藏了大量在线智慧文学和资源,由华盛顿大学创立)查看链接\n\n19.ipl互联网公共图书馆 (密歇根大学信息学院的学习和教学环境) 查看链接\n\n20.库尔特·斯塔博的在线图书馆(收藏了古代和现代的大量生物学著作，其中很多珍本, 可在线阅读)查看链接\n\n21.麻省理工学院的开放文献网站 查看链接\n\n22.美国国家科学院在线数据据库(超过3000部科学,工程和健康卫生方面的著作,可以在线阅读,这些文献代表了美国在这些领域的研究精华) 查看链接\n\n23.ndltd.org (搜集了来自澳大利亚，加拿大，许多欧洲国家，香港，台湾和美国的论文)查看链接\n\n24.宾夕法尼亚大学网站 (有超过 16000 部在线电子书 ,值得一读) :查看链接\n\n25.牛津大学档案馆 (建于1976年,这里有用于研究和教学的大量高品质文献 资料公共区域可以免费在线检索目录，下载):查看链接\n\n26.弗吉尼亚大学电子文献中心 (超过10000 部可以公开或取的著作（以及超过 164000 幅图像）:查看链接\n\n27.gallica.bnf.fr (法兰西国家图书馆资助的网站,法文):查看链接\n\n28.世界图书馆(世界图书馆，法语) 查看链接\n\n29.意大利电子书网站(包括小说,诗歌,古典文学，戏剧，传记，恐怖和幻想小说，新经济学等)查看链接\n\n30.日本文学著作( 格式包括 html , zip(下载)和日文电子书格式)查看链接\n\n31.今日美国开放图书计划 (一家报纸网站的独立部门，一些有名的小说家开放了他们的版权，供所有的访客阅)查看链接 ... unding-gutter_x.htm\n\n32.英语文学网站 (超过一千位学生为这个巨大的网站捐助成果，焦点是英语文学) 查看链接\n\n33.计算机程序设计电子书 (包括:abap, java, linux, php, oracle & vb.net 。 pdf 格式。注意，在下载之前，需先建立一个账户) 查看链接\n\n34.数学世界 (为学生，教育家，数学爱好者和研究者准备的全面地数学百科全书)查看链接\n\n35.在线医学百科全书 (超过1500主题的在线医学百科全书，包括康复，疾病，伤害，营养，手术，症状，试验)查看链接\n\n36.医生的免费电子书(免费使用的医学电子书) 查看链接\n\n37.奥地利文献 (超过12000 部奥地利文献,甚至包括明信片,可以在因特网上访问)查看链接\n\n38.gpo access(美国政府文献):查看链接\n\n39.世界最大的社会科学文献网站(icpsr) （inter-university consortium for political and social research）:查看链接\n\n40.national academy press (美国国家科学院、国家工程院、医学协会等机构的论文/报告/ppt,内容几乎涵盖所有学科) 查看链接\n\n41.unesco (联合国教科文组织提供的文档,包含自然科学与社会科学,有多种语言,包括中文） 查看链接\n\n\n\n\n\n\n\n\n\n',charsets:{cjk:!0},createdTime:1645264503e3,updateTime:"February 19, 2022 09:55",updateTimeStamp:1645264503e3,createTime:"February 19, 2022 09:55",createTimeStamp:1645264503e3,contributors:[]},{title:"关闭微信朋友圈广告和公众号推荐流",frontmatter:{author:"xlc520",title:"关闭微信朋友圈广告和公众号推荐流",description:"实用！教你一招“彻底”关闭微信朋友圈广告和公众号推荐流！",time:"2022-02-14T00:00:00.000Z",category:"daily",tags:"daily",article:!0,timeline:!0,icon:null,password:null},regularPath:"/daily/%E5%85%B3%E9%97%AD%E5%BE%AE%E4%BF%A1%E5%B9%BF%E5%91%8A.html",relativePath:"daily/关闭微信广告.md",key:"v-a8ed776c",path:"/daily/%E5%85%B3%E9%97%AD%E5%BE%AE%E4%BF%A1%E5%B9%BF%E5%91%8A/",headers:[{level:2,title:"1、",slug:"_1、",normalizedTitle:"1、",charIndex:88},{level:2,title:"2、",slug:"_2、",normalizedTitle:"2、",charIndex:133},{level:2,title:"3、",slug:"_3、",normalizedTitle:"3、",charIndex:194},{level:2,title:"4、",slug:"_4、",normalizedTitle:"4、",charIndex:350},{level:2,title:"5、",slug:"_5、",normalizedTitle:"5、",charIndex:383},{level:3,title:"广告-推荐",slug:"广告-推荐",normalizedTitle:"广告-推荐",charIndex:431},{level:3,title:"广告入口-关闭广告",slug:"广告入口-关闭广告",normalizedTitle:"广告入口-关闭广告",charIndex:478},{level:3,title:"推荐入口-关闭推荐流",slug:"推荐入口-关闭推荐流",normalizedTitle:"推荐入口-关闭推荐流",charIndex:528},{level:3,title:"",slug:"",normalizedTitle:"",charIndex:0}],readingTime:{minutes:1.52,words:456},headersStr:"1、 2、 3、 4、 5、 广告-推荐 广告入口-关闭广告 推荐入口-关闭推荐流 ",content:"# 关闭微信朋友圈广告和公众号推荐流\n\n在开始先说明一下，要使用下面介绍的调式功能，大家的手机需要有root权限，如没有的话，大家就看看就好，看看是如何操作和玩法的。\n\n\n# 1、\n\n准备工作：你的手机需root、下载安装创建快捷方式APP（酷安搜索就有）\n\n\n# 2、\n\n打开创建快捷方式APP之后，大家点击搜索框，直接搜微信，即可进入活动界面。\n\n\n\n微信快捷方式-搜索微信\n\n\n# 3、\n\n在活动界面直接搜“com.tencent.mm.plugin.brandservice.ui.timeline.BizTestUI”活动（记得点击右上角✔也显示未导出的活动）\n\n\n\ncom.tencent.mm.plugin.brandservice.ui.timeline.BizTestUI\n\n\n# 4、\n\n点击详情进入可以看到一个打开的入口。\n\n\n\n详情\n\n\n# 5、\n\n获取root权限后，我们点击打开即可跳转到微信的一个调试界面。\n\n调试窗口\n\n\n\n\n# 广告-推荐\n\n在这个页面，大家应该也可以看到很多的功能，选择广告入口和推荐入口。\n\n\n\n\n# 广告入口-关闭广告\n\n点击进来大家就可看到关于广告的一些功能。选择广告入口-关闭广告。\n\n\n\n\n# 推荐入口-关闭推荐流\n\n选择推荐入口-关闭推荐流。\n\n\n\n\n#\n\n点击之后微信将会重启跳一下，亲测朋友圈广告和公众号推荐流广告都消失了！",normalizedContent:"# 关闭微信朋友圈广告和公众号推荐流\n\n在开始先说明一下，要使用下面介绍的调式功能，大家的手机需要有root权限，如没有的话，大家就看看就好，看看是如何操作和玩法的。\n\n\n# 1、\n\n准备工作：你的手机需root、下载安装创建快捷方式app（酷安搜索就有）\n\n\n# 2、\n\n打开创建快捷方式app之后，大家点击搜索框，直接搜微信，即可进入活动界面。\n\n\n\n微信快捷方式-搜索微信\n\n\n# 3、\n\n在活动界面直接搜“com.tencent.mm.plugin.brandservice.ui.timeline.biztestui”活动（记得点击右上角✔也显示未导出的活动）\n\n\n\ncom.tencent.mm.plugin.brandservice.ui.timeline.biztestui\n\n\n# 4、\n\n点击详情进入可以看到一个打开的入口。\n\n\n\n详情\n\n\n# 5、\n\n获取root权限后，我们点击打开即可跳转到微信的一个调试界面。\n\n调试窗口\n\n\n\n\n# 广告-推荐\n\n在这个页面，大家应该也可以看到很多的功能，选择广告入口和推荐入口。\n\n\n\n\n# 广告入口-关闭广告\n\n点击进来大家就可看到关于广告的一些功能。选择广告入口-关闭广告。\n\n\n\n\n# 推荐入口-关闭推荐流\n\n选择推荐入口-关闭推荐流。\n\n\n\n\n#\n\n点击之后微信将会重启跳一下，亲测朋友圈广告和公众号推荐流广告都消失了！",charsets:{cjk:!0},createdTime:1645264503e3,updateTime:"February 19, 2022 09:55",updateTimeStamp:1645264503e3,createTime:"February 19, 2022 09:55",createTimeStamp:1645264503e3,contributors:[]},{title:"去除MIUI10秒的警告",frontmatter:{author:"xlc520",title:"去除MIUI10秒的警告",description:"去除MIUI10秒的警告",time:"2022-02-17T00:00:00.000Z",category:"daily",tags:"daily",article:!0,timeline:!0,icon:null,password:null},regularPath:"/daily/%E5%8E%BB%E9%99%A4MIUI10%E7%A7%92%E7%9A%84%E8%AD%A6%E5%91%8A.html",relativePath:"daily/去除MIUI10秒的警告.md",key:"v-e8dd7c92",path:"/daily/%E5%8E%BB%E9%99%A4MIUI10%E7%A7%92%E7%9A%84%E8%AD%A6%E5%91%8A/",readingTime:{minutes:.31,words:92},headersStr:null,content:"# 去除MIUI10秒的警告\n\n打开Thanox，找到手机管家，选择活动管理，搜索这个活动 com.miui.permcenter.privacymanager.SpecialPermissionInterceptActivity 把这个活动禁用，立即生效 以后无障碍/安装未知应用/勿扰等都不会弹出警告了\n\n\n\n",normalizedContent:"# 去除miui10秒的警告\n\n打开thanox，找到手机管家，选择活动管理，搜索这个活动 com.miui.permcenter.privacymanager.specialpermissioninterceptactivity 把这个活动禁用，立即生效 以后无障碍/安装未知应用/勿扰等都不会弹出警告了\n\n\n\n",charsets:{cjk:!0},createdTime:1645264503e3,updateTime:"February 19, 2022 09:55",updateTimeStamp:1645264503e3,createTime:"February 19, 2022 09:55",createTimeStamp:1645264503e3,contributors:[]},{title:"影视软件TV-APK",frontmatter:{author:"xlc520",title:"影视软件TV-APK",description:"影视软件TV-APK",time:"2022-03-18T00:00:00.000Z",category:"daily",tags:"daily",article:!0,timeline:!0,icon:null,password:null},regularPath:"/daily/%E5%BD%B1%E8%A7%86%E8%BD%AF%E4%BB%B6TV-APK.html",relativePath:"daily/影视软件TV-APK.md",key:"v-55d3817c",path:"/daily/%E5%BD%B1%E8%A7%86%E8%BD%AF%E4%BB%B6TV-APK/",headers:[{level:3,title:"米来影视",slug:"米来影视",normalizedTitle:"米来影视",charIndex:17}],readingTime:{minutes:.09,words:26},headersStr:"米来影视",content:"# 影视软件TV-APK\n\n\n# 米来影视\n\nhttps://milaitv.cc/\n\nhttps://kanhu.lanzoux.com/b00v9k8ed",normalizedContent:"# 影视软件tv-apk\n\n\n# 米来影视\n\nhttps://milaitv.cc/\n\nhttps://kanhu.lanzoux.com/b00v9k8ed",charsets:{cjk:!0},createdTime:1647616309e3,updateTime:"March 18, 2022 15:11",updateTimeStamp:1647616309e3,createTime:"March 18, 2022 15:11",createTimeStamp:1647616309e3,contributors:[]},{title:"GitHub-Auto-Commit",frontmatter:{icon:"page",title:"GitHub-Auto-Commit",author:"xlc520",time:"2022-01-10T00:00:00.000Z",category:"GitHub",tag:["GitHub"],sticky:!1,star:!0},regularPath:"/git/GitHub-Auto-Commit.html",relativePath:"git/GitHub-Auto-Commit.md",key:"v-023c7dbe",path:"/git/GitHub-Auto-Commit/",headers:[{level:3,title:"使用效果",slug:"使用效果",normalizedTitle:"使用效果",charIndex:88},{level:3,title:"功能特性",slug:"功能特性",normalizedTitle:"功能特性",charIndex:166},{level:3,title:"仓库地址:",slug:"仓库地址",normalizedTitle:"仓库地址:",charIndex:505},{level:3,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:571},{level:3,title:"插件入口",slug:"插件入口",normalizedTitle:"插件入口",charIndex:615},{level:3,title:"使用须知",slug:"使用须知",normalizedTitle:"使用须知",charIndex:790},{level:2,title:"Git相关",slug:"git相关",normalizedTitle:"git相关",charIndex:799},{level:2,title:"插件运行机制相关",slug:"插件运行机制相关",normalizedTitle:"插件运行机制相关",charIndex:1599},{level:3,title:"开始commit",slug:"开始commit",normalizedTitle:"开始commit",charIndex:2345},{level:3,title:"取消commit",slug:"取消commit",normalizedTitle:"取消commit",charIndex:302},{level:3,title:"插件声明",slug:"插件声明",normalizedTitle:"插件声明",charIndex:2693},{level:3,title:"头部注释插件",slug:"头部注释插件",normalizedTitle:"头部注释插件",charIndex:2772}],readingTime:{minutes:6.07,words:1822},headersStr:"使用效果 功能特性 仓库地址: 安装 插件入口 使用须知 Git相关 插件运行机制相关 开始commit 取消commit 插件声明 头部注释插件",content:"# GitHub-Auto-Commit\n\n> 一个用于Git自动commit的VSCode插件，它可以用来补充之前忘记提交commit，帮助你把首页的绿色格子填满。\n\n\n# 使用效果\n\n 1. 使用本插件来控制commit次数.\n 2. 如下图，你甚至可以规划一下commit次数，然后画出图形, 天空才是你的极限。\n\n\n\n\n# 功能特性\n\n 1.  选择多个日期范围：一次操作即可提交不同日期commit\n 2.  控制每个日期的commit次数: 可以用它来控制绿色格子的颜色，了解commit次数与颜色\n 3.  随机commit次数：随机commit次数让我们的提交看起来更加逼真。\n 4.  取消commit: 用于在commit期间取消并回滚到未提交版本\n 5.  超过100次提交，将强制考虑10秒是否要取消commit。\n 6.  插件成功运行后，将自动保存配置参数，无须每次都要一通操作。\n 7.  提交完善的日志: 清晰的了解插件的运行情况\n 8.  后台运行，不影响编码、浏览网页等。\n 9.  运行超快，如下图187次commit，20秒搞定。\n 10. 还有超多细节优化。\n\n\n# 仓库地址:\n\nhttps://github.com/OBKoro1/autoCommit\n\n# 自动commit演示：\n\n\n\n\n# 安装\n\n在 Vscode 扩展商店中搜索Auto Commit,点击安装即可。\n\n\n# 插件入口\n\n 1. 使用快捷键打开VSCode的命令面板。\n    * mac: command + p window: ctrl + p\n 2. 输入> auto commit将会看到如下图所示的命令选项，然后用鼠标点击或者回车都可启动插件。\n    * 实际上可以输入下方选项的任何一段文字，都可以匹配到插件命令选项。\n\n\n\nimage\n\n\n# 使用须知\n\n\n# Git相关\n\n需要有一个项目让插件提交commit，可以使用公开项目但更推荐创建一个私有项目\n\n# 创建私有项目来提交commit\n\n私有项目的优势:\n\n 1. 隐藏项目，别人看不到。\n    \n    PS： 公开的项目，如果后面要删除的话，会将commit也清除掉。\n\n 2. 相对应的你的提交记录别人也看不到，只能看到类似下面这句话。\n    \n    3 contributions in private repositories: 提交了三个commit到私有仓库。\n\n 3. 要打开私有仓库贡献可见 ，别人才能看到私有仓库的commit ,否则只能自己看到:\n\n\n\n# 确保能够正常提交\n\n 1. clone github项目到本地。\n\n 2. 确保能够正常提交。\n    \n    先进行一次提交确保能够正常提交，防止因为merge/release等问题导致提交失败。\n\n# 需要提交到master分支上\n\n如果提交到其他分支，提交记录不会显示在绿色的格子里面，合并分支之后 才会显示在绿色格子里面。\n\n# 提交以前和未来的commit\n\n在19年12月我创建了一个测试账号：koroTest，经过测试：\n\n 1. 成功提交17年的10月份的commit。\n 2. 现在2020年1月份，成功提交了2020年2月份的commit。\n 3. 具体能提交最早和最晚的日期没有测试过，有兴趣的可以试试~\n\n# commit次数与颜色\n\n我用这个工具测试一下了一个不同日期commit1~30次的颜色变化：\n\n一天1-7次commit颜色为#c6e48b 一天8-14次commit颜色为#7bc96f 一天15-20次commit颜色为#239a3b 一天21-63次commit颜色为#196127\n\n后面的没有再测试了，应该最深的颜色就是#196127。\n\n\n\ncommit颜色\n\n\n# 插件运行机制相关\n\n# 随机commit次数\n\n默认开启，默认为1~10随机，时间范围内默认每个日期随机commit几次，如果单个时间段设置了commit次数将使用设置的次数。\n\nPS： 最小值为2，即每个日期随机commi 1/2次。\n\n# 默认commit次数\n\n关闭随机commit次数，就会使用默认commit次数，如果单个时间段设置了commit次数将使用设置的次数。\n\n# 设置多个时间段、每个时间段可以设置不同的提交次数\n\n如下图：\n\n 1. 插件可以添加多次日期范围。\n 2. 每个日期范围都能控制具体的commit次数。\n 3. 每个日期范围和commit次数通过index来配对。\n 4. 同一个日期，后面出现的将会覆盖前面的：commit次数将会使用后面日期设置。\n 5. 对应的日期范围，不设置commit次数，那么将会使用随机commit次数/默认commit次数。\n\n如下图所示的配置(日期覆盖情况)，最后的结果是：\n\n12/01~12/06 使用默认commit次数，每天将会提交一次 12/07~12/08 每天提交三次 12/09~12/19 每天提交四次\n\n\n\nimage\n\n# commit次数的最大值\n\n所有计数器的最大值设定为30。\n\n# 默认修改项目根目录的commit.md文件\n\n插件将默认重写项目根目录的commit.md文件，如果文件不存在将会自动创建。\n\n插件提供了一个配置项让你可以修改commit信息将要存储的文件。\n\n# commit信息\n\n每次提交需要有一个commit信息，插件默认是autoCommit, 你可以在界面修改它。\n\n# 运行日志\n\n插件运行日志，是倒序展示的，如果提交量比较大，支持在运行期间清空日志。\n\n\n# 开始commit\n\n当配置好选项之后就可以点击开始commit按钮来提交commit。\n\n建议一开始为了避免误操作，先测试一下：commit量不要过大。\n\nPS： 请在一个网络状况良好的地方运行，否则会导致push失败。\n\n\n# 取消commit\n\n 1. 该按钮是为了避免用户误操作，用于在插件commit期间终止自动commit。\n 2. 一旦插件日志出现提交中...，就不可取消。\n 3. 如果commit次数超过100，插件将会强制等待10S让你考虑是否需要取消commit。\n\n# 保存配置和后台运行\n\n 1. 插件在运行成功一次之后，会自动保存你的配置参数，在你下次通过命令打开插件的时候，会自动初始配置参数。\n 2. 插件是可以挂在后台运行，不影响你编码、浏览网页之类的。\n\n\n# 插件声明\n\nautoCommit是本人兴之所至创建的个人项目，仅用于学习交流，禁止任何人商用以及用于非法之途。\n\n插件如构成侵权，请通过邮件联系我。\n\n\n# 头部注释插件\n\n本人还开源了另外一个VSCode插件:koroFileHeader，目前该插件已经有1000+ Star了，欢迎安装使用。\n\n 1. 它是用于生成文件头部注释，帮助我们养成良好的编码习惯，规范整个团队风格。\n 2. 插件支持所有主流语言,功能强大，灵活方便，文档齐全，食用简单！",normalizedContent:"# github-auto-commit\n\n> 一个用于git自动commit的vscode插件，它可以用来补充之前忘记提交commit，帮助你把首页的绿色格子填满。\n\n\n# 使用效果\n\n 1. 使用本插件来控制commit次数.\n 2. 如下图，你甚至可以规划一下commit次数，然后画出图形, 天空才是你的极限。\n\n\n\n\n# 功能特性\n\n 1.  选择多个日期范围：一次操作即可提交不同日期commit\n 2.  控制每个日期的commit次数: 可以用它来控制绿色格子的颜色，了解commit次数与颜色\n 3.  随机commit次数：随机commit次数让我们的提交看起来更加逼真。\n 4.  取消commit: 用于在commit期间取消并回滚到未提交版本\n 5.  超过100次提交，将强制考虑10秒是否要取消commit。\n 6.  插件成功运行后，将自动保存配置参数，无须每次都要一通操作。\n 7.  提交完善的日志: 清晰的了解插件的运行情况\n 8.  后台运行，不影响编码、浏览网页等。\n 9.  运行超快，如下图187次commit，20秒搞定。\n 10. 还有超多细节优化。\n\n\n# 仓库地址:\n\nhttps://github.com/obkoro1/autocommit\n\n# 自动commit演示：\n\n\n\n\n# 安装\n\n在 vscode 扩展商店中搜索auto commit,点击安装即可。\n\n\n# 插件入口\n\n 1. 使用快捷键打开vscode的命令面板。\n    * mac: command + p window: ctrl + p\n 2. 输入> auto commit将会看到如下图所示的命令选项，然后用鼠标点击或者回车都可启动插件。\n    * 实际上可以输入下方选项的任何一段文字，都可以匹配到插件命令选项。\n\n\n\nimage\n\n\n# 使用须知\n\n\n# git相关\n\n需要有一个项目让插件提交commit，可以使用公开项目但更推荐创建一个私有项目\n\n# 创建私有项目来提交commit\n\n私有项目的优势:\n\n 1. 隐藏项目，别人看不到。\n    \n    ps： 公开的项目，如果后面要删除的话，会将commit也清除掉。\n\n 2. 相对应的你的提交记录别人也看不到，只能看到类似下面这句话。\n    \n    3 contributions in private repositories: 提交了三个commit到私有仓库。\n\n 3. 要打开私有仓库贡献可见 ，别人才能看到私有仓库的commit ,否则只能自己看到:\n\n\n\n# 确保能够正常提交\n\n 1. clone github项目到本地。\n\n 2. 确保能够正常提交。\n    \n    先进行一次提交确保能够正常提交，防止因为merge/release等问题导致提交失败。\n\n# 需要提交到master分支上\n\n如果提交到其他分支，提交记录不会显示在绿色的格子里面，合并分支之后 才会显示在绿色格子里面。\n\n# 提交以前和未来的commit\n\n在19年12月我创建了一个测试账号：korotest，经过测试：\n\n 1. 成功提交17年的10月份的commit。\n 2. 现在2020年1月份，成功提交了2020年2月份的commit。\n 3. 具体能提交最早和最晚的日期没有测试过，有兴趣的可以试试~\n\n# commit次数与颜色\n\n我用这个工具测试一下了一个不同日期commit1~30次的颜色变化：\n\n一天1-7次commit颜色为#c6e48b 一天8-14次commit颜色为#7bc96f 一天15-20次commit颜色为#239a3b 一天21-63次commit颜色为#196127\n\n后面的没有再测试了，应该最深的颜色就是#196127。\n\n\n\ncommit颜色\n\n\n# 插件运行机制相关\n\n# 随机commit次数\n\n默认开启，默认为1~10随机，时间范围内默认每个日期随机commit几次，如果单个时间段设置了commit次数将使用设置的次数。\n\nps： 最小值为2，即每个日期随机commi 1/2次。\n\n# 默认commit次数\n\n关闭随机commit次数，就会使用默认commit次数，如果单个时间段设置了commit次数将使用设置的次数。\n\n# 设置多个时间段、每个时间段可以设置不同的提交次数\n\n如下图：\n\n 1. 插件可以添加多次日期范围。\n 2. 每个日期范围都能控制具体的commit次数。\n 3. 每个日期范围和commit次数通过index来配对。\n 4. 同一个日期，后面出现的将会覆盖前面的：commit次数将会使用后面日期设置。\n 5. 对应的日期范围，不设置commit次数，那么将会使用随机commit次数/默认commit次数。\n\n如下图所示的配置(日期覆盖情况)，最后的结果是：\n\n12/01~12/06 使用默认commit次数，每天将会提交一次 12/07~12/08 每天提交三次 12/09~12/19 每天提交四次\n\n\n\nimage\n\n# commit次数的最大值\n\n所有计数器的最大值设定为30。\n\n# 默认修改项目根目录的commit.md文件\n\n插件将默认重写项目根目录的commit.md文件，如果文件不存在将会自动创建。\n\n插件提供了一个配置项让你可以修改commit信息将要存储的文件。\n\n# commit信息\n\n每次提交需要有一个commit信息，插件默认是autocommit, 你可以在界面修改它。\n\n# 运行日志\n\n插件运行日志，是倒序展示的，如果提交量比较大，支持在运行期间清空日志。\n\n\n# 开始commit\n\n当配置好选项之后就可以点击开始commit按钮来提交commit。\n\n建议一开始为了避免误操作，先测试一下：commit量不要过大。\n\nps： 请在一个网络状况良好的地方运行，否则会导致push失败。\n\n\n# 取消commit\n\n 1. 该按钮是为了避免用户误操作，用于在插件commit期间终止自动commit。\n 2. 一旦插件日志出现提交中...，就不可取消。\n 3. 如果commit次数超过100，插件将会强制等待10s让你考虑是否需要取消commit。\n\n# 保存配置和后台运行\n\n 1. 插件在运行成功一次之后，会自动保存你的配置参数，在你下次通过命令打开插件的时候，会自动初始配置参数。\n 2. 插件是可以挂在后台运行，不影响你编码、浏览网页之类的。\n\n\n# 插件声明\n\nautocommit是本人兴之所至创建的个人项目，仅用于学习交流，禁止任何人商用以及用于非法之途。\n\n插件如构成侵权，请通过邮件联系我。\n\n\n# 头部注释插件\n\n本人还开源了另外一个vscode插件:korofileheader，目前该插件已经有1000+ star了，欢迎安装使用。\n\n 1. 它是用于生成文件头部注释，帮助我们养成良好的编码习惯，规范整个团队风格。\n 2. 插件支持所有主流语言,功能强大，灵活方便，文档齐全，食用简单！",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Git、GitHub、Gitee",frontmatter:{author:"xlc520",title:"Git、GitHub、Gitee",description:"Git、GitHub、Gitee使用",time:"2022-02-13T00:00:00.000Z",category:"Git",tags:"Git",article:!0,timeline:!0,icon:null,password:null},regularPath:"/git/Git%E3%80%81GitHub%E3%80%81Gitee.html",relativePath:"git/Git、GitHub、Gitee.md",key:"v-95a92a5e",path:"/git/Git%E3%80%81GitHub%E3%80%81Gitee/",headers:[{level:2,title:"一：Git介绍与Mac下如何生成ssh key",slug:"一-git介绍与mac下如何生成ssh-key",normalizedTitle:"一：git介绍与mac下如何生成ssh key",charIndex:23},{level:2,title:"二：常用命令",slug:"二-常用命令",normalizedTitle:"二：常用命令",charIndex:1372},{level:2,title:"三：提交规范",slug:"三-提交规范",normalizedTitle:"三：提交规范",charIndex:2713},{level:2,title:"四：CodeReview常用缩写",slug:"四-codereview常用缩写",normalizedTitle:"四：codereview常用缩写",charIndex:3063}],readingTime:{minutes:5.45,words:1636},headersStr:"一：Git介绍与Mac下如何生成ssh key 二：常用命令 三：提交规范 四：CodeReview常用缩写",content:'# Git、GitHub、Gitee\n\n\n# 一：Git介绍与Mac下如何生成ssh key\n\ngit是分布式的代码管理工具，远程的代码管理是基于ssh的，所以要使用远程的git则需要ssh的配置。简单的说，Git - 版本控制工具；Github是一个网站，提供给用户空间创建git仓储，保存用户的一些数据文档或者代码等；GitLab是基于Git的项目管理软件\n\n首先，使用代码管理工具把本地的代码上传到服务器时需要加密处理，加密传输的算法有很多种，git可使用rsa，rsa要解决的一个核心问题是，如何使用一对特定的数字，使其中一个数字可以用来加密，而另外一个数字可以用来解密。这两个数字就是你在使用git和github，gitlab的时候所遇到的public key也就是公钥以及private key私钥。\n\n其中，公钥就是那个用来加密的数字，这也就是为什么你在本机生成了公钥之后，要上传到github的原因。从github发回来的，用那公钥加密过的数据，可以用你本地的私钥来还原。如果你的key丢失了，不管是公钥还是私钥，丢失一个都不能用了，解决方法也很简单，删除原有的key，重新再生成一次，然后在github.com里再设置一次就行\n\n在个人电脑生成ssh密钥后，会同时生成一个公开密钥和一个私有密钥，默认情况下在用户主目录下的.ssh目录中，密钥为id_rsa，公开密钥为id_rsa.pub。\n\n密钥和公开密钥是共同使用的，协同开发中，一般会将公钥配置在服务器中，这样方便经常登录，也不需要输入密码，这是现在集群和各种云平台常用的登录方式，密钥在本地不被泄漏就非常安全。\n\n * 步骤1.检查是否已经存在SSH Key\n\n打开电脑终端，输入以下命令：\n\nls -al ~/.ssh\n\n会出现两种情况 ，如步骤2所示\n\n * 步骤2. 生成/设置SSH Key\n\n继续上一步可能出现的情况\n\n（1）情况一：终端出现文件id_rsa.pub 或 id_dsa.pub，则表示该电脑已经存在SSH Key，此时可继续输入命令：\n\npbcopy < ~/.ssh/id_rsa.pub\n\n这样你需要的SSH Key 就已经复制到粘贴板上了，然后进行步骤3\n\n（2）情况二：终端未出现id_rsa.pub 或 id_dsa.pub文件，表示该电脑还没有配置SSH Key，此时需要输入命令：\n\nssh-keygen -t rsa -C "your_email@example.com"\n\n默认会在相应路径下（/your_home_path）生成id_rsa和id_rsa.pub两个文件，此时终端会显示：\n\n\n\n连续回车即可，也可能会让你输入密码，密码就是你的开机密码\n\n此时再输入命令：ls -al ~/.ssh 就会出现id_rsa.pub 和 id_dsa.pub两个文件，然后重复情况一的步骤即输入以下命令再进行步骤3即可：\n\npbcopy < ~/.ssh/id_rsa.pub\n\n * 步骤3.将SSH Key添加到Github和Gitee中\n\n\n\n*图：Github*\n\n\n\n*图：Gitee*[\n\n](https://blog.csdn.net/wsdxsyb/article/details/81904472)\n\n\n# 二：常用命令\n\n 1. 拉取代码 git clone xxx.git\n\n 2. 创建分支 git branch dev 或者 git checkout -b dev 或者 git switch -c dev\n\n 3. 切换本地分支 git checkout dev 或者 git switch dev\n\n 4. 切换分支并关联远程分支 git checkout -b dev origin/dev 或者 git checkout --track origin/dev\n\n 5. 查看本地所有分支 git branch、查看远程所有分支 git branch -r\n\n 6. 删除本地分支 git branch -d dev、删除远程分支 git push origin -d dev\n\n 7. 将代码从工作区添加暂存区 git add .\n\n 8. 查看尚未暂存的更新 git diff\n\n 9. 添加提交信息 git commit -m \'xxxx\'（commit注释写错，执行 git commit --amend\n\n此时会进入默认vim编辑器，修改注释完毕后保存）\n\n 1.  推送代码到远程分支 git push origin dev、强制推送git push -f origin dev（常在git rebase后使用）\n\n 2.  拉取远程分支代码 git pull origin dev\n\n 3.  合并分支 git merge dev\n\n 4.  查看git状态 git status\n\n 5.  查看提交历史 git log\n\n 6.  查看命令历史 git reflog\n\n 7.  把本地未push的分叉提交历史整理成直线 git rebase origin/dev、回到rebase执行之前的状态 git rebase --abort\n\n 8.  回退版本 git reset --hard commit_id、回退上一个版本 git reset --soft HEAD^ 等于 git reset --soft HEAD~1\n\n 9.  修改分支名 git branch -m oldBranchName newBranchName、git push origin :oldBranchName、git push --set-upstream origin newBranchName\n\n 10. 查看git配置 git config --global --list、git config --global user.name\n\n 11. git config --global --add user.name newName（增）\n\n 12. git config --global --unset user.name（删）\n\n 13. git config --global user.name newName（改）\n\n 14. 配置Git用户名和邮箱\n\ngit config --global user.name "Your Name"\n\ngit config --global user.email "email@example.com"\n\n\n# 三：提交规范\n\nhttps://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular\n\n * feat 增加新功能\n\n * fix 修复问题/BUG\n\n * style 代码风格相关无影响运行结果的\n\n * perf 优化/性能提升\n\n * refactor 重构\n\n * revert 撤销修改\n\n * test 测试相关\n\n * docs 文档/注释\n\n * chore 依赖更新/脚手架配置修改等\n\n * workflow 工作流改进\n\n * ci 持续集成\n\n * types 类型定义文件更改\n\n * wip 开发中\n\n\n# 四：CodeReview常用缩写\n\nPR: Pull Request. 拉取请求，给其他项目提交代码\n\nLGTM: Looks Good To Me. 朕知道了 代码已经过 review，可以合并\n\nSGTM: Sounds Good To Me. 和上面那句意思差不多，也是已经通过了 review 的意思\n\nWIP: Work In Progress. 传说中提 PR 的最佳实践是，如果你有个改动很大的 PR，可以在写了一部分的情况下先提交，但是在标题里写上 WIP，以告诉项目维护者这个功能还未完成，方便维护者提前 review 部分提交的代码。\n\nPTAL: Please Take A Look. 你来瞅瞅？用来提示别人来看一下\n\nTBR: To Be Reviewed. 提示维护者进行 review\n\nTL;DR: Too Long; Didn\'t Read. 太长懒得看。也有很多文档在做简略描述之前会写这么一句\n\nTBD: To Be Done(or Defined/Discussed/Decided/Determined). 根据语境不同意义有所区别，但一般都是还没搞定的意思\n\n注意：dev代表分支名（可随便命名）',normalizedContent:'# git、github、gitee\n\n\n# 一：git介绍与mac下如何生成ssh key\n\ngit是分布式的代码管理工具，远程的代码管理是基于ssh的，所以要使用远程的git则需要ssh的配置。简单的说，git - 版本控制工具；github是一个网站，提供给用户空间创建git仓储，保存用户的一些数据文档或者代码等；gitlab是基于git的项目管理软件\n\n首先，使用代码管理工具把本地的代码上传到服务器时需要加密处理，加密传输的算法有很多种，git可使用rsa，rsa要解决的一个核心问题是，如何使用一对特定的数字，使其中一个数字可以用来加密，而另外一个数字可以用来解密。这两个数字就是你在使用git和github，gitlab的时候所遇到的public key也就是公钥以及private key私钥。\n\n其中，公钥就是那个用来加密的数字，这也就是为什么你在本机生成了公钥之后，要上传到github的原因。从github发回来的，用那公钥加密过的数据，可以用你本地的私钥来还原。如果你的key丢失了，不管是公钥还是私钥，丢失一个都不能用了，解决方法也很简单，删除原有的key，重新再生成一次，然后在github.com里再设置一次就行\n\n在个人电脑生成ssh密钥后，会同时生成一个公开密钥和一个私有密钥，默认情况下在用户主目录下的.ssh目录中，密钥为id_rsa，公开密钥为id_rsa.pub。\n\n密钥和公开密钥是共同使用的，协同开发中，一般会将公钥配置在服务器中，这样方便经常登录，也不需要输入密码，这是现在集群和各种云平台常用的登录方式，密钥在本地不被泄漏就非常安全。\n\n * 步骤1.检查是否已经存在ssh key\n\n打开电脑终端，输入以下命令：\n\nls -al ~/.ssh\n\n会出现两种情况 ，如步骤2所示\n\n * 步骤2. 生成/设置ssh key\n\n继续上一步可能出现的情况\n\n（1）情况一：终端出现文件id_rsa.pub 或 id_dsa.pub，则表示该电脑已经存在ssh key，此时可继续输入命令：\n\npbcopy < ~/.ssh/id_rsa.pub\n\n这样你需要的ssh key 就已经复制到粘贴板上了，然后进行步骤3\n\n（2）情况二：终端未出现id_rsa.pub 或 id_dsa.pub文件，表示该电脑还没有配置ssh key，此时需要输入命令：\n\nssh-keygen -t rsa -c "your_email@example.com"\n\n默认会在相应路径下（/your_home_path）生成id_rsa和id_rsa.pub两个文件，此时终端会显示：\n\n\n\n连续回车即可，也可能会让你输入密码，密码就是你的开机密码\n\n此时再输入命令：ls -al ~/.ssh 就会出现id_rsa.pub 和 id_dsa.pub两个文件，然后重复情况一的步骤即输入以下命令再进行步骤3即可：\n\npbcopy < ~/.ssh/id_rsa.pub\n\n * 步骤3.将ssh key添加到github和gitee中\n\n\n\n*图：github*\n\n\n\n*图：gitee*[\n\n](https://blog.csdn.net/wsdxsyb/article/details/81904472)\n\n\n# 二：常用命令\n\n 1. 拉取代码 git clone xxx.git\n\n 2. 创建分支 git branch dev 或者 git checkout -b dev 或者 git switch -c dev\n\n 3. 切换本地分支 git checkout dev 或者 git switch dev\n\n 4. 切换分支并关联远程分支 git checkout -b dev origin/dev 或者 git checkout --track origin/dev\n\n 5. 查看本地所有分支 git branch、查看远程所有分支 git branch -r\n\n 6. 删除本地分支 git branch -d dev、删除远程分支 git push origin -d dev\n\n 7. 将代码从工作区添加暂存区 git add .\n\n 8. 查看尚未暂存的更新 git diff\n\n 9. 添加提交信息 git commit -m \'xxxx\'（commit注释写错，执行 git commit --amend\n\n此时会进入默认vim编辑器，修改注释完毕后保存）\n\n 1.  推送代码到远程分支 git push origin dev、强制推送git push -f origin dev（常在git rebase后使用）\n\n 2.  拉取远程分支代码 git pull origin dev\n\n 3.  合并分支 git merge dev\n\n 4.  查看git状态 git status\n\n 5.  查看提交历史 git log\n\n 6.  查看命令历史 git reflog\n\n 7.  把本地未push的分叉提交历史整理成直线 git rebase origin/dev、回到rebase执行之前的状态 git rebase --abort\n\n 8.  回退版本 git reset --hard commit_id、回退上一个版本 git reset --soft head^ 等于 git reset --soft head~1\n\n 9.  修改分支名 git branch -m oldbranchname newbranchname、git push origin :oldbranchname、git push --set-upstream origin newbranchname\n\n 10. 查看git配置 git config --global --list、git config --global user.name\n\n 11. git config --global --add user.name newname（增）\n\n 12. git config --global --unset user.name（删）\n\n 13. git config --global user.name newname（改）\n\n 14. 配置git用户名和邮箱\n\ngit config --global user.name "your name"\n\ngit config --global user.email "email@example.com"\n\n\n# 三：提交规范\n\nhttps://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular\n\n * feat 增加新功能\n\n * fix 修复问题/bug\n\n * style 代码风格相关无影响运行结果的\n\n * perf 优化/性能提升\n\n * refactor 重构\n\n * revert 撤销修改\n\n * test 测试相关\n\n * docs 文档/注释\n\n * chore 依赖更新/脚手架配置修改等\n\n * workflow 工作流改进\n\n * ci 持续集成\n\n * types 类型定义文件更改\n\n * wip 开发中\n\n\n# 四：codereview常用缩写\n\npr: pull request. 拉取请求，给其他项目提交代码\n\nlgtm: looks good to me. 朕知道了 代码已经过 review，可以合并\n\nsgtm: sounds good to me. 和上面那句意思差不多，也是已经通过了 review 的意思\n\nwip: work in progress. 传说中提 pr 的最佳实践是，如果你有个改动很大的 pr，可以在写了一部分的情况下先提交，但是在标题里写上 wip，以告诉项目维护者这个功能还未完成，方便维护者提前 review 部分提交的代码。\n\nptal: please take a look. 你来瞅瞅？用来提示别人来看一下\n\ntbr: to be reviewed. 提示维护者进行 review\n\ntl;dr: too long; didn\'t read. 太长懒得看。也有很多文档在做简略描述之前会写这么一句\n\ntbd: to be done(or defined/discussed/decided/determined). 根据语境不同意义有所区别，但一般都是还没搞定的意思\n\n注意：dev代表分支名（可随便命名）',charsets:{cjk:!0},createdTime:1644760763e3,updateTime:"February 13, 2022 13:59",updateTimeStamp:1644760763e3,createTime:"February 13, 2022 13:59",createTimeStamp:1644760763e3,contributors:[]},{title:"Git",frontmatter:{author:"xlc520",title:"Git",description:"Git分类",time:"2022-01-13T00:00:00.000Z",category:"Git",tags:"Git",article:!0,timeline:!0,icon:null,password:null},regularPath:"/git/",relativePath:"git/README.md",key:"v-5c452ed0",path:"/git/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1644739094e3,updateTime:"February 13, 2022 12:45",updateTimeStamp:1644756312e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"commit规范 & emoji表情",frontmatter:{author:"xlc520",title:"commit规范 & emoji表情",description:"commit规范 & emoji表情",time:null,category:"Git",tags:"Git",article:!0,timeline:!0,icon:null,password:null},regularPath:"/git/git_emoji.html",relativePath:"git/git_emoji.md",key:"v-62e2ae05",path:"/git/git_emoji/",headers:[{level:2,title:"一、文字规范",slug:"一、文字规范",normalizedTitle:"一、文字规范",charIndex:29},{level:2,title:"二、emoji规范",slug:"二、emoji规范",normalizedTitle:"二、emoji规范",charIndex:485}],readingTime:{minutes:1.89,words:566},headersStr:"一、文字规范 二、emoji规范",content:"# Git丨commit规范 & emoji表情\n\n\n# 一、文字规范\n\ncommit一共由五部分组成，具体内容如下。\n\n（1）type 提交 commit 的类型，包括以下几种\n\nfeat: 新功能 fix: 修复问题 docs: 修改文档 style: 修改代码格式，不影响代码逻辑 refactor: 重构代码，理论上不影响现有功能 perf: 提升性能 test: 增加修改测试用例 chore: 修改工具相关（包括但不限于文档、代码生成等） deps: 升级依赖\n\n（2）scope 修改文件的范围（包括但不限于 doc, middleware, core, config, plugin）\n\n（3）subject 用一句话清楚的描述这次提交做了什么\n\n（4）body 补充 subject，适当增加原因、目的等相关因素，也可不写。\n\n（5）footer 当有非兼容修改(Breaking Change)时必须在这里描述清楚 关联相关 issue，如 Closes #1, Closes #2, #3 如果功能点有新增或修改的，还需要关联文档 doc\n\n\n# 二、emoji规范\n\n注：以下emoji表情在git提交时已经完全支持，哪怕下面的表情显示不完整也不用慌，可以直接在git-submit里使用。\n\nemoji\t\temoji代码\tcommit说明\n🎨 (调色板)\t:art:\t改进代码结构/代码格式\n⚡️ (闪电)\t:zap:\t提升性能\n🐎 (赛马)\t:racehorse:\t提升性能\n🔥 (火焰)\t:fire:\t移除代码或文件\n🐛 (bug)\t:bug:\t修复 bug\n🚑 (急救车)\t:ambulance:\t重要补丁\n✨ (火花)\t:sparkles:\t引入新功能\n📝 (铅笔)\t:pencil:\t撰写文档\n🚀 (火箭)\t:rocket:\t部署功能\n💄 (口红)\t:lipstick:\t更新 UI 和样式文件\n🎉 (庆祝)\t:tada:\t初次提交\n✅ (白色复选框)\t:white_check_mark:\t增加测试\n🔒 (锁)\t:lock:\t修复安全问题\n🍎 (苹果)\t:apple:\t修复 macOS 下的问题\n🐧 (企鹅)\t:penguin:\t修复 Linux 下的问题\n🏁 (旗帜)\t:checked_flag:\t修复 Windows 下的问题\n🔖 (书签)\t:bookmark:\t发行/版本标签\n🚨 (警车灯)\t:rotating_light:\t移除 linter 警告\n🚧 (施工)\t:construction:\t工作进行中\n💚 (绿心)\t:green_heart:\t修复 CI 构建问题\n⬇️ (下降箭头)\t:arrow_down:\t降级依赖\n⬆️ (上升箭头)\t:arrow_up:\t升级依赖\n👷 (工人)\t:construction_worker:\t添加 CI 构建系统\n📈 (上升趋势图)\t:chart_with_upwards_trend:\t添加分析或跟踪代码\n🔨 (锤子)\t:hammer:\t重大重构\n➖ (减号)\t:heavy_minus_sign:\t减少一个依赖\n🐳 (鲸鱼)\t:whale:\t相关工作\n➕ (加号)\t:heavy_plus_sign:\t增加一个依赖\n🔧 (扳手)\t:wrench:\t修改配置文件\n🌐 (地球)\t:globe_with_meridians:\t国际化与本地化\n✏️ (铅笔)\t:pencil2:\t修复 typo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n",normalizedContent:"# git丨commit规范 & emoji表情\n\n\n# 一、文字规范\n\ncommit一共由五部分组成，具体内容如下。\n\n（1）type 提交 commit 的类型，包括以下几种\n\nfeat: 新功能 fix: 修复问题 docs: 修改文档 style: 修改代码格式，不影响代码逻辑 refactor: 重构代码，理论上不影响现有功能 perf: 提升性能 test: 增加修改测试用例 chore: 修改工具相关（包括但不限于文档、代码生成等） deps: 升级依赖\n\n（2）scope 修改文件的范围（包括但不限于 doc, middleware, core, config, plugin）\n\n（3）subject 用一句话清楚的描述这次提交做了什么\n\n（4）body 补充 subject，适当增加原因、目的等相关因素，也可不写。\n\n（5）footer 当有非兼容修改(breaking change)时必须在这里描述清楚 关联相关 issue，如 closes #1, closes #2, #3 如果功能点有新增或修改的，还需要关联文档 doc\n\n\n# 二、emoji规范\n\n注：以下emoji表情在git提交时已经完全支持，哪怕下面的表情显示不完整也不用慌，可以直接在git-submit里使用。\n\nemoji\t\temoji代码\tcommit说明\n🎨 (调色板)\t:art:\t改进代码结构/代码格式\n⚡️ (闪电)\t:zap:\t提升性能\n🐎 (赛马)\t:racehorse:\t提升性能\n🔥 (火焰)\t:fire:\t移除代码或文件\n🐛 (bug)\t:bug:\t修复 bug\n🚑 (急救车)\t:ambulance:\t重要补丁\n✨ (火花)\t:sparkles:\t引入新功能\n📝 (铅笔)\t:pencil:\t撰写文档\n🚀 (火箭)\t:rocket:\t部署功能\n💄 (口红)\t:lipstick:\t更新 ui 和样式文件\n🎉 (庆祝)\t:tada:\t初次提交\n✅ (白色复选框)\t:white_check_mark:\t增加测试\n🔒 (锁)\t:lock:\t修复安全问题\n🍎 (苹果)\t:apple:\t修复 macos 下的问题\n🐧 (企鹅)\t:penguin:\t修复 linux 下的问题\n🏁 (旗帜)\t:checked_flag:\t修复 windows 下的问题\n🔖 (书签)\t:bookmark:\t发行/版本标签\n🚨 (警车灯)\t:rotating_light:\t移除 linter 警告\n🚧 (施工)\t:construction:\t工作进行中\n💚 (绿心)\t:green_heart:\t修复 ci 构建问题\n⬇️ (下降箭头)\t:arrow_down:\t降级依赖\n⬆️ (上升箭头)\t:arrow_up:\t升级依赖\n👷 (工人)\t:construction_worker:\t添加 ci 构建系统\n📈 (上升趋势图)\t:chart_with_upwards_trend:\t添加分析或跟踪代码\n🔨 (锤子)\t:hammer:\t重大重构\n➖ (减号)\t:heavy_minus_sign:\t减少一个依赖\n🐳 (鲸鱼)\t:whale:\t相关工作\n➕ (加号)\t:heavy_plus_sign:\t增加一个依赖\n🔧 (扳手)\t:wrench:\t修改配置文件\n🌐 (地球)\t:globe_with_meridians:\t国际化与本地化\n✏️ (铅笔)\t:pencil2:\t修复 typo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 12:45",updateTimeStamp:1644756312e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Centos7 Minimal 安装后初始化配置",frontmatter:{author:"xlc520",title:"Centos7 Minimal 安装后初始化配置",description:"Centos7 Minimal 安装后初始化配置",time:null,category:"Linux",tags:"Linux",article:!0,timeline:!0,icon:null,password:null},regularPath:"/linux/Centos7Minimal.html",relativePath:"linux/Centos7Minimal.md",key:"v-af546862",path:"/linux/Centos7Minimal/",headers:[{level:2,title:"1:更新yum",slug:"_1-更新yum",normalizedTitle:"1:更新yum",charIndex:33},{level:2,title:"2: 安装基础命令",slug:"_2-安装基础命令",normalizedTitle:"2: 安装基础命令",charIndex:58},{level:2,title:"3: 设置IP",slug:"_3-设置ip",normalizedTitle:"3: 设置ip",charIndex:241},{level:3,title:"3.1 分配随机IP",slug:"_3-1-分配随机ip",normalizedTitle:"3.1 分配随机ip",charIndex:283},{level:3,title:"3.2: 设置静态IP",slug:"_3-2-设置静态ip",normalizedTitle:"3.2: 设置静态ip",charIndex:448},{level:3,title:"3:永久关闭Selinux",slug:"_3-永久关闭selinux",normalizedTitle:"3:永久关闭selinux",charIndex:513}],readingTime:{minutes:.6,words:180},headersStr:"1:更新yum 2: 安装基础命令 3: 设置IP 3.1 分配随机IP 3.2: 设置静态IP 3:永久关闭Selinux",content:"# Centos7 Minimal 安装后初始化配置\n\n\n\n\n# 1:更新yum\n\nyum upgrade\n\n\n# 2: 安装基础命令\n\nyum -y install vim* lrzsz  gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel\nyum -y install telnet net-tools\n\n安装ifconfig\nyum provides ifconfig\n\n\n1\n2\n3\n4\n5\n\n\n\n# 3: 设置IP\n\nip addr\n\n\n\n暂时未分配IP, 所以进行如下修改\n\n\n# 3.1 分配随机IP\n\n分配静态IP请看3.2\n\ncd /etc/sysconfig/network-scripts\nvim ifcfg-ens192\n\n\n1\n2\n\n\n\n\n将ONBOOT=no修改为ONBOOT=yes保存退出 重启网络服务\n\nservice network restart\n\n再次输入\n\nip addr\n\n\n# 3.2: 设置静态IP\n\n\n\n设置完,重启网络 service network restart 再次输入 ip addr\n\n\n# 3:永久关闭Selinux\n\nvim /etc/sysconfig/selinux\n\nSELINUX=enforcing 改为 SELINUX=disabled 重启服务reboot",normalizedContent:"# centos7 minimal 安装后初始化配置\n\n\n\n\n# 1:更新yum\n\nyum upgrade\n\n\n# 2: 安装基础命令\n\nyum -y install vim* lrzsz  gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel\nyum -y install telnet net-tools\n\n安装ifconfig\nyum provides ifconfig\n\n\n1\n2\n3\n4\n5\n\n\n\n# 3: 设置ip\n\nip addr\n\n\n\n暂时未分配ip, 所以进行如下修改\n\n\n# 3.1 分配随机ip\n\n分配静态ip请看3.2\n\ncd /etc/sysconfig/network-scripts\nvim ifcfg-ens192\n\n\n1\n2\n\n\n\n\n将onboot=no修改为onboot=yes保存退出 重启网络服务\n\nservice network restart\n\n再次输入\n\nip addr\n\n\n# 3.2: 设置静态ip\n\n\n\n设置完,重启网络 service network restart 再次输入 ip addr\n\n\n# 3:永久关闭selinux\n\nvim /etc/sysconfig/selinux\n\nselinux=enforcing 改为 selinux=disabled 重启服务reboot",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 12:45",updateTimeStamp:1644756312e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Euserv",frontmatter:{icon:"page",title:"Euserv",author:"xlc520",time:"2022-01-10T00:00:00.000Z",category:"Euserv",tag:["Euserv"],sticky:!1,star:!0},regularPath:"/linux/Euserv.html",relativePath:"linux/Euserv.md",key:"v-a3b101a2",path:"/linux/Euserv/",headers:[{level:2,title:"一、EUserv免费VPS申请",slug:"一、euserv免费vps申请",normalizedTitle:"一、euserv免费vps申请",charIndex:462},{level:2,title:"二、EUserv免费VPS管理",slug:"二、euserv免费vps管理",normalizedTitle:"二、euserv免费vps管理",charIndex:778},{level:2,title:"三、EUserv免费VPS连接",slug:"三、euserv免费vps连接",normalizedTitle:"三、euserv免费vps连接",charIndex:966},{level:2,title:"四、纯IPv6的VPS搭建网站",slug:"四、纯ipv6的vps搭建网站",normalizedTitle:"四、纯ipv6的vps搭建网站",charIndex:2090},{level:3,title:"4.1 搭建Web环境",slug:"_4-1-搭建web环境",normalizedTitle:"4.1 搭建web环境",charIndex:2110},{level:3,title:"4.2 IPv6 DNS解析",slug:"_4-2-ipv6-dns解析",normalizedTitle:"4.2 ipv6 dns解析",charIndex:2943},{level:3,title:"4.3 兼顾IPv4用户访问",slug:"_4-3-兼顾ipv4用户访问",normalizedTitle:"4.3 兼顾ipv4用户访问",charIndex:3006},{level:2,title:"五、总结",slug:"五、总结",normalizedTitle:"五、总结",charIndex:3348},{level:2,title:"六、用腾讯云函数给EUserv德国免费VPS自动续期",slug:"六、用腾讯云函数给euserv德国免费vps自动续期",normalizedTitle:"六、用腾讯云函数给euserv德国免费vps自动续期",charIndex:3538},{level:3,title:"1. 打开腾讯云函数SFC",slug:"_1-打开腾讯云函数sfc",normalizedTitle:"1. 打开腾讯云函数sfc",charIndex:3689},{level:3,title:"2. 新建BeautifulSoup层",slug:"_2-新建beautifulsoup层",normalizedTitle:"2. 新建beautifulsoup层",charIndex:3773},{level:3,title:"3. 新建腾讯云函数EUserv_extend",slug:"_3-新建腾讯云函数euserv-extend",normalizedTitle:"3. 新建腾讯云函数euserv_extend",charIndex:3911},{level:3,title:"4. 绑定层 BeautifulSoup",slug:"_4-绑定层-beautifulsoup",normalizedTitle:"4. 绑定层 beautifulsoup",charIndex:4591},{level:3,title:"5. 测试并创建时间触发",slug:"_5-测试并创建时间触发",normalizedTitle:"5. 测试并创建时间触发",charIndex:4664},{level:3,title:"6. 查看运行日志",slug:"_6-查看运行日志",normalizedTitle:"6. 查看运行日志",charIndex:4805},{level:3,title:"7. 总结",slug:"_7-总结",normalizedTitle:"7. 总结",charIndex:6330}],readingTime:{minutes:11.07,words:3320},headersStr:"一、EUserv免费VPS申请 二、EUserv免费VPS管理 三、EUserv免费VPS连接 四、纯IPv6的VPS搭建网站 4.1 搭建Web环境 4.2 IPv6 DNS解析 4.3 兼顾IPv4用户访问 五、总结 六、用腾讯云函数给EUserv德国免费VPS自动续期 1. 打开腾讯云函数SFC 2. 新建BeautifulSoup层 3. 新建腾讯云函数EUserv_extend 4. 绑定层 BeautifulSoup 5. 测试并创建时间触发 6. 查看运行日志 7. 总结",content:'# Euserv\n\nEUserv是一家德国主机商，提供VPS主机、服务器等，目前该商家提供免费ipv6主机服务器，配置信息是CPU：1 Core、内存：1 GB、硬盘：10 GB HDD、带宽：1 Gbit，提供一个IPv6地址，想要IPv4地址那就付费了。虽然免费VPS主机看起来配置很好，但是用起来非常地卡。\n\n申请EUserv免费VPS主机的过程并不复杂，也不需要什么Paypal、信用卡之类的验证，但是EUserv免费VPS主机申请要人工审核，一般来说48小时内会收到回复。当然，也有申请EUserv免费VPS主机失败的，或者是EUserv免费VPS主机被删号的。\n\n\n\n更多的免费VPS主机，这里还有：\n\n 1. Oracle甲骨文免费云主机申请使用-Oracle免费VPS测评和VPS重置密钥登录\n 2. AWS免费VPS主机申请使用-Amazon EC2韩国日本香港机房VPS主机评测\n 3. 英特尔Intel DevCloud免费云服务器和AppOnFly免费试用Windows Server服务器\n\n\n# 一、EUserv免费VPS申请\n\n网站：\n\n 1. http://www.euserv.de\n 2. https://www.euserv.com/en/\n\n进入网站后，可以将网站的语言切换为英文，或者是直接用浏览器翻译成中文。找到导航栏的免费VPS主机申请链接。\n\n\n\n确定申请。\n\n\n\n可以看到EUserv免费VPS是免费一个月的，不过可以免费续期。\n\n\n\n在页面最下方点击结算。\n\n\n\n此时，注册一个新账号。\n\n\n\n填写你的注册信息。\n\n\n\n完成注册。\n\n\n\n再次登录到EUserv后台，会提示让你补充你的详细信息，主要是街道地址、编号、手机号码等，填写参考下图：\n\n\n\n完成注册并申请VPS主机，等待审核开通。\n\n\n\n\n# 二、EUserv免费VPS管理\n\nEUserv免费VPS开通后，你就可以点击进入到VPS主机控制面板了。\n\n\n\n在EUserv免费VPS控制面板中，主要有查看VPS信息、重装系统以及IPv6地址等功能。\n\n\n\n这是EUserv免费VPS重装系统页面。\n\n\n\n这是EUserv免费VPS查看信息页面，重装系统成功后，你就可以看到root的密码了，还有IPv6地址。\n\n\n\n\n# 三、EUserv免费VPS连接\n\nEUserv免费VPS只提供纯IPv6地址，所以连接管理EUserv免费VPS就是一个难题了。我们可以利用IPv6隧道来让本地的Windows系统支持访问IPv6网站。\n\nWin+R 打开 CMD 或 Windows PowerShell（管理员），输入命令：\n\n// 设置 Teredo 服务器，默认为：win10.ipv6.microsoft.com \n\nnetsh interface teredo set state enterpriseclient server=default \n\n// 测试 IPv6 连接 \n\nping -6 ipv6.test-ipv6.com \n\nping -6 [2001:470:1:18::125] \n\n// 重置 IPv6 配置 \n\nnetsh interface ipv6 reset \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n**重启系统。**通过命令ipconfig /all 查看当前网络信息，看到 Teredo Tunneling Pseudo-Interface 有以 2001 开头的 IPv6 地址即可。\n\n启动 IE 浏览器，访问 http://test-ipv6.com 或 http://ipv6.test-ipv6.com，如果选项卡 “测试项目” 下面的 “不使用域名的 IPv6 测试” 显示成功，则隧道建立成功。\n\n\n\n如果经过上面操作后仍无法启用 IPv6，可能是 Teredo 服务器无法正常连接，也可能是 Windows 自身配置问题，可尝试以下两种方法：\n\n// 第一种：修改 Teredo 服务器为 teredo.remlab.net \n\nnetsh interface teredo set state server=teredo.remlab.net \n\n// 第二种：先卸载当前 Teredo 适配器再重新启用 \n\nnetsh interface Teredo set state disable \n\nnetsh interface Teredo set state type=default \n\nping -6 ipv6.test-ipv6.com \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n现在你就可以开始使用客户端连接你的EUserv免费VPS了。\n\n\n\n详细的操作方法请参考：Windows 10系统利用IPv6隧道开启IPv6访问。使用浏览器访问IPv6地址，类似于：http://[2a01:4f8:191:48c:2018:2019::ed]，如下图：\n\n\n\n\n# 四、纯IPv6的VPS搭建网站\n\n\n# 4.1 搭建Web环境\n\n纯IPv6的VPS安装VPS主机面板基本上是没有什么问题，例如LNMP、Oneinstack，经过挖站否的测试都正常。可能有一些面板会出现一些莫名其妙的问题，更多的面板参考：服务器控制面板榜单。\n\n宝塔面板后台默认的是不支持IPv6的，我们需要手动开启：\n\n\\#让宝塔面板监听IPv6\n\necho “**True**” > /www/server/panel/data/ipv6.pl\n\n\\#如果发现端口无法使用，也可以直接修改端口\n\necho “8888” > /www/server/panel/data/port.pl\n\n\\#重启面板：\n\nbt restart\n\n\\#宝塔面板在面板设置里勾选了监听ipv6，正常情况下ipv4应该也是可以使用的，部分服务器出现问题的话会导致ipv4无法登陆。使用以下命令\n\nrm -f /www/server/panel/data/ipv6.pl && /etc/init.d/bt restart\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n如果是Oneinstack或者LNMP一键安装包，搭建网站还需要修改一下Nginx的配置，让Nginx同时监听IPv4和IPv6的请求，示例如下：\n\n listen 80;\n\n​    listen 443 ssl http2;\n\n​    listen [::]:443 ssl http2;\n\n​    listen [::]:80;\n\n​    server_name www.wzfou.com;\n\n​    index index.php index.html index.htm default.php default.htm default.html;\n\n​    root /www/wwwroot/www.wzfou.com;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 4.2 IPv6 DNS解析\n\n对于IPv6地址，DNS解析选择AAAA记录类型记录，记录值为IPv6地址即可。\n\n\n\n\n# 4.3 兼顾IPv4用户访问\n\n对于纯IPv6的网站，为了可以让IPv4的用户访问，我们可以接入到Cloudflare免费CDN网络，如果不想修改NS服务器为Cloudflare，可以使用Cloudflare Partner平台，例如：Cloudflare Partner接入管理Cloudflare CDN。\n\n接入了Cloudflare后，你就可以先设置AAAA记录了。\n\n\n\n接着在Cloudflare Partner接入平台会得到CNAME记录，这时你就可以到你的域名DNS管理处修改CNAME记录了。\n\n\n\n成功将纯IPv6的VPS主机接入到了Cloudflare的CDN网络后，不管用户是不是支持IPv6访问都可以访问你的网站了，与普通的网站没有什么 区别。\n\n\n\n\n# 五、总结\n\nEUserv免费VPS主机官网打开速度很慢，需要一定耐心。实际测试EUserv免费VPS主机的性能非常地差，见：分享euserv提供的免费ipv6小鸡，至于如何在IPv6上的VPS主机跑“QQ”可以参考：纯IPv6的VPS安装应用。\n\n关于给 EUserv免费VPS主机自动续期的方法，请参考：https://bawodu.com/euserv-renew/\n\n\n# 六、用腾讯云函数给EUserv德国免费VPS自动续期\n\n使用腾讯云函数 SCF自动续期EUserv免费IPv6 VPS脚本见 https://github.com/o0oo0ooo0/EUserv_extend\n\n目的：自动获取账号内所有的VPS项目，并检测是否需要续期，需要续期会自动续期。\n\n\n# 1. 打开腾讯云函数SFC\n\n打开 https://console.cloud.tencent.com/scf/ 登录腾讯云，初次使用云函数SCF要授权。\n\n\n\n\n# 2. 新建BeautifulSoup层\n\n新建层 BeautifulSoup ，将 BeautifulSoup.zip 导入 ，添加运行环境 Python 3.6 。注意层的位置选择香港等海外地区，因为我们要续费的VPS在德国。\n\n\n\n建好层后如下，后面用的上。\n\n\n\n\n# 3. 新建腾讯云函数EUserv_extend\n\n运行环境选择 Python 3.6，创建方式选择 空白函数，内存选择 64M，执行超时时间建议为 300 s（网站在国外访问比较慢，建议部署在非大陆区域，例如HK、SG等，需要和上面创建层的位置是一样的。），将修改后的 main.py 粘贴进去。\n\n\n\n选择自定义创建，按下图配置\n\n\n\n复制https://github.com/o0oo0ooo0/EUserv_extend库中的main.py文件。\n\n\n\n复制粘贴到上图index.py文本，然后粘贴到刚才打开的腾讯云函数服务编辑框中，修改其中的用户名，密码。\n\n\n\nUSERNAME: 你的EUserv账户邮箱或Customer ID\n\nUSERNAME = ‘user@gmail.com’ USERNAME = ‘user1@gmail.com user2@gmail.com’ # 多个账号写法\n\nPASSWORD: 账户的密码\n\nPASSWORD = ‘password’ PASSWORD = ‘password1 password2’ # 多个账号写法\n\n设置通知提醒（可选操作）\n\n我已Server酱的提醒为例，打开https://sct.ftqq.com后微信扫码获取sentkey， 然后填写在上面函数代码Server酱的key处。如果您不需要通知也可以不设置提醒。这步不用设置。\n\nSCKEY = \'XX\'\n\n\n1\n\n\n环境配置\n\n设置64M内存就够用了，300秒延时。\n\n\n\n其他默认就可，然后点完成。完成云函数配置。\n\n\n\n\n# 4. 绑定层 BeautifulSoup\n\n在 EUserv_extend⇨函数管理⇨层管理 里绑定层 BeautifulSoup。\n\n\n\n\n# 5. 测试并创建时间触发\n\n点击下图的测试，或会提示config等不存在，可以忽略。\n\n\n\n测试没错误，就点EUserv_extend⇨触发管理⇨创建触发器触发周期⇨自定义触发周期。填入0 0 8 */7 * * *\n\n\n\n每 7 天的 8 点执行，可修改成你想要的时间。\n\n\n# 6. 查看运行日志\n\n日志提示有2台VPS，说明以上成功设置了腾讯云函数SCF续期脚本。\n\nSTART RequestId:ff1a66b6-27b6-4ec3-9e87-******************************正在续费第 1 个账号Starting new HTTPS connection (1): support.euserv.com:443https://support.euserv.com:443 "GET /index.iphp HTTP/1.1" 302 3218https://support.euserv.com:443 "GET /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071628 HTTP/1.1" 200 3218https://support.euserv.com:443 "GET /pic/logo_small.png HTTP/1.1" 200 78https://support.euserv.com:443 "POST /index.iphp HTTP/1.1" 200 12524https://support.euserv.com:443 "GET /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071 HTTP/1.1" 200 12562检测到第 1 个账号有 2 台VPS，正在尝试续期ServerID: 388889 does not need to be renewedServerID: 399991 does not need to be renewedChecking.......Resetting dropped connection: support.euserv.comhttps://support.euserv.com:443 "GET /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071 HTTP/1.1" 302 12562https://support.euserv.com:443 "GET /index.iphp HTTP/1.1" 302 3214https://support.euserv.com:443 "GET /index.iphp?sess_id=64cddbf54472cb28e449a1058fe88e3b1626261591628911 HTTP/1.1" 200 3214ALL Work Done! EnjoyStarting new HTTPS connection (1): sc.ftqq.com:443https://sc.ftqq.com:443 "POST /SCT63352TEcQdROD2yeMxg4iTf.send HTTP/1.1" 200 107Server酱 推送成功******************************Response RequestId:ff1a66b6-27b6-4ec3-9e8da57 RetMsg:nullEND RequestId:ff1a66b6-27b6-4ec3-9e87-0494da57Report RequestId:ff1a66b6-27b6-4ec3-9e87-0ea14494da57 Duration:39826ms Memory:64MB MemUsage:20.109375MB\n\n\n1\n\n\n\n# 7. 总结\n\n至此，用腾讯云函数给EUserv德国免费VPS自动续期设置完毕。这里是利用免费腾讯云函数SCF的Python环境，定时运行续费代码，从而完成登录Euserv网站，判断是否需要续期，若需要，即执行续期动作。如果您自己有可用的VPS，甚至在Euserv免费VPS自身上定时运行corn 的续期脚本也是可用的。',normalizedContent:'# euserv\n\neuserv是一家德国主机商，提供vps主机、服务器等，目前该商家提供免费ipv6主机服务器，配置信息是cpu：1 core、内存：1 gb、硬盘：10 gb hdd、带宽：1 gbit，提供一个ipv6地址，想要ipv4地址那就付费了。虽然免费vps主机看起来配置很好，但是用起来非常地卡。\n\n申请euserv免费vps主机的过程并不复杂，也不需要什么paypal、信用卡之类的验证，但是euserv免费vps主机申请要人工审核，一般来说48小时内会收到回复。当然，也有申请euserv免费vps主机失败的，或者是euserv免费vps主机被删号的。\n\n\n\n更多的免费vps主机，这里还有：\n\n 1. oracle甲骨文免费云主机申请使用-oracle免费vps测评和vps重置密钥登录\n 2. aws免费vps主机申请使用-amazon ec2韩国日本香港机房vps主机评测\n 3. 英特尔intel devcloud免费云服务器和apponfly免费试用windows server服务器\n\n\n# 一、euserv免费vps申请\n\n网站：\n\n 1. http://www.euserv.de\n 2. https://www.euserv.com/en/\n\n进入网站后，可以将网站的语言切换为英文，或者是直接用浏览器翻译成中文。找到导航栏的免费vps主机申请链接。\n\n\n\n确定申请。\n\n\n\n可以看到euserv免费vps是免费一个月的，不过可以免费续期。\n\n\n\n在页面最下方点击结算。\n\n\n\n此时，注册一个新账号。\n\n\n\n填写你的注册信息。\n\n\n\n完成注册。\n\n\n\n再次登录到euserv后台，会提示让你补充你的详细信息，主要是街道地址、编号、手机号码等，填写参考下图：\n\n\n\n完成注册并申请vps主机，等待审核开通。\n\n\n\n\n# 二、euserv免费vps管理\n\neuserv免费vps开通后，你就可以点击进入到vps主机控制面板了。\n\n\n\n在euserv免费vps控制面板中，主要有查看vps信息、重装系统以及ipv6地址等功能。\n\n\n\n这是euserv免费vps重装系统页面。\n\n\n\n这是euserv免费vps查看信息页面，重装系统成功后，你就可以看到root的密码了，还有ipv6地址。\n\n\n\n\n# 三、euserv免费vps连接\n\neuserv免费vps只提供纯ipv6地址，所以连接管理euserv免费vps就是一个难题了。我们可以利用ipv6隧道来让本地的windows系统支持访问ipv6网站。\n\nwin+r 打开 cmd 或 windows powershell（管理员），输入命令：\n\n// 设置 teredo 服务器，默认为：win10.ipv6.microsoft.com \n\nnetsh interface teredo set state enterpriseclient server=default \n\n// 测试 ipv6 连接 \n\nping -6 ipv6.test-ipv6.com \n\nping -6 [2001:470:1:18::125] \n\n// 重置 ipv6 配置 \n\nnetsh interface ipv6 reset \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n**重启系统。**通过命令ipconfig /all 查看当前网络信息，看到 teredo tunneling pseudo-interface 有以 2001 开头的 ipv6 地址即可。\n\n启动 ie 浏览器，访问 http://test-ipv6.com 或 http://ipv6.test-ipv6.com，如果选项卡 “测试项目” 下面的 “不使用域名的 ipv6 测试” 显示成功，则隧道建立成功。\n\n\n\n如果经过上面操作后仍无法启用 ipv6，可能是 teredo 服务器无法正常连接，也可能是 windows 自身配置问题，可尝试以下两种方法：\n\n// 第一种：修改 teredo 服务器为 teredo.remlab.net \n\nnetsh interface teredo set state server=teredo.remlab.net \n\n// 第二种：先卸载当前 teredo 适配器再重新启用 \n\nnetsh interface teredo set state disable \n\nnetsh interface teredo set state type=default \n\nping -6 ipv6.test-ipv6.com \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n现在你就可以开始使用客户端连接你的euserv免费vps了。\n\n\n\n详细的操作方法请参考：windows 10系统利用ipv6隧道开启ipv6访问。使用浏览器访问ipv6地址，类似于：http://[2a01:4f8:191:48c:2018:2019::ed]，如下图：\n\n\n\n\n# 四、纯ipv6的vps搭建网站\n\n\n# 4.1 搭建web环境\n\n纯ipv6的vps安装vps主机面板基本上是没有什么问题，例如lnmp、oneinstack，经过挖站否的测试都正常。可能有一些面板会出现一些莫名其妙的问题，更多的面板参考：服务器控制面板榜单。\n\n宝塔面板后台默认的是不支持ipv6的，我们需要手动开启：\n\n\\#让宝塔面板监听ipv6\n\necho “**true**” > /www/server/panel/data/ipv6.pl\n\n\\#如果发现端口无法使用，也可以直接修改端口\n\necho “8888” > /www/server/panel/data/port.pl\n\n\\#重启面板：\n\nbt restart\n\n\\#宝塔面板在面板设置里勾选了监听ipv6，正常情况下ipv4应该也是可以使用的，部分服务器出现问题的话会导致ipv4无法登陆。使用以下命令\n\nrm -f /www/server/panel/data/ipv6.pl && /etc/init.d/bt restart\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n如果是oneinstack或者lnmp一键安装包，搭建网站还需要修改一下nginx的配置，让nginx同时监听ipv4和ipv6的请求，示例如下：\n\n listen 80;\n\n​    listen 443 ssl http2;\n\n​    listen [::]:443 ssl http2;\n\n​    listen [::]:80;\n\n​    server_name www.wzfou.com;\n\n​    index index.php index.html index.htm default.php default.htm default.html;\n\n​    root /www/wwwroot/www.wzfou.com;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 4.2 ipv6 dns解析\n\n对于ipv6地址，dns解析选择aaaa记录类型记录，记录值为ipv6地址即可。\n\n\n\n\n# 4.3 兼顾ipv4用户访问\n\n对于纯ipv6的网站，为了可以让ipv4的用户访问，我们可以接入到cloudflare免费cdn网络，如果不想修改ns服务器为cloudflare，可以使用cloudflare partner平台，例如：cloudflare partner接入管理cloudflare cdn。\n\n接入了cloudflare后，你就可以先设置aaaa记录了。\n\n\n\n接着在cloudflare partner接入平台会得到cname记录，这时你就可以到你的域名dns管理处修改cname记录了。\n\n\n\n成功将纯ipv6的vps主机接入到了cloudflare的cdn网络后，不管用户是不是支持ipv6访问都可以访问你的网站了，与普通的网站没有什么 区别。\n\n\n\n\n# 五、总结\n\neuserv免费vps主机官网打开速度很慢，需要一定耐心。实际测试euserv免费vps主机的性能非常地差，见：分享euserv提供的免费ipv6小鸡，至于如何在ipv6上的vps主机跑“qq”可以参考：纯ipv6的vps安装应用。\n\n关于给 euserv免费vps主机自动续期的方法，请参考：https://bawodu.com/euserv-renew/\n\n\n# 六、用腾讯云函数给euserv德国免费vps自动续期\n\n使用腾讯云函数 scf自动续期euserv免费ipv6 vps脚本见 https://github.com/o0oo0ooo0/euserv_extend\n\n目的：自动获取账号内所有的vps项目，并检测是否需要续期，需要续期会自动续期。\n\n\n# 1. 打开腾讯云函数sfc\n\n打开 https://console.cloud.tencent.com/scf/ 登录腾讯云，初次使用云函数scf要授权。\n\n\n\n\n# 2. 新建beautifulsoup层\n\n新建层 beautifulsoup ，将 beautifulsoup.zip 导入 ，添加运行环境 python 3.6 。注意层的位置选择香港等海外地区，因为我们要续费的vps在德国。\n\n\n\n建好层后如下，后面用的上。\n\n\n\n\n# 3. 新建腾讯云函数euserv_extend\n\n运行环境选择 python 3.6，创建方式选择 空白函数，内存选择 64m，执行超时时间建议为 300 s（网站在国外访问比较慢，建议部署在非大陆区域，例如hk、sg等，需要和上面创建层的位置是一样的。），将修改后的 main.py 粘贴进去。\n\n\n\n选择自定义创建，按下图配置\n\n\n\n复制https://github.com/o0oo0ooo0/euserv_extend库中的main.py文件。\n\n\n\n复制粘贴到上图index.py文本，然后粘贴到刚才打开的腾讯云函数服务编辑框中，修改其中的用户名，密码。\n\n\n\nusername: 你的euserv账户邮箱或customer id\n\nusername = ‘user@gmail.com’ username = ‘user1@gmail.com user2@gmail.com’ # 多个账号写法\n\npassword: 账户的密码\n\npassword = ‘password’ password = ‘password1 password2’ # 多个账号写法\n\n设置通知提醒（可选操作）\n\n我已server酱的提醒为例，打开https://sct.ftqq.com后微信扫码获取sentkey， 然后填写在上面函数代码server酱的key处。如果您不需要通知也可以不设置提醒。这步不用设置。\n\nsckey = \'xx\'\n\n\n1\n\n\n环境配置\n\n设置64m内存就够用了，300秒延时。\n\n\n\n其他默认就可，然后点完成。完成云函数配置。\n\n\n\n\n# 4. 绑定层 beautifulsoup\n\n在 euserv_extend⇨函数管理⇨层管理 里绑定层 beautifulsoup。\n\n\n\n\n# 5. 测试并创建时间触发\n\n点击下图的测试，或会提示config等不存在，可以忽略。\n\n\n\n测试没错误，就点euserv_extend⇨触发管理⇨创建触发器触发周期⇨自定义触发周期。填入0 0 8 */7 * * *\n\n\n\n每 7 天的 8 点执行，可修改成你想要的时间。\n\n\n# 6. 查看运行日志\n\n日志提示有2台vps，说明以上成功设置了腾讯云函数scf续期脚本。\n\nstart requestid:ff1a66b6-27b6-4ec3-9e87-******************************正在续费第 1 个账号starting new https connection (1): support.euserv.com:443https://support.euserv.com:443 "get /index.iphp http/1.1" 302 3218https://support.euserv.com:443 "get /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071628 http/1.1" 200 3218https://support.euserv.com:443 "get /pic/logo_small.png http/1.1" 200 78https://support.euserv.com:443 "post /index.iphp http/1.1" 200 12524https://support.euserv.com:443 "get /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071 http/1.1" 200 12562检测到第 1 个账号有 2 台vps，正在尝试续期serverid: 388889 does not need to be renewedserverid: 399991 does not need to be renewedchecking.......resetting dropped connection: support.euserv.comhttps://support.euserv.com:443 "get /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071 http/1.1" 302 12562https://support.euserv.com:443 "get /index.iphp http/1.1" 302 3214https://support.euserv.com:443 "get /index.iphp?sess_id=64cddbf54472cb28e449a1058fe88e3b1626261591628911 http/1.1" 200 3214all work done! enjoystarting new https connection (1): sc.ftqq.com:443https://sc.ftqq.com:443 "post /sct63352tecqdrod2yemxg4itf.send http/1.1" 200 107server酱 推送成功******************************response requestid:ff1a66b6-27b6-4ec3-9e8da57 retmsg:nullend requestid:ff1a66b6-27b6-4ec3-9e87-0494da57report requestid:ff1a66b6-27b6-4ec3-9e87-0ea14494da57 duration:39826ms memory:64mb memusage:20.109375mb\n\n\n1\n\n\n\n# 7. 总结\n\n至此，用腾讯云函数给euserv德国免费vps自动续期设置完毕。这里是利用免费腾讯云函数scf的python环境，定时运行续费代码，从而完成登录euserv网站，判断是否需要续期，若需要，即执行续期动作。如果您自己有可用的vps，甚至在euserv免费vps自身上定时运行corn 的续期脚本也是可用的。',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Nginx安装Web应用防火墙",frontmatter:{icon:"page",title:"Nginx安装Web应用防火墙",author:"xlc520",time:"2022-01-10T00:00:00.000Z",category:"linux",tag:["Nginx"],sticky:!1,star:!0},regularPath:"/linux/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99.html",relativePath:"linux/Nginx安装Web应用防火墙.md",key:"v-0a98600f",path:"/linux/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/",headers:[{level:2,title:"ngxluawaf安装",slug:"ngx-lua-waf安装",normalizedTitle:"ngxluawaf安装",charIndex:null},{level:3,title:"1. lua支持安装",slug:"_1-lua支持安装",normalizedTitle:"1. lua支持安装",charIndex:436},{level:3,title:"2. 安装ngxluawaf",slug:"_2-安装ngx-lua-waf",normalizedTitle:"2. 安装ngxluawaf",charIndex:null},{level:3,title:"3. ngxluawaf防火墙配置",slug:"_3-ngx-lua-waf防火墙配置",normalizedTitle:"3. ngxluawaf防火墙配置",charIndex:null},{level:3,title:"4. ngxluawaf效果图",slug:"_4-ngx-lua-waf效果图",normalizedTitle:"4. ngxluawaf效果图",charIndex:null}],readingTime:{minutes:3.08,words:923},headersStr:"ngxluawaf安装 1. lua支持安装 2. 安装ngxluawaf 3. ngxluawaf防火墙配置 4. ngxluawaf效果图",content:'# Nginx安装Web应用防火墙\n\nLNMP一键安装包 ngx_lua_waf waf(web应用防火墙) 安装设置。WAF中文名是Web应用防火墙，WAF能够根据规则拦截SQL注入、恶意请求、黑客扫描等HTTP请求从而保护WEB应用的安全。\n\n今天我们要说的是一个比较简单好用的基于lua的waf：ngx_lua_waf。它是一个基于lua-nginx-module(openresty)的web应用防火墙，https://github.com/loveshell/ngx_lua_waf。\n\n用途：\n\n * 防止sql注入，本地包含，部分溢出，fuzzing测试，xss，SSRF等web攻击\n * 防止svn/备份之类文件泄漏\n * 防止ApacheBench之类压力测试工具的攻击\n * 屏蔽常见的扫描黑客工具，扫描器\n * 屏蔽异常的网络请求\n * 屏蔽图片附件类目录php执行权限\n * 防止webshell上传\n\n\n# ngx_lua_waf安装\n\n\n# 1. lua支持安装\n\nLNMP一键安装包从1.5开始增加了lua支持的选项，可以通过修改lnmp.conf中Enable_Nginx_Lua后的参数为 y 来启用lua，如果没安装lnmp，修改lnmp.conf后保存，安装完lnmp就是支持lua的，如果已经安装好lnmp，也是按前面修改lnmp.conf\n\n然后lnmp安装包目录下运行./upgrade.sh nginx 升级nginx\n\n./upgrade.sh nginx\n\n\n1\n\n\n输入当前nginx版本号或更新的nginx版本号，升级完成就是支持lua的了。如果出错，请重新下载完整版的LNMP安装包lnmp**-full.tar.gz，再次安装。\n\n\n# 2. 安装ngx_lua_waf\n\n下载安装ngx_lua_waf：\n\nwget https://github.com/loveshell/ngx_lua_waf/archive/master.zip -O ngx_lua_waf.zip\nunzip ngx_lua_waf.zip\nmv ngx_lua_waf-master /usr/local/nginx/conf/waf\n\n\n1\n2\n3\n\n\nnginx上设置并启用ngx_lua_waf\n\n编辑 /usr/local/nginx/conf/nginx.conf在http段的 server_tokens off; 下面添加如下代码：\n\nlua_package_path "/usr/local/nginx/conf/waf/?.lua";\nlua_shared_dict limit 10m;\ninit_by_lua_file /usr/local/nginx/conf/waf/init.lua;\n\n\n1\n2\n3\n\n\n修改完成保存\n\n如果要想在某个虚拟主机启用ngx_lua_waf可以修改对应虚拟主机的server段，在该server段中 root 网站目录行下面添加如下代码：\n\naccess_by_lua_file /usr/local/nginx/conf/waf/waf.lua;\n\n\n1\n\n\n修改完成保存\n\n测试nginx配置文件：/usr/local/nginx/sbin/nginx -t 重载nginx配置生效：/usr/local/nginx/sbin/nginx -s reload\n\n如果测试和重载都没报错就已经生效。\n\n可以通过访问 http://域名/test.php?id=../etc/passwd 来测试\n\n提示：您的请求带有>不合法参数，已被网站管理员设置拦截！说明已经正确设置\n\n\n# 3. ngx_lua_waf防火墙配置\n\nngx_lua_waf配置文件位置：/usr/local/nginx/conf/waf/config.lua ngx_lua_waf配置文件参数说明：\n\nRulePath = “/usr/local/nginx/conf/waf/wafconf/”\n–规则存放目录\nattacklog = “off”\n–是否开启攻击信息记录，需要配置logdir\nlogdir = “/usr/local/nginx/logs/hack/”\n–log存储目录，该目录需要用户自己新建，切需要nginx用户的可写权限\nUrlDeny=”on”\n–是否拦截url访问\nRedirect=”on”\n–是否拦截后重定向\nCookieMatch = “on”\n–是否拦截cookie攻击\npostMatch = “on”\n–是否拦截post攻击\nwhiteModule = “on”\n–是否开启URL白名单\nblack_fileExt={“php”,”jsp”}\n–填写不允许上传文件后缀类型\nipWhitelist={“127.0.0.1”}\n–ip白名单，多个ip用逗号分隔\nipBlocklist={“1.0.0.1″}\n–ip黑名单，多个ip用逗号分隔\nCCDeny=”on”\n–是否开启拦截cc攻击(需要nginx.conf的http段增加lua_shared_dict limit 10m;)\nCCrate = “100/60”\n–设置cc攻击频率，单位为秒.\n–默认1分钟同一个IP只能请求同一个地址100次\nhtml=[[Please go away~~]] –警告内容,可在中括号内自定义\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n备注:不要乱动双引号，区分大小写\n\nngx_lua_waf安装到此结束。\n\n\n# 4. ngx_lua_waf效果图\n\n',normalizedContent:'# nginx安装web应用防火墙\n\nlnmp一键安装包 ngx_lua_waf waf(web应用防火墙) 安装设置。waf中文名是web应用防火墙，waf能够根据规则拦截sql注入、恶意请求、黑客扫描等http请求从而保护web应用的安全。\n\n今天我们要说的是一个比较简单好用的基于lua的waf：ngx_lua_waf。它是一个基于lua-nginx-module(openresty)的web应用防火墙，https://github.com/loveshell/ngx_lua_waf。\n\n用途：\n\n * 防止sql注入，本地包含，部分溢出，fuzzing测试，xss，ssrf等web攻击\n * 防止svn/备份之类文件泄漏\n * 防止apachebench之类压力测试工具的攻击\n * 屏蔽常见的扫描黑客工具，扫描器\n * 屏蔽异常的网络请求\n * 屏蔽图片附件类目录php执行权限\n * 防止webshell上传\n\n\n# ngx_lua_waf安装\n\n\n# 1. lua支持安装\n\nlnmp一键安装包从1.5开始增加了lua支持的选项，可以通过修改lnmp.conf中enable_nginx_lua后的参数为 y 来启用lua，如果没安装lnmp，修改lnmp.conf后保存，安装完lnmp就是支持lua的，如果已经安装好lnmp，也是按前面修改lnmp.conf\n\n然后lnmp安装包目录下运行./upgrade.sh nginx 升级nginx\n\n./upgrade.sh nginx\n\n\n1\n\n\n输入当前nginx版本号或更新的nginx版本号，升级完成就是支持lua的了。如果出错，请重新下载完整版的lnmp安装包lnmp**-full.tar.gz，再次安装。\n\n\n# 2. 安装ngx_lua_waf\n\n下载安装ngx_lua_waf：\n\nwget https://github.com/loveshell/ngx_lua_waf/archive/master.zip -o ngx_lua_waf.zip\nunzip ngx_lua_waf.zip\nmv ngx_lua_waf-master /usr/local/nginx/conf/waf\n\n\n1\n2\n3\n\n\nnginx上设置并启用ngx_lua_waf\n\n编辑 /usr/local/nginx/conf/nginx.conf在http段的 server_tokens off; 下面添加如下代码：\n\nlua_package_path "/usr/local/nginx/conf/waf/?.lua";\nlua_shared_dict limit 10m;\ninit_by_lua_file /usr/local/nginx/conf/waf/init.lua;\n\n\n1\n2\n3\n\n\n修改完成保存\n\n如果要想在某个虚拟主机启用ngx_lua_waf可以修改对应虚拟主机的server段，在该server段中 root 网站目录行下面添加如下代码：\n\naccess_by_lua_file /usr/local/nginx/conf/waf/waf.lua;\n\n\n1\n\n\n修改完成保存\n\n测试nginx配置文件：/usr/local/nginx/sbin/nginx -t 重载nginx配置生效：/usr/local/nginx/sbin/nginx -s reload\n\n如果测试和重载都没报错就已经生效。\n\n可以通过访问 http://域名/test.php?id=../etc/passwd 来测试\n\n提示：您的请求带有>不合法参数，已被网站管理员设置拦截！说明已经正确设置\n\n\n# 3. ngx_lua_waf防火墙配置\n\nngx_lua_waf配置文件位置：/usr/local/nginx/conf/waf/config.lua ngx_lua_waf配置文件参数说明：\n\nrulepath = “/usr/local/nginx/conf/waf/wafconf/”\n–规则存放目录\nattacklog = “off”\n–是否开启攻击信息记录，需要配置logdir\nlogdir = “/usr/local/nginx/logs/hack/”\n–log存储目录，该目录需要用户自己新建，切需要nginx用户的可写权限\nurldeny=”on”\n–是否拦截url访问\nredirect=”on”\n–是否拦截后重定向\ncookiematch = “on”\n–是否拦截cookie攻击\npostmatch = “on”\n–是否拦截post攻击\nwhitemodule = “on”\n–是否开启url白名单\nblack_fileext={“php”,”jsp”}\n–填写不允许上传文件后缀类型\nipwhitelist={“127.0.0.1”}\n–ip白名单，多个ip用逗号分隔\nipblocklist={“1.0.0.1″}\n–ip黑名单，多个ip用逗号分隔\nccdeny=”on”\n–是否开启拦截cc攻击(需要nginx.conf的http段增加lua_shared_dict limit 10m;)\nccrate = “100/60”\n–设置cc攻击频率，单位为秒.\n–默认1分钟同一个ip只能请求同一个地址100次\nhtml=[[please go away~~]] –警告内容,可在中括号内自定义\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n备注:不要乱动双引号，区分大小写\n\nngx_lua_waf安装到此结束。\n\n\n# 4. ngx_lua_waf效果图\n\n',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"安装NodeJS-Maven-Mysql",frontmatter:{icon:"page",title:"安装NodeJS-Maven-Mysql",author:"xlc520",time:"2022-01-10T00:00:00.000Z",category:"linux",tag:["NodeJS","Maven","Mysql"],sticky:!1,star:!0},regularPath:"/linux/NodeJS-Maven-Mysql.html",relativePath:"linux/NodeJS-Maven-Mysql.md",key:"v-72e34a02",path:"/linux/NodeJS-Maven-Mysql/",headers:[{level:2,title:"安装NodeJS",slug:"安装nodejs",normalizedTitle:"安装nodejs",charIndex:2},{level:2,title:"安装Maven",slug:"安装maven",normalizedTitle:"安装maven",charIndex:673},{level:2,title:"安装MySQL",slug:"安装mysql",normalizedTitle:"安装mysql",charIndex:1634},{level:2,title:"",slug:"",normalizedTitle:"",charIndex:0}],readingTime:{minutes:2.65,words:794},headersStr:"安装NodeJS 安装Maven 安装MySQL ",content:"# 安装NodeJS-Maven-Mysql\n\n\n# 安装NodeJS\n\nlitemall的管理端和用户端的前端界面是由Vue.js开发，编译这两部分的时候需要用到NodeJS环境，以下操作将安装一个NodeJS环境。\n\n1.  从淘宝镜像下载NodeJS的安装包。\n\nwget https://npm.taobao.org/mirrors/node/v12.4.0/node-v12.4.0-linux-x64.tar.xz\n\n\n1\n\n\n2.  将下载的安装包解压到/usr/local/目录。\n\ntar -xvf node-v12.4.0-linux-x64.tar.xz -C /usr/local/\n\n\n1\n\n\n3.  将NodeJS安装目录重命名。\n\nmv /usr/local/node-v12.4.0-linux-x64/ /usr/local/node\n\n\n1\n\n\n4.  将NodeJS的可执行文件目录加入到系统环境变量中，并使用source命令使配置文件立即生效。\n\necho \"export PATH=$PATH:/usr/local/node/bin\" >> /etc/profile\nsource /etc/profile\n\n\n1\n2\n\n\n5.   安装淘宝cnpm镜像。\n\nnpm install cnpm -g --registry=https://registry.npm.taobao.org\n\n\n1\n\n\n6.  安装cross-env。\n\ncnpm install -g cross-env\n\n\n1\n\n\n\n# 安装Maven\n\n 1. 安装OpenJDK1.8，litemall要求JDK版本1.8以上\n\nyum -y install java-1.8.0-openjdk-devel.x86_64\n\n\n1\n\n 2. 下载Maven安装包。\n\nwget --no-check-certificate https://mirror.bit.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz\n\n\n1\n\n 3. 将下载的安装包解压到/usr/local/目录，并将安装目录重命名。\n\ntar -zxvf apache-maven-3.6.3-bin.tar.gz -C /usr/local/\nmv /usr/local/apache-maven-3.6.3/ /usr/local/maven\n\n\n1\n2\n\n 4. 将maven的可执行文件目录加入到系统环境变量中，并使用 source 命令使/etc/profile文件中的内容立即生效。\n\necho \"export PATH=$PATH:/usr/local/maven/bin\" >> /etc/profile\nsource /etc/profile\n\n\n1\n2\n\n 5. 执行以下命令打开镜像仓库配置文件，添加阿里云镜像仓库配置。\n\nvim /usr/local/maven/conf/settings.xml\n\n\n1\n\n\n进入Vim编辑器页面后输入 :/mirrors，搜索并跳转到 <mirrors>标签的位置。 按下n键跳转到第二个没有被注释的标签位置。 按下o键，另起一行进行编辑，粘贴以下内容。\n\n<mirror>\n       <id>nexus-aliyun</id>\n       <mirrorOf>central</mirrorOf>\n       <name>Nexus aliyun</name>\n       <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n</mirror>\n\n\n1\n2\n3\n4\n5\n6\n\n\n按下ECS退出编辑模式，输入:wq保存并退出Vim编辑器。\n\n\n# 安装MySQL\n\n\n#\n\n1.  下载安装MySQL的Yum源。\n\nwget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm\nyum -y install mysql57-community-release-el7-10.noarch.rpm\n\n\n1\n2\n\n\n2.  安装mysql-server。\n\nyum -y install mysql-community-server\n\n\n1\n\n\n3.  启动mysql-server。\n\nsystemctl start mysqld.service\n\n\n1\n\n\n4.  修改默认密码。  a. 查询root密码。\n\ngrep \"password\" /var/log/mysqld.log\n\n\n1\n\n\n命令输出如下所示。  b. 使用查询到的密码登录到mysql。\n\nmysql -uroot -p\n\n\n1\n\n\n命令输出如下所示。  c. 修改密码安全策略为低（只校验密码长度，至少8位）。\n\nset global validate_password_policy=0;\n\n\n1\n\n\nd.  修改密码。\n\nalter user root@'localhost' identified by '12345678';\n\n\n1\n\n\ne.  授予root用户远程管理权限。\n\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '12345678';\n\n\n1\n\n\nf.  退出MySQL命令行。\n\nquit\n\n\n1\n\n\n初始化数据库 参考以下步骤将商城项目的初始数据导入到数据库中。请将下面命令中的 12345678修改为您设置的数据库密码。 1.  创建数据库和用户。\n\ncd litemall && mysql -uroot -p12345678 < litemall-db/sql/litemall_schema.sql\n\n\n1\n\n\n2.  初始化数据库表结构。\n\nmysql -uroot -p12345678 litemall < litemall-db/sql/litemall_table.sql\n\n\n1\n\n\n3.  插入测试数据。\n\nmysql -uroot -p12345678 litemall < litemall-db/sql/litemall_data.sql\n\n\n1\n",normalizedContent:"# 安装nodejs-maven-mysql\n\n\n# 安装nodejs\n\nlitemall的管理端和用户端的前端界面是由vue.js开发，编译这两部分的时候需要用到nodejs环境，以下操作将安装一个nodejs环境。\n\n1.  从淘宝镜像下载nodejs的安装包。\n\nwget https://npm.taobao.org/mirrors/node/v12.4.0/node-v12.4.0-linux-x64.tar.xz\n\n\n1\n\n\n2.  将下载的安装包解压到/usr/local/目录。\n\ntar -xvf node-v12.4.0-linux-x64.tar.xz -c /usr/local/\n\n\n1\n\n\n3.  将nodejs安装目录重命名。\n\nmv /usr/local/node-v12.4.0-linux-x64/ /usr/local/node\n\n\n1\n\n\n4.  将nodejs的可执行文件目录加入到系统环境变量中，并使用source命令使配置文件立即生效。\n\necho \"export path=$path:/usr/local/node/bin\" >> /etc/profile\nsource /etc/profile\n\n\n1\n2\n\n\n5.   安装淘宝cnpm镜像。\n\nnpm install cnpm -g --registry=https://registry.npm.taobao.org\n\n\n1\n\n\n6.  安装cross-env。\n\ncnpm install -g cross-env\n\n\n1\n\n\n\n# 安装maven\n\n 1. 安装openjdk1.8，litemall要求jdk版本1.8以上\n\nyum -y install java-1.8.0-openjdk-devel.x86_64\n\n\n1\n\n 2. 下载maven安装包。\n\nwget --no-check-certificate https://mirror.bit.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz\n\n\n1\n\n 3. 将下载的安装包解压到/usr/local/目录，并将安装目录重命名。\n\ntar -zxvf apache-maven-3.6.3-bin.tar.gz -c /usr/local/\nmv /usr/local/apache-maven-3.6.3/ /usr/local/maven\n\n\n1\n2\n\n 4. 将maven的可执行文件目录加入到系统环境变量中，并使用 source 命令使/etc/profile文件中的内容立即生效。\n\necho \"export path=$path:/usr/local/maven/bin\" >> /etc/profile\nsource /etc/profile\n\n\n1\n2\n\n 5. 执行以下命令打开镜像仓库配置文件，添加阿里云镜像仓库配置。\n\nvim /usr/local/maven/conf/settings.xml\n\n\n1\n\n\n进入vim编辑器页面后输入 :/mirrors，搜索并跳转到 <mirrors>标签的位置。 按下n键跳转到第二个没有被注释的标签位置。 按下o键，另起一行进行编辑，粘贴以下内容。\n\n<mirror>\n       <id>nexus-aliyun</id>\n       <mirrorof>central</mirrorof>\n       <name>nexus aliyun</name>\n       <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n</mirror>\n\n\n1\n2\n3\n4\n5\n6\n\n\n按下ecs退出编辑模式，输入:wq保存并退出vim编辑器。\n\n\n# 安装mysql\n\n\n#\n\n1.  下载安装mysql的yum源。\n\nwget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm\nyum -y install mysql57-community-release-el7-10.noarch.rpm\n\n\n1\n2\n\n\n2.  安装mysql-server。\n\nyum -y install mysql-community-server\n\n\n1\n\n\n3.  启动mysql-server。\n\nsystemctl start mysqld.service\n\n\n1\n\n\n4.  修改默认密码。  a. 查询root密码。\n\ngrep \"password\" /var/log/mysqld.log\n\n\n1\n\n\n命令输出如下所示。  b. 使用查询到的密码登录到mysql。\n\nmysql -uroot -p\n\n\n1\n\n\n命令输出如下所示。  c. 修改密码安全策略为低（只校验密码长度，至少8位）。\n\nset global validate_password_policy=0;\n\n\n1\n\n\nd.  修改密码。\n\nalter user root@'localhost' identified by '12345678';\n\n\n1\n\n\ne.  授予root用户远程管理权限。\n\ngrant all privileges on *.* to 'root'@'%' identified by '12345678';\n\n\n1\n\n\nf.  退出mysql命令行。\n\nquit\n\n\n1\n\n\n初始化数据库 参考以下步骤将商城项目的初始数据导入到数据库中。请将下面命令中的 12345678修改为您设置的数据库密码。 1.  创建数据库和用户。\n\ncd litemall && mysql -uroot -p12345678 < litemall-db/sql/litemall_schema.sql\n\n\n1\n\n\n2.  初始化数据库表结构。\n\nmysql -uroot -p12345678 litemall < litemall-db/sql/litemall_table.sql\n\n\n1\n\n\n3.  插入测试数据。\n\nmysql -uroot -p12345678 litemall < litemall-db/sql/litemall_data.sql\n\n\n1\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Podman开源的容器",frontmatter:{author:"xlc520",title:"Podman开源的容器",description:"Docker 大势已去，Podman 即将崛起",time:"2022-02-28T00:00:00.000Z",category:"Linux",tags:"Linux",article:!0,timeline:!0,icon:null,password:null},regularPath:"/linux/Podman%E5%BC%80%E6%BA%90%E7%9A%84%E5%AE%B9%E5%99%A8.html",relativePath:"linux/Podman开源的容器.md",key:"v-6692607b",path:"/linux/Podman%E5%BC%80%E6%BA%90%E7%9A%84%E5%AE%B9%E5%99%A8/",headers:[{level:3,title:"什么是Podman？",slug:"什么是podman",normalizedTitle:"什么是podman？",charIndex:28},{level:3,title:"Podman常用命令",slug:"podman常用命令",normalizedTitle:"podman常用命令",charIndex:1511},{level:3,title:"「Podman 加速器」",slug:"「podman-加速器」",normalizedTitle:"「podman 加速器」",charIndex:2567},{level:3,title:"「使用 Podman」",slug:"「使用-podman」",normalizedTitle:"「使用 podman」",charIndex:3224},{level:3,title:"「用户操作」",slug:"「用户操作」",normalizedTitle:"「用户操作」",charIndex:9105},{level:3,title:"卷",slug:"卷",normalizedTitle:"卷",charIndex:12830}],readingTime:{minutes:12.31,words:3692},headersStr:"什么是Podman？ Podman常用命令 「Podman 加速器」 「使用 Podman」 「用户操作」 卷",content:'来源：http://t-t.ink/0V26K\n\n\n# 什么是Podman？\n\nPodman 是一个开源的容器运行时项目，可在大多数 Linux 平台上使用。Podman 提供与 Docker 非常相似的功能。正如前面提到的那样，它不需要在你的系统上运行任何守护进程，并且它也可以在没有 root 权限的情况下运行。\n\nPodman 可以管理和运行任何符合 OCI（Open Container Initiative）规范的容器和容器镜像。Podman 提供了一个与 Docker 兼容的命令行前端来管理 Docker 镜像。\n\nPodman 官网地址：https://podman.io/\n\n# 「Podman和Docker的主要区别是什么？」\n\n * dockers在实现CRI的时候，它需要一个守护进程，其次需要以root运行，因此这也带来了安全隐患。\n * podman不需要守护程序，也不需要root用户运行，从逻辑架构上，比docker更加合理。\n * 在docker的运行体系中，需要多个daemon才能调用到OCI的实现RunC。\n * 在容器管理的链路中，Docker Engine的实现就是dockerd\n * daemon，它在linux中需要以root运行，dockerd调用containerd，containerd调用containerd-shim，然后才能调用runC。顾名思义shim起的作用也就是“垫片”，避免父进程退出影响容器的运训\n * podman直接调用OCI,runtime（runC），通过common作为容器进程的管理工具，但不需要dockerd这种以root身份运行的守护进程。(点击下载2021年最新阿里p7面试题教程)\n * 在podman体系中，有个称之为common的守护进程，其运行路径通常是/usr/libexec/podman/conmon，它是各个容器进程的父进程，每个容器各有一个，common的父则通常是1号进程。podman中的common其实相当于docker体系中的containerd-shim。\n\n图中所体现的事情是，podman不需要守护进程，而dorker需要守护进程。在这个图的示意中，dorcker的containerd-shim与podman的common被归在Container一层。\n\n# 「Podman的使用与docker有什么区别？」\n\npodman的定位也是与docker兼容，因此在使用上面尽量靠近docker。在使用方面，可以分成两个方面来说，一是系统构建者的角度，二是使用者的角度。\n\n在系统构建者方面，用podman的默认软件，与docker的区别不大，只是在进程模型、进程关系方面有所区别。如果习惯了docker几个关联进程的调试方法，在podman中则需要适应。可以通过pstree命令查看进程的树状结构。总体来看，podman比docker要简单。由于podman比docker少了一层daemon，因此重启的机制也就不同了。\n\n在使用者方面，podman与docker的命令基本兼容，都包括容器运行时（run/start/kill/ps/inspect），本地镜像（images/rmi/build）、镜像仓库（login/pull/push）等几个方面。因此podman的命令行工具与docker类似，比如构建镜像、启停容器等。甚至可以通过alias\n\ndocker=podman可以进行替换。因此，即便使用了podman，仍然可以使用docker.io作为镜像仓库，这也是兼容性最关键的部分。\n\n\n# Podman常用命令\n\n# 「容器」\n\npodman run           创建并启动容器\npodman start         启动容器\npodman ps            查看容器\npodman stop          终止容器\npodman restart       重启容器\npodman attach        进入容器\npodman exec          进入容器\npodman export        导出容器\npodman import        导入容器快照\npodman rm            删除容器\npodman logs          查看日志\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 「镜像」\n\npodman search                检索镜像\npodman pull                  获取镜像\npodman images                列出镜像\npodman image Is              列出镜像\npodman rmi                   删除镜像\npodman image rm              删除镜像\npodman save                  导出镜像\npodman load                  导入镜像\npodmanfile                   定制镜像（三个）\n  podman build             构建镜像\n    podman run               运行镜像\n    podmanfile               常用指令（四个）\n      COPY                 复制文件\n        ADD                  高级复制\n        CMD                  容器启动命令\n        ENV                  环境变量\n        EXPOSE               暴露端口\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n# 「部署 Podman」\n\n//安装podman\n[root@localhost ~]# yum -y install podman\n\n\n1\n2\n\n\n\n# 「Podman 加速器」\n\n版本7配置加速器\n\n//仓库配置\n[root@localhost ~]# vim /etc/containers/registries.conf\n[registries.search]\n#registries = ["registry.access.redhat.com", "registry.redhat.io", "docker.io"]   #这个是查找，从这三个地方查找\n\nregistries = ["docker.io"]    #如果只留一个，则只在一个源里查找\n[[docker.io]]\nlocation="j3m2itm3.mirror.aliyuncs.com"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n版本8配置加速器\n\n#unqualified-search-registries = ["registry.fedoraproject.org", "registry.access.redhat.com", "registry.centos.org", "docker.io"]     #直接注释掉\nunqualified-search-registries = ["docker.io"]    #添加一个docker.io\n[[registry]]\nprefix = "docker.io"\nlocation = "j3m2itm3.mirror.aliyuncs.com" （不用加https://  直接加地址）\n\n\n1\n2\n3\n4\n5\n\n\n\n# 「使用 Podman」\n\n使用 Podman 非常的简单，Podman 的指令跟 Docker 大多数都是相同的。下面我们来看几个常用的例子：\n\n# 运行一个容器\n\n[root@localhost ~]# podman run -d --name httpd docker.io/library/httpd\nTrying to pull docker.io/library/httpd...\nGetting image source signatures\nCopying blob e5ae68f74026 done  \nCopying blob d3576f2b6317 done  \nCopying blob bc36ee1127ec done  \nCopying blob f1aa5f54b226 done  \nCopying blob aa379c0cedc2 done  \nCopying config ea28e1b82f done  \nWriting manifest to image destination\nStoring signatures\n0492e405b9ecb05e6e6be1fec0ac1a8b6ba3ff949df259b45146037b5f355035\n\n//查看镜像\n[root@localhost ~]# podman images\nREPOSITORY                  TAG      IMAGE ID       CREATED       SIZE\ndocker.io/library/httpd     latest   ea28e1b82f31   11 days ago   148 MB\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n# 列出运行的容器\n\n[root@localhost ~]# podman ps\nCONTAINER ID  IMAGE                             COMMAND           CREATED             STATUS                 PORTS  NAMES\n0492e405b9ec  docker.io/library/httpd:latest    httpd-foreground  About a minute ago  Up About a minute ago         httpd\n\n\n1\n2\n3\n\n\n注意：如果在ps命令中添加-a，Podman 将显示所有容器。\n\n# 检查正在运行的容器\n\n您可以“检查”正在运行的容器的元数据和有关其自身的详细信息。我们甚至可以使用 inspect 子命令查看分配给容器的 IP 地址。由于容器以无根模式运行，因此未分配 IP 地址，并且该值将在检查的输出中列为“无”。\n\n[root@localhost ~]# podman inspect -l | grep IPAddress\\": \n            "SecondaryIPAddresses": null, \n            "IPAddress": "10.88.0.5",\n\n[root@localhost ~]# curl 10.88.0.5\n<html><body><h1>It works!</h1></body></html>\n\n\n1\n2\n3\n4\n5\n6\n\n\n注意：-l 是最新容器的便利参数。您还可以使用容器的 ID 代替 -l。\n\n# 查看一个运行中容器的日志\n\n选项\n  --latest    #最近的\n  \n[root@localhost ~]# podman logs --latest\nAH00558: httpd: Could not reliably determine the server\'s fully qualified domain name, using 10.88.0.5. Set the \'ServerName\' directive globally to suppress this message\nAH00558: httpd: Could not reliably determine the server\'s fully qualified domain name, using 10.88.0.5. Set the \'ServerName\' directive globally to suppress this message\n[Mon Dec 13 15:17:53.690844 2021] [mpm_event:notice] [pid 1:tid 140665160166720] AH00489: Apache/2.4.51 (Unix) configured -- resuming normal operations\n[Mon Dec 13 15:17:53.690946 2021] [core:notice] [pid 1:tid 140665160166720] AH00094: Command line: \'httpd -D FOREGROUND\'\n10.88.0.1 - - [13/Dec/2021:15:19:48 +0000] "GET / HTTP/1.1" 200 45\n10.88.0.1 - - [13/Dec/2021:15:20:47 +0000] "GET / HTTP/1.1" 200 45\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n查看一个运行容器中的进程资源使用情况，可以使用top观察容器中的 nginx pid\n\n语法：\n  podman top <container_id>  \n  \n[root@localhost ~]# podman top httpd\nUSER       PID   PPID   %CPU    ELAPSED            TTY   TIME   COMMAND\nroot       1     0      0.000   15m38.599711321s   ?     0s     httpd -DFOREGROUND \nwww-data   7     1      0.000   15m38.599783256s   ?     0s     httpd -DFOREGROUND \nwww-data   8     1      0.000   15m38.599845342s   ?     0s     httpd -DFOREGROUND \nwww-data   9     1      0.000   15m38.599880444s   ?     0s     httpd -DFOREGROUND \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 停止一个运行中的容器\n\n[root@localhost ~]# podman stop --latest\n2f3edf712621d3a41e03fa8c7f6a5cdba56fbbad43a7a59ede26cc88f31006c4\n[root@localhost ~]# podman ps\nCONTAINER ID  IMAGE  COMMAND  CREATED  STATUS  PORTS  NAMES\n\n\n1\n2\n3\n4\n\n\n# 删除一个容器\n\n[root@localhost ~]# podman rm --latest\n2f3edf712621d3a41e03fa8c7f6a5cdba56fbbad43a7a59ede26cc88f31006c4\n[root@localhost ~]# podman ps -a\nCONTAINER ID  IMAGE  COMMAND  CREATED  STATUS  PORTS  NAMES\n\n\n1\n2\n3\n4\n\n\n以上这些特性基本上都和 Docker 一样，Podman 除了兼容这些特性外，还支持了一些新的特性。\n\n# 上传镜像\n\n例如，如果我们想在 docker.io 上分享我们新建的 Nginx 容器镜像，这很容易。首先登录码头：\n\n[root@localhost nginx]# tree \n.\n├── Dockerfile\n└── files\n    └── nginx-1.20.1.tar.gz\n\n[root@localhost nginx]# cat Dockerfile \nFROM docker.io/library/centos\n\nENV PATH /usr/local/nginx/sbin:$PATH\nADD files/nginx-1.20.1.tar.gz /usr/src\nRUN useradd -r -M -s /sbin/nologin nginx && \\\n    yum -y install pcre-devel openssl openssl-devel gd-devel gcc gcc-c++ make && \\\n    mkdir -p /var/log/nginx && \\\n    cd /usr/src/nginx-1.20.1 && \\\n    ./configure \\\n    --prefix=/usr/local/nginx \\\n    --user=nginx \\\n    --group=nginx \\\n    --with-debug \\\n    --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --with-http_image_filter_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_stub_status_module \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --error-log-path=/var/log/nginx/error.log && \\\n  make && make install\n\nCMD ["nginx","-g","daemon off"]\n[root@localhost nginx]# podman build -t nginx .\n\n// 修改镜像名\n [root@localhost ~]# podman tag docker.io/library/nginx:latest docker.io/1314444/test:latest\n\n// 登录并上传镜像\n[root@localhost ~]# podman login docker.io // 需要告诉其要登录到docker仓库\n[root@localhost ~]# podman login docker.io\nUsername: 1314444    #账户\nPassword: ********    #密码\nLogin Succeeded!\n\n[root@localhost nginx]# podman push docker.io/1314444/test:latest  //上传镜像\nGetting image source signatures\nCopying blob 38c40d6c2c85 done\nCopying blob fee76a531659 done\nCopying blob c2adabaecedb done\nCopying config 7f3589c0b8 done\nWriting manifest to image destination\nCopying config 7f3589c0b8 done\nWriting manifest to image destination\nStoring signatures\n\n\n//请注意，我们将四层推送到我们的注册表，现在可供其他人共享。快速浏览一下：\n[root@localhost ~]# podman inspect 1314444/test:nginx\n//输出：\n[\n    {\n        "Id": "7f3589c0b8849a9e1ff52ceb0fcea2390e2731db9d1a7358c2f5fad216a48263",\n        "Digest": "sha256:7822b5ba4c2eaabdd0ff3812277cfafa8a25527d1e234be028ed381a43ad5498",\n        "RepoTags": [\n            "docker.io/1314444/test:nginx",\n    ......\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n总而言之，Podman 使查找、运行、构建和共享容器变得容易。\n\n# 配置别名\n\n如果习惯了使用 Docker 命令，可以直接给 Podman 配置一个别名来实现无缝转移。你只需要在 .bashrc 下加入以下行内容即可：\n\n[root@localhost ~]# echo "alias docker=podman" >> .bashrc\nsource .bashrc\n[root@localhost ~]# alias\nalias cp=\'cp -i\'\nalias docker=\'podman\'\n.......\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 「用户操作」\n\n在允许没有root特权的用户运行Podman之前，管理员必须安装或构建Podman并完成以下配置\n\ncgroup V2Linux内核功能允许用户限制普通用户容器可以使用的资源，如果使用cgroupV2启用了运行Podman的Linux发行版，则可能需要更改默认的OCI运行时。某些较旧的版本runc不适用于cgroupV2，必须切换到备用OCI运行时crun。\n\n[root@localhost ~]# yum -y install crun     //centos8系统自带\n\n[root@localhost ~]# vi /usr/share/containers/containers.conf \n    446 # Default OCI runtime\n    447 # \n    448 runtime = "crun"      //取消注释并将runc改为crun\n\n[root@localhost ~]# podman run -d --name web -p 80:80 docker.io/library/nginx\nc8664d2e43c872e1e5219f82d41f63048ed3a5ed4fb6259c225a14d6c243677f\n\n[root@localhost ~]# podman inspect web | grep crun\n        "OCIRuntime": "crun",\n            "crun",\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n# 安装slirp4netns和fuse-overlayfs\n\n在普通用户环境中使用Podman时，建议使用fuse-overlayfs而不是VFS文件系统，至少需要版本0.7.6。现在新版本默认就是了。\n\n[root@localhost ~]# yum -y install slirp4netns\n\n[root@localhost ~]# yum -y install fuse-overlayfs\n[root@localhost ~]# vi /etc/containers/storage.conf\n77 mount_program = "/usr/bin/fuse-overlayfs"     //取消注释\n\n\n1\n2\n3\n4\n5\n\n\n# / etc / subuid和/ etc / subgid配置\n\nPodman要求运行它的用户在/ etc / subuid和/ etc / subgid文件中列出一系列UID,shadow-utils或newuid包提供这些文件\n\n[root@localhost ~]# yum -y install shadow-utils\n\n可以在/ etc / subuid和/ etc / subgid查看，每个用户的值必须唯一且没有任何重叠。\n\n[root@localhost ~]# useradd zz\n[root@localhost ~]# cat /etc/subuid\nzz:100000:65536\n[root@localhost ~]# cat /etc/subgid\nzz:100000:65536\n\n// 启动非特权ping \n[root@localhost ~]# sysctl -w "net.ipv4.ping_group_range=0 200000" //大于100000这个就表示tom可以操作podman\nnet.ipv4.ping_group_range = 0 200000\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n这个文件的格式是 USERNAME:UID:RANGE中/etc/passwd或输出中列出的用户名getpwent。\n\n * 为用户分配的初始 UID。\n * 为用户分配的 UID 范围的大小。\n\n该usermod程序可用于为用户分配 UID 和 GID，而不是直接更新文件。\n\n[root@localhost ~]# usermod --add-subuids 200000-201000 --add-subgids 200000-201000 hh\ngrep hh /etc/subuid /etc/subgid\n/etc/subuid:hh:200000:1001\n/etc/subgid:hh:200000:1001\n\n\n1\n2\n3\n4\n\n\n# 用户配置文件\n\n三个主要的配置文件是**「container.conf」、「storage.conf」和「registries.conf」**。用户可以根据需要修改这些文件。\n\ncontainer.conf\n\n// 用户配置文件\n[root@localhost ~]# cat /usr/share/containers/containers.conf\n[root@localhost ~]# cat /etc/containers/containers.conf\n[root@localhost ~]# cat ~/.config/containers/containers.conf  //优先级最高\n\n\n1\n2\n3\n4\n\n\n如果它们以该顺序存在。每个文件都可以覆盖特定字段的前一个文件。\n\n配置storage.conf文件\n\n1./etc/containers/storage.conf\n2.$HOME/.config/containers/storage.conf\n\n\n1\n2\n\n\n在普通用户中**/etc/containers/storage.conf**的一些字段将被忽略\n\n[root@localhost ~]#  vi /etc/containers/storage.conf\n[storage]\n\n# Default Storage Driver, Must be set for proper operation.\ndriver = "overlay"    #此处改为overlay\n.......\nmount_program = "/usr/bin/fuse-overlayfs"    #取消注释\n\n[root@localhost ~]# sysctl user.max_user_namespaces=15000  #如果版本为8以下，则需要做以下操作：\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n在普通用户中这些字段默认\n\ngraphroot="$HOME/.local/share/containers/storage"\nrunroot="$XDG_RUNTIME_DIR/containers"\n\n\n1\n2\n\n\nregistries.conf\n\n配置按此顺序读入,这些文件不是默认创建的,可以从**/usr/share/containers**「或复制文件」/etc/containers并进行修改。\n\n1./etc/containers/registries.conf\n2./etc/containers/registries.d/*\n3.HOME/.config/containers/registries.conf\n\n\n1\n2\n3\n\n\n授权文件\n\n此文件里面写了docker账号的密码，以加密方式显示\n\n[root@localhost ~]# podman login\nUsername: 1314444\nPassword: \nLogin Succeeded!\n[root@localhost ~]# cat /run/user/0/containers/auth.json \n{\n        "auths": {\n                "registry.fedoraproject.org": {\n                        "auth": "MTMxNDQ0NDpIMjAxNy0xOA=="\n                }\n        }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n普通用户是无法看见root用户的镜像的\n\n//root用户\n[root@localhost ~]# podman images\nREPOSITORY                  TAG      IMAGE ID       CREATED       SIZE\ndocker.io/library/httpd     latest   ea28e1b82f31   11 days ago   146 MB\n\n//普通用户\n[root@localhost ~]# su - zz\n[zz@localhost ~]$ podman images\nREPOSITORY  TAG         IMAGE ID    CREATED     SIZE\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 卷\n\n * 容器与root用户一起运行，则root容器中的用户实际上就是主机上的用户。\n * UID GID是在/etc/subuid和/etc/subgid等中用户映射中指定的第一个UID GID。\n * 如果普通用户的身份从主机目录挂载到容器中，并在该目录中以根用户身份创建文件，则会看到它实际上是你的用户在主机上拥有的。\n\n# 使用卷\n\n[root@localhost ~]# su - zz\n[zz@localhost ~]$ pwd\n/home/zz\n[zz@localhost ~]$ mkdir /home/zz/data\n\n[zz@localhost ~]$ podman run -it -v "$(pwd)"/data:/data docker.io/library/busybox /bin/sh\nTrying to pull docker.io/library/busybox:latest...\nGetting image source signatures\nCopying blob 3cb635b06aa2 done  \nCopying config ffe9d497c3 done  \nWriting manifest to image destination\nStoring signatures\n/ # ls\nbin   data  dev   etc   home  proc  root  run   sys   tmp   usr   var\n/ # cd data/\n/data # ls\n/data # touch 123\n/data # ls -l\ntotal 0\n-rw-r--r--    1 root     root             0 Dec 13 00:17 123\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 在主机上查看\n\n[zz@localhost ~]$ ll data/\n总用量 0\n-rw-r--r-- 1 zz zz 0 12月 13 00:17 123\n\n//写入文件\n[zz@localhost ~]$ echo "hell world" >> 123\n[zz@localhost ~]$ cat 123\nhell world\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 容器里查看\n\n/data # cat 123\nhell world\n\n//我们可以发现在容器里面的文件的属主和属组都属于root，那么如何才能让其属于tom用户呢？下面告诉你答案\n/data # ls -l\ntotal 4\n-rw-rw-r--    1 root     root            12 Dec 13 00:20 123\n\n//只要在运行容器的时候加上一个--userns=keep-id即可。\n[zz@localhost ~]$ podman run -it --name test -v "$(pwd)"/data:/data --userns=keep-id docker.io/library/busybox /bin/sh\n~ $ cd data/\n/data $ ls -l\ntotal 4\n-rw-r--r--    1 zz       zz              11 Dec 13 00:21 123\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n使用普通用户映射容器端口时会报“ permission denied”的错误\n\n[zz@localhost ~]$ podman run  -d -p 80:80 httpd\nError: rootlessport cannot expose privileged port 80, you can add \'net.ipv4.ip_unprivileged_port_start=80\' to /etc/sysctl.conf (currently 1024), or choose a larger port number (>= 1024): listen tcp 0.0.0.0:80: bind: permission denied\n\n\n1\n2\n\n\n普通用户可以映射>= 1024的端口\n\n[zz@localhost ~]$ podman run  -d -p 1024:80 httpd\n58613a6bdc70d4d4f9f624583f795a62a610596d166f0873bdff8fb26aa15092\n[zz@localhost ~]$ ss -anlt\nState       Recv-Q      Send-Q           Local Address:Port           Peer Address:Port      Process      \nLISTEN      0           128                    0.0.0.0:22                  0.0.0.0:*                      \nLISTEN      0           128                          *:1024                      *:*                      \nLISTEN      0           128                       [::]:22                     [::]:* \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n配置echo ‘net.ipv4.ip_unprivileged_port_start=80’ >> /etc/sysctl.conf后可以映射大于等于80的端口\n\n[root@localhost ~]# echo  \'net.ipv4.ip_unprivileged_port_start=80\'  >> /etc/sysctl.conf\n[root@localhost ~]# sysctl -p\nnet.ipv4.ip_unprivileged_port_start = 80\n\n[zz@localhost ~]$ podman run -d -p 80:80 httpd\n1215455a0c300d78e7bf6afaefc9873f818c6b0f26affeee4e2bc17954e72d8e\n[zz@localhost ~]$ ss -anlt\nState       Recv-Q      Send-Q           Local Address:Port           Peer Address:Port      Process      \nLISTEN      0           128                    0.0.0.0:22                  0.0.0.0:*                      \nLISTEN      0           128                          *:1024                      *:*                      \nLISTEN      0           128                          *:80                        *:*                      \nLISTEN      0           128                       [::]:22                     [::]:*  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',normalizedContent:'来源：http://t-t.ink/0v26k\n\n\n# 什么是podman？\n\npodman 是一个开源的容器运行时项目，可在大多数 linux 平台上使用。podman 提供与 docker 非常相似的功能。正如前面提到的那样，它不需要在你的系统上运行任何守护进程，并且它也可以在没有 root 权限的情况下运行。\n\npodman 可以管理和运行任何符合 oci（open container initiative）规范的容器和容器镜像。podman 提供了一个与 docker 兼容的命令行前端来管理 docker 镜像。\n\npodman 官网地址：https://podman.io/\n\n# 「podman和docker的主要区别是什么？」\n\n * dockers在实现cri的时候，它需要一个守护进程，其次需要以root运行，因此这也带来了安全隐患。\n * podman不需要守护程序，也不需要root用户运行，从逻辑架构上，比docker更加合理。\n * 在docker的运行体系中，需要多个daemon才能调用到oci的实现runc。\n * 在容器管理的链路中，docker engine的实现就是dockerd\n * daemon，它在linux中需要以root运行，dockerd调用containerd，containerd调用containerd-shim，然后才能调用runc。顾名思义shim起的作用也就是“垫片”，避免父进程退出影响容器的运训\n * podman直接调用oci,runtime（runc），通过common作为容器进程的管理工具，但不需要dockerd这种以root身份运行的守护进程。(点击下载2021年最新阿里p7面试题教程)\n * 在podman体系中，有个称之为common的守护进程，其运行路径通常是/usr/libexec/podman/conmon，它是各个容器进程的父进程，每个容器各有一个，common的父则通常是1号进程。podman中的common其实相当于docker体系中的containerd-shim。\n\n图中所体现的事情是，podman不需要守护进程，而dorker需要守护进程。在这个图的示意中，dorcker的containerd-shim与podman的common被归在container一层。\n\n# 「podman的使用与docker有什么区别？」\n\npodman的定位也是与docker兼容，因此在使用上面尽量靠近docker。在使用方面，可以分成两个方面来说，一是系统构建者的角度，二是使用者的角度。\n\n在系统构建者方面，用podman的默认软件，与docker的区别不大，只是在进程模型、进程关系方面有所区别。如果习惯了docker几个关联进程的调试方法，在podman中则需要适应。可以通过pstree命令查看进程的树状结构。总体来看，podman比docker要简单。由于podman比docker少了一层daemon，因此重启的机制也就不同了。\n\n在使用者方面，podman与docker的命令基本兼容，都包括容器运行时（run/start/kill/ps/inspect），本地镜像（images/rmi/build）、镜像仓库（login/pull/push）等几个方面。因此podman的命令行工具与docker类似，比如构建镜像、启停容器等。甚至可以通过alias\n\ndocker=podman可以进行替换。因此，即便使用了podman，仍然可以使用docker.io作为镜像仓库，这也是兼容性最关键的部分。\n\n\n# podman常用命令\n\n# 「容器」\n\npodman run           创建并启动容器\npodman start         启动容器\npodman ps            查看容器\npodman stop          终止容器\npodman restart       重启容器\npodman attach        进入容器\npodman exec          进入容器\npodman export        导出容器\npodman import        导入容器快照\npodman rm            删除容器\npodman logs          查看日志\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 「镜像」\n\npodman search                检索镜像\npodman pull                  获取镜像\npodman images                列出镜像\npodman image is              列出镜像\npodman rmi                   删除镜像\npodman image rm              删除镜像\npodman save                  导出镜像\npodman load                  导入镜像\npodmanfile                   定制镜像（三个）\n  podman build             构建镜像\n    podman run               运行镜像\n    podmanfile               常用指令（四个）\n      copy                 复制文件\n        add                  高级复制\n        cmd                  容器启动命令\n        env                  环境变量\n        expose               暴露端口\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n# 「部署 podman」\n\n//安装podman\n[root@localhost ~]# yum -y install podman\n\n\n1\n2\n\n\n\n# 「podman 加速器」\n\n版本7配置加速器\n\n//仓库配置\n[root@localhost ~]# vim /etc/containers/registries.conf\n[registries.search]\n#registries = ["registry.access.redhat.com", "registry.redhat.io", "docker.io"]   #这个是查找，从这三个地方查找\n\nregistries = ["docker.io"]    #如果只留一个，则只在一个源里查找\n[[docker.io]]\nlocation="j3m2itm3.mirror.aliyuncs.com"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n版本8配置加速器\n\n#unqualified-search-registries = ["registry.fedoraproject.org", "registry.access.redhat.com", "registry.centos.org", "docker.io"]     #直接注释掉\nunqualified-search-registries = ["docker.io"]    #添加一个docker.io\n[[registry]]\nprefix = "docker.io"\nlocation = "j3m2itm3.mirror.aliyuncs.com" （不用加https://  直接加地址）\n\n\n1\n2\n3\n4\n5\n\n\n\n# 「使用 podman」\n\n使用 podman 非常的简单，podman 的指令跟 docker 大多数都是相同的。下面我们来看几个常用的例子：\n\n# 运行一个容器\n\n[root@localhost ~]# podman run -d --name httpd docker.io/library/httpd\ntrying to pull docker.io/library/httpd...\ngetting image source signatures\ncopying blob e5ae68f74026 done  \ncopying blob d3576f2b6317 done  \ncopying blob bc36ee1127ec done  \ncopying blob f1aa5f54b226 done  \ncopying blob aa379c0cedc2 done  \ncopying config ea28e1b82f done  \nwriting manifest to image destination\nstoring signatures\n0492e405b9ecb05e6e6be1fec0ac1a8b6ba3ff949df259b45146037b5f355035\n\n//查看镜像\n[root@localhost ~]# podman images\nrepository                  tag      image id       created       size\ndocker.io/library/httpd     latest   ea28e1b82f31   11 days ago   148 mb\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n# 列出运行的容器\n\n[root@localhost ~]# podman ps\ncontainer id  image                             command           created             status                 ports  names\n0492e405b9ec  docker.io/library/httpd:latest    httpd-foreground  about a minute ago  up about a minute ago         httpd\n\n\n1\n2\n3\n\n\n注意：如果在ps命令中添加-a，podman 将显示所有容器。\n\n# 检查正在运行的容器\n\n您可以“检查”正在运行的容器的元数据和有关其自身的详细信息。我们甚至可以使用 inspect 子命令查看分配给容器的 ip 地址。由于容器以无根模式运行，因此未分配 ip 地址，并且该值将在检查的输出中列为“无”。\n\n[root@localhost ~]# podman inspect -l | grep ipaddress\\": \n            "secondaryipaddresses": null, \n            "ipaddress": "10.88.0.5",\n\n[root@localhost ~]# curl 10.88.0.5\n<html><body><h1>it works!</h1></body></html>\n\n\n1\n2\n3\n4\n5\n6\n\n\n注意：-l 是最新容器的便利参数。您还可以使用容器的 id 代替 -l。\n\n# 查看一个运行中容器的日志\n\n选项\n  --latest    #最近的\n  \n[root@localhost ~]# podman logs --latest\nah00558: httpd: could not reliably determine the server\'s fully qualified domain name, using 10.88.0.5. set the \'servername\' directive globally to suppress this message\nah00558: httpd: could not reliably determine the server\'s fully qualified domain name, using 10.88.0.5. set the \'servername\' directive globally to suppress this message\n[mon dec 13 15:17:53.690844 2021] [mpm_event:notice] [pid 1:tid 140665160166720] ah00489: apache/2.4.51 (unix) configured -- resuming normal operations\n[mon dec 13 15:17:53.690946 2021] [core:notice] [pid 1:tid 140665160166720] ah00094: command line: \'httpd -d foreground\'\n10.88.0.1 - - [13/dec/2021:15:19:48 +0000] "get / http/1.1" 200 45\n10.88.0.1 - - [13/dec/2021:15:20:47 +0000] "get / http/1.1" 200 45\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n查看一个运行容器中的进程资源使用情况，可以使用top观察容器中的 nginx pid\n\n语法：\n  podman top <container_id>  \n  \n[root@localhost ~]# podman top httpd\nuser       pid   ppid   %cpu    elapsed            tty   time   command\nroot       1     0      0.000   15m38.599711321s   ?     0s     httpd -dforeground \nwww-data   7     1      0.000   15m38.599783256s   ?     0s     httpd -dforeground \nwww-data   8     1      0.000   15m38.599845342s   ?     0s     httpd -dforeground \nwww-data   9     1      0.000   15m38.599880444s   ?     0s     httpd -dforeground \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 停止一个运行中的容器\n\n[root@localhost ~]# podman stop --latest\n2f3edf712621d3a41e03fa8c7f6a5cdba56fbbad43a7a59ede26cc88f31006c4\n[root@localhost ~]# podman ps\ncontainer id  image  command  created  status  ports  names\n\n\n1\n2\n3\n4\n\n\n# 删除一个容器\n\n[root@localhost ~]# podman rm --latest\n2f3edf712621d3a41e03fa8c7f6a5cdba56fbbad43a7a59ede26cc88f31006c4\n[root@localhost ~]# podman ps -a\ncontainer id  image  command  created  status  ports  names\n\n\n1\n2\n3\n4\n\n\n以上这些特性基本上都和 docker 一样，podman 除了兼容这些特性外，还支持了一些新的特性。\n\n# 上传镜像\n\n例如，如果我们想在 docker.io 上分享我们新建的 nginx 容器镜像，这很容易。首先登录码头：\n\n[root@localhost nginx]# tree \n.\n├── dockerfile\n└── files\n    └── nginx-1.20.1.tar.gz\n\n[root@localhost nginx]# cat dockerfile \nfrom docker.io/library/centos\n\nenv path /usr/local/nginx/sbin:$path\nadd files/nginx-1.20.1.tar.gz /usr/src\nrun useradd -r -m -s /sbin/nologin nginx && \\\n    yum -y install pcre-devel openssl openssl-devel gd-devel gcc gcc-c++ make && \\\n    mkdir -p /var/log/nginx && \\\n    cd /usr/src/nginx-1.20.1 && \\\n    ./configure \\\n    --prefix=/usr/local/nginx \\\n    --user=nginx \\\n    --group=nginx \\\n    --with-debug \\\n    --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --with-http_image_filter_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_stub_status_module \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --error-log-path=/var/log/nginx/error.log && \\\n  make && make install\n\ncmd ["nginx","-g","daemon off"]\n[root@localhost nginx]# podman build -t nginx .\n\n// 修改镜像名\n [root@localhost ~]# podman tag docker.io/library/nginx:latest docker.io/1314444/test:latest\n\n// 登录并上传镜像\n[root@localhost ~]# podman login docker.io // 需要告诉其要登录到docker仓库\n[root@localhost ~]# podman login docker.io\nusername: 1314444    #账户\npassword: ********    #密码\nlogin succeeded!\n\n[root@localhost nginx]# podman push docker.io/1314444/test:latest  //上传镜像\ngetting image source signatures\ncopying blob 38c40d6c2c85 done\ncopying blob fee76a531659 done\ncopying blob c2adabaecedb done\ncopying config 7f3589c0b8 done\nwriting manifest to image destination\ncopying config 7f3589c0b8 done\nwriting manifest to image destination\nstoring signatures\n\n\n//请注意，我们将四层推送到我们的注册表，现在可供其他人共享。快速浏览一下：\n[root@localhost ~]# podman inspect 1314444/test:nginx\n//输出：\n[\n    {\n        "id": "7f3589c0b8849a9e1ff52ceb0fcea2390e2731db9d1a7358c2f5fad216a48263",\n        "digest": "sha256:7822b5ba4c2eaabdd0ff3812277cfafa8a25527d1e234be028ed381a43ad5498",\n        "repotags": [\n            "docker.io/1314444/test:nginx",\n    ......\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n总而言之，podman 使查找、运行、构建和共享容器变得容易。\n\n# 配置别名\n\n如果习惯了使用 docker 命令，可以直接给 podman 配置一个别名来实现无缝转移。你只需要在 .bashrc 下加入以下行内容即可：\n\n[root@localhost ~]# echo "alias docker=podman" >> .bashrc\nsource .bashrc\n[root@localhost ~]# alias\nalias cp=\'cp -i\'\nalias docker=\'podman\'\n.......\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 「用户操作」\n\n在允许没有root特权的用户运行podman之前，管理员必须安装或构建podman并完成以下配置\n\ncgroup v2linux内核功能允许用户限制普通用户容器可以使用的资源，如果使用cgroupv2启用了运行podman的linux发行版，则可能需要更改默认的oci运行时。某些较旧的版本runc不适用于cgroupv2，必须切换到备用oci运行时crun。\n\n[root@localhost ~]# yum -y install crun     //centos8系统自带\n\n[root@localhost ~]# vi /usr/share/containers/containers.conf \n    446 # default oci runtime\n    447 # \n    448 runtime = "crun"      //取消注释并将runc改为crun\n\n[root@localhost ~]# podman run -d --name web -p 80:80 docker.io/library/nginx\nc8664d2e43c872e1e5219f82d41f63048ed3a5ed4fb6259c225a14d6c243677f\n\n[root@localhost ~]# podman inspect web | grep crun\n        "ociruntime": "crun",\n            "crun",\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n# 安装slirp4netns和fuse-overlayfs\n\n在普通用户环境中使用podman时，建议使用fuse-overlayfs而不是vfs文件系统，至少需要版本0.7.6。现在新版本默认就是了。\n\n[root@localhost ~]# yum -y install slirp4netns\n\n[root@localhost ~]# yum -y install fuse-overlayfs\n[root@localhost ~]# vi /etc/containers/storage.conf\n77 mount_program = "/usr/bin/fuse-overlayfs"     //取消注释\n\n\n1\n2\n3\n4\n5\n\n\n# / etc / subuid和/ etc / subgid配置\n\npodman要求运行它的用户在/ etc / subuid和/ etc / subgid文件中列出一系列uid,shadow-utils或newuid包提供这些文件\n\n[root@localhost ~]# yum -y install shadow-utils\n\n可以在/ etc / subuid和/ etc / subgid查看，每个用户的值必须唯一且没有任何重叠。\n\n[root@localhost ~]# useradd zz\n[root@localhost ~]# cat /etc/subuid\nzz:100000:65536\n[root@localhost ~]# cat /etc/subgid\nzz:100000:65536\n\n// 启动非特权ping \n[root@localhost ~]# sysctl -w "net.ipv4.ping_group_range=0 200000" //大于100000这个就表示tom可以操作podman\nnet.ipv4.ping_group_range = 0 200000\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n这个文件的格式是 username:uid:range中/etc/passwd或输出中列出的用户名getpwent。\n\n * 为用户分配的初始 uid。\n * 为用户分配的 uid 范围的大小。\n\n该usermod程序可用于为用户分配 uid 和 gid，而不是直接更新文件。\n\n[root@localhost ~]# usermod --add-subuids 200000-201000 --add-subgids 200000-201000 hh\ngrep hh /etc/subuid /etc/subgid\n/etc/subuid:hh:200000:1001\n/etc/subgid:hh:200000:1001\n\n\n1\n2\n3\n4\n\n\n# 用户配置文件\n\n三个主要的配置文件是**「container.conf」、「storage.conf」和「registries.conf」**。用户可以根据需要修改这些文件。\n\ncontainer.conf\n\n// 用户配置文件\n[root@localhost ~]# cat /usr/share/containers/containers.conf\n[root@localhost ~]# cat /etc/containers/containers.conf\n[root@localhost ~]# cat ~/.config/containers/containers.conf  //优先级最高\n\n\n1\n2\n3\n4\n\n\n如果它们以该顺序存在。每个文件都可以覆盖特定字段的前一个文件。\n\n配置storage.conf文件\n\n1./etc/containers/storage.conf\n2.$home/.config/containers/storage.conf\n\n\n1\n2\n\n\n在普通用户中**/etc/containers/storage.conf**的一些字段将被忽略\n\n[root@localhost ~]#  vi /etc/containers/storage.conf\n[storage]\n\n# default storage driver, must be set for proper operation.\ndriver = "overlay"    #此处改为overlay\n.......\nmount_program = "/usr/bin/fuse-overlayfs"    #取消注释\n\n[root@localhost ~]# sysctl user.max_user_namespaces=15000  #如果版本为8以下，则需要做以下操作：\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n在普通用户中这些字段默认\n\ngraphroot="$home/.local/share/containers/storage"\nrunroot="$xdg_runtime_dir/containers"\n\n\n1\n2\n\n\nregistries.conf\n\n配置按此顺序读入,这些文件不是默认创建的,可以从**/usr/share/containers**「或复制文件」/etc/containers并进行修改。\n\n1./etc/containers/registries.conf\n2./etc/containers/registries.d/*\n3.home/.config/containers/registries.conf\n\n\n1\n2\n3\n\n\n授权文件\n\n此文件里面写了docker账号的密码，以加密方式显示\n\n[root@localhost ~]# podman login\nusername: 1314444\npassword: \nlogin succeeded!\n[root@localhost ~]# cat /run/user/0/containers/auth.json \n{\n        "auths": {\n                "registry.fedoraproject.org": {\n                        "auth": "mtmxndq0ndpimjaxny0xoa=="\n                }\n        }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n普通用户是无法看见root用户的镜像的\n\n//root用户\n[root@localhost ~]# podman images\nrepository                  tag      image id       created       size\ndocker.io/library/httpd     latest   ea28e1b82f31   11 days ago   146 mb\n\n//普通用户\n[root@localhost ~]# su - zz\n[zz@localhost ~]$ podman images\nrepository  tag         image id    created     size\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 卷\n\n * 容器与root用户一起运行，则root容器中的用户实际上就是主机上的用户。\n * uid gid是在/etc/subuid和/etc/subgid等中用户映射中指定的第一个uid gid。\n * 如果普通用户的身份从主机目录挂载到容器中，并在该目录中以根用户身份创建文件，则会看到它实际上是你的用户在主机上拥有的。\n\n# 使用卷\n\n[root@localhost ~]# su - zz\n[zz@localhost ~]$ pwd\n/home/zz\n[zz@localhost ~]$ mkdir /home/zz/data\n\n[zz@localhost ~]$ podman run -it -v "$(pwd)"/data:/data docker.io/library/busybox /bin/sh\ntrying to pull docker.io/library/busybox:latest...\ngetting image source signatures\ncopying blob 3cb635b06aa2 done  \ncopying config ffe9d497c3 done  \nwriting manifest to image destination\nstoring signatures\n/ # ls\nbin   data  dev   etc   home  proc  root  run   sys   tmp   usr   var\n/ # cd data/\n/data # ls\n/data # touch 123\n/data # ls -l\ntotal 0\n-rw-r--r--    1 root     root             0 dec 13 00:17 123\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 在主机上查看\n\n[zz@localhost ~]$ ll data/\n总用量 0\n-rw-r--r-- 1 zz zz 0 12月 13 00:17 123\n\n//写入文件\n[zz@localhost ~]$ echo "hell world" >> 123\n[zz@localhost ~]$ cat 123\nhell world\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 容器里查看\n\n/data # cat 123\nhell world\n\n//我们可以发现在容器里面的文件的属主和属组都属于root，那么如何才能让其属于tom用户呢？下面告诉你答案\n/data # ls -l\ntotal 4\n-rw-rw-r--    1 root     root            12 dec 13 00:20 123\n\n//只要在运行容器的时候加上一个--userns=keep-id即可。\n[zz@localhost ~]$ podman run -it --name test -v "$(pwd)"/data:/data --userns=keep-id docker.io/library/busybox /bin/sh\n~ $ cd data/\n/data $ ls -l\ntotal 4\n-rw-r--r--    1 zz       zz              11 dec 13 00:21 123\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n使用普通用户映射容器端口时会报“ permission denied”的错误\n\n[zz@localhost ~]$ podman run  -d -p 80:80 httpd\nerror: rootlessport cannot expose privileged port 80, you can add \'net.ipv4.ip_unprivileged_port_start=80\' to /etc/sysctl.conf (currently 1024), or choose a larger port number (>= 1024): listen tcp 0.0.0.0:80: bind: permission denied\n\n\n1\n2\n\n\n普通用户可以映射>= 1024的端口\n\n[zz@localhost ~]$ podman run  -d -p 1024:80 httpd\n58613a6bdc70d4d4f9f624583f795a62a610596d166f0873bdff8fb26aa15092\n[zz@localhost ~]$ ss -anlt\nstate       recv-q      send-q           local address:port           peer address:port      process      \nlisten      0           128                    0.0.0.0:22                  0.0.0.0:*                      \nlisten      0           128                          *:1024                      *:*                      \nlisten      0           128                       [::]:22                     [::]:* \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n配置echo ‘net.ipv4.ip_unprivileged_port_start=80’ >> /etc/sysctl.conf后可以映射大于等于80的端口\n\n[root@localhost ~]# echo  \'net.ipv4.ip_unprivileged_port_start=80\'  >> /etc/sysctl.conf\n[root@localhost ~]# sysctl -p\nnet.ipv4.ip_unprivileged_port_start = 80\n\n[zz@localhost ~]$ podman run -d -p 80:80 httpd\n1215455a0c300d78e7bf6afaefc9873f818c6b0f26affeee4e2bc17954e72d8e\n[zz@localhost ~]$ ss -anlt\nstate       recv-q      send-q           local address:port           peer address:port      process      \nlisten      0           128                    0.0.0.0:22                  0.0.0.0:*                      \nlisten      0           128                          *:1024                      *:*                      \nlisten      0           128                          *:80                        *:*                      \nlisten      0           128                       [::]:22                     [::]:*  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',charsets:{cjk:!0},createdTime:1646015912e3,updateTime:"February 28, 2022 08:48",updateTimeStamp:1646038123e3,createTime:"February 28, 2022 02:38",createTimeStamp:1646015912e3,contributors:[]},{title:"Linux",frontmatter:{author:"xlc520",title:"Linux",description:"Linux分类",time:null,category:"Linux",tags:"Linux",article:!0,timeline:!0,icon:null,password:null},regularPath:"/linux/",relativePath:"linux/README.md",key:"v-dd4f6e68",path:"/linux/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1644739094e3,updateTime:"February 13, 2022 12:45",updateTimeStamp:1644756312e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Windows子系统",frontmatter:{author:"xlc520",title:"Windows子系统",description:"Windows子系统优化,ubuntu,docker",time:"2022-02-16T00:00:00.000Z",category:"Linux",tags:"Linux",article:!0,timeline:!0,icon:null,password:null},regularPath:"/linux/Windows%E5%AD%90%E7%B3%BB%E7%BB%9F.html",relativePath:"linux/Windows子系统.md",key:"v-712c4c34",path:"/linux/Windows%E5%AD%90%E7%B3%BB%E7%BB%9F/",headers:[{level:2,title:"更换apt源。",slug:"更换apt源。",normalizedTitle:"更换apt源。",charIndex:17},{level:2,title:"在WSL2下安装Docker",slug:"在wsl2下安装docker",normalizedTitle:"在wsl2下安装docker",charIndex:3827},{level:2,title:"Win10与wsl2子系统互相访问",slug:"win10与wsl2子系统互相访问",normalizedTitle:"win10与wsl2子系统互相访问",charIndex:5264},{level:2,title:"FAQ",slug:"faq",normalizedTitle:"faq",charIndex:5438},{level:2,title:"systemctl命令无法使用",slug:"systemctl命令无法使用",normalizedTitle:"systemctl命令无法使用",charIndex:5446},{level:2,title:"Vmmem 进程占用过多内存",slug:"vmmem-进程占用过多内存",normalizedTitle:"vmmem 进程占用过多内存",charIndex:6677},{level:2,title:"（可选）使用Podman取代Docker",slug:"可选-使用podman取代docker",normalizedTitle:"（可选）使用podman取代docker",charIndex:7026},{level:2,title:"WSL2 系统占用磁盘空间不释放",slug:"wsl2-系统占用磁盘空间不释放",normalizedTitle:"wsl2 系统占用磁盘空间不释放",charIndex:8733}],readingTime:{minutes:7.11,words:2134},headersStr:"更换apt源。 在WSL2下安装Docker Win10与wsl2子系统互相访问 FAQ systemctl命令无法使用 Vmmem 进程占用过多内存 （可选）使用Podman取代Docker WSL2 系统占用磁盘空间不释放",content:'# Windows子系统\n\n\n# 更换apt源。\n\n因为Linux子系统的apt源使用的是官方源，需要连接到国外的服务器。所以安装一些软件时下载会很慢，我们可以改用国内的镜像apt源。国内的镜像源主要有：\n\n可以直接使用 vim 对 /etc/apt/sources.list文件进行修改。\n\n先进行一下备份。\n\nsudo mv /etc/apt/sources.list /etc/apt/sources.list.bak\n\n\n1\n\n\n然后\n\nsudo vim  /etc/apt/sources.list\n\n\n1\n\n\n# 阿里源ubuntu 20.04(focal)\n\ndeb http://mirrors.aliyun.com/ubuntu/ focal main restricted\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted\ndeb http://mirrors.aliyun.com/ubuntu/ focal universe\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates universe\ndeb http://mirrors.aliyun.com/ubuntu/ focal multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security universe\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security multiverse\n\n\nubuntu 18.04(bionic) 配置如下\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 科大源\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 网易源\n\ndeb http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n选择一个源添加到文件最前面或直接替换掉原文件。保存后运行\n\nsudo apt-get update\n\n\n1\n\n\n\n# 在WSL2下安装Docker\n\nwsl2已经完整使用了linux内核此种方式与之前在vmware虚拟机安装docker类似，依次执行如下命令：\n\n$ curl -fsSL https://get.docker.com -o get-docker.sh$ sudo sh get-docker.sh\n\n\n1\n\n\n原生linux安装docker方式\n\n因为wsl2已经完整使用了linux内核了，此种方式和先前在linux虚拟机安装docker类似，步骤如下：\n\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\nsudo service docker start\n\n\n1\n2\n3\n\n\n执行脚本安装过程中，脚本提示“建议使用Docker Desktop for windows”，20s内按Ctrl+C会退出安装，所以需要等待20s，此种方式需要访问网络。\n\n最后一个步骤，启动Docker daemon。但是此处有一个问题，WSL2经过测试无法使用systemctl命令（此问题已经解决），因此我们使用service命令启动Docker daemon进程。命令如下所示：\n\nsudo service docker start\n* Starting Docker: docker\n\n\n1\n2\n\n\n**注意:**在我安装完毕docker后,docker pull以及run都会出现异常 Error response from daemon: Get https://registry-1.docker.io/v2/library/redis/manifests/latest: remote error: tls: bad record MAC 此时只需要修改docker镜像下载地址为国内镜像即可 必须修改 daemon.json ,docker pull register方式无效!!! 修改daemon.json操作命令如下:\n\nvim /etc/docker/daemon.json\n\n\n1\n\n\n{\n\t"registry-mirrors":[\n        "https://docker.mirrors.ustc.edu.cn",\n        "http://hub-mirror.c.163.com",\n        "http://f1361db2.m.daocloud.io",\n        "https://ovfftd6p.mirror.aliyuncs.com",\n        "https://ayyx3zqn.mirror.aliyuncs.com",\n        "https://registry.docker-cn.com",\n        "https://dockerhub.azk8s.cn",\n        "https://reg-mirror.qiniu.com"\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n检查docker安装正常\n\n# 检查dockerd进程启动\nservice docker status\nps aux|grep docker\n# 检查拉取镜像等正常\ndocker pull busybox\ndocker images\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Win10与wsl2子系统互相访问\n\nWin10访问wsl2系统比vm虚拟机是亮点，特别方便，进入CMD或者PowerShell，输入：\n\ncd \\\\wsl$\\Ubuntu\\\n\n\n1\n\n\n可以进入Ubuntu-20.04子系统根目录\n\n或者打开文件资源管理器，在地址栏输入\\\\wsl$\\Ubuntu\\，也可以Ubuntu子系统根目录。\n\n\n\n\n# FAQ\n\n\n# systemctl命令无法使用\n\n现象为在命令行执行systemctl命令，报如下错误：\n\nSystem has not been booted with systemd as init system (PID 1). Can\'t operate.\nFailed to connect to bus: Host is down\n\n\n1\n2\n\n\n参考了https://forum.snapcraft.io/t/running-snaps-on-wsl2-insiders-only-for-now/13033之后给出如下解决方案：\n\n 1. 安装daemonize和fontconfig\n\napt install -y fontconfig daemonize\n\n\n1\n\n 1. 编辑vim /etc/profile脚本，加入如下内容：\n\nSYSTEMD_PID=$(ps -ef | grep \'/lib/systemd/systemd --system-unit=basic.target$\' | grep -v unshare | awk \'{print $2}\')\n\nif [ -z "$SYSTEMD_PID" ]; then\n   sudo /usr/bin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target\n   SYSTEMD_PID=$(ps -ef | grep \'/lib/systemd/systemd --system-unit=basic.target$\' | grep -v unshare | awk \'{print $2}\')\nfi\n\nif [ -n "$SYSTEMD_PID" ] && [ "$SYSTEMD_PID" != "1" ]; then\n    exec sudo /usr/bin/nsenter -t $SYSTEMD_PID -a su - $LOGNAME\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 1. 修改vim /etc/sudoers文件，加入如下内容：\n\n%sudo ALL=(ALL) NOPASSWD: /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target\n%sudo ALL=(ALL) NOPASSWD: /usr/bin/nsenter -t [0-9]* -a su - [a-zA-Z0-9]*\n\n\n1\n2\n\n 1. 执行source /etc/profile或者是重新打开terminal，执行systemctl验证是否能够正常操作。\n\n\n# Vmmem 进程占用过多内存\n\n我们可以通过WSL的配置文件，限制vmmem进程的内存占用。在%UserProfile%目录创建.wslconfig文件，添加如下内容：\n\n[wsl2]\nmemory=2GB\nswap=0\nlocalhostForwarding=true\n\n\n1\n2\n3\n4\n\n\n这里限制了vmmem进程最大内存不超过6GB，不使用交换空间。 创建完配置文件后，执行wsl --shutdown关闭WSL，再重新启动即可生效。\n\n参考资料： https://github.com/microsoft/WSL/issues/4166 https://docs.microsoft.com/en-us/windows/wsl/release-notes#build-18945\n\n\n# （可选）使用Podman取代Docker\n\nPodman已成为CentOS8官方御用容器管理器，并且Kubernetes1.12已经放弃对Docker的支持。相比Docker，Podman无需守护进程，不强制要求使用root用户来管理容器，具有更好的灵活性和安全性。Podman使用方式和Docker完全相同，兼容Docker的镜像格式。 经本人试验Podman可以完美的在WSL2 Ubuntu中运行。\n\n在WSL2中安装Podman的方法可参考如下链接：https://www.redhat.com/sysadmin/podman-windows-wsl2\n\n下面脚本为Podman的安装脚本：\n\n. /etc/os-release\nsudo sh -c "echo \'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/x${NAME}_${VERSION_ID}/ /\' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list"\nwget -nv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/x${NAME}_${VERSION_ID}/Release.key -O Release.key\nsudo apt-key add - < Release.key\nsudo apt-get update -qq\nsudo apt-get -qq -y install podman\nsudo mkdir -p /etc/containers\necho -e "[registries.search]\\nregistries = [\'docker.io\', \'quay.io\']" | sudo tee /etc/containers/registries.conf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n如果没有其他报错信息，到这里Podman已安装完毕。我们可以执行podman info命令，验证是否安装成功。\n\n官方安装\n\nhttps://podman.io/getting-started/installation\n\n注意：在 Ubuntu 20.10 和更新版本上，我们强烈建议您仅使用来自 Kubic 存储库或官方 Ubuntu 存储库的 Buildah、Podman 和 Skopeo。混合和匹配可能会导致不可预知的情况，包括安装冲突。\n\n. /etc/os-release\necho "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list\ncurl -L "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key" | sudo apt-key add -\nsudo apt-get update\nsudo apt-get -y upgrade\nsudo apt-get -y install podman\n\n\n1\n2\n3\n4\n5\n6\n\n\n镜像：\n\n\nvim /etc/containers/registries.conf\n\n[registries.search]\nregistries = [\'i2kldsde.mirror.aliyuncs.com\',\'docker.io\']\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# WSL2 系统占用磁盘空间不释放\n\nWSL2本质是虚拟机，它使用的是vhdx虚拟磁盘格式。它支持自动扩容，但是并不会自动缩容。\n\n我们可以使用diskpart命令，手工执行缩容操作。\n\ndiskpart\n# open window Diskpart\nselect vdisk file="D:\\WSL\\Ubuntu\\ext4.vhdx"\nattach vdisk readonly\ncompact vdisk\ndetach vdisk\nexit\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n其中D:\\WSL\\Ubuntu\\ext4.vhdx为WSL2系统虚拟磁盘文件路径。',normalizedContent:'# windows子系统\n\n\n# 更换apt源。\n\n因为linux子系统的apt源使用的是官方源，需要连接到国外的服务器。所以安装一些软件时下载会很慢，我们可以改用国内的镜像apt源。国内的镜像源主要有：\n\n可以直接使用 vim 对 /etc/apt/sources.list文件进行修改。\n\n先进行一下备份。\n\nsudo mv /etc/apt/sources.list /etc/apt/sources.list.bak\n\n\n1\n\n\n然后\n\nsudo vim  /etc/apt/sources.list\n\n\n1\n\n\n# 阿里源ubuntu 20.04(focal)\n\ndeb http://mirrors.aliyun.com/ubuntu/ focal main restricted\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted\ndeb http://mirrors.aliyun.com/ubuntu/ focal universe\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates universe\ndeb http://mirrors.aliyun.com/ubuntu/ focal multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security universe\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security multiverse\n\n\nubuntu 18.04(bionic) 配置如下\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 科大源\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 网易源\n\ndeb http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n选择一个源添加到文件最前面或直接替换掉原文件。保存后运行\n\nsudo apt-get update\n\n\n1\n\n\n\n# 在wsl2下安装docker\n\nwsl2已经完整使用了linux内核此种方式与之前在vmware虚拟机安装docker类似，依次执行如下命令：\n\n$ curl -fssl https://get.docker.com -o get-docker.sh$ sudo sh get-docker.sh\n\n\n1\n\n\n原生linux安装docker方式\n\n因为wsl2已经完整使用了linux内核了，此种方式和先前在linux虚拟机安装docker类似，步骤如下：\n\ncurl -fssl https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\nsudo service docker start\n\n\n1\n2\n3\n\n\n执行脚本安装过程中，脚本提示“建议使用docker desktop for windows”，20s内按ctrl+c会退出安装，所以需要等待20s，此种方式需要访问网络。\n\n最后一个步骤，启动docker daemon。但是此处有一个问题，wsl2经过测试无法使用systemctl命令（此问题已经解决），因此我们使用service命令启动docker daemon进程。命令如下所示：\n\nsudo service docker start\n* starting docker: docker\n\n\n1\n2\n\n\n**注意:**在我安装完毕docker后,docker pull以及run都会出现异常 error response from daemon: get https://registry-1.docker.io/v2/library/redis/manifests/latest: remote error: tls: bad record mac 此时只需要修改docker镜像下载地址为国内镜像即可 必须修改 daemon.json ,docker pull register方式无效!!! 修改daemon.json操作命令如下:\n\nvim /etc/docker/daemon.json\n\n\n1\n\n\n{\n\t"registry-mirrors":[\n        "https://docker.mirrors.ustc.edu.cn",\n        "http://hub-mirror.c.163.com",\n        "http://f1361db2.m.daocloud.io",\n        "https://ovfftd6p.mirror.aliyuncs.com",\n        "https://ayyx3zqn.mirror.aliyuncs.com",\n        "https://registry.docker-cn.com",\n        "https://dockerhub.azk8s.cn",\n        "https://reg-mirror.qiniu.com"\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n检查docker安装正常\n\n# 检查dockerd进程启动\nservice docker status\nps aux|grep docker\n# 检查拉取镜像等正常\ndocker pull busybox\ndocker images\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# win10与wsl2子系统互相访问\n\nwin10访问wsl2系统比vm虚拟机是亮点，特别方便，进入cmd或者powershell，输入：\n\ncd \\\\wsl$\\ubuntu\\\n\n\n1\n\n\n可以进入ubuntu-20.04子系统根目录\n\n或者打开文件资源管理器，在地址栏输入\\\\wsl$\\ubuntu\\，也可以ubuntu子系统根目录。\n\n\n\n\n# faq\n\n\n# systemctl命令无法使用\n\n现象为在命令行执行systemctl命令，报如下错误：\n\nsystem has not been booted with systemd as init system (pid 1). can\'t operate.\nfailed to connect to bus: host is down\n\n\n1\n2\n\n\n参考了https://forum.snapcraft.io/t/running-snaps-on-wsl2-insiders-only-for-now/13033之后给出如下解决方案：\n\n 1. 安装daemonize和fontconfig\n\napt install -y fontconfig daemonize\n\n\n1\n\n 1. 编辑vim /etc/profile脚本，加入如下内容：\n\nsystemd_pid=$(ps -ef | grep \'/lib/systemd/systemd --system-unit=basic.target$\' | grep -v unshare | awk \'{print $2}\')\n\nif [ -z "$systemd_pid" ]; then\n   sudo /usr/bin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target\n   systemd_pid=$(ps -ef | grep \'/lib/systemd/systemd --system-unit=basic.target$\' | grep -v unshare | awk \'{print $2}\')\nfi\n\nif [ -n "$systemd_pid" ] && [ "$systemd_pid" != "1" ]; then\n    exec sudo /usr/bin/nsenter -t $systemd_pid -a su - $logname\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 1. 修改vim /etc/sudoers文件，加入如下内容：\n\n%sudo all=(all) nopasswd: /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target\n%sudo all=(all) nopasswd: /usr/bin/nsenter -t [0-9]* -a su - [a-za-z0-9]*\n\n\n1\n2\n\n 1. 执行source /etc/profile或者是重新打开terminal，执行systemctl验证是否能够正常操作。\n\n\n# vmmem 进程占用过多内存\n\n我们可以通过wsl的配置文件，限制vmmem进程的内存占用。在%userprofile%目录创建.wslconfig文件，添加如下内容：\n\n[wsl2]\nmemory=2gb\nswap=0\nlocalhostforwarding=true\n\n\n1\n2\n3\n4\n\n\n这里限制了vmmem进程最大内存不超过6gb，不使用交换空间。 创建完配置文件后，执行wsl --shutdown关闭wsl，再重新启动即可生效。\n\n参考资料： https://github.com/microsoft/wsl/issues/4166 https://docs.microsoft.com/en-us/windows/wsl/release-notes#build-18945\n\n\n# （可选）使用podman取代docker\n\npodman已成为centos8官方御用容器管理器，并且kubernetes1.12已经放弃对docker的支持。相比docker，podman无需守护进程，不强制要求使用root用户来管理容器，具有更好的灵活性和安全性。podman使用方式和docker完全相同，兼容docker的镜像格式。 经本人试验podman可以完美的在wsl2 ubuntu中运行。\n\n在wsl2中安装podman的方法可参考如下链接：https://www.redhat.com/sysadmin/podman-windows-wsl2\n\n下面脚本为podman的安装脚本：\n\n. /etc/os-release\nsudo sh -c "echo \'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/x${name}_${version_id}/ /\' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list"\nwget -nv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/x${name}_${version_id}/release.key -o release.key\nsudo apt-key add - < release.key\nsudo apt-get update -qq\nsudo apt-get -qq -y install podman\nsudo mkdir -p /etc/containers\necho -e "[registries.search]\\nregistries = [\'docker.io\', \'quay.io\']" | sudo tee /etc/containers/registries.conf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n如果没有其他报错信息，到这里podman已安装完毕。我们可以执行podman info命令，验证是否安装成功。\n\n官方安装\n\nhttps://podman.io/getting-started/installation\n\n注意：在 ubuntu 20.10 和更新版本上，我们强烈建议您仅使用来自 kubic 存储库或官方 ubuntu 存储库的 buildah、podman 和 skopeo。混合和匹配可能会导致不可预知的情况，包括安装冲突。\n\n. /etc/os-release\necho "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xubuntu_${version_id}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list\ncurl -l "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xubuntu_${version_id}/release.key" | sudo apt-key add -\nsudo apt-get update\nsudo apt-get -y upgrade\nsudo apt-get -y install podman\n\n\n1\n2\n3\n4\n5\n6\n\n\n镜像：\n\n\nvim /etc/containers/registries.conf\n\n[registries.search]\nregistries = [\'i2kldsde.mirror.aliyuncs.com\',\'docker.io\']\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# wsl2 系统占用磁盘空间不释放\n\nwsl2本质是虚拟机，它使用的是vhdx虚拟磁盘格式。它支持自动扩容，但是并不会自动缩容。\n\n我们可以使用diskpart命令，手工执行缩容操作。\n\ndiskpart\n# open window diskpart\nselect vdisk file="d:\\wsl\\ubuntu\\ext4.vhdx"\nattach vdisk readonly\ncompact vdisk\ndetach vdisk\nexit\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n其中d:\\wsl\\ubuntu\\ext4.vhdx为wsl2系统虚拟磁盘文件路径。',charsets:{cjk:!0},createdTime:1645165833e3,updateTime:"March 18, 2022 05:25",updateTimeStamp:1647581153e3,createTime:"February 18, 2022 06:30",createTimeStamp:1645165833e3,contributors:[]},{title:"宝塔面板绕过绑定账号",frontmatter:{author:"xlc520",title:"宝塔面板绕过绑定账号",description:"宝塔面板v7.7.0-解锁Nginx防火墙及网站监控报表-绕过绑定账号",time:null,category:"Linux",tags:"Linux",article:!0,timeline:!0,icon:null,password:null},regularPath:"/linux/bt.html",relativePath:"linux/bt.md",key:"v-496cea52",path:"/linux/bt/",readingTime:{minutes:2.2,words:660},headersStr:null,content:"# 宝塔面板v7.7.0-解锁Nginx防火墙及网站监控报表-绕过绑定账号\n\n测试环境：Ubuntu / Debian / CentOS 测试时间：2021-12-20 宝塔版本： 7.7.0 仅测试了Nginx防火墙及网站监控报表两款插件，其它收费插件未测试 其它系统及版本未进行测试，请自行验证，请勿在生产环境下进行测试！ 注意：修改代码后需要重启面板服务才能使其生效，如果面板出现乱码重启服务器即可；\n\n解锁所有付费插件为永不过期\n\n文件路径：www/server/panel/data/plugin.json 搜索字符串：\"endtime\": -1 全部替换为 \"endtime\": 999999999999 显示永久专业版或企业版标识\n\n文件路径：www/server/panel/data/plugin.json 查找字符串：name\": \"coll_admin\"，将panel_pro或panel_ltd后面的-1改为0 禁止解锁插件后自动修复为免费版\n\n文件路径：www/server/panel/data/repair.json 查找字符串：\"id\": 16，将这段修复权限的代码删除 禁止宝塔面板检测升级，防止失效\n\n文件路径：www/server/panel/data/plugin.json 查找字符串：name\": \"coll_admin\"，将这段里的update_mgs删除或者改为null 下面是2021/08/24的方法，上面是最新的 修改后不能使用问题：如果修改后出现软件中心页面空白，那是因为代码位置有问题，可以参考下面示例图代码位置 位置一定要一致 开始 打开目录/www/server/panel/class找到并编辑panelplugin.py文件 使用Ctrl+F搜索并找到softList['list'] = tmpList这段代码，在其下方添加如下代码：\n\n                softList['pro'] = 1\n        for soft in softList['list']:\n            soft['endtime'] = 0\n\n\n1\n2\n3\n\n\n示例：\n\n修改完成后重启面板，重启完成后就可以直接安装收费的插件了，Nginx防火墙也可以直接安装使用\n\n网站监控报表 如果需要使用网站监控报表还需另外修改一次代码： 安装好网站监控报表插件后打开/www/server/panel/plugin/total目录并编辑total_main.py文件 使用Ctrl+F搜索并找到if 'bt_total' in session: return public.returnMsg(True,'OK!');这段代码 在这段代码前加上#将其注释掉，并在其下方加入以下代码：\n\n        session['bt_total'] = True\n        return public.returnMsg(True,'OK!');\n\n\n1\n2\n\n\n示例：\n\n然后再次重启面板，即可使用网站监控报表插件了；\n\n一键消除宝塔的强制登录方法简单粗暴，但是非常有效~\n\n复制该命令到终端运行即可：rm -f /www/server/panel/data/bind.pl",normalizedContent:"# 宝塔面板v7.7.0-解锁nginx防火墙及网站监控报表-绕过绑定账号\n\n测试环境：ubuntu / debian / centos 测试时间：2021-12-20 宝塔版本： 7.7.0 仅测试了nginx防火墙及网站监控报表两款插件，其它收费插件未测试 其它系统及版本未进行测试，请自行验证，请勿在生产环境下进行测试！ 注意：修改代码后需要重启面板服务才能使其生效，如果面板出现乱码重启服务器即可；\n\n解锁所有付费插件为永不过期\n\n文件路径：www/server/panel/data/plugin.json 搜索字符串：\"endtime\": -1 全部替换为 \"endtime\": 999999999999 显示永久专业版或企业版标识\n\n文件路径：www/server/panel/data/plugin.json 查找字符串：name\": \"coll_admin\"，将panel_pro或panel_ltd后面的-1改为0 禁止解锁插件后自动修复为免费版\n\n文件路径：www/server/panel/data/repair.json 查找字符串：\"id\": 16，将这段修复权限的代码删除 禁止宝塔面板检测升级，防止失效\n\n文件路径：www/server/panel/data/plugin.json 查找字符串：name\": \"coll_admin\"，将这段里的update_mgs删除或者改为null 下面是2021/08/24的方法，上面是最新的 修改后不能使用问题：如果修改后出现软件中心页面空白，那是因为代码位置有问题，可以参考下面示例图代码位置 位置一定要一致 开始 打开目录/www/server/panel/class找到并编辑panelplugin.py文件 使用ctrl+f搜索并找到softlist['list'] = tmplist这段代码，在其下方添加如下代码：\n\n                softlist['pro'] = 1\n        for soft in softlist['list']:\n            soft['endtime'] = 0\n\n\n1\n2\n3\n\n\n示例：\n\n修改完成后重启面板，重启完成后就可以直接安装收费的插件了，nginx防火墙也可以直接安装使用\n\n网站监控报表 如果需要使用网站监控报表还需另外修改一次代码： 安装好网站监控报表插件后打开/www/server/panel/plugin/total目录并编辑total_main.py文件 使用ctrl+f搜索并找到if 'bt_total' in session: return public.returnmsg(true,'ok!');这段代码 在这段代码前加上#将其注释掉，并在其下方加入以下代码：\n\n        session['bt_total'] = true\n        return public.returnmsg(true,'ok!');\n\n\n1\n2\n\n\n示例：\n\n然后再次重启面板，即可使用网站监控报表插件了；\n\n一键消除宝塔的强制登录方法简单粗暴，但是非常有效~\n\n复制该命令到终端运行即可：rm -f /www/server/panel/data/bind.pl",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 12:45",updateTimeStamp:1644756312e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Openssl一键自签证书",frontmatter:{icon:"page",title:"Openssl一键自签证书",author:"xlc520",time:"2022-01-10T00:00:00.000Z",category:"linux",tag:["Openssl"],sticky:!1,star:!0},regularPath:"/linux/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6.html",relativePath:"linux/openssl一键自签证书.md",key:"v-2a9f5c48",path:"/linux/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/",readingTime:{minutes:.46,words:137},headersStr:null,content:'# Openssl一键自签证书\n\nvim openssl.sh\n\n#!/bin/bash\nwhile [[ -z "$domain" ]];do\n    read -p "输入域名/IP(必填,如 *.haoduck.com): " domain\ndone\nread -p "输入邮箱(选填,默认admin@haoduck.com): " mail\n[[ -z "$mail" ]] && mail=admin@haoduck.com\nread -p "输入日期(选填,默认3650): " day\n[[ -z "$day" ]] && day=3650\ndir=$domain && mkdir -p $dir\ncrt_file="$dir/${domain}.crt"\nkey_file="$dir/${domain}.key"\nif [[ "$(command -v openssl)" ]];then\n    openssl req -x509 -nodes -newkey rsa:2048 -days $day -keyout $key_file -out $crt_file -subj "/C=US/ST=California/L=Los Angeles/O=Haoduck/OU=Aoao/CN=${domain}/emailAddress=${mail}"\n    echo -e "\\t证书：$(pwd)/$crt_file\\n\\t私钥：$(pwd)/$key_file"\nelse\n    echo "openssl 未安装"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\nbash openssl.sh',normalizedContent:'# openssl一键自签证书\n\nvim openssl.sh\n\n#!/bin/bash\nwhile [[ -z "$domain" ]];do\n    read -p "输入域名/ip(必填,如 *.haoduck.com): " domain\ndone\nread -p "输入邮箱(选填,默认admin@haoduck.com): " mail\n[[ -z "$mail" ]] && mail=admin@haoduck.com\nread -p "输入日期(选填,默认3650): " day\n[[ -z "$day" ]] && day=3650\ndir=$domain && mkdir -p $dir\ncrt_file="$dir/${domain}.crt"\nkey_file="$dir/${domain}.key"\nif [[ "$(command -v openssl)" ]];then\n    openssl req -x509 -nodes -newkey rsa:2048 -days $day -keyout $key_file -out $crt_file -subj "/c=us/st=california/l=los angeles/o=haoduck/ou=aoao/cn=${domain}/emailaddress=${mail}"\n    echo -e "\\t证书：$(pwd)/$crt_file\\n\\t私钥：$(pwd)/$key_file"\nelse\n    echo "openssl 未安装"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\nbash openssl.sh',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"实用 shell 脚本",frontmatter:{author:"xlc520",title:"实用 shell 脚本",description:"实用 shell 脚本，建议收藏！",time:"2022-02-15T00:00:00.000Z",category:"Linux",tags:"Linux",article:!0,timeline:!0,icon:null,password:null},regularPath:"/linux/%E5%AE%9E%E7%94%A8%20shell%20%E8%84%9A%E6%9C%AC.html",relativePath:"linux/实用 shell 脚本.md",key:"v-b722715a",path:"/linux/%E5%AE%9E%E7%94%A8%20shell%20%E8%84%9A%E6%9C%AC/",headers:[{level:2,title:"1、服务器系统配置初始化",slug:"_1、服务器系统配置初始化",normalizedTitle:"1、服务器系统配置初始化",charIndex:18},{level:2,title:"2、批量创建多个用户并设置密码",slug:"_2、批量创建多个用户并设置密码",normalizedTitle:"2、批量创建多个用户并设置密码",charIndex:1759},{level:2,title:"3、一键查看服务器利用率",slug:"_3、一键查看服务器利用率",normalizedTitle:"3、一键查看服务器利用率",charIndex:2156},{level:2,title:"4、找出占用CPU 内存过高的进程",slug:"_4、找出占用cpu-内存过高的进程",normalizedTitle:"4、找出占用cpu 内存过高的进程",charIndex:3291},{level:2,title:"5、查看网卡的实时流量",slug:"_5、查看网卡的实时流量",normalizedTitle:"5、查看网卡的实时流量",charIndex:3590},{level:2,title:"6、监控多台服务器磁盘利用率脚本",slug:"_6、监控多台服务器磁盘利用率脚本",normalizedTitle:"6、监控多台服务器磁盘利用率脚本",charIndex:4098},{level:2,title:"7、批量检测网站是否异常并邮件通知",slug:"_7、批量检测网站是否异常并邮件通知",normalizedTitle:"7、批量检测网站是否异常并邮件通知",charIndex:5003},{level:2,title:"8、批量主机远程执行命令脚本",slug:"_8、批量主机远程执行命令脚本",normalizedTitle:"8、批量主机远程执行命令脚本",charIndex:5730},{level:2,title:"9、一键部署LNMP网站平台脚本",slug:"_9、一键部署lnmp网站平台脚本",normalizedTitle:"9、一键部署lnmp网站平台脚本",charIndex:6353},{level:2,title:"10、监控MySQL主从同步状态是否异常脚本",slug:"_10、监控mysql主从同步状态是否异常脚本",normalizedTitle:"10、监控mysql主从同步状态是否异常脚本",charIndex:9133},{level:2,title:"11、MySql数据库备份脚本",slug:"_11、mysql数据库备份脚本",normalizedTitle:"11、mysql数据库备份脚本",charIndex:9639},{level:2,title:"12、Nginx访问日志分析",slug:"_12、nginx访问日志分析",normalizedTitle:"12、nginx访问日志分析",charIndex:11005},{level:2,title:"13、Nginx访问日志自动按天（周、月）切割",slug:"_13、nginx访问日志自动按天-周、月-切割",normalizedTitle:"13、nginx访问日志自动按天（周、月）切割",charIndex:11837},{level:2,title:"14、自动发布Java项目（Tomcat）",slug:"_14、自动发布java项目-tomcat",normalizedTitle:"14、自动发布java项目（tomcat）",charIndex:12307},{level:2,title:"15、自动发布PHP项目",slug:"_15、自动发布php项目",normalizedTitle:"15、自动发布php项目",charIndex:13180},{level:2,title:"16、DOS攻击防范（自动屏蔽攻击IP）",slug:"_16、dos攻击防范-自动屏蔽攻击ip",normalizedTitle:"16、dos攻击防范（自动屏蔽攻击ip）",charIndex:13777},{level:2,title:"17、目录入侵检测与告警",slug:"_17、目录入侵检测与告警",normalizedTitle:"17、目录入侵检测与告警",charIndex:14233},{level:2,title:"18、Dos攻击防范（自动屏蔽攻击IP）",slug:"_18、dos攻击防范-自动屏蔽攻击ip",normalizedTitle:"18、dos攻击防范（自动屏蔽攻击ip）",charIndex:14507},{level:2,title:"19、Linux系统发送告警脚本",slug:"_19、linux系统发送告警脚本",normalizedTitle:"19、linux系统发送告警脚本",charIndex:14937},{level:2,title:"20、MySQL数据库备份单循环",slug:"_20、mysql数据库备份单循环",normalizedTitle:"20、mysql数据库备份单循环",charIndex:15150},{level:2,title:"21、MySQL数据库备份多循环",slug:"_21、mysql数据库备份多循环",normalizedTitle:"21、mysql数据库备份多循环",charIndex:15659},{level:2,title:"22、Nginx 访问访问日志按天切割",slug:"_22、nginx-访问访问日志按天切割",normalizedTitle:"22、nginx 访问访问日志按天切割",charIndex:16444},{level:2,title:"23、Nginx访问日志分析脚本",slug:"_23、nginx访问日志分析脚本",normalizedTitle:"23、nginx访问日志分析脚本",charIndex:16865},{level:2,title:"24、查看网卡实时流量脚本",slug:"_24、查看网卡实时流量脚本",normalizedTitle:"24、查看网卡实时流量脚本",charIndex:17699},{level:2,title:"25、服务器系统配置初始化脚本",slug:"_25、服务器系统配置初始化脚本",normalizedTitle:"25、服务器系统配置初始化脚本",charIndex:18220},{level:2,title:"26、监控100台服务器磁盘利用率脚本",slug:"_26、监控100台服务器磁盘利用率脚本",normalizedTitle:"26、监控100台服务器磁盘利用率脚本",charIndex:19885},{level:2,title:"27、监控MySQL主从同步状态是否异常脚本",slug:"_27、监控mysql主从同步状态是否异常脚本",normalizedTitle:"27、监控mysql主从同步状态是否异常脚本",charIndex:20535},{level:2,title:"28、目录文件变化监控和实时文件同步",slug:"_28、目录文件变化监控和实时文件同步",normalizedTitle:"28、目录文件变化监控和实时文件同步",charIndex:21071},{level:2,title:"29、批量创建100用户并设置密码脚本",slug:"_29、批量创建100用户并设置密码脚本",normalizedTitle:"29、批量创建100用户并设置密码脚本",charIndex:21354},{level:2,title:"30、批量检测网站是否异常脚本",slug:"_30、批量检测网站是否异常脚本",normalizedTitle:"30、批量检测网站是否异常脚本",charIndex:21792},{level:2,title:"31、批量主机远程执行命令脚本",slug:"_31、批量主机远程执行命令脚本",normalizedTitle:"31、批量主机远程执行命令脚本",charIndex:22383},{level:2,title:"32、一键部署LNMP网站平台脚本",slug:"_32、一键部署lnmp网站平台脚本",normalizedTitle:"32、一键部署lnmp网站平台脚本",charIndex:23007},{level:2,title:"33、一键查看服务器资源利用率",slug:"_33、一键查看服务器资源利用率",normalizedTitle:"33、一键查看服务器资源利用率",charIndex:25930},{level:2,title:"34、找出占用CPU 内存过高的进程脚本",slug:"_34、找出占用cpu-内存过高的进程脚本",normalizedTitle:"34、找出占用cpu 内存过高的进程脚本",charIndex:27299},{level:2,title:"35、自动发布Java项目（Tomcat）",slug:"_35、自动发布java项目-tomcat",normalizedTitle:"35、自动发布java项目（tomcat）",charIndex:27450},{level:2,title:"36、自动发布PHP项目脚本",slug:"_36、自动发布php项目脚本",normalizedTitle:"36、自动发布php项目脚本",charIndex:28382}],readingTime:{minutes:15.87,words:4760},headersStr:"1、服务器系统配置初始化 2、批量创建多个用户并设置密码 3、一键查看服务器利用率 4、找出占用CPU 内存过高的进程 5、查看网卡的实时流量 6、监控多台服务器磁盘利用率脚本 7、批量检测网站是否异常并邮件通知 8、批量主机远程执行命令脚本 9、一键部署LNMP网站平台脚本 10、监控MySQL主从同步状态是否异常脚本 11、MySql数据库备份脚本 12、Nginx访问日志分析 13、Nginx访问日志自动按天（周、月）切割 14、自动发布Java项目（Tomcat） 15、自动发布PHP项目 16、DOS攻击防范（自动屏蔽攻击IP） 17、目录入侵检测与告警 18、Dos攻击防范（自动屏蔽攻击IP） 19、Linux系统发送告警脚本 20、MySQL数据库备份单循环 21、MySQL数据库备份多循环 22、Nginx 访问访问日志按天切割 23、Nginx访问日志分析脚本 24、查看网卡实时流量脚本 25、服务器系统配置初始化脚本 26、监控100台服务器磁盘利用率脚本 27、监控MySQL主从同步状态是否异常脚本 28、目录文件变化监控和实时文件同步 29、批量创建100用户并设置密码脚本 30、批量检测网站是否异常脚本 31、批量主机远程执行命令脚本 32、一键部署LNMP网站平台脚本 33、一键查看服务器资源利用率 34、找出占用CPU 内存过高的进程脚本 35、自动发布Java项目（Tomcat） 36、自动发布PHP项目脚本",content:'# 实用 shell 脚本\n\n\n# 1、服务器系统配置初始化\n\n#/bin/bash\n# 安装系统性能分析工具及其他\nyum install gcc make autoconf vim sysstat net-tools iostat iftop iotp wget lrzsz lsof unzip openssh-clients net-tool vim ntpdate -y\n# 设置时区并同步时间\nln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nif ! crontab -l |grep ntpdate &>/dev/null ; then\n    (echo "* 1 * * * ntpdate time.windows.com >/dev/null 2>&1";crontab -l) |crontab \nfi\n \n# 禁用selinux\nsed -i \'/SELINUX/{s/permissive/disabled/}\' /etc/selinux/config\n \n# 关闭防火墙\nif egrep "7.[0-9]" /etc/redhat-release &>/dev/null; then\n    systemctl stop firewalld\n    systemctl disable firewalld\nelif egrep "6.[0-9]" /etc/redhat-release &>/dev/null; then\n    service iptables stop\n    chkconfig iptables off\nfi\n \n# 历史命令显示操作时间\nif ! grep HISTTIMEFORMAT /etc/bashrc; then\n    echo \'export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S  `whoami` "\' >> /etc/bashrc\nfi\n \n# SSH超时时间\nif ! grep "TMOUT=600" /etc/profile &>/dev/null; then\n    echo "export TMOUT=600" >> /etc/profile\nfi\n \n# 禁止root远程登录 切记给系统添加普通用户，给su到root的权限\nsed -i \'s/#PermitRootLogin yes/PermitRootLogin no/\' /etc/ssh/sshd_config\n \n# 禁止定时任务向发送邮件\nsed -i \'s/^MAILTO=root/MAILTO=""/\' /etc/crontab \n \n# 设置最大打开文件数\nif ! grep "* soft nofile 65535" /etc/security/limits.conf &>/dev/null; then\ncat >> /etc/security/limits.conf << EOF\n    * soft nofile 65535\n    * hard nofile 65535\nEOF\nfi\n \n# 系统内核优化\ncat >> /etc/sysctl.conf << EOF\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_max_tw_buckets = 20480\nnet.ipv4.tcp_max_syn_backlog = 20480\nnet.core.netdev_max_backlog = 262144\nnet.ipv4.tcp_fin_timeout = 20  \nEOF\n \n# 减少SWAP使用\necho "0" > /proc/sys/vm/swappiness\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 2、批量创建多个用户并设置密码\n\n#!/bin/bash\nUSER_LIST=$@\nUSER_FILE=./user.info\nfor USER in $USER_LIST;do\n if ! id $USER &>/dev/null; then\n  PASS=$(echo $RANDOM |md5sum |cut -c 1-8)\n  useradd $USER\n  echo $PASS | passwd --stdin $USER &>/dev/null\n  echo "$USER   $PASS" >> $USER_FILE\n  echo "$USER User create successful."\n else\n  echo "$USER User already exists!"\n fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 3、一键查看服务器利用率\n\n#!/bin/bash\nfunction cpu(){\n \n util=$(vmstat | awk \'{if(NR==3)print $13+$14}\')\n iowait=$(vmstat | awk \'{if(NR==3)print $16}\')\n echo "CPU -使用率：${util}% ,等待磁盘IO相应使用率：${iowait}:${iowait}%"\n \n}\nfunction memory (){\n \n total=`free -m |awk \'{if(NR==2)printf "%.1f",$2/1024}\'`\n    used=`free -m |awk \'{if(NR==2) printf "%.1f",($2-$NF)/1024}\'`\n    available=`free -m |awk \'{if(NR==2) printf "%.1f",$NF/1024}\'`\n    echo "内存 - 总大小: ${total}G , 使用: ${used}G , 剩余: ${available}G"\n}\ndisk(){\n \n fs=$(df -h |awk \'/^\\/dev/{print $1}\')\n    for p in $fs; do\n        mounted=$(df -h |awk \'$1=="\'$p\'"{print $NF}\')\n        size=$(df -h |awk \'$1=="\'$p\'"{print $2}\')\n        used=$(df -h |awk \'$1=="\'$p\'"{print $3}\')\n        used_percent=$(df -h |awk \'$1=="\'$p\'"{print $5}\')\n        echo "硬盘 - 挂载点: $mounted , 总大小: $size , 使用: $used , 使用率: $used_percent"\n    done\n \n}\nfunction tcp_status() {\n    summary=$(ss -antp |awk \'{status[$1]++}END{for(i in status) printf i":"status[i]" "}\')\n    echo "TCP连接状态 - $summary"\n}\ncpu\nmemory\ndisk\ntcp_status\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 4、找出占用CPU 内存过高的进程\n\n#!/bin/bash\necho "-------------------CUP占用前10排序--------------------------------"\nps -eo user,pid,pcpu,pmem,args --sort=-pcpu  |head -n 10\necho "-------------------内存占用前10排序--------------------------------"\nps -eo user,pid,pcpu,pmem,args --sort=-pmem  |head -n 10\n\n\n1\n2\n3\n4\n5\n\n\n\n# 5、查看网卡的实时流量\n\n#!/bin/bash\neth0=$1\necho  -e    "流量进入--流量传出    "\nwhile true; do\n old_in=$(cat /proc/net/dev |grep $eth0 |awk \'{print $2}\')\n old_out=$(cat /proc/net/dev |grep $eth0 |awk \'{print $10}\')\n sleep 1\n new_in=$(cat /proc/net/dev |grep $eth0 |awk \'{print $2}\')\n new_out=$(cat /proc/net/dev |grep $eth0 |awk \'{print $10}\')\n in=$(printf "%.1f%s" "$((($new_in-$old_in)/1024))" "KB/s")\n out=$(printf "%.1f%s" "$((($new_out-$old_out)/1024))" "KB/s")\n echo "$in $out"\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 6、监控多台服务器磁盘利用率脚本\n\n#!/bin/bash\nHOST_INFO=host.info\nfor IP in $(awk \'/^[^#]/{print $1}\' $HOST_INFO); do\n #取出用户名和端口\n    USER=$(awk -v ip=$IP \'ip==$1{print $2}\' $HOST_INFO)\n    PORT=$(awk -v ip=$IP \'ip==$1{print $3}\' $HOST_INFO)\n #创建临时文件，保存信息\n    TMP_FILE=/tmp/disk.tmp\n #通过公钥登录获取主机磁盘信息\n    ssh -p $PORT $USER@$IP \'df -h\' > $TMP_FILE\n #分析磁盘占用空间\n    USE_RATE_LIST=$(awk \'BEGIN{OFS="="}/^\\/dev/{print $NF,int($5)}\' $TMP_FILE)\n #循环磁盘列表，进行判断\n    for USE_RATE in $USE_RATE_LIST; do\n  #取出等号（=）右边的值 挂载点名称\n        PART_NAME=${USE_RATE%=*}  \n  #取出等号（=）左边的值  磁盘利用率\n        USE_RATE=${USE_RATE#*=}\n  #进行判断\n        if [ $USE_RATE -ge 80 ]; then\n            echo "Warning: $PART_NAME Partition usage $USE_RATE%!"\n    echo "服务器$IP的磁盘空间占用过高，请及时处理" | mail -s "空间不足警告" 你的qq@qq.com\n  else\n   echo "服务器$IP的$PART_NAME目录空间良好"\n        fi\n    done\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n\n# 7、批量检测网站是否异常并邮件通知\n\n#!/bin/bash  \nURL_LIST="www.baidu.com www.ctnrs.com www.der-matech.net.cn www.der-matech.com.cn www.der-matech.cn www.der-matech.top www.der-matech.org"\nfor URL in $URL_LIST; do\n    FAIL_COUNT=0\n    for ((i=1;i<=3;i++)); do\n        HTTP_CODE=$(curl -o /dev/null --connect-timeout 3 -s -w "%{http_code}" $URL)\n        if [ $HTTP_CODE -eq 200 ]; then\n            echo "$URL OK"\n            break\n        else\n            echo "$URL retry $FAIL_COUNT"\n            let FAIL_COUNT++\n        fi\n    done\n    if [ $FAIL_COUNT -eq 3 ]; then\n        echo "Warning: $URL Access failure!"\n  echo "网站$URL坏掉，请及时处理" | mail -s "$URL网站高危" 1794748404@qq.com\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 8、批量主机远程执行命令脚本\n\n#!/bin/bash\nCOMMAND=$*\nHOST_INFO=host.info\nfor IP in $(awk \'/^[^#]/{print $1}\' $HOST_INFO); do\n    USER=$(awk -v ip=$IP \'ip==$1{print $2}\' $HOST_INFO)\n    PORT=$(awk -v ip=$IP \'ip==$1{print $3}\' $HOST_INFO)\n    PASS=$(awk -v ip=$IP \'ip==$1{print $4}\' $HOST_INFO)\n    expect -c "\n       spawn ssh -p $PORT $USER@$IP\n       expect {\n          \\"(yes/no)\\" {send \\"yes\\r\\"; exp_continue}\n          \\"password:\\" {send \\"$PASS\\r\\"; exp_continue}\n          \\"$USER@*\\" {send \\"$COMMAND\\r exit\\r\\"; exp_continue}\n       }\n    "\n    echo "-------------------"\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 9、一键部署LNMP网站平台脚本\n\n#!/bin/bash\nNGINX_V=1.15.6\nPHP_V=5.6.36\nTMP_DIR=/tmp\n \nINSTALL_DIR=/usr/local\n \nPWD_C=$PWD\n \necho\necho -e "\\tMenu\\n"\necho -e "1. Install Nginx"\necho -e "2. Install PHP"\necho -e "3. Install MySQL"\necho -e "4. Deploy LNMP"\necho -e "9. Quit"\n \nfunction command_status_check() {\n if [ $? -ne 0 ]; then\n  echo $1\n  exit\n fi \n}\n \nfunction install_nginx() {\n    cd $TMP_DIR\n    yum install -y gcc gcc-c++ make openssl-devel pcre-devel wget\n    wget http://nginx.org/download/nginx-${NGINX_V}.tar.gz\n    tar zxf nginx-${NGINX_V}.tar.gz\n    cd nginx-${NGINX_V}\n    ./configure --prefix=$INSTALL_DIR/nginx \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-stream\n    command_status_check "Nginx - 平台环境检查失败！"\n    make -j 4 \n    command_status_check "Nginx - 编译失败！"\n    make install\n    command_status_check "Nginx - 安装失败！"\n    mkdir -p $INSTALL_DIR/nginx/conf/vhost\n    alias cp=cp ; cp -rf $PWD_C/nginx.conf $INSTALL_DIR/nginx/conf\n    rm -rf $INSTALL_DIR/nginx/html/*\n    echo "ok" > $INSTALL_DIR/nginx/html/status.html\n    echo \'<?php echo "ok"?>\' > $INSTALL_DIR/nginx/html/status.php\n    $INSTALL_DIR/nginx/sbin/nginx\n    command_status_check "Nginx - 启动失败！"\n}\n \nfunction install_php() {\n cd $TMP_DIR\n    yum install -y gcc gcc-c++ make gd-devel libxml2-devel \\\n        libcurl-devel libjpeg-devel libpng-devel openssl-devel \\\n        libmcrypt-devel libxslt-devel libtidy-devel\n    wget http://docs.php.net/distributions/php-${PHP_V}.tar.gz\n    tar zxf php-${PHP_V}.tar.gz\n    cd php-${PHP_V}\n    ./configure --prefix=$INSTALL_DIR/php \\\n    --with-config-file-path=$INSTALL_DIR/php/etc \\\n    --enable-fpm --enable-opcache \\\n    --with-mysql --with-mysqli --with-pdo-mysql \\\n    --with-openssl --with-zlib --with-curl --with-gd \\\n    --with-jpeg-dir --with-png-dir --with-freetype-dir \\\n    --enable-mbstring --enable-hash\n    command_status_check "PHP - 平台环境检查失败！"\n    make -j 4 \n    command_status_check "PHP - 编译失败！"\n    make install\n    command_status_check "PHP - 安装失败！"\n    cp php.ini-production $INSTALL_DIR/php/etc/php.ini\n    cp sapi/fpm/php-fpm.conf $INSTALL_DIR/php/etc/php-fpm.conf\n    cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm\n    chmod +x /etc/init.d/php-fpm\n    /etc/init.d/php-fpm start\n    command_status_check "PHP - 启动失败！"\n}\n \nread -p "请输入编号：" number\ncase $number in\n    1)\n        install_nginx;;\n    2)\n        install_php;;\n    3)\n        install_mysql;;\n    4)\n        install_nginx\n        install_php\n        ;;\n    9)\n        exit;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n\n\n\n# 10、监控MySQL主从同步状态是否异常脚本\n\n#!/bin/bash  \nHOST=localhost\nUSER=root\nPASSWD=123.com\nIO_SQL_STATUS=$(mysql -h$HOST -u$USER -p$PASSWD -e \'show slave status\\G\' 2>/dev/null |awk \'/Slave_.*_Running:/{print $1$2}\')\nfor i in $IO_SQL_STATUS; do\n    THREAD_STATUS_NAME=${i%:*}\n    THREAD_STATUS=${i#*:}\n    if [ "$THREAD_STATUS" != "Yes" ]; then\n        echo "Error: MySQL Master-Slave $THREAD_STATUS_NAME status is $THREAD_STATUS!" |mail -s "Master-Slave Staus" xxx@163.com\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 11、MySql数据库备份脚本\n\n# 分库备份\n\nmysqldump -uroot -pxxx -B A > A.sql\n#!/bin/bash\nDATE=$(date +%F_%H-%M-%S)\nHOST=localhost\nUSER=backup\nPASS=123.com\nBACKUP_DIR=/data/db_backup\nDB_LIST=$(mysql -h$HOST -u$USER -p$PASS -s -e "show databases;" 2>/dev/null |egrep -v "Database|information_schema|mysql|performance_schema|sys")\n \nfor DB in $DB_LIST; do\n    BACKUP_NAME=$BACKUP_DIR/${DB}_${DATE}.sql\n    if ! mysqldump -h$HOST -u$USER -p$PASS -B $DB > $BACKUP_NAME 2>/dev/null; then\n        echo "$BACKUP_NAME 备份失败!"\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 分表备份\n\nmysqldump -uroot -pxxx -A t > t.sql\n#!/bin/bash\nDATE=$(date +%F_%H-%M-%S)\nHOST=localhost\nUSER=backup\nPASS=123.com\nBACKUP_DIR=/data/db_backup\nDB_LIST=$(mysql -h$HOST -u$USER -p$PASS -s -e "show databases;" 2>/dev/null |egrep -v "Database|information_schema|mysql|performance_schema|sys")\n \nfor DB in $DB_LIST; do\n    BACKUP_DB_DIR=$BACKUP_DIR/${DB}_${DATE}\n    [ ! -d $BACKUP_DB_DIR ] && mkdir -p $BACKUP_DB_DIR &>/dev/null\n    TABLE_LIST=$(mysql -h$HOST -u$USER -p$PASS -s -e "use $DB;show tables;" 2>/dev/null)\n    for TABLE in $TABLE_LIST; do\n        BACKUP_NAME=$BACKUP_DB_DIR/${TABLE}.sql \n        if ! mysqldump -h$HOST -u$USER -p$PASS $DB $TABLE > $BACKUP_NAME 2>/dev/null; then\n            echo "$BACKUP_NAME 备份失败!"\n        fi\n    done\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 12、Nginx访问日志分析\n\n#!/bin/bash\n# 日志格式: $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"\nLOG_FILE=$1\necho "统计访问最多的10个IP"\nawk \'{a[$1]++}END{print "UV:",length(a);for(v in a)print v,a[v]}\' $LOG_FILE |sort -k2 -nr |head -10\necho "----------------------"\n \necho "统计时间段访问最多的IP"\nawk \'$4>="[01/Dec/2018:13:20:25" && $4<="[27/Nov/2018:16:20:49"{a[$1]++}END{for(v in a)print v,a[v]}\' $LOG_FILE |sort -k2 -nr|head -10\necho "----------------------"\n \necho "统计访问最多的10个页面"\nawk \'{a[$7]++}END{print "PV:",length(a);for(v in a){if(a[v]>10)print v,a[v]}}\' $LOG_FILE |sort -k2 -nr\necho "----------------------"\n \necho "统计访问页面状态码数量"\nawk \'{a[$7" "$9]++}END{for(v in a){if(a[v]>5)print v,a[v]}}\' $LOG_FILE |sort -k3 -nr\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 13、Nginx访问日志自动按天（周、月）切割\n\n#!/bin/bash\n#nginx日志目录\nLOG_DIR=/www/server/nginx/logs\n#获取到上一天的时间\nYESTERDAY_TIME=$(date -d "yesterday" +%F)\n#归档日志取时间\nLOG_MONTH_DIR=$LOG_DIR/$(date +"%Y-%m")\n#归档日志的名称\nLOG_FILE_LIST="access.log"\n \nfor LOG_FILE in $LOG_FILE_LIST; do\n    [ ! -d $LOG_MONTH_DIR ] && mkdir -p $LOG_MONTH_DIR\n    mv $LOG_DIR/$LOG_FILE $LOG_MONTH_DIR/${LOG_FILE}_${YESTERDAY_TIME}\ndone\n \nkill -USR1 $(cat $LOG_DIR/nginx.pid)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 14、自动发布Java项目（Tomcat）\n\n#!/bin/bash\nDATE=$(date +%F_%T)\n \nTOMCAT_NAME=$1\nTOMCAT_DIR=/usr/local/$TOMCAT_NAME\nROOT=$TOMCAT_DIR/webapps/ROOT\n \nBACKUP_DIR=/data/backup\nWORK_DIR=/tmp\nPROJECT_NAME=tomcat-java-demo\n \n# 拉取代码\ncd $WORK_DIR\nif [ ! -d $PROJECT_NAME ]; then\n   git clone https://github.com/lizhenliang/tomcat-java-demo\n   cd $PROJECT_NAME\nelse\n   cd $PROJECT_NAME\n   git pull\nfi\n \n# 构建\nmvn clean package -Dmaven.test.skip=true\nif [ $? -ne 0 ]; then\n   echo "maven build failure!"\n   exit 1\nfi\n \n# 部署\nTOMCAT_PID=$(ps -ef |grep "$TOMCAT_NAME" |egrep -v "grep|$$" |awk \'NR==1{print $2}\')\n[ -n "$TOMCAT_PID" ] && kill -9 $TOMCAT_PID\n[ -d $ROOT ] && mv $ROOT $BACKUP_DIR/${TOMCAT_NAME}_ROOT$DATE\nunzip $WORK_DIR/$PROJECT_NAME/target/*.war -d $ROOT\n$TOMCAT_DIR/bin/startup.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# 15、自动发布PHP项目\n\n#!/bin/bash\n \nDATE=$(date +%F_%T)\n \nWWWROOT=/usr/local/nginx/html/$1\n \n \nBACKUP_DIR=/data/backup\nWORK_DIR=/tmp\nPROJECT_NAME=php-demo\n \n \n# 拉取代码\ncd $WORK_DIR\nif [ ! -d $PROJECT_NAME ]; then\n   git clone https://github.com/lizhenliang/php-demo\n   cd $PROJECT_NAME\nelse\n   cd $PROJECT_NAME\n   git pull\nfi\n \n \n# 部署\nif [ ! -d $WWWROOT ]; then\n   mkdir -p $WWWROOT\n   rsync -avz --exclude=.git $WORK_DIR/$PROJECT_NAME/* $WWWROOT\nelse\n   rsync -avz --exclude=.git $WORK_DIR/$PROJECT_NAME/* $WWWROOT\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 16、DOS攻击防范（自动屏蔽攻击IP）\n\n#!/bin/bash\nDATE=$(date +%d/%b/%Y:%H:%M)\n#nginx日志\nLOG_FILE=/usr/local/nginx/logs/demo2.access.log\n#分析ip的访问情况\nABNORMAL_IP=$(tail -n5000 $LOG_FILE |grep $DATE |awk \'{a[$1]++}END{for(i in a)if(a[i]>10)print i}\')\nfor IP in $ABNORMAL_IP; do\n    if [ $(iptables -vnL |grep -c "$IP") -eq 0 ]; then\n        iptables -I INPUT -s $IP -j DROP\n        echo "$(date +\'%F_%T\') $IP" >> /tmp/drop_ip.log\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 17、目录入侵检测与告警\n\n#!/bin/bash\n \nMON_DIR=/opt\ninotifywait -mqr --format %f -e create $MON_DIR |\\\nwhile read files; do\n   #同步文件\n   rsync -avz /opt /tmp/opt\n  #检测文件是否被修改\n   #echo "$(date +\'%F %T\') create $files" | mail -s "dir monitor" xxx@163.com\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 18、Dos攻击防范（自动屏蔽攻击IP）\n\n#!/bin/bash\nDATE=$(date +%d/%b/%Y:%H:%M)\nLOG_FILE=/usr/local/nginx/logs/demo2.access.log\nABNORMAL_IP=$(tail -n5000 $LOG_FILE |grep $DATE |awk \'{a[$1]++}END{for(i in a)if(a[i]>10)print i}\')\nfor IP in $ABNORMAL_IP; do\n    if [ $(iptables -vnL |grep -c "$IP") -eq 0 ]; then\n        iptables -I INPUT -s $IP -j DROP\n        echo "$(date +\'%F_%T\') $IP" >> /tmp/drop_ip.log\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 19、Linux系统发送告警脚本\n\n# yum install mailx\n# vi /etc/mail.rc  \nset from=baojingtongzhi@163.com smtp=smtp.163.com\nset smtp-auth-user=baojingtongzhi@163.com smtp-auth-password=123456\nset smtp-auth=login\n\n\n1\n2\n3\n4\n5\n\n\n\n# 20、MySQL数据库备份单循环\n\n#!/bin/bash\nDATE=$(date +%F_%H-%M-%S)\nHOST=localhost\nUSER=backup\nPASS=123.com\nBACKUP_DIR=/data/db_backup\nDB_LIST=$(mysql -h$HOST -u$USER -p$PASS -s -e "show databases;" 2>/dev/null |egrep -v "Database|information_schema|mysql|performance_schema|sys")\n \nfor DB in $DB_LIST; do\n    BACKUP_NAME=$BACKUP_DIR/${DB}_${DATE}.sql\n    if ! mysqldump -h$HOST -u$USER -p$PASS -B $DB > $BACKUP_NAME 2>/dev/null; then\n        echo "$BACKUP_NAME 备份失败!"\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 21、MySQL数据库备份多循环\n\n#!/bin/bash\nDATE=$(date +%F_%H-%M-%S)\nHOST=localhost\nUSER=backup\nPASS=123.com\nBACKUP_DIR=/data/db_backup\nDB_LIST=$(mysql -h$HOST -u$USER -p$PASS -s -e "show databases;" 2>/dev/null |egrep -v "Database|information_schema|mysql|performance_schema|sys")\n \nfor DB in $DB_LIST; do\n    BACKUP_DB_DIR=$BACKUP_DIR/${DB}_${DATE}\n    [ ! -d $BACKUP_DB_DIR ] && mkdir -p $BACKUP_DB_DIR &>/dev/null\n    TABLE_LIST=$(mysql -h$HOST -u$USER -p$PASS -s -e "use $DB;show tables;" 2>/dev/null)\n    for TABLE in $TABLE_LIST; do\n        BACKUP_NAME=$BACKUP_DB_DIR/${TABLE}.sql \n        if ! mysqldump -h$HOST -u$USER -p$PASS $DB $TABLE > $BACKUP_NAME 2>/dev/null; then\n            echo "$BACKUP_NAME 备份失败!"\n        fi\n    done\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 22、Nginx 访问访问日志按天切割\n\n#!/bin/bash\nLOG_DIR=/usr/local/nginx/logs\nYESTERDAY_TIME=$(date -d "yesterday" +%F)\nLOG_MONTH_DIR=$LOG_DIR/$(date +"%Y-%m")\nLOG_FILE_LIST="default.access.log"\n \nfor LOG_FILE in $LOG_FILE_LIST; do\n    [ ! -d $LOG_MONTH_DIR ] && mkdir -p $LOG_MONTH_DIR\n    mv $LOG_DIR/$LOG_FILE $LOG_MONTH_DIR/${LOG_FILE}_${YESTERDAY_TIME}\ndone\n \nkill -USR1 $(cat /var/run/nginx.pid)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 23、Nginx访问日志分析脚本\n\n#!/bin/bash\n# 日志格式: $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"\nLOG_FILE=$1\necho "统计访问最多的10个IP"\nawk \'{a[$1]++}END{print "UV:",length(a);for(v in a)print v,a[v]}\' $LOG_FILE |sort -k2 -nr |head -10\necho "----------------------"\n \necho "统计时间段访问最多的IP"\nawk \'$4>="[01/Dec/2018:13:20:25" && $4<="[27/Nov/2018:16:20:49"{a[$1]++}END{for(v in a)print v,a[v]}\' $LOG_FILE |sort -k2 -nr|head -10\necho "----------------------"\n \necho "统计访问最多的10个页面"\nawk \'{a[$7]++}END{print "PV:",length(a);for(v in a){if(a[v]>10)print v,a[v]}}\' $LOG_FILE |sort -k2 -nr\necho "----------------------"\n \necho "统计访问页面状态码数量"\nawk \'{a[$7" "$9]++}END{for(v in a){if(a[v]>5)print v,a[v]}}\' $LOG_FILE |sort -k3 -nr\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 24、查看网卡实时流量脚本\n\n#!/bin/bash\nNIC=$1\necho -e " In ------ Out"\nwhile true; do\n    OLD_IN=$(awk \'$0~"\'$NIC\'"{print $2}\' /proc/net/dev)\n    OLD_OUT=$(awk \'$0~"\'$NIC\'"{print $10}\' /proc/net/dev)\n    sleep 1\n    NEW_IN=$(awk  \'$0~"\'$NIC\'"{print $2}\' /proc/net/dev)\n    NEW_OUT=$(awk \'$0~"\'$NIC\'"{print $10}\' /proc/net/dev)\n    IN=$(printf "%.1f%s" "$((($NEW_IN-$OLD_IN)/1024))" "KB/s")\n    OUT=$(printf "%.1f%s" "$((($NEW_OUT-$OLD_OUT)/1024))" "KB/s")\n    echo "$IN $OUT"\n    sleep 1\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 25、服务器系统配置初始化脚本\n\n#/bin/bash\n# 设置时区并同步时间\nln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nif ! crontab -l |grep ntpdate &>/dev/null ; then\n    (echo "* 1 * * * ntpdate time.windows.com >/dev/null 2>&1";crontab -l) |crontab\nfi\n \n# 禁用selinux\nsed -i \'/SELINUX/{s/permissive/disabled/}\' /etc/selinux/config\n \n# 关闭防火墙\nif egrep "7.[0-9]" /etc/redhat-release &>/dev/null; then\n    systemctl stop firewalld\n    systemctl disable firewalld\nelif egrep "6.[0-9]" /etc/redhat-release &>/dev/null; then\n    service iptables stop\n    chkconfig iptables off\nfi\n \n# 历史命令显示操作时间\nif ! grep HISTTIMEFORMAT /etc/bashrc; then\n    echo \'export HISTTIMEFORMAT="%F %T `whoami` "\' >> /etc/bashrc\nfi\n \n# SSH超时时间\nif ! grep "TMOUT=600" /etc/profile &>/dev/null; then\n    echo "export TMOUT=600" >> /etc/profile\nfi\n \n# 禁止root远程登录\nsed -i \'s/#PermitRootLogin yes/PermitRootLogin no/\' /etc/ssh/sshd_config\n \n# 禁止定时任务向发送邮件\nsed -i \'s/^MAILTO=root/MAILTO=""/\' /etc/crontab\n \n# 设置最大打开文件数\nif ! grep "* soft nofile 65535" /etc/security/limits.conf &>/dev/null; then\n    cat >> /etc/security/limits.conf << EOF\n    * soft nofile 65535\n    * hard nofile 65535\n    EOF\nfi\n \n# 系统内核优化\ncat >> /etc/sysctl.conf << EOF\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_max_tw_buckets = 20480\nnet.ipv4.tcp_max_syn_backlog = 20480\nnet.core.netdev_max_backlog = 262144\nnet.ipv4.tcp_fin_timeout = 20  \nEOF\n \n# 减少SWAP使用\necho "0" > /proc/sys/vm/swappiness\n \n# 安装系统性能分析工具及其他\nyum install gcc make autoconf vim sysstat net-tools iostat iftop iotp lrzsz -y\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# 26、监控100台服务器磁盘利用率脚本\n\n#!/bin/bash\nHOST_INFO=host.info\nfor IP in $(awk \'/^[^#]/{print $1}\' $HOST_INFO); do\n    USER=$(awk -v ip=$IP \'ip==$1{print $2}\' $HOST_INFO)\n    PORT=$(awk -v ip=$IP \'ip==$1{print $3}\' $HOST_INFO)\n    TMP_FILE=/tmp/disk.tmp\n    ssh -p $PORT $USER@$IP \'df -h\' > $TMP_FILE\n    USE_RATE_LIST=$(awk \'BEGIN{OFS="="}/^\\/dev/{print $NF,int($5)}\' $TMP_FILE)\n    for USE_RATE in $USE_RATE_LIST; do\n        PART_NAME=${USE_RATE%=*}\n        USE_RATE=${USE_RATE#*=}\n        if [ $USE_RATE -ge 80 ]; then\n            echo "Warning: $PART_NAME Partition usage $USE_RATE%!"\n        fi\n    done\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 27、监控MySQL主从同步状态是否异常脚本\n\n#!/bin/bash  \nHOST=localhost\nUSER=root\nPASSWD=123.com\nIO_SQL_STATUS=$(mysql -h$HOST -u$USER -p$PASSWD -e \'show slave status\\G\' 2>/dev/null |awk \'/Slave_.*_Running:/{print $1$2}\')\nfor i in $IO_SQL_STATUS; do\n    THREAD_STATUS_NAME=${i%:*}\n    THREAD_STATUS=${i#*:}\n    if [ "$THREAD_STATUS" != "Yes" ]; then\n        echo "Error: MySQL Master-Slave $THREAD_STATUS_NAME status is $THREAD_STATUS!" |mail -s "Master-Slave Staus" [url=mailto:xxx@163.com]xxx@163.com[/url]\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 28、目录文件变化监控和实时文件同步\n\n#!/bin/bash\n \nMON_DIR=/opt\ninotifywait -mqr --format %f -e create $MON_DIR |\\\nwhile read files; do\n   rsync -avz /opt /tmp/opt\n   #echo "$(date +\'%F %T\') create $files" | mail -s "dir monitor" [url=mailto:xxx@163.com]xxx@163.com[/url]\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 29、批量创建100用户并设置密码脚本\n\n#!/bin/bash\nDATE=$@\nUSER_FILE=user.txt\nfor USER in $USER_LIST; do\n    if ! id $USER &>/dev/null; then\n        PASS=$(echo $RANDOM |md5sum |cut -c 1-8)\n        useradd $USER\n        echo $PASS |passwd --stdin $USER &>/dev/null\n        echo "$USER   $PASS" >> $USER_FILE\n        echo "$USER User create successful."\n    else\n        echo "$USER User already exists!"\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 30、批量检测网站是否异常脚本\n\n#!/bin/bash  \nURL_LIST="www.baidu.com [url=http://www.ctnrs.com]www.ctnrs.com[/url]"\nfor URL in $URL_LIST; do\n    FAIL_COUNT=0\n    for ((i=1;i<=3;i++)); do\n        HTTP_CODE=$(curl -o /dev/null --connect-timeout 3 -s -w "%{http_code}" $URL)\n        if [ $HTTP_CODE -eq 200 ]; then\n            echo "$URL OK"\n            break\n        else\n            echo "$URL retry $FAIL_COUNT"\n            let FAIL_COUNT++\n        fi\n    done\n    if [ $FAIL_COUNT -eq 3 ]; then\n        echo "Warning: $URL Access failure!"\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 31、批量主机远程执行命令脚本\n\n#!/bin/bash\nCOMMAND=$*\nHOST_INFO=host.info\nfor IP in $(awk \'/^[^#]/{print $1}\' $HOST_INFO); do\n    USER=$(awk -v ip=$IP \'ip==$1{print $2}\' $HOST_INFO)\n    PORT=$(awk -v ip=$IP \'ip==$1{print $3}\' $HOST_INFO)\n    PASS=$(awk -v ip=$IP \'ip==$1{print $4}\' $HOST_INFO)\n    expect -c "\n       spawn ssh -p $PORT $USER@$IP\n       expect {\n          \\"(yes/no)\\" {send \\"yes\\r\\"; exp_continue}\n          \\"password:\\" {send \\"$PASS\\r\\"; exp_continue}\n          \\"$USER@*\\" {send \\"$COMMAND\\r exit\\r\\"; exp_continue}\n       }\n    "\n    echo "-------------------"\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 32、一键部署LNMP网站平台脚本\n\n#!/bin/bash\nNGINX_V=1.15.6\nPHP_V=5.6.36\nTMP_DIR=/tmp\n \nINSTALL_DIR=/usr/local\n \nPWD_C=$PWD\n \necho\necho -e "\\tMenu\\n"\necho -e "1. Install Nginx"\necho -e "2. Install PHP"\necho -e "3. Install MySQL"\necho -e "4. Deploy LNMP"\necho -e "9. Quit"\n \nfunction command_status_check() {\n        if [ $? -ne 0 ]; then\n                echo $1\n                exit\n        fi\n}\n \nfunction install_nginx() {\n    cd $TMP_DIR\n    yum install -y gcc gcc-c++ make openssl-devel pcre-devel wget\n    wget [url=http://nginx.org/download/nginx-]http://nginx.org/download/nginx-[/url]${NGINX_V}.tar.gz\n    tar zxf nginx-${NGINX_V}.tar.gz\n    cd nginx-${NGINX_V}\n    ./configure --prefix=$INSTALL_DIR/nginx \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-stream\n    command_status_check "Nginx - 平台环境检查失败！"\n    make -j 4 \n    command_status_check "Nginx - 编译失败！"\n    make install\n    command_status_check "Nginx - 安装失败！"\n    mkdir -p $INSTALL_DIR/nginx/conf/vhost\n    alias cp=cp ; cp -rf $PWD_C/nginx.conf $INSTALL_DIR/nginx/conf\n    rm -rf $INSTALL_DIR/nginx/html/*\n    echo "ok" > $INSTALL_DIR/nginx/html/status.html\n    echo \'<?php echo "ok"?>\' > $INSTALL_DIR/nginx/html/status.php\n    $INSTALL_DIR/nginx/sbin/nginx\n    command_status_check "Nginx - 启动失败！"\n}\n \nfunction install_php() {\n        cd $TMP_DIR\n    yum install -y gcc gcc-c++ make gd-devel libxml2-devel \\\n        libcurl-devel libjpeg-devel libpng-devel openssl-devel \\\n        libmcrypt-devel libxslt-devel libtidy-devel\n    wget [url=http://docs.php.net/distributions/php-]http://docs.php.net/distributions/php-[/url]${PHP_V}.tar.gz\n    tar zxf php-${PHP_V}.tar.gz\n    cd php-${PHP_V}\n    ./configure --prefix=$INSTALL_DIR/php \\\n    --with-config-file-path=$INSTALL_DIR/php/etc \\\n    --enable-fpm --enable-opcache \\\n    --with-mysql --with-mysqli --with-pdo-mysql \\\n    --with-openssl --with-zlib --with-curl --with-gd \\\n    --with-jpeg-dir --with-png-dir --with-freetype-dir \\\n    --enable-mbstring --enable-hash\n    command_status_check "PHP - 平台环境检查失败！"\n    make -j 4 \n    command_status_check "PHP - 编译失败！"\n    make install\n    command_status_check "PHP - 安装失败！"\n    cp php.ini-production $INSTALL_DIR/php/etc/php.ini\n    cp sapi/fpm/php-fpm.conf $INSTALL_DIR/php/etc/php-fpm.conf\n    cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm\n    chmod +x /etc/init.d/php-fpm\n    /etc/init.d/php-fpm start\n    command_status_check "PHP - 启动失败！"\n}\n \nread -p "请输入编号：" number\ncase $number in\n    1)\n        install_nginx;;\n    2)\n        install_php;;\n    3)\n        install_mysql;;\n    4)\n        install_nginx\n        install_php\n        ;;\n    9)\n        exit;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n\n\n\n# 33、一键查看服务器资源利用率\n\n#!/bin/bash\nfunction cpu() {\n    NUM=1\n    while [ $NUM -le 3 ]; do\n        util=`vmstat |awk \'{if(NR==3)print 100-$15"%"}\'`\n        user=`vmstat |awk \'{if(NR==3)print $13"%"}\'`\n        sys=`vmstat |awk \'{if(NR==3)print $14"%"}\'`\n        iowait=`vmstat |awk \'{if(NR==3)print $16"%"}\'`\n        echo "CPU - 使用率: $util , 等待磁盘IO响应使用率: $iowait"\n        let NUM++\n        sleep 1\n    done\n}\n \nfunction memory() {\n    total=`free -m |awk \'{if(NR==2)printf "%.1f",$2/1024}\'`\n    used=`free -m |awk \'{if(NR==2) printf "%.1f",($2-$NF)/1024}\'`\n    available=`free -m |awk \'{if(NR==2) printf "%.1f",$NF/1024}\'`\n    echo "内存 - 总大小: ${total}G , 使用: ${used}G , 剩余: ${available}G"\n}\n \nfunction disk() {\n    fs=$(df -h |awk \'/^\\/dev/{print $1}\')\n    for p in $fs; do\n        mounted=$(df -h |awk \'$1=="\'$p\'"{print $NF}\')\n        size=$(df -h |awk \'$1=="\'$p\'"{print $2}\')\n        used=$(df -h |awk \'$1=="\'$p\'"{print $3}\')\n        used_percent=$(df -h |awk \'$1=="\'$p\'"{print $5}\')\n        echo "硬盘 - 挂载点: $mounted , 总大小: $size , 使用: $used , 使用率: $used_percent"\n    done\n}\n \nfunction tcp_status() {\n    summary=$(ss -antp |awk \'{status[$1]++}END{for(i in status) printf i":"status[i]" "}\')\n    echo "TCP连接状态 - $summary"\n}\n \ncpu\nmemory\ndisk\ntcp_status\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n\n# 34、找出占用CPU 内存过高的进程脚本\n\nps -eo user,pid,pcpu,pmem,args --sort=-pcpu  |head -n 10\n \nps -eo user,pid,pcpu,pmem,args --sort=-pmem  |head -n 10\n\n\n1\n2\n3\n\n\n\n# 35、自动发布Java项目（Tomcat）\n\n#!/bin/bash\nDATE=$(date +%F_%T)\n \nTOMCAT_NAME=$1\nTOMCAT_DIR=/usr/local/$TOMCAT_NAME\nROOT=$TOMCAT_DIR/webapps/ROOT\n \nBACKUP_DIR=/data/backup\nWORK_DIR=/tmp\nPROJECT_NAME=tomcat-java-demo\n \n# 拉取代码\ncd $WORK_DIR\nif [ ! -d $PROJECT_NAME ]; then\n   git clone [url=https://github.com/lizhenliang/tomcat-java-demo]https://github.com/lizhenliang/tomcat-java-demo[/url]\n   cd $PROJECT_NAME\nelse\n   cd $PROJECT_NAME\n   git pull\nfi\n \n# 构建\nmvn clean package -Dmaven.test.skip=true\nif [ $? -ne 0 ]; then\n   echo "maven build failure!"\n   exit 1\nfi\n \n# 部署\nTOMCAT_PID=$(ps -ef |grep "$TOMCAT_NAME" |egrep -v "grep|$$" |awk \'NR==1{print $2}\')\n[ -n "$TOMCAT_PID" ] && kill -9 $TOMCAT_PID\n[ -d $ROOT ] && mv $ROOT $BACKUP_DIR/${TOMCAT_NAME}_ROOT$DATE\nunzip $WORK_DIR/$PROJECT_NAME/target/*.war -d $ROOT\n$TOMCAT_DIR/bin/startup.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# 36、自动发布PHP项目脚本\n\n#!/bin/bash\nDATE=$(date +%F_%T)\n \nWWWROOT=/usr/local/nginx/html/$1\n \n \nBACKUP_DIR=/data/backup\nWORK_DIR=/tmp\nPROJECT_NAME=php-demo\n \n \n# 拉取代码\ncd $WORK_DIR\nif [ ! -d $PROJECT_NAME ]; then\n   git clone [url=https://github.com/lizhenliang/php-demo]https://github.com/lizhenliang/php-demo[/url]\n   cd $PROJECT_NAME\nelse\n   cd $PROJECT_NAME\n   git pull\nfi\n \n \n# 部署\nif [ ! -d $WWWROOT ]; then\n   mkdir -p $WWWROOT\n   rsync -avz --exclude=.git $WORK_DIR/$PROJECT_NAME/* $WWWROOT\nelse\n   rsync -avz --exclude=.git $WORK_DIR/$PROJECT_NAME/* $WWWROOT\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n',normalizedContent:'# 实用 shell 脚本\n\n\n# 1、服务器系统配置初始化\n\n#/bin/bash\n# 安装系统性能分析工具及其他\nyum install gcc make autoconf vim sysstat net-tools iostat iftop iotp wget lrzsz lsof unzip openssh-clients net-tool vim ntpdate -y\n# 设置时区并同步时间\nln -s /usr/share/zoneinfo/asia/shanghai /etc/localtime\nif ! crontab -l |grep ntpdate &>/dev/null ; then\n    (echo "* 1 * * * ntpdate time.windows.com >/dev/null 2>&1";crontab -l) |crontab \nfi\n \n# 禁用selinux\nsed -i \'/selinux/{s/permissive/disabled/}\' /etc/selinux/config\n \n# 关闭防火墙\nif egrep "7.[0-9]" /etc/redhat-release &>/dev/null; then\n    systemctl stop firewalld\n    systemctl disable firewalld\nelif egrep "6.[0-9]" /etc/redhat-release &>/dev/null; then\n    service iptables stop\n    chkconfig iptables off\nfi\n \n# 历史命令显示操作时间\nif ! grep histtimeformat /etc/bashrc; then\n    echo \'export histtimeformat="%y-%m-%d %h:%m:%s  `whoami` "\' >> /etc/bashrc\nfi\n \n# ssh超时时间\nif ! grep "tmout=600" /etc/profile &>/dev/null; then\n    echo "export tmout=600" >> /etc/profile\nfi\n \n# 禁止root远程登录 切记给系统添加普通用户，给su到root的权限\nsed -i \'s/#permitrootlogin yes/permitrootlogin no/\' /etc/ssh/sshd_config\n \n# 禁止定时任务向发送邮件\nsed -i \'s/^mailto=root/mailto=""/\' /etc/crontab \n \n# 设置最大打开文件数\nif ! grep "* soft nofile 65535" /etc/security/limits.conf &>/dev/null; then\ncat >> /etc/security/limits.conf << eof\n    * soft nofile 65535\n    * hard nofile 65535\neof\nfi\n \n# 系统内核优化\ncat >> /etc/sysctl.conf << eof\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_max_tw_buckets = 20480\nnet.ipv4.tcp_max_syn_backlog = 20480\nnet.core.netdev_max_backlog = 262144\nnet.ipv4.tcp_fin_timeout = 20  \neof\n \n# 减少swap使用\necho "0" > /proc/sys/vm/swappiness\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 2、批量创建多个用户并设置密码\n\n#!/bin/bash\nuser_list=$@\nuser_file=./user.info\nfor user in $user_list;do\n if ! id $user &>/dev/null; then\n  pass=$(echo $random |md5sum |cut -c 1-8)\n  useradd $user\n  echo $pass | passwd --stdin $user &>/dev/null\n  echo "$user   $pass" >> $user_file\n  echo "$user user create successful."\n else\n  echo "$user user already exists!"\n fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 3、一键查看服务器利用率\n\n#!/bin/bash\nfunction cpu(){\n \n util=$(vmstat | awk \'{if(nr==3)print $13+$14}\')\n iowait=$(vmstat | awk \'{if(nr==3)print $16}\')\n echo "cpu -使用率：${util}% ,等待磁盘io相应使用率：${iowait}:${iowait}%"\n \n}\nfunction memory (){\n \n total=`free -m |awk \'{if(nr==2)printf "%.1f",$2/1024}\'`\n    used=`free -m |awk \'{if(nr==2) printf "%.1f",($2-$nf)/1024}\'`\n    available=`free -m |awk \'{if(nr==2) printf "%.1f",$nf/1024}\'`\n    echo "内存 - 总大小: ${total}g , 使用: ${used}g , 剩余: ${available}g"\n}\ndisk(){\n \n fs=$(df -h |awk \'/^\\/dev/{print $1}\')\n    for p in $fs; do\n        mounted=$(df -h |awk \'$1=="\'$p\'"{print $nf}\')\n        size=$(df -h |awk \'$1=="\'$p\'"{print $2}\')\n        used=$(df -h |awk \'$1=="\'$p\'"{print $3}\')\n        used_percent=$(df -h |awk \'$1=="\'$p\'"{print $5}\')\n        echo "硬盘 - 挂载点: $mounted , 总大小: $size , 使用: $used , 使用率: $used_percent"\n    done\n \n}\nfunction tcp_status() {\n    summary=$(ss -antp |awk \'{status[$1]++}end{for(i in status) printf i":"status[i]" "}\')\n    echo "tcp连接状态 - $summary"\n}\ncpu\nmemory\ndisk\ntcp_status\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 4、找出占用cpu 内存过高的进程\n\n#!/bin/bash\necho "-------------------cup占用前10排序--------------------------------"\nps -eo user,pid,pcpu,pmem,args --sort=-pcpu  |head -n 10\necho "-------------------内存占用前10排序--------------------------------"\nps -eo user,pid,pcpu,pmem,args --sort=-pmem  |head -n 10\n\n\n1\n2\n3\n4\n5\n\n\n\n# 5、查看网卡的实时流量\n\n#!/bin/bash\neth0=$1\necho  -e    "流量进入--流量传出    "\nwhile true; do\n old_in=$(cat /proc/net/dev |grep $eth0 |awk \'{print $2}\')\n old_out=$(cat /proc/net/dev |grep $eth0 |awk \'{print $10}\')\n sleep 1\n new_in=$(cat /proc/net/dev |grep $eth0 |awk \'{print $2}\')\n new_out=$(cat /proc/net/dev |grep $eth0 |awk \'{print $10}\')\n in=$(printf "%.1f%s" "$((($new_in-$old_in)/1024))" "kb/s")\n out=$(printf "%.1f%s" "$((($new_out-$old_out)/1024))" "kb/s")\n echo "$in $out"\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 6、监控多台服务器磁盘利用率脚本\n\n#!/bin/bash\nhost_info=host.info\nfor ip in $(awk \'/^[^#]/{print $1}\' $host_info); do\n #取出用户名和端口\n    user=$(awk -v ip=$ip \'ip==$1{print $2}\' $host_info)\n    port=$(awk -v ip=$ip \'ip==$1{print $3}\' $host_info)\n #创建临时文件，保存信息\n    tmp_file=/tmp/disk.tmp\n #通过公钥登录获取主机磁盘信息\n    ssh -p $port $user@$ip \'df -h\' > $tmp_file\n #分析磁盘占用空间\n    use_rate_list=$(awk \'begin{ofs="="}/^\\/dev/{print $nf,int($5)}\' $tmp_file)\n #循环磁盘列表，进行判断\n    for use_rate in $use_rate_list; do\n  #取出等号（=）右边的值 挂载点名称\n        part_name=${use_rate%=*}  \n  #取出等号（=）左边的值  磁盘利用率\n        use_rate=${use_rate#*=}\n  #进行判断\n        if [ $use_rate -ge 80 ]; then\n            echo "warning: $part_name partition usage $use_rate%!"\n    echo "服务器$ip的磁盘空间占用过高，请及时处理" | mail -s "空间不足警告" 你的qq@qq.com\n  else\n   echo "服务器$ip的$part_name目录空间良好"\n        fi\n    done\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n\n# 7、批量检测网站是否异常并邮件通知\n\n#!/bin/bash  \nurl_list="www.baidu.com www.ctnrs.com www.der-matech.net.cn www.der-matech.com.cn www.der-matech.cn www.der-matech.top www.der-matech.org"\nfor url in $url_list; do\n    fail_count=0\n    for ((i=1;i<=3;i++)); do\n        http_code=$(curl -o /dev/null --connect-timeout 3 -s -w "%{http_code}" $url)\n        if [ $http_code -eq 200 ]; then\n            echo "$url ok"\n            break\n        else\n            echo "$url retry $fail_count"\n            let fail_count++\n        fi\n    done\n    if [ $fail_count -eq 3 ]; then\n        echo "warning: $url access failure!"\n  echo "网站$url坏掉，请及时处理" | mail -s "$url网站高危" 1794748404@qq.com\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 8、批量主机远程执行命令脚本\n\n#!/bin/bash\ncommand=$*\nhost_info=host.info\nfor ip in $(awk \'/^[^#]/{print $1}\' $host_info); do\n    user=$(awk -v ip=$ip \'ip==$1{print $2}\' $host_info)\n    port=$(awk -v ip=$ip \'ip==$1{print $3}\' $host_info)\n    pass=$(awk -v ip=$ip \'ip==$1{print $4}\' $host_info)\n    expect -c "\n       spawn ssh -p $port $user@$ip\n       expect {\n          \\"(yes/no)\\" {send \\"yes\\r\\"; exp_continue}\n          \\"password:\\" {send \\"$pass\\r\\"; exp_continue}\n          \\"$user@*\\" {send \\"$command\\r exit\\r\\"; exp_continue}\n       }\n    "\n    echo "-------------------"\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 9、一键部署lnmp网站平台脚本\n\n#!/bin/bash\nnginx_v=1.15.6\nphp_v=5.6.36\ntmp_dir=/tmp\n \ninstall_dir=/usr/local\n \npwd_c=$pwd\n \necho\necho -e "\\tmenu\\n"\necho -e "1. install nginx"\necho -e "2. install php"\necho -e "3. install mysql"\necho -e "4. deploy lnmp"\necho -e "9. quit"\n \nfunction command_status_check() {\n if [ $? -ne 0 ]; then\n  echo $1\n  exit\n fi \n}\n \nfunction install_nginx() {\n    cd $tmp_dir\n    yum install -y gcc gcc-c++ make openssl-devel pcre-devel wget\n    wget http://nginx.org/download/nginx-${nginx_v}.tar.gz\n    tar zxf nginx-${nginx_v}.tar.gz\n    cd nginx-${nginx_v}\n    ./configure --prefix=$install_dir/nginx \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-stream\n    command_status_check "nginx - 平台环境检查失败！"\n    make -j 4 \n    command_status_check "nginx - 编译失败！"\n    make install\n    command_status_check "nginx - 安装失败！"\n    mkdir -p $install_dir/nginx/conf/vhost\n    alias cp=cp ; cp -rf $pwd_c/nginx.conf $install_dir/nginx/conf\n    rm -rf $install_dir/nginx/html/*\n    echo "ok" > $install_dir/nginx/html/status.html\n    echo \'<?php echo "ok"?>\' > $install_dir/nginx/html/status.php\n    $install_dir/nginx/sbin/nginx\n    command_status_check "nginx - 启动失败！"\n}\n \nfunction install_php() {\n cd $tmp_dir\n    yum install -y gcc gcc-c++ make gd-devel libxml2-devel \\\n        libcurl-devel libjpeg-devel libpng-devel openssl-devel \\\n        libmcrypt-devel libxslt-devel libtidy-devel\n    wget http://docs.php.net/distributions/php-${php_v}.tar.gz\n    tar zxf php-${php_v}.tar.gz\n    cd php-${php_v}\n    ./configure --prefix=$install_dir/php \\\n    --with-config-file-path=$install_dir/php/etc \\\n    --enable-fpm --enable-opcache \\\n    --with-mysql --with-mysqli --with-pdo-mysql \\\n    --with-openssl --with-zlib --with-curl --with-gd \\\n    --with-jpeg-dir --with-png-dir --with-freetype-dir \\\n    --enable-mbstring --enable-hash\n    command_status_check "php - 平台环境检查失败！"\n    make -j 4 \n    command_status_check "php - 编译失败！"\n    make install\n    command_status_check "php - 安装失败！"\n    cp php.ini-production $install_dir/php/etc/php.ini\n    cp sapi/fpm/php-fpm.conf $install_dir/php/etc/php-fpm.conf\n    cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm\n    chmod +x /etc/init.d/php-fpm\n    /etc/init.d/php-fpm start\n    command_status_check "php - 启动失败！"\n}\n \nread -p "请输入编号：" number\ncase $number in\n    1)\n        install_nginx;;\n    2)\n        install_php;;\n    3)\n        install_mysql;;\n    4)\n        install_nginx\n        install_php\n        ;;\n    9)\n        exit;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n\n\n\n# 10、监控mysql主从同步状态是否异常脚本\n\n#!/bin/bash  \nhost=localhost\nuser=root\npasswd=123.com\nio_sql_status=$(mysql -h$host -u$user -p$passwd -e \'show slave status\\g\' 2>/dev/null |awk \'/slave_.*_running:/{print $1$2}\')\nfor i in $io_sql_status; do\n    thread_status_name=${i%:*}\n    thread_status=${i#*:}\n    if [ "$thread_status" != "yes" ]; then\n        echo "error: mysql master-slave $thread_status_name status is $thread_status!" |mail -s "master-slave staus" xxx@163.com\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 11、mysql数据库备份脚本\n\n# 分库备份\n\nmysqldump -uroot -pxxx -b a > a.sql\n#!/bin/bash\ndate=$(date +%f_%h-%m-%s)\nhost=localhost\nuser=backup\npass=123.com\nbackup_dir=/data/db_backup\ndb_list=$(mysql -h$host -u$user -p$pass -s -e "show databases;" 2>/dev/null |egrep -v "database|information_schema|mysql|performance_schema|sys")\n \nfor db in $db_list; do\n    backup_name=$backup_dir/${db}_${date}.sql\n    if ! mysqldump -h$host -u$user -p$pass -b $db > $backup_name 2>/dev/null; then\n        echo "$backup_name 备份失败!"\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 分表备份\n\nmysqldump -uroot -pxxx -a t > t.sql\n#!/bin/bash\ndate=$(date +%f_%h-%m-%s)\nhost=localhost\nuser=backup\npass=123.com\nbackup_dir=/data/db_backup\ndb_list=$(mysql -h$host -u$user -p$pass -s -e "show databases;" 2>/dev/null |egrep -v "database|information_schema|mysql|performance_schema|sys")\n \nfor db in $db_list; do\n    backup_db_dir=$backup_dir/${db}_${date}\n    [ ! -d $backup_db_dir ] && mkdir -p $backup_db_dir &>/dev/null\n    table_list=$(mysql -h$host -u$user -p$pass -s -e "use $db;show tables;" 2>/dev/null)\n    for table in $table_list; do\n        backup_name=$backup_db_dir/${table}.sql \n        if ! mysqldump -h$host -u$user -p$pass $db $table > $backup_name 2>/dev/null; then\n            echo "$backup_name 备份失败!"\n        fi\n    done\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 12、nginx访问日志分析\n\n#!/bin/bash\n# 日志格式: $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"\nlog_file=$1\necho "统计访问最多的10个ip"\nawk \'{a[$1]++}end{print "uv:",length(a);for(v in a)print v,a[v]}\' $log_file |sort -k2 -nr |head -10\necho "----------------------"\n \necho "统计时间段访问最多的ip"\nawk \'$4>="[01/dec/2018:13:20:25" && $4<="[27/nov/2018:16:20:49"{a[$1]++}end{for(v in a)print v,a[v]}\' $log_file |sort -k2 -nr|head -10\necho "----------------------"\n \necho "统计访问最多的10个页面"\nawk \'{a[$7]++}end{print "pv:",length(a);for(v in a){if(a[v]>10)print v,a[v]}}\' $log_file |sort -k2 -nr\necho "----------------------"\n \necho "统计访问页面状态码数量"\nawk \'{a[$7" "$9]++}end{for(v in a){if(a[v]>5)print v,a[v]}}\' $log_file |sort -k3 -nr\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 13、nginx访问日志自动按天（周、月）切割\n\n#!/bin/bash\n#nginx日志目录\nlog_dir=/www/server/nginx/logs\n#获取到上一天的时间\nyesterday_time=$(date -d "yesterday" +%f)\n#归档日志取时间\nlog_month_dir=$log_dir/$(date +"%y-%m")\n#归档日志的名称\nlog_file_list="access.log"\n \nfor log_file in $log_file_list; do\n    [ ! -d $log_month_dir ] && mkdir -p $log_month_dir\n    mv $log_dir/$log_file $log_month_dir/${log_file}_${yesterday_time}\ndone\n \nkill -usr1 $(cat $log_dir/nginx.pid)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 14、自动发布java项目（tomcat）\n\n#!/bin/bash\ndate=$(date +%f_%t)\n \ntomcat_name=$1\ntomcat_dir=/usr/local/$tomcat_name\nroot=$tomcat_dir/webapps/root\n \nbackup_dir=/data/backup\nwork_dir=/tmp\nproject_name=tomcat-java-demo\n \n# 拉取代码\ncd $work_dir\nif [ ! -d $project_name ]; then\n   git clone https://github.com/lizhenliang/tomcat-java-demo\n   cd $project_name\nelse\n   cd $project_name\n   git pull\nfi\n \n# 构建\nmvn clean package -dmaven.test.skip=true\nif [ $? -ne 0 ]; then\n   echo "maven build failure!"\n   exit 1\nfi\n \n# 部署\ntomcat_pid=$(ps -ef |grep "$tomcat_name" |egrep -v "grep|$$" |awk \'nr==1{print $2}\')\n[ -n "$tomcat_pid" ] && kill -9 $tomcat_pid\n[ -d $root ] && mv $root $backup_dir/${tomcat_name}_root$date\nunzip $work_dir/$project_name/target/*.war -d $root\n$tomcat_dir/bin/startup.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# 15、自动发布php项目\n\n#!/bin/bash\n \ndate=$(date +%f_%t)\n \nwwwroot=/usr/local/nginx/html/$1\n \n \nbackup_dir=/data/backup\nwork_dir=/tmp\nproject_name=php-demo\n \n \n# 拉取代码\ncd $work_dir\nif [ ! -d $project_name ]; then\n   git clone https://github.com/lizhenliang/php-demo\n   cd $project_name\nelse\n   cd $project_name\n   git pull\nfi\n \n \n# 部署\nif [ ! -d $wwwroot ]; then\n   mkdir -p $wwwroot\n   rsync -avz --exclude=.git $work_dir/$project_name/* $wwwroot\nelse\n   rsync -avz --exclude=.git $work_dir/$project_name/* $wwwroot\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 16、dos攻击防范（自动屏蔽攻击ip）\n\n#!/bin/bash\ndate=$(date +%d/%b/%y:%h:%m)\n#nginx日志\nlog_file=/usr/local/nginx/logs/demo2.access.log\n#分析ip的访问情况\nabnormal_ip=$(tail -n5000 $log_file |grep $date |awk \'{a[$1]++}end{for(i in a)if(a[i]>10)print i}\')\nfor ip in $abnormal_ip; do\n    if [ $(iptables -vnl |grep -c "$ip") -eq 0 ]; then\n        iptables -i input -s $ip -j drop\n        echo "$(date +\'%f_%t\') $ip" >> /tmp/drop_ip.log\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 17、目录入侵检测与告警\n\n#!/bin/bash\n \nmon_dir=/opt\ninotifywait -mqr --format %f -e create $mon_dir |\\\nwhile read files; do\n   #同步文件\n   rsync -avz /opt /tmp/opt\n  #检测文件是否被修改\n   #echo "$(date +\'%f %t\') create $files" | mail -s "dir monitor" xxx@163.com\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 18、dos攻击防范（自动屏蔽攻击ip）\n\n#!/bin/bash\ndate=$(date +%d/%b/%y:%h:%m)\nlog_file=/usr/local/nginx/logs/demo2.access.log\nabnormal_ip=$(tail -n5000 $log_file |grep $date |awk \'{a[$1]++}end{for(i in a)if(a[i]>10)print i}\')\nfor ip in $abnormal_ip; do\n    if [ $(iptables -vnl |grep -c "$ip") -eq 0 ]; then\n        iptables -i input -s $ip -j drop\n        echo "$(date +\'%f_%t\') $ip" >> /tmp/drop_ip.log\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 19、linux系统发送告警脚本\n\n# yum install mailx\n# vi /etc/mail.rc  \nset from=baojingtongzhi@163.com smtp=smtp.163.com\nset smtp-auth-user=baojingtongzhi@163.com smtp-auth-password=123456\nset smtp-auth=login\n\n\n1\n2\n3\n4\n5\n\n\n\n# 20、mysql数据库备份单循环\n\n#!/bin/bash\ndate=$(date +%f_%h-%m-%s)\nhost=localhost\nuser=backup\npass=123.com\nbackup_dir=/data/db_backup\ndb_list=$(mysql -h$host -u$user -p$pass -s -e "show databases;" 2>/dev/null |egrep -v "database|information_schema|mysql|performance_schema|sys")\n \nfor db in $db_list; do\n    backup_name=$backup_dir/${db}_${date}.sql\n    if ! mysqldump -h$host -u$user -p$pass -b $db > $backup_name 2>/dev/null; then\n        echo "$backup_name 备份失败!"\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 21、mysql数据库备份多循环\n\n#!/bin/bash\ndate=$(date +%f_%h-%m-%s)\nhost=localhost\nuser=backup\npass=123.com\nbackup_dir=/data/db_backup\ndb_list=$(mysql -h$host -u$user -p$pass -s -e "show databases;" 2>/dev/null |egrep -v "database|information_schema|mysql|performance_schema|sys")\n \nfor db in $db_list; do\n    backup_db_dir=$backup_dir/${db}_${date}\n    [ ! -d $backup_db_dir ] && mkdir -p $backup_db_dir &>/dev/null\n    table_list=$(mysql -h$host -u$user -p$pass -s -e "use $db;show tables;" 2>/dev/null)\n    for table in $table_list; do\n        backup_name=$backup_db_dir/${table}.sql \n        if ! mysqldump -h$host -u$user -p$pass $db $table > $backup_name 2>/dev/null; then\n            echo "$backup_name 备份失败!"\n        fi\n    done\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 22、nginx 访问访问日志按天切割\n\n#!/bin/bash\nlog_dir=/usr/local/nginx/logs\nyesterday_time=$(date -d "yesterday" +%f)\nlog_month_dir=$log_dir/$(date +"%y-%m")\nlog_file_list="default.access.log"\n \nfor log_file in $log_file_list; do\n    [ ! -d $log_month_dir ] && mkdir -p $log_month_dir\n    mv $log_dir/$log_file $log_month_dir/${log_file}_${yesterday_time}\ndone\n \nkill -usr1 $(cat /var/run/nginx.pid)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 23、nginx访问日志分析脚本\n\n#!/bin/bash\n# 日志格式: $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"\nlog_file=$1\necho "统计访问最多的10个ip"\nawk \'{a[$1]++}end{print "uv:",length(a);for(v in a)print v,a[v]}\' $log_file |sort -k2 -nr |head -10\necho "----------------------"\n \necho "统计时间段访问最多的ip"\nawk \'$4>="[01/dec/2018:13:20:25" && $4<="[27/nov/2018:16:20:49"{a[$1]++}end{for(v in a)print v,a[v]}\' $log_file |sort -k2 -nr|head -10\necho "----------------------"\n \necho "统计访问最多的10个页面"\nawk \'{a[$7]++}end{print "pv:",length(a);for(v in a){if(a[v]>10)print v,a[v]}}\' $log_file |sort -k2 -nr\necho "----------------------"\n \necho "统计访问页面状态码数量"\nawk \'{a[$7" "$9]++}end{for(v in a){if(a[v]>5)print v,a[v]}}\' $log_file |sort -k3 -nr\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 24、查看网卡实时流量脚本\n\n#!/bin/bash\nnic=$1\necho -e " in ------ out"\nwhile true; do\n    old_in=$(awk \'$0~"\'$nic\'"{print $2}\' /proc/net/dev)\n    old_out=$(awk \'$0~"\'$nic\'"{print $10}\' /proc/net/dev)\n    sleep 1\n    new_in=$(awk  \'$0~"\'$nic\'"{print $2}\' /proc/net/dev)\n    new_out=$(awk \'$0~"\'$nic\'"{print $10}\' /proc/net/dev)\n    in=$(printf "%.1f%s" "$((($new_in-$old_in)/1024))" "kb/s")\n    out=$(printf "%.1f%s" "$((($new_out-$old_out)/1024))" "kb/s")\n    echo "$in $out"\n    sleep 1\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 25、服务器系统配置初始化脚本\n\n#/bin/bash\n# 设置时区并同步时间\nln -s /usr/share/zoneinfo/asia/shanghai /etc/localtime\nif ! crontab -l |grep ntpdate &>/dev/null ; then\n    (echo "* 1 * * * ntpdate time.windows.com >/dev/null 2>&1";crontab -l) |crontab\nfi\n \n# 禁用selinux\nsed -i \'/selinux/{s/permissive/disabled/}\' /etc/selinux/config\n \n# 关闭防火墙\nif egrep "7.[0-9]" /etc/redhat-release &>/dev/null; then\n    systemctl stop firewalld\n    systemctl disable firewalld\nelif egrep "6.[0-9]" /etc/redhat-release &>/dev/null; then\n    service iptables stop\n    chkconfig iptables off\nfi\n \n# 历史命令显示操作时间\nif ! grep histtimeformat /etc/bashrc; then\n    echo \'export histtimeformat="%f %t `whoami` "\' >> /etc/bashrc\nfi\n \n# ssh超时时间\nif ! grep "tmout=600" /etc/profile &>/dev/null; then\n    echo "export tmout=600" >> /etc/profile\nfi\n \n# 禁止root远程登录\nsed -i \'s/#permitrootlogin yes/permitrootlogin no/\' /etc/ssh/sshd_config\n \n# 禁止定时任务向发送邮件\nsed -i \'s/^mailto=root/mailto=""/\' /etc/crontab\n \n# 设置最大打开文件数\nif ! grep "* soft nofile 65535" /etc/security/limits.conf &>/dev/null; then\n    cat >> /etc/security/limits.conf << eof\n    * soft nofile 65535\n    * hard nofile 65535\n    eof\nfi\n \n# 系统内核优化\ncat >> /etc/sysctl.conf << eof\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_max_tw_buckets = 20480\nnet.ipv4.tcp_max_syn_backlog = 20480\nnet.core.netdev_max_backlog = 262144\nnet.ipv4.tcp_fin_timeout = 20  \neof\n \n# 减少swap使用\necho "0" > /proc/sys/vm/swappiness\n \n# 安装系统性能分析工具及其他\nyum install gcc make autoconf vim sysstat net-tools iostat iftop iotp lrzsz -y\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# 26、监控100台服务器磁盘利用率脚本\n\n#!/bin/bash\nhost_info=host.info\nfor ip in $(awk \'/^[^#]/{print $1}\' $host_info); do\n    user=$(awk -v ip=$ip \'ip==$1{print $2}\' $host_info)\n    port=$(awk -v ip=$ip \'ip==$1{print $3}\' $host_info)\n    tmp_file=/tmp/disk.tmp\n    ssh -p $port $user@$ip \'df -h\' > $tmp_file\n    use_rate_list=$(awk \'begin{ofs="="}/^\\/dev/{print $nf,int($5)}\' $tmp_file)\n    for use_rate in $use_rate_list; do\n        part_name=${use_rate%=*}\n        use_rate=${use_rate#*=}\n        if [ $use_rate -ge 80 ]; then\n            echo "warning: $part_name partition usage $use_rate%!"\n        fi\n    done\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 27、监控mysql主从同步状态是否异常脚本\n\n#!/bin/bash  \nhost=localhost\nuser=root\npasswd=123.com\nio_sql_status=$(mysql -h$host -u$user -p$passwd -e \'show slave status\\g\' 2>/dev/null |awk \'/slave_.*_running:/{print $1$2}\')\nfor i in $io_sql_status; do\n    thread_status_name=${i%:*}\n    thread_status=${i#*:}\n    if [ "$thread_status" != "yes" ]; then\n        echo "error: mysql master-slave $thread_status_name status is $thread_status!" |mail -s "master-slave staus" [url=mailto:xxx@163.com]xxx@163.com[/url]\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 28、目录文件变化监控和实时文件同步\n\n#!/bin/bash\n \nmon_dir=/opt\ninotifywait -mqr --format %f -e create $mon_dir |\\\nwhile read files; do\n   rsync -avz /opt /tmp/opt\n   #echo "$(date +\'%f %t\') create $files" | mail -s "dir monitor" [url=mailto:xxx@163.com]xxx@163.com[/url]\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 29、批量创建100用户并设置密码脚本\n\n#!/bin/bash\ndate=$@\nuser_file=user.txt\nfor user in $user_list; do\n    if ! id $user &>/dev/null; then\n        pass=$(echo $random |md5sum |cut -c 1-8)\n        useradd $user\n        echo $pass |passwd --stdin $user &>/dev/null\n        echo "$user   $pass" >> $user_file\n        echo "$user user create successful."\n    else\n        echo "$user user already exists!"\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 30、批量检测网站是否异常脚本\n\n#!/bin/bash  \nurl_list="www.baidu.com [url=http://www.ctnrs.com]www.ctnrs.com[/url]"\nfor url in $url_list; do\n    fail_count=0\n    for ((i=1;i<=3;i++)); do\n        http_code=$(curl -o /dev/null --connect-timeout 3 -s -w "%{http_code}" $url)\n        if [ $http_code -eq 200 ]; then\n            echo "$url ok"\n            break\n        else\n            echo "$url retry $fail_count"\n            let fail_count++\n        fi\n    done\n    if [ $fail_count -eq 3 ]; then\n        echo "warning: $url access failure!"\n    fi\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 31、批量主机远程执行命令脚本\n\n#!/bin/bash\ncommand=$*\nhost_info=host.info\nfor ip in $(awk \'/^[^#]/{print $1}\' $host_info); do\n    user=$(awk -v ip=$ip \'ip==$1{print $2}\' $host_info)\n    port=$(awk -v ip=$ip \'ip==$1{print $3}\' $host_info)\n    pass=$(awk -v ip=$ip \'ip==$1{print $4}\' $host_info)\n    expect -c "\n       spawn ssh -p $port $user@$ip\n       expect {\n          \\"(yes/no)\\" {send \\"yes\\r\\"; exp_continue}\n          \\"password:\\" {send \\"$pass\\r\\"; exp_continue}\n          \\"$user@*\\" {send \\"$command\\r exit\\r\\"; exp_continue}\n       }\n    "\n    echo "-------------------"\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 32、一键部署lnmp网站平台脚本\n\n#!/bin/bash\nnginx_v=1.15.6\nphp_v=5.6.36\ntmp_dir=/tmp\n \ninstall_dir=/usr/local\n \npwd_c=$pwd\n \necho\necho -e "\\tmenu\\n"\necho -e "1. install nginx"\necho -e "2. install php"\necho -e "3. install mysql"\necho -e "4. deploy lnmp"\necho -e "9. quit"\n \nfunction command_status_check() {\n        if [ $? -ne 0 ]; then\n                echo $1\n                exit\n        fi\n}\n \nfunction install_nginx() {\n    cd $tmp_dir\n    yum install -y gcc gcc-c++ make openssl-devel pcre-devel wget\n    wget [url=http://nginx.org/download/nginx-]http://nginx.org/download/nginx-[/url]${nginx_v}.tar.gz\n    tar zxf nginx-${nginx_v}.tar.gz\n    cd nginx-${nginx_v}\n    ./configure --prefix=$install_dir/nginx \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-stream\n    command_status_check "nginx - 平台环境检查失败！"\n    make -j 4 \n    command_status_check "nginx - 编译失败！"\n    make install\n    command_status_check "nginx - 安装失败！"\n    mkdir -p $install_dir/nginx/conf/vhost\n    alias cp=cp ; cp -rf $pwd_c/nginx.conf $install_dir/nginx/conf\n    rm -rf $install_dir/nginx/html/*\n    echo "ok" > $install_dir/nginx/html/status.html\n    echo \'<?php echo "ok"?>\' > $install_dir/nginx/html/status.php\n    $install_dir/nginx/sbin/nginx\n    command_status_check "nginx - 启动失败！"\n}\n \nfunction install_php() {\n        cd $tmp_dir\n    yum install -y gcc gcc-c++ make gd-devel libxml2-devel \\\n        libcurl-devel libjpeg-devel libpng-devel openssl-devel \\\n        libmcrypt-devel libxslt-devel libtidy-devel\n    wget [url=http://docs.php.net/distributions/php-]http://docs.php.net/distributions/php-[/url]${php_v}.tar.gz\n    tar zxf php-${php_v}.tar.gz\n    cd php-${php_v}\n    ./configure --prefix=$install_dir/php \\\n    --with-config-file-path=$install_dir/php/etc \\\n    --enable-fpm --enable-opcache \\\n    --with-mysql --with-mysqli --with-pdo-mysql \\\n    --with-openssl --with-zlib --with-curl --with-gd \\\n    --with-jpeg-dir --with-png-dir --with-freetype-dir \\\n    --enable-mbstring --enable-hash\n    command_status_check "php - 平台环境检查失败！"\n    make -j 4 \n    command_status_check "php - 编译失败！"\n    make install\n    command_status_check "php - 安装失败！"\n    cp php.ini-production $install_dir/php/etc/php.ini\n    cp sapi/fpm/php-fpm.conf $install_dir/php/etc/php-fpm.conf\n    cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm\n    chmod +x /etc/init.d/php-fpm\n    /etc/init.d/php-fpm start\n    command_status_check "php - 启动失败！"\n}\n \nread -p "请输入编号：" number\ncase $number in\n    1)\n        install_nginx;;\n    2)\n        install_php;;\n    3)\n        install_mysql;;\n    4)\n        install_nginx\n        install_php\n        ;;\n    9)\n        exit;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n\n\n\n# 33、一键查看服务器资源利用率\n\n#!/bin/bash\nfunction cpu() {\n    num=1\n    while [ $num -le 3 ]; do\n        util=`vmstat |awk \'{if(nr==3)print 100-$15"%"}\'`\n        user=`vmstat |awk \'{if(nr==3)print $13"%"}\'`\n        sys=`vmstat |awk \'{if(nr==3)print $14"%"}\'`\n        iowait=`vmstat |awk \'{if(nr==3)print $16"%"}\'`\n        echo "cpu - 使用率: $util , 等待磁盘io响应使用率: $iowait"\n        let num++\n        sleep 1\n    done\n}\n \nfunction memory() {\n    total=`free -m |awk \'{if(nr==2)printf "%.1f",$2/1024}\'`\n    used=`free -m |awk \'{if(nr==2) printf "%.1f",($2-$nf)/1024}\'`\n    available=`free -m |awk \'{if(nr==2) printf "%.1f",$nf/1024}\'`\n    echo "内存 - 总大小: ${total}g , 使用: ${used}g , 剩余: ${available}g"\n}\n \nfunction disk() {\n    fs=$(df -h |awk \'/^\\/dev/{print $1}\')\n    for p in $fs; do\n        mounted=$(df -h |awk \'$1=="\'$p\'"{print $nf}\')\n        size=$(df -h |awk \'$1=="\'$p\'"{print $2}\')\n        used=$(df -h |awk \'$1=="\'$p\'"{print $3}\')\n        used_percent=$(df -h |awk \'$1=="\'$p\'"{print $5}\')\n        echo "硬盘 - 挂载点: $mounted , 总大小: $size , 使用: $used , 使用率: $used_percent"\n    done\n}\n \nfunction tcp_status() {\n    summary=$(ss -antp |awk \'{status[$1]++}end{for(i in status) printf i":"status[i]" "}\')\n    echo "tcp连接状态 - $summary"\n}\n \ncpu\nmemory\ndisk\ntcp_status\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n\n# 34、找出占用cpu 内存过高的进程脚本\n\nps -eo user,pid,pcpu,pmem,args --sort=-pcpu  |head -n 10\n \nps -eo user,pid,pcpu,pmem,args --sort=-pmem  |head -n 10\n\n\n1\n2\n3\n\n\n\n# 35、自动发布java项目（tomcat）\n\n#!/bin/bash\ndate=$(date +%f_%t)\n \ntomcat_name=$1\ntomcat_dir=/usr/local/$tomcat_name\nroot=$tomcat_dir/webapps/root\n \nbackup_dir=/data/backup\nwork_dir=/tmp\nproject_name=tomcat-java-demo\n \n# 拉取代码\ncd $work_dir\nif [ ! -d $project_name ]; then\n   git clone [url=https://github.com/lizhenliang/tomcat-java-demo]https://github.com/lizhenliang/tomcat-java-demo[/url]\n   cd $project_name\nelse\n   cd $project_name\n   git pull\nfi\n \n# 构建\nmvn clean package -dmaven.test.skip=true\nif [ $? -ne 0 ]; then\n   echo "maven build failure!"\n   exit 1\nfi\n \n# 部署\ntomcat_pid=$(ps -ef |grep "$tomcat_name" |egrep -v "grep|$$" |awk \'nr==1{print $2}\')\n[ -n "$tomcat_pid" ] && kill -9 $tomcat_pid\n[ -d $root ] && mv $root $backup_dir/${tomcat_name}_root$date\nunzip $work_dir/$project_name/target/*.war -d $root\n$tomcat_dir/bin/startup.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# 36、自动发布php项目脚本\n\n#!/bin/bash\ndate=$(date +%f_%t)\n \nwwwroot=/usr/local/nginx/html/$1\n \n \nbackup_dir=/data/backup\nwork_dir=/tmp\nproject_name=php-demo\n \n \n# 拉取代码\ncd $work_dir\nif [ ! -d $project_name ]; then\n   git clone [url=https://github.com/lizhenliang/php-demo]https://github.com/lizhenliang/php-demo[/url]\n   cd $project_name\nelse\n   cd $project_name\n   git pull\nfi\n \n \n# 部署\nif [ ! -d $wwwroot ]; then\n   mkdir -p $wwwroot\n   rsync -avz --exclude=.git $work_dir/$project_name/* $wwwroot\nelse\n   rsync -avz --exclude=.git $work_dir/$project_name/* $wwwroot\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n',charsets:{cjk:!0},createdTime:1644941032e3,updateTime:"February 15, 2022 16:19",updateTimeStamp:1644941981e3,createTime:"February 15, 2022 16:03",createTimeStamp:1644941032e3,contributors:[]},{title:"API",frontmatter:{author:"xlc520",title:"API",description:"API",time:"2022-01-30T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/API.html",relativePath:"other/API.md",key:"v-eb7666b6",path:"/other/API/",headers:[{level:2,title:"hutool",slug:"hutool",normalizedTitle:"hutool",charIndex:10},{level:2,title:"apipost",slug:"apipost",normalizedTitle:"apipost",charIndex:102},{level:2,title:"代码转图片",slug:"代码转图片",normalizedTitle:"代码转图片",charIndex:139},{level:2,title:"将网页转成 Markdown 代码",slug:"将网页转成-markdown-代码",normalizedTitle:"将网页转成 markdown 代码",charIndex:204},{level:2,title:"SpiderFlow-开源爬虫平台",slug:"spiderflow-开源爬虫平台",normalizedTitle:"spiderflow-开源爬虫平台",charIndex:256},{level:2,title:"艺术二维码",slug:"艺术二维码",normalizedTitle:"艺术二维码",charIndex:360},{level:2,title:"图片压缩",slug:"图片压缩",normalizedTitle:"图片压缩",charIndex:390}],readingTime:{minutes:.76,words:227},headersStr:"hutool apipost 代码转图片 将网页转成 Markdown 代码 SpiderFlow-开源爬虫平台 艺术二维码 图片压缩",content:"# API\n\n\n# hutool\n\n一个小而全的 Java 工具类库，通过静态方法封装，并提供详细完整的中文文档和注释，使Java拥有函数式语言般的优雅。\n\nhttps://hutool.cn/\n\n\n# apipost\n\nhttps://www.apipost.cn/\n\n\n# 代码转图片\n\n该网站将代码片段转为美观的图片，可以贴到社交媒体上面。\n\nhttps://www.codepng.app/\n\n\n# 将网页转成 Markdown 代码\n\nhttps://devtool.tech/html-md\n\n\n# SpiderFlow-开源爬虫平台\n\n一个开源的爬虫平台，以图形化方式定义爬虫，不写代码即可完成抓取网页。\n\nhttps://github.com/ssssssss-team/spider-flow\n\n\n# 艺术二维码\n\nhttps://qrbtf.com/\n\n\n# 图片压缩\n\n一个批量压缩图片的网页工具，纯浏览器端压缩，不经过服务器，速度较快。\n\nhttps://devtool.tech/tiny-image",normalizedContent:"# api\n\n\n# hutool\n\n一个小而全的 java 工具类库，通过静态方法封装，并提供详细完整的中文文档和注释，使java拥有函数式语言般的优雅。\n\nhttps://hutool.cn/\n\n\n# apipost\n\nhttps://www.apipost.cn/\n\n\n# 代码转图片\n\n该网站将代码片段转为美观的图片，可以贴到社交媒体上面。\n\nhttps://www.codepng.app/\n\n\n# 将网页转成 markdown 代码\n\nhttps://devtool.tech/html-md\n\n\n# spiderflow-开源爬虫平台\n\n一个开源的爬虫平台，以图形化方式定义爬虫，不写代码即可完成抓取网页。\n\nhttps://github.com/ssssssss-team/spider-flow\n\n\n# 艺术二维码\n\nhttps://qrbtf.com/\n\n\n# 图片压缩\n\n一个批量压缩图片的网页工具，纯浏览器端压缩，不经过服务器，速度较快。\n\nhttps://devtool.tech/tiny-image",charsets:{cjk:!0},createdTime:1644744787e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 09:33",createTimeStamp:1644744787e3,contributors:[]},{title:"Bing必应API",frontmatter:{author:"xlc520",title:"Bing必应API",description:"Bing必应壁纸API",time:"2022-02-18T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/Bing%E5%BF%85%E5%BA%94API.html",relativePath:"other/Bing必应API.md",key:"v-fa6c2bce",path:"/other/Bing%E5%BF%85%E5%BA%94API/",headers:[{level:2,title:"1",slug:"_1",normalizedTitle:"1",charIndex:63},{level:2,title:"2",slug:"_2",normalizedTitle:"2",charIndex:440},{level:3,title:"3",slug:"_3",normalizedTitle:"3",charIndex:459},{level:2,title:"4",slug:"_4",normalizedTitle:"4",charIndex:461},{level:2,title:"5",slug:"_5",normalizedTitle:"5",charIndex:463},{level:3,title:"Bing Pictures Interface | 必应壁纸接口",slug:"bing-pictures-interface-必应壁纸接口",normalizedTitle:"bing pictures interface | 必应壁纸接口",charIndex:1670},{level:3,title:"目前开放的壁纸接口：",slug:"目前开放的壁纸接口",normalizedTitle:"目前开放的壁纸接口：",charIndex:1754},{level:3,title:"⚠️ 高斯模糊接口目前只支持指定分辨率(w,h)的图片，具体分辨率如下：",slug:"⚠️-高斯模糊接口目前只支持指定分辨率-w-h-的图片-具体分辨率如下",normalizedTitle:"⚠️ 高斯模糊接口目前只支持指定分辨率(w,h)的图片，具体分辨率如下：",charIndex:2541},{level:2,title:"6",slug:"_6",normalizedTitle:"6",charIndex:465},{level:2,title:"7",slug:"_7",normalizedTitle:"7",charIndex:467},{level:2,title:"代码一",slug:"代码一",normalizedTitle:"代码一",charIndex:3227},{level:2,title:"代码二",slug:"代码二",normalizedTitle:"代码二",charIndex:3945}],readingTime:{minutes:3.89,words:1167},headersStr:"1 2 3 4 5 Bing Pictures Interface | 必应壁纸接口 目前开放的壁纸接口： ⚠️ 高斯模糊接口目前只支持指定分辨率(w,h)的图片，具体分辨率如下： 6 7 代码一 代码二",content:"# Bing必应API\n\nhttp://xlc.pp.ua/bing-api/index.php?rand=true\n\n\n# 1\n\nhttp://cn.bing.com/HPImageArchive.aspx?idx=0&n=1\n\nhttps://cn.bing.com/HPImageArchive.aspx?idx=0&n=1\nhttps://cn.bing.com/HPImageArchive.aspx?format=xml&cc=jp&idx=0&n=1\n如果我们想浏览昨天，前天的图片呢？\n \n回到最初的网址上，http://cn.bing.com/HPImageArchive.aspx?idx=0&n=1 在这里，更换 idx= 这个参数就可以了。\n \n 如 http://cn.bing.com/HPImageArchive.aspx?idx=1&n=1 将要得到昨天的图片\nhttp://cn.bing.com/HPImageArchive.aspx?idx=2&n=1得到前天的图片\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 2\n\nhttps://bing.biturl.top/?resolution=1920&format=image&index=0&mkt=zh-CN\n\n\n# 3\n\n1. 访问 https://api.ioliu.cn/bing/ , 返回bing每日最新背景图, 可选参数[w,h]\n2. 访问 https://api.ioliu.cn/bing/?d=n (n>=0), 返回以当日为起点第n天前的壁纸, 可选参数[w,h]\n3. 访问 https://api.ioliu.cn/bing/json/ , 返回bing每日最新壁纸的相关(介绍、图片地址等)信息(json格式), 可选参数[callback].\n4. 访问 https://api.ioliu.cn/bing/rand/ , 返回随机图片, 可选参数[w,h]\n5. 访问 https://api.ioliu.cn/bing/blur/ , 返回高斯模糊图片, 可选参数[d,w,h]\n   带[w,h]用法： https://api.ioliu.cn/bing/rand/?w=1920&h=1200\n\n目前已知图片分辨率\n1920x1200   1920x1080    1366x768   1280x768    \n1024x768    800x600       800x480   768x1280  \n720x1280    640x480       480x800   400x240     \n320x240     240x320 \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 4\n\nhttps://www.talklee.com/api/bing/\n\n调用参数：\n\n参数代码   参数含义               可用参数\nrand   是否随机显示最近8天内的图片     true or false\nday    显示指定的最近图片          -1，0，1，2，3，4，5，6，7(0为今天，-1为昨天)\nsize   指定获取图片大小           详见下方可用分辨率\ninfo   获取图片基础信息（json格式）   true or false\n\n * 以上所有参数均非必要，默认参数为rand=false，day=0，size=1920×1080，info=false\n\n可用分辨率：\n\n * 1920×1080\n * 1366×768\n * 1280×768\n * 1024×768\n * 800×600\n * 800×480\n * 768×1280\n * 720×1280\n * 640×480\n * 480×800\n * 400×240\n * 320×240\n * 240×320\n * 注：中间的x为英文字母x\n\n\n# 5\n\n\n# Bing Pictures Interface | 必应壁纸接口\n\n> 🔨 Bing 壁纸 Api重装上阵啦 😄 http://bing.ioliu.cn\n\n\n# 目前开放的壁纸接口：\n\n * /v1{d,w,h,p,size,callback} 返回今日的壁纸完整数据(可选参数{d,w,h,p,size,callback})：\n   \n   > 若指定参数{w,h} ，则直接返回图片\n\n参数名        类型       是否必要   备注\nd          Int      否      自今日起第d天前的数据\nw          Int      否      图片宽度\nh          Int      否      图片高度\np          Int      否      Page 页码:第x页\nsize       Int      否      Size 条数:每页条数\ncallback   String   否      JSONP的回调函数名\n\n * /v1/rand{w,h,type,callback} 返回随机的壁纸(可选参数{w,h,type,callback})：\n\n参数名        类型       是否必要   备注\nw          Int      否      图片宽度\nh          Int      否      图片高度\ntype       String   否      返回值类型(json)\ncallback   String   否      JSONP的回调函数名\n\n * /v1/blur{d,w,h,r} 返回高斯模糊壁纸(可选参数{d,w,h,r})：\n\n参数名   类型    是否必要   备注\nd     Int   否      自今日起第d天前的数据\nw     Int   否      图片宽度\nh     Int   否      图片高度\nr     Int   否      模糊半径(1~50)\n\n\n# ⚠️ 高斯模糊接口目前只支持指定分辨率(w,h)的图片，具体分辨率如下：\n\n/**\n * 已知分辨率\n */\nresolutions: [\n    '1920x1200',\n    '1920x1080',\n    '1366x768',\n    '1280x768',\n    '1024x768',\n    '800x600',\n    '800x480',\n    '768x1280',\n    '720x1280',\n    '640x480',\n    '480x800',\n    '400x240',\n    '320x240',\n    '240x320'\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 6\n\nhttp://bing.getlove.cn/bingImage\n\n\n# 7\n\n * https://api.7-89.cn/bing/today\n * https://api.kdcc.cn/img/\n * https://api.kdcc.cn/img/rand.php（随机）\n * https://api.kdcc.cn/img/jump.php\n * https://open.saintic.com/api/bingPic/\n * http://47.103.144.215:2020/showtoday\n * https://www.talklee.com/api/bing\n * https://api.dujin.org/bing/1920.php\n\n\n# 代码一\n\n  $time = date(\"Ymd\", time());\n    $log = \"./log/\" . $time . '.txt';\n    //判断缓存文件是否存在\n    if (file_exists($log)) {\n        //读取缓存\n        $imgurl = file_get_contents($log);\n        //跳转至图片地址\n        header(\"Location: $imgurl\");\n    } else {\n        //获取bing背景图\n        $str = file_get_contents('http://cn.bing.com/HPImageArchive.aspx?format=js&idx=0&n=1');\n        //解析Bing官方接口Json\n        $data = json_decode($str,true);\n        //七牛CDN镜像加速\n        $imgurl = 'http://s.cn.bing.net'.$data['images'][0]['urlbase']. '_1920x1080.jpg';\n        //写入TXT用作缓存\n        file_put_contents($log, $imgurl);\n        //跳转至图片地址\n        header(\"Location: $imgurl\");\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 代码二\n\n<?php\n//判断是否随机调用\nif ($_GET['rand']==='true') {\n  $gettime = rand(-1,7);\n}else{\n//若不为随机调用则判断是否指定日期\n  $gettimebase = $_GET['day'];\n  if (empty($gettimebase)) {\n    $gettime = 0;\n  }else{\n    $gettime = $gettimebase;\n  }\n}\n//获取Bing Json信息\n$json_string = file_get_contents('https://www.bing.com/HPImageArchive.aspx?format=js&idx='.$gettime.'&n=1');\n//转换为PHP数组\n$data = json_decode($json_string);\n//提取基础url\n$imgurlbase = \"https://www.bing.com\".$data->{\"images\"}[0]->{\"urlbase\"};\n//判断是否指定图片大小\n$imgsizebase = $_GET['size'];\nif (empty($imgsizebase)){\n  $imgsize = \"1920x1080\";\n}else{\n  $imgsize = $imgsizebase;\n}\n//建立完整url\n$imgurl = $imgurlbase.\"_\".$imgsize.\".jpg\";\n//获取其他信息\n$imgtime = $data->{\"images\"}[0]->{\"startdate\"};\n$imgtitle = $data->{\"images\"}[0]->{\"copyright\"};\n$imglink = $data->{\"images\"}[0]->{\"copyrightlink\"};\n//判断是否只获取图片信息\nif ($_GET['info']==='true') {\n  echo \"{title:\".$imgtitle.\",url:\".$imgurl.\",link:\".$imglink.\",time:\".$imgtime.\"}\";\n}else{\n  //若不是则跳转url\n  header(\"Location: $imgurl\");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n",normalizedContent:"# bing必应api\n\nhttp://xlc.pp.ua/bing-api/index.php?rand=true\n\n\n# 1\n\nhttp://cn.bing.com/hpimagearchive.aspx?idx=0&n=1\n\nhttps://cn.bing.com/hpimagearchive.aspx?idx=0&n=1\nhttps://cn.bing.com/hpimagearchive.aspx?format=xml&cc=jp&idx=0&n=1\n如果我们想浏览昨天，前天的图片呢？\n \n回到最初的网址上，http://cn.bing.com/hpimagearchive.aspx?idx=0&n=1 在这里，更换 idx= 这个参数就可以了。\n \n 如 http://cn.bing.com/hpimagearchive.aspx?idx=1&n=1 将要得到昨天的图片\nhttp://cn.bing.com/hpimagearchive.aspx?idx=2&n=1得到前天的图片\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 2\n\nhttps://bing.biturl.top/?resolution=1920&format=image&index=0&mkt=zh-cn\n\n\n# 3\n\n1. 访问 https://api.ioliu.cn/bing/ , 返回bing每日最新背景图, 可选参数[w,h]\n2. 访问 https://api.ioliu.cn/bing/?d=n (n>=0), 返回以当日为起点第n天前的壁纸, 可选参数[w,h]\n3. 访问 https://api.ioliu.cn/bing/json/ , 返回bing每日最新壁纸的相关(介绍、图片地址等)信息(json格式), 可选参数[callback].\n4. 访问 https://api.ioliu.cn/bing/rand/ , 返回随机图片, 可选参数[w,h]\n5. 访问 https://api.ioliu.cn/bing/blur/ , 返回高斯模糊图片, 可选参数[d,w,h]\n   带[w,h]用法： https://api.ioliu.cn/bing/rand/?w=1920&h=1200\n\n目前已知图片分辨率\n1920x1200   1920x1080    1366x768   1280x768    \n1024x768    800x600       800x480   768x1280  \n720x1280    640x480       480x800   400x240     \n320x240     240x320 \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 4\n\nhttps://www.talklee.com/api/bing/\n\n调用参数：\n\n参数代码   参数含义               可用参数\nrand   是否随机显示最近8天内的图片     true or false\nday    显示指定的最近图片          -1，0，1，2，3，4，5，6，7(0为今天，-1为昨天)\nsize   指定获取图片大小           详见下方可用分辨率\ninfo   获取图片基础信息（json格式）   true or false\n\n * 以上所有参数均非必要，默认参数为rand=false，day=0，size=1920×1080，info=false\n\n可用分辨率：\n\n * 1920×1080\n * 1366×768\n * 1280×768\n * 1024×768\n * 800×600\n * 800×480\n * 768×1280\n * 720×1280\n * 640×480\n * 480×800\n * 400×240\n * 320×240\n * 240×320\n * 注：中间的x为英文字母x\n\n\n# 5\n\n\n# bing pictures interface | 必应壁纸接口\n\n> 🔨 bing 壁纸 api重装上阵啦 😄 http://bing.ioliu.cn\n\n\n# 目前开放的壁纸接口：\n\n * /v1{d,w,h,p,size,callback} 返回今日的壁纸完整数据(可选参数{d,w,h,p,size,callback})：\n   \n   > 若指定参数{w,h} ，则直接返回图片\n\n参数名        类型       是否必要   备注\nd          int      否      自今日起第d天前的数据\nw          int      否      图片宽度\nh          int      否      图片高度\np          int      否      page 页码:第x页\nsize       int      否      size 条数:每页条数\ncallback   string   否      jsonp的回调函数名\n\n * /v1/rand{w,h,type,callback} 返回随机的壁纸(可选参数{w,h,type,callback})：\n\n参数名        类型       是否必要   备注\nw          int      否      图片宽度\nh          int      否      图片高度\ntype       string   否      返回值类型(json)\ncallback   string   否      jsonp的回调函数名\n\n * /v1/blur{d,w,h,r} 返回高斯模糊壁纸(可选参数{d,w,h,r})：\n\n参数名   类型    是否必要   备注\nd     int   否      自今日起第d天前的数据\nw     int   否      图片宽度\nh     int   否      图片高度\nr     int   否      模糊半径(1~50)\n\n\n# ⚠️ 高斯模糊接口目前只支持指定分辨率(w,h)的图片，具体分辨率如下：\n\n/**\n * 已知分辨率\n */\nresolutions: [\n    '1920x1200',\n    '1920x1080',\n    '1366x768',\n    '1280x768',\n    '1024x768',\n    '800x600',\n    '800x480',\n    '768x1280',\n    '720x1280',\n    '640x480',\n    '480x800',\n    '400x240',\n    '320x240',\n    '240x320'\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 6\n\nhttp://bing.getlove.cn/bingimage\n\n\n# 7\n\n * https://api.7-89.cn/bing/today\n * https://api.kdcc.cn/img/\n * https://api.kdcc.cn/img/rand.php（随机）\n * https://api.kdcc.cn/img/jump.php\n * https://open.saintic.com/api/bingpic/\n * http://47.103.144.215:2020/showtoday\n * https://www.talklee.com/api/bing\n * https://api.dujin.org/bing/1920.php\n\n\n# 代码一\n\n  $time = date(\"ymd\", time());\n    $log = \"./log/\" . $time . '.txt';\n    //判断缓存文件是否存在\n    if (file_exists($log)) {\n        //读取缓存\n        $imgurl = file_get_contents($log);\n        //跳转至图片地址\n        header(\"location: $imgurl\");\n    } else {\n        //获取bing背景图\n        $str = file_get_contents('http://cn.bing.com/hpimagearchive.aspx?format=js&idx=0&n=1');\n        //解析bing官方接口json\n        $data = json_decode($str,true);\n        //七牛cdn镜像加速\n        $imgurl = 'http://s.cn.bing.net'.$data['images'][0]['urlbase']. '_1920x1080.jpg';\n        //写入txt用作缓存\n        file_put_contents($log, $imgurl);\n        //跳转至图片地址\n        header(\"location: $imgurl\");\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 代码二\n\n<?php\n//判断是否随机调用\nif ($_get['rand']==='true') {\n  $gettime = rand(-1,7);\n}else{\n//若不为随机调用则判断是否指定日期\n  $gettimebase = $_get['day'];\n  if (empty($gettimebase)) {\n    $gettime = 0;\n  }else{\n    $gettime = $gettimebase;\n  }\n}\n//获取bing json信息\n$json_string = file_get_contents('https://www.bing.com/hpimagearchive.aspx?format=js&idx='.$gettime.'&n=1');\n//转换为php数组\n$data = json_decode($json_string);\n//提取基础url\n$imgurlbase = \"https://www.bing.com\".$data->{\"images\"}[0]->{\"urlbase\"};\n//判断是否指定图片大小\n$imgsizebase = $_get['size'];\nif (empty($imgsizebase)){\n  $imgsize = \"1920x1080\";\n}else{\n  $imgsize = $imgsizebase;\n}\n//建立完整url\n$imgurl = $imgurlbase.\"_\".$imgsize.\".jpg\";\n//获取其他信息\n$imgtime = $data->{\"images\"}[0]->{\"startdate\"};\n$imgtitle = $data->{\"images\"}[0]->{\"copyright\"};\n$imglink = $data->{\"images\"}[0]->{\"copyrightlink\"};\n//判断是否只获取图片信息\nif ($_get['info']==='true') {\n  echo \"{title:\".$imgtitle.\",url:\".$imgurl.\",link:\".$imglink.\",time:\".$imgtime.\"}\";\n}else{\n  //若不是则跳转url\n  header(\"location: $imgurl\");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n",charsets:{cjk:!0},createdTime:1645165833e3,updateTime:"February 18, 2022 06:30",updateTimeStamp:1645165833e3,createTime:"February 18, 2022 06:30",createTimeStamp:1645165833e3,contributors:[]},{title:"Euserv",frontmatter:{author:"xlc520",title:"Euserv",description:"Euserv",time:"2022-01-20T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/Euserv.html",relativePath:"other/Euserv.md",key:"v-54d18f67",path:"/other/Euserv/",headers:[{level:2,title:"一、EUserv免费VPS申请",slug:"一、euserv免费vps申请",normalizedTitle:"一、euserv免费vps申请",charIndex:462},{level:2,title:"二、EUserv免费VPS管理",slug:"二、euserv免费vps管理",normalizedTitle:"二、euserv免费vps管理",charIndex:778},{level:2,title:"三、EUserv免费VPS连接",slug:"三、euserv免费vps连接",normalizedTitle:"三、euserv免费vps连接",charIndex:964},{level:2,title:"四、纯IPv6的VPS搭建网站",slug:"四、纯ipv6的vps搭建网站",normalizedTitle:"四、纯ipv6的vps搭建网站",charIndex:2088},{level:3,title:"4.1 搭建Web环境",slug:"_4-1-搭建web环境",normalizedTitle:"4.1 搭建web环境",charIndex:2108},{level:3,title:"4.2 IPv6 DNS解析",slug:"_4-2-ipv6-dns解析",normalizedTitle:"4.2 ipv6 dns解析",charIndex:2941},{level:3,title:"4.3 兼顾IPv4用户访问",slug:"_4-3-兼顾ipv4用户访问",normalizedTitle:"4.3 兼顾ipv4用户访问",charIndex:3004},{level:2,title:"五、总结",slug:"五、总结",normalizedTitle:"五、总结",charIndex:3346},{level:2,title:"六、用腾讯云函数给EUserv德国免费VPS自动续期",slug:"六、用腾讯云函数给euserv德国免费vps自动续期",normalizedTitle:"六、用腾讯云函数给euserv德国免费vps自动续期",charIndex:3536},{level:3,title:"1. 打开腾讯云函数SFC",slug:"_1-打开腾讯云函数sfc",normalizedTitle:"1. 打开腾讯云函数sfc",charIndex:3687},{level:3,title:"2. 新建BeautifulSoup层",slug:"_2-新建beautifulsoup层",normalizedTitle:"2. 新建beautifulsoup层",charIndex:3771},{level:3,title:"3. 新建腾讯云函数EUserv_extend",slug:"_3-新建腾讯云函数euserv-extend",normalizedTitle:"3. 新建腾讯云函数euserv_extend",charIndex:3909},{level:3,title:"4. 绑定层 BeautifulSoup",slug:"_4-绑定层-beautifulsoup",normalizedTitle:"4. 绑定层 beautifulsoup",charIndex:4589},{level:3,title:"5. 测试并创建时间触发",slug:"_5-测试并创建时间触发",normalizedTitle:"5. 测试并创建时间触发",charIndex:4662},{level:3,title:"6. 查看运行日志",slug:"_6-查看运行日志",normalizedTitle:"6. 查看运行日志",charIndex:4803},{level:3,title:"7. 总结",slug:"_7-总结",normalizedTitle:"7. 总结",charIndex:6328},{level:2,title:"七、Euserv一键安装教程",slug:"七、euserv一键安装教程",normalizedTitle:"七、euserv一键安装教程",charIndex:6492}],readingTime:{minutes:12.33,words:3700},headersStr:"一、EUserv免费VPS申请 二、EUserv免费VPS管理 三、EUserv免费VPS连接 四、纯IPv6的VPS搭建网站 4.1 搭建Web环境 4.2 IPv6 DNS解析 4.3 兼顾IPv4用户访问 五、总结 六、用腾讯云函数给EUserv德国免费VPS自动续期 1. 打开腾讯云函数SFC 2. 新建BeautifulSoup层 3. 新建腾讯云函数EUserv_extend 4. 绑定层 BeautifulSoup 5. 测试并创建时间触发 6. 查看运行日志 7. 总结 七、Euserv一键安装教程",content:'# Euserv\n\nEUserv是一家德国主机商，提供VPS主机、服务器等，目前该商家提供免费ipv6主机服务器，配置信息是CPU：1 Core、内存：1 GB、硬盘：10 GB HDD、带宽：1 Gbit，提供一个IPv6地址，想要IPv4地址那就付费了。虽然免费VPS主机看起来配置很好，但是用起来非常地卡。\n\n申请EUserv免费VPS主机的过程并不复杂，也不需要什么Paypal、信用卡之类的验证，但是EUserv免费VPS主机申请要人工审核，一般来说48小时内会收到回复。当然，也有申请EUserv免费VPS主机失败的，或者是EUserv免费VPS主机被删号的。\n\n\n\n更多的免费VPS主机，这里还有：\n\n 1. Oracle甲骨文免费云主机申请使用-Oracle免费VPS测评和VPS重置密钥登录\n 2. AWS免费VPS主机申请使用-Amazon EC2韩国日本香港机房VPS主机评测\n 3. 英特尔Intel DevCloud免费云服务器和AppOnFly免费试用Windows Server服务器\n\n\n# 一、EUserv免费VPS申请\n\n网站：\n\n 1. http://www.euserv.de\n 2. https://www.euserv.com/en/\n\n进入网站后，可以将网站的语言切换为英文，或者是直接用浏览器翻译成中文。找到导航栏的免费VPS主机申请链接。\n\n\n\n确定申请。\n\n\n\n可以看到EUserv免费VPS是免费一个月的，不过可以免费续期。\n\n\n\n在页面最下方点击结算。\n\n\n\n此时，注册一个新账号。\n\n\n\n填写你的注册信息。\n\n\n\n完成注册。\n\n\n\n再次登录到EUserv后台，会提示让你补充你的详细信息，主要是街道地址、编号、手机号码等，填写参考下图：\n\n\n\n完成注册并申请VPS主机，等待审核开通。\n\n\n\n\n# 二、EUserv免费VPS管理\n\nEUserv免费VPS开通后，你就可以点击进入到VPS主机控制面板了。\n\n\n\n在EUserv免费VPS控制面板中，主要有查看VPS信息、重装系统以及IPv6地址等功能。\n\n\n\n这是EUserv免费VPS重装系统页面。\n\n\n\n这是EUserv免费VPS查看信息页面，重装系统成功后，你就可以看到root的密码了，还有IPv6地址。\n\n\n# 三、EUserv免费VPS连接\n\nEUserv免费VPS只提供纯IPv6地址，所以连接管理EUserv免费VPS就是一个难题了。我们可以利用IPv6隧道来让本地的Windows系统支持访问IPv6网站。\n\nWin+R 打开 CMD 或 Windows PowerShell（管理员），输入命令：\n\n// 设置 Teredo 服务器，默认为：win10.ipv6.microsoft.com \n\nnetsh interface teredo set state enterpriseclient server=default \n\n// 测试 IPv6 连接 \n\nping -6 ipv6.test-ipv6.com \n\nping -6 [2001:470:1:18::125] \n\n// 重置 IPv6 配置 \n\nnetsh interface ipv6 reset \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n**重启系统。**通过命令ipconfig /all 查看当前网络信息，看到 Teredo Tunneling Pseudo-Interface 有以 2001 开头的 IPv6 地址即可。\n\n启动 IE 浏览器，访问 http://test-ipv6.com 或 http://ipv6.test-ipv6.com，如果选项卡 “测试项目” 下面的 “不使用域名的 IPv6 测试” 显示成功，则隧道建立成功。\n\n\n\n如果经过上面操作后仍无法启用 IPv6，可能是 Teredo 服务器无法正常连接，也可能是 Windows 自身配置问题，可尝试以下两种方法：\n\n// 第一种：修改 Teredo 服务器为 teredo.remlab.net \n\nnetsh interface teredo set state server=teredo.remlab.net \n\n// 第二种：先卸载当前 Teredo 适配器再重新启用 \n\nnetsh interface Teredo set state disable \n\nnetsh interface Teredo set state type=default \n\nping -6 ipv6.test-ipv6.com \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n现在你就可以开始使用客户端连接你的EUserv免费VPS了。\n\n\n\n详细的操作方法请参考：Windows 10系统利用IPv6隧道开启IPv6访问。使用浏览器访问IPv6地址，类似于：http://[2a01:4f8:191:48c:2018:2019::ed]，如下图：\n\n\n\n\n# 四、纯IPv6的VPS搭建网站\n\n\n# 4.1 搭建Web环境\n\n纯IPv6的VPS安装VPS主机面板基本上是没有什么问题，例如LNMP、Oneinstack，经过挖站否的测试都正常。可能有一些面板会出现一些莫名其妙的问题，更多的面板参考：服务器控制面板榜单。\n\n宝塔面板后台默认的是不支持IPv6的，我们需要手动开启：\n\n\\#让宝塔面板监听IPv6\n\necho “**True**” > /www/server/panel/data/ipv6.pl\n\n\\#如果发现端口无法使用，也可以直接修改端口\n\necho “8888” > /www/server/panel/data/port.pl\n\n\\#重启面板：\n\nbt restart\n\n\\#宝塔面板在面板设置里勾选了监听ipv6，正常情况下ipv4应该也是可以使用的，部分服务器出现问题的话会导致ipv4无法登陆。使用以下命令\n\nrm -f /www/server/panel/data/ipv6.pl && /etc/init.d/bt restart\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n如果是Oneinstack或者LNMP一键安装包，搭建网站还需要修改一下Nginx的配置，让Nginx同时监听IPv4和IPv6的请求，示例如下：\n\n listen 80;\n\n​    listen 443 ssl http2;\n\n​    listen [::]:443 ssl http2;\n\n​    listen [::]:80;\n\n​    server_name www.wzfou.com;\n\n​    index index.php index.html index.htm default.php default.htm default.html;\n\n​    root /www/wwwroot/www.wzfou.com;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 4.2 IPv6 DNS解析\n\n对于IPv6地址，DNS解析选择AAAA记录类型记录，记录值为IPv6地址即可。\n\n\n\n\n# 4.3 兼顾IPv4用户访问\n\n对于纯IPv6的网站，为了可以让IPv4的用户访问，我们可以接入到Cloudflare免费CDN网络，如果不想修改NS服务器为Cloudflare，可以使用Cloudflare Partner平台，例如：Cloudflare Partner接入管理Cloudflare CDN。\n\n接入了Cloudflare后，你就可以先设置AAAA记录了。\n\n\n\n接着在Cloudflare Partner接入平台会得到CNAME记录，这时你就可以到你的域名DNS管理处修改CNAME记录了。\n\n\n\n成功将纯IPv6的VPS主机接入到了Cloudflare的CDN网络后，不管用户是不是支持IPv6访问都可以访问你的网站了，与普通的网站没有什么 区别。\n\n\n\n\n# 五、总结\n\nEUserv免费VPS主机官网打开速度很慢，需要一定耐心。实际测试EUserv免费VPS主机的性能非常地差，见：分享euserv提供的免费ipv6小鸡，至于如何在IPv6上的VPS主机跑“QQ”可以参考：纯IPv6的VPS安装应用。\n\n关于给 EUserv免费VPS主机自动续期的方法，请参考：https://bawodu.com/euserv-renew/\n\n\n# 六、用腾讯云函数给EUserv德国免费VPS自动续期\n\n使用腾讯云函数 SCF自动续期EUserv免费IPv6 VPS脚本见 https://github.com/o0oo0ooo0/EUserv_extend\n\n目的：自动获取账号内所有的VPS项目，并检测是否需要续期，需要续期会自动续期。\n\n\n# 1. 打开腾讯云函数SFC\n\n打开 https://console.cloud.tencent.com/scf/ 登录腾讯云，初次使用云函数SCF要授权。\n\n\n\n\n# 2. 新建BeautifulSoup层\n\n新建层 BeautifulSoup ，将 BeautifulSoup.zip 导入 ，添加运行环境 Python 3.6 。注意层的位置选择香港等海外地区，因为我们要续费的VPS在德国。\n\n\n\n建好层后如下，后面用的上。\n\n\n\n\n# 3. 新建腾讯云函数EUserv_extend\n\n运行环境选择 Python 3.6，创建方式选择 空白函数，内存选择 64M，执行超时时间建议为 300 s（网站在国外访问比较慢，建议部署在非大陆区域，例如HK、SG等，需要和上面创建层的位置是一样的。），将修改后的 main.py 粘贴进去。\n\n\n\n选择自定义创建，按下图配置\n\n\n\n复制https://github.com/o0oo0ooo0/EUserv_extend库中的main.py文件。\n\n\n\n复制粘贴到上图index.py文本，然后粘贴到刚才打开的腾讯云函数服务编辑框中，修改其中的用户名，密码。\n\n\n\nUSERNAME: 你的EUserv账户邮箱或Customer ID\n\nUSERNAME = ‘user@gmail.com’ USERNAME = ‘user1@gmail.com user2@gmail.com’ # 多个账号写法\n\nPASSWORD: 账户的密码\n\nPASSWORD = ‘password’ PASSWORD = ‘password1 password2’ # 多个账号写法\n\n设置通知提醒（可选操作）\n\n我已Server酱的提醒为例，打开https://sct.ftqq.com后微信扫码获取sentkey， 然后填写在上面函数代码Server酱的key处。如果您不需要通知也可以不设置提醒。这步不用设置。\n\nSCKEY = \'XX\'\n\n\n1\n\n\n环境配置\n\n设置64M内存就够用了，300秒延时。\n\n\n\n其他默认就可，然后点完成。完成云函数配置。\n\n\n\n\n# 4. 绑定层 BeautifulSoup\n\n在 EUserv_extend⇨函数管理⇨层管理 里绑定层 BeautifulSoup。\n\n\n\n\n# 5. 测试并创建时间触发\n\n点击下图的测试，或会提示config等不存在，可以忽略。\n\n\n\n测试没错误，就点EUserv_extend⇨触发管理⇨创建触发器触发周期⇨自定义触发周期。填入0 0 8 */7 * * *\n\n\n\n每 7 天的 8 点执行，可修改成你想要的时间。\n\n\n# 6. 查看运行日志\n\n日志提示有2台VPS，说明以上成功设置了腾讯云函数SCF续期脚本。\n\nSTART RequestId:ff1a66b6-27b6-4ec3-9e87-******************************正在续费第 1 个账号Starting new HTTPS connection (1): support.euserv.com:443https://support.euserv.com:443 "GET /index.iphp HTTP/1.1" 302 3218https://support.euserv.com:443 "GET /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071628 HTTP/1.1" 200 3218https://support.euserv.com:443 "GET /pic/logo_small.png HTTP/1.1" 200 78https://support.euserv.com:443 "POST /index.iphp HTTP/1.1" 200 12524https://support.euserv.com:443 "GET /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071 HTTP/1.1" 200 12562检测到第 1 个账号有 2 台VPS，正在尝试续期ServerID: 388889 does not need to be renewedServerID: 399991 does not need to be renewedChecking.......Resetting dropped connection: support.euserv.comhttps://support.euserv.com:443 "GET /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071 HTTP/1.1" 302 12562https://support.euserv.com:443 "GET /index.iphp HTTP/1.1" 302 3214https://support.euserv.com:443 "GET /index.iphp?sess_id=64cddbf54472cb28e449a1058fe88e3b1626261591628911 HTTP/1.1" 200 3214ALL Work Done! EnjoyStarting new HTTPS connection (1): sc.ftqq.com:443https://sc.ftqq.com:443 "POST /SCT63352TEcQdROD2yeMxg4iTf.send HTTP/1.1" 200 107Server酱 推送成功******************************Response RequestId:ff1a66b6-27b6-4ec3-9e8da57 RetMsg:nullEND RequestId:ff1a66b6-27b6-4ec3-9e87-0494da57Report RequestId:ff1a66b6-27b6-4ec3-9e87-0ea14494da57 Duration:39826ms Memory:64MB MemUsage:20.109375MB\n\n\n1\n\n\n\n# 7. 总结\n\n至此，用腾讯云函数给EUserv德国免费VPS自动续期设置完毕。这里是利用免费腾讯云函数SCF的Python环境，定时运行续费代码，从而完成登录Euserv网站，判断是否需要续期，若需要，即执行续期动作。如果您自己有可用的VPS，甚至在Euserv免费VPS自身上定时运行corn 的续期脚本也是可用的。\n\n\n# 七、Euserv一键安装教程\n\n首选需要一个EUserv的免费实例，怎么注册油管上有很多教程，我这里就不多说了。\n\n用SSH登录后\n\n第一步输入\n\necho -e "nameserver 2001:67c:2b0::4\\nnameserver 2001:67c:2b0::6" > /etc/resolv.conf\n\n第二步安装wget、curl\n\nCentos\n\nyum update && yum install -y wget curl\n\nDebian\n\napt update && apt install wget curl -y\n\nUbuntu\n\napt-get update && apt-get install wget -y\n\n第三步安装WARP\n\nwget -N https://cdn.jsdelivr.net/gh/fscarmen/warp/menu.sh && bash menu.sh [option] [lisence]\n\n选为 ipv6 only 添加 ipv4\n\n选免费\n\n选IPV4优先\n\n第四步输入mack a 的一键脚本\n\nwget -P /root -N --no-check-certificate "https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh" && chmod 700 /root/install.sh && /root/install.sh\n\n\n1\n\n\n安装过程有中文说明，很容易\n\n智能解析DNS服务，我选择N\n\n安装成功复制一下代码就OK了',normalizedContent:'# euserv\n\neuserv是一家德国主机商，提供vps主机、服务器等，目前该商家提供免费ipv6主机服务器，配置信息是cpu：1 core、内存：1 gb、硬盘：10 gb hdd、带宽：1 gbit，提供一个ipv6地址，想要ipv4地址那就付费了。虽然免费vps主机看起来配置很好，但是用起来非常地卡。\n\n申请euserv免费vps主机的过程并不复杂，也不需要什么paypal、信用卡之类的验证，但是euserv免费vps主机申请要人工审核，一般来说48小时内会收到回复。当然，也有申请euserv免费vps主机失败的，或者是euserv免费vps主机被删号的。\n\n\n\n更多的免费vps主机，这里还有：\n\n 1. oracle甲骨文免费云主机申请使用-oracle免费vps测评和vps重置密钥登录\n 2. aws免费vps主机申请使用-amazon ec2韩国日本香港机房vps主机评测\n 3. 英特尔intel devcloud免费云服务器和apponfly免费试用windows server服务器\n\n\n# 一、euserv免费vps申请\n\n网站：\n\n 1. http://www.euserv.de\n 2. https://www.euserv.com/en/\n\n进入网站后，可以将网站的语言切换为英文，或者是直接用浏览器翻译成中文。找到导航栏的免费vps主机申请链接。\n\n\n\n确定申请。\n\n\n\n可以看到euserv免费vps是免费一个月的，不过可以免费续期。\n\n\n\n在页面最下方点击结算。\n\n\n\n此时，注册一个新账号。\n\n\n\n填写你的注册信息。\n\n\n\n完成注册。\n\n\n\n再次登录到euserv后台，会提示让你补充你的详细信息，主要是街道地址、编号、手机号码等，填写参考下图：\n\n\n\n完成注册并申请vps主机，等待审核开通。\n\n\n\n\n# 二、euserv免费vps管理\n\neuserv免费vps开通后，你就可以点击进入到vps主机控制面板了。\n\n\n\n在euserv免费vps控制面板中，主要有查看vps信息、重装系统以及ipv6地址等功能。\n\n\n\n这是euserv免费vps重装系统页面。\n\n\n\n这是euserv免费vps查看信息页面，重装系统成功后，你就可以看到root的密码了，还有ipv6地址。\n\n\n# 三、euserv免费vps连接\n\neuserv免费vps只提供纯ipv6地址，所以连接管理euserv免费vps就是一个难题了。我们可以利用ipv6隧道来让本地的windows系统支持访问ipv6网站。\n\nwin+r 打开 cmd 或 windows powershell（管理员），输入命令：\n\n// 设置 teredo 服务器，默认为：win10.ipv6.microsoft.com \n\nnetsh interface teredo set state enterpriseclient server=default \n\n// 测试 ipv6 连接 \n\nping -6 ipv6.test-ipv6.com \n\nping -6 [2001:470:1:18::125] \n\n// 重置 ipv6 配置 \n\nnetsh interface ipv6 reset \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n**重启系统。**通过命令ipconfig /all 查看当前网络信息，看到 teredo tunneling pseudo-interface 有以 2001 开头的 ipv6 地址即可。\n\n启动 ie 浏览器，访问 http://test-ipv6.com 或 http://ipv6.test-ipv6.com，如果选项卡 “测试项目” 下面的 “不使用域名的 ipv6 测试” 显示成功，则隧道建立成功。\n\n\n\n如果经过上面操作后仍无法启用 ipv6，可能是 teredo 服务器无法正常连接，也可能是 windows 自身配置问题，可尝试以下两种方法：\n\n// 第一种：修改 teredo 服务器为 teredo.remlab.net \n\nnetsh interface teredo set state server=teredo.remlab.net \n\n// 第二种：先卸载当前 teredo 适配器再重新启用 \n\nnetsh interface teredo set state disable \n\nnetsh interface teredo set state type=default \n\nping -6 ipv6.test-ipv6.com \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n现在你就可以开始使用客户端连接你的euserv免费vps了。\n\n\n\n详细的操作方法请参考：windows 10系统利用ipv6隧道开启ipv6访问。使用浏览器访问ipv6地址，类似于：http://[2a01:4f8:191:48c:2018:2019::ed]，如下图：\n\n\n\n\n# 四、纯ipv6的vps搭建网站\n\n\n# 4.1 搭建web环境\n\n纯ipv6的vps安装vps主机面板基本上是没有什么问题，例如lnmp、oneinstack，经过挖站否的测试都正常。可能有一些面板会出现一些莫名其妙的问题，更多的面板参考：服务器控制面板榜单。\n\n宝塔面板后台默认的是不支持ipv6的，我们需要手动开启：\n\n\\#让宝塔面板监听ipv6\n\necho “**true**” > /www/server/panel/data/ipv6.pl\n\n\\#如果发现端口无法使用，也可以直接修改端口\n\necho “8888” > /www/server/panel/data/port.pl\n\n\\#重启面板：\n\nbt restart\n\n\\#宝塔面板在面板设置里勾选了监听ipv6，正常情况下ipv4应该也是可以使用的，部分服务器出现问题的话会导致ipv4无法登陆。使用以下命令\n\nrm -f /www/server/panel/data/ipv6.pl && /etc/init.d/bt restart\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n如果是oneinstack或者lnmp一键安装包，搭建网站还需要修改一下nginx的配置，让nginx同时监听ipv4和ipv6的请求，示例如下：\n\n listen 80;\n\n​    listen 443 ssl http2;\n\n​    listen [::]:443 ssl http2;\n\n​    listen [::]:80;\n\n​    server_name www.wzfou.com;\n\n​    index index.php index.html index.htm default.php default.htm default.html;\n\n​    root /www/wwwroot/www.wzfou.com;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 4.2 ipv6 dns解析\n\n对于ipv6地址，dns解析选择aaaa记录类型记录，记录值为ipv6地址即可。\n\n\n\n\n# 4.3 兼顾ipv4用户访问\n\n对于纯ipv6的网站，为了可以让ipv4的用户访问，我们可以接入到cloudflare免费cdn网络，如果不想修改ns服务器为cloudflare，可以使用cloudflare partner平台，例如：cloudflare partner接入管理cloudflare cdn。\n\n接入了cloudflare后，你就可以先设置aaaa记录了。\n\n\n\n接着在cloudflare partner接入平台会得到cname记录，这时你就可以到你的域名dns管理处修改cname记录了。\n\n\n\n成功将纯ipv6的vps主机接入到了cloudflare的cdn网络后，不管用户是不是支持ipv6访问都可以访问你的网站了，与普通的网站没有什么 区别。\n\n\n\n\n# 五、总结\n\neuserv免费vps主机官网打开速度很慢，需要一定耐心。实际测试euserv免费vps主机的性能非常地差，见：分享euserv提供的免费ipv6小鸡，至于如何在ipv6上的vps主机跑“qq”可以参考：纯ipv6的vps安装应用。\n\n关于给 euserv免费vps主机自动续期的方法，请参考：https://bawodu.com/euserv-renew/\n\n\n# 六、用腾讯云函数给euserv德国免费vps自动续期\n\n使用腾讯云函数 scf自动续期euserv免费ipv6 vps脚本见 https://github.com/o0oo0ooo0/euserv_extend\n\n目的：自动获取账号内所有的vps项目，并检测是否需要续期，需要续期会自动续期。\n\n\n# 1. 打开腾讯云函数sfc\n\n打开 https://console.cloud.tencent.com/scf/ 登录腾讯云，初次使用云函数scf要授权。\n\n\n\n\n# 2. 新建beautifulsoup层\n\n新建层 beautifulsoup ，将 beautifulsoup.zip 导入 ，添加运行环境 python 3.6 。注意层的位置选择香港等海外地区，因为我们要续费的vps在德国。\n\n\n\n建好层后如下，后面用的上。\n\n\n\n\n# 3. 新建腾讯云函数euserv_extend\n\n运行环境选择 python 3.6，创建方式选择 空白函数，内存选择 64m，执行超时时间建议为 300 s（网站在国外访问比较慢，建议部署在非大陆区域，例如hk、sg等，需要和上面创建层的位置是一样的。），将修改后的 main.py 粘贴进去。\n\n\n\n选择自定义创建，按下图配置\n\n\n\n复制https://github.com/o0oo0ooo0/euserv_extend库中的main.py文件。\n\n\n\n复制粘贴到上图index.py文本，然后粘贴到刚才打开的腾讯云函数服务编辑框中，修改其中的用户名，密码。\n\n\n\nusername: 你的euserv账户邮箱或customer id\n\nusername = ‘user@gmail.com’ username = ‘user1@gmail.com user2@gmail.com’ # 多个账号写法\n\npassword: 账户的密码\n\npassword = ‘password’ password = ‘password1 password2’ # 多个账号写法\n\n设置通知提醒（可选操作）\n\n我已server酱的提醒为例，打开https://sct.ftqq.com后微信扫码获取sentkey， 然后填写在上面函数代码server酱的key处。如果您不需要通知也可以不设置提醒。这步不用设置。\n\nsckey = \'xx\'\n\n\n1\n\n\n环境配置\n\n设置64m内存就够用了，300秒延时。\n\n\n\n其他默认就可，然后点完成。完成云函数配置。\n\n\n\n\n# 4. 绑定层 beautifulsoup\n\n在 euserv_extend⇨函数管理⇨层管理 里绑定层 beautifulsoup。\n\n\n\n\n# 5. 测试并创建时间触发\n\n点击下图的测试，或会提示config等不存在，可以忽略。\n\n\n\n测试没错误，就点euserv_extend⇨触发管理⇨创建触发器触发周期⇨自定义触发周期。填入0 0 8 */7 * * *\n\n\n\n每 7 天的 8 点执行，可修改成你想要的时间。\n\n\n# 6. 查看运行日志\n\n日志提示有2台vps，说明以上成功设置了腾讯云函数scf续期脚本。\n\nstart requestid:ff1a66b6-27b6-4ec3-9e87-******************************正在续费第 1 个账号starting new https connection (1): support.euserv.com:443https://support.euserv.com:443 "get /index.iphp http/1.1" 302 3218https://support.euserv.com:443 "get /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071628 http/1.1" 200 3218https://support.euserv.com:443 "get /pic/logo_small.png http/1.1" 200 78https://support.euserv.com:443 "post /index.iphp http/1.1" 200 12524https://support.euserv.com:443 "get /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071 http/1.1" 200 12562检测到第 1 个账号有 2 台vps，正在尝试续期serverid: 388889 does not need to be renewedserverid: 399991 does not need to be renewedchecking.......resetting dropped connection: support.euserv.comhttps://support.euserv.com:443 "get /index.iphp?sess_id=71b865f50603e8b47dd4dc5ddc3c7b2e162621201071 http/1.1" 302 12562https://support.euserv.com:443 "get /index.iphp http/1.1" 302 3214https://support.euserv.com:443 "get /index.iphp?sess_id=64cddbf54472cb28e449a1058fe88e3b1626261591628911 http/1.1" 200 3214all work done! enjoystarting new https connection (1): sc.ftqq.com:443https://sc.ftqq.com:443 "post /sct63352tecqdrod2yemxg4itf.send http/1.1" 200 107server酱 推送成功******************************response requestid:ff1a66b6-27b6-4ec3-9e8da57 retmsg:nullend requestid:ff1a66b6-27b6-4ec3-9e87-0494da57report requestid:ff1a66b6-27b6-4ec3-9e87-0ea14494da57 duration:39826ms memory:64mb memusage:20.109375mb\n\n\n1\n\n\n\n# 7. 总结\n\n至此，用腾讯云函数给euserv德国免费vps自动续期设置完毕。这里是利用免费腾讯云函数scf的python环境，定时运行续费代码，从而完成登录euserv网站，判断是否需要续期，若需要，即执行续期动作。如果您自己有可用的vps，甚至在euserv免费vps自身上定时运行corn 的续期脚本也是可用的。\n\n\n# 七、euserv一键安装教程\n\n首选需要一个euserv的免费实例，怎么注册油管上有很多教程，我这里就不多说了。\n\n用ssh登录后\n\n第一步输入\n\necho -e "nameserver 2001:67c:2b0::4\\nnameserver 2001:67c:2b0::6" > /etc/resolv.conf\n\n第二步安装wget、curl\n\ncentos\n\nyum update && yum install -y wget curl\n\ndebian\n\napt update && apt install wget curl -y\n\nubuntu\n\napt-get update && apt-get install wget -y\n\n第三步安装warp\n\nwget -n https://cdn.jsdelivr.net/gh/fscarmen/warp/menu.sh && bash menu.sh [option] [lisence]\n\n选为 ipv6 only 添加 ipv4\n\n选免费\n\n选ipv4优先\n\n第四步输入mack a 的一键脚本\n\nwget -p /root -n --no-check-certificate "https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh" && chmod 700 /root/install.sh && /root/install.sh\n\n\n1\n\n\n安装过程有中文说明，很容易\n\n智能解析dns服务，我选择n\n\n安装成功复制一下代码就ok了',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Linux脚本工具",frontmatter:{author:"xlc520",title:"Linux脚本工具",description:"Linux脚本工具",time:"2022-01-21T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/Linux%E8%84%9A%E6%9C%AC%E5%B7%A5%E5%85%B7.html",relativePath:"other/Linux脚本工具.md",key:"v-288cf2b4",path:"/other/Linux%E8%84%9A%E6%9C%AC%E5%B7%A5%E5%85%B7/",headers:[{level:2,title:"EdNovas 的 Toolbox 工具箱",slug:"ednovas-的-toolbox-工具箱",normalizedTitle:"ednovas 的 toolbox 工具箱",charIndex:16}],readingTime:{minutes:.14,words:42},headersStr:"EdNovas 的 Toolbox 工具箱",content:"# Linux脚本工具\n\n\n# EdNovas 的 Toolbox 工具箱\n\n脚本地址\n\nhttps://github.com/wdm1732418365/vpstoolbox\n\n最新版：\n\nCODE\nwget -N https://raw.githubusercontent.com/wdm1732418365/vpstoolbox/main/ednovastool.sh && chmod +x ednovastool.sh && ./ednovastool.sh\n\n\n1\n2\n",normalizedContent:"# linux脚本工具\n\n\n# ednovas 的 toolbox 工具箱\n\n脚本地址\n\nhttps://github.com/wdm1732418365/vpstoolbox\n\n最新版：\n\ncode\nwget -n https://raw.githubusercontent.com/wdm1732418365/vpstoolbox/main/ednovastool.sh && chmod +x ednovastool.sh && ./ednovastool.sh\n\n\n1\n2\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"MyEclipsev2021永久激活版",frontmatter:{author:"xlc520",title:"MyEclipsev2021永久激活版",description:"MyEclipsev2021永久激活版",time:"2022-01-22T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/MyEclipse.html",relativePath:"other/MyEclipse.md",key:"v-848b48f6",path:"/other/MyEclipse/",headers:[{level:3,title:"激活码",slug:"激活码",normalizedTitle:"激活码",charIndex:26},{level:3,title:"软件特色",slug:"软件特色",normalizedTitle:"软件特色",charIndex:338},{level:3,title:"MyEclipse2021破解教程",slug:"myeclipse2021破解教程",normalizedTitle:"myeclipse2021破解教程",charIndex:687},{level:3,title:"功能介绍",slug:"功能介绍",normalizedTitle:"功能介绍",charIndex:990},{level:3,title:"MyEclipse/Eclipse使用教程",slug:"myeclipse-eclipse使用教程",normalizedTitle:"myeclipse/eclipse使用教程",charIndex:1284},{level:3,title:"常用快捷建",slug:"常用快捷建",normalizedTitle:"常用快捷建",charIndex:1901}],readingTime:{minutes:4.41,words:1322},headersStr:"激活码 软件特色 MyEclipse2021破解教程 功能介绍 MyEclipse/Eclipse使用教程 常用快捷建",content:"# MyEclipsev2021永久激活版\n\n\n# 激活码\n\n1、zLR8ZC-855575-6154505816197416 2、3LR8ZC-855575-61567256274007429 3、zLR8ZC-855575-61567256215416341 4、3LR8ZC-855575-61567256646682235 5、zLR8ZC-855575-61567256903775584 6、oLR8ZC-855575-77665356722269248 7、fLR8ZC-855575-7766535033841152 8、gLR8ZC-855575-78507056841444089 9、GLR8ZC-855575-7850705925145157\n\n\n# 软件特色\n\n【企业级开发】 软件为完成工作提供了智能的企业工具。Java EE库和功能是企业级项目的基础，支持部署到几十个企业友好的应用服务器进行快速检测。 【Java Web开发】 有了它，你就拥有了所有的Web开发技术。支持快速添加技术功能到Web项目中，使用可视化编辑器以便编码和配置，并且还可以在多种应用服务器上测试你的任务。 【云开发】 脱离缓存，使用内置功能连接到云，支持探索和连接服务，为他人提供自己的REST Web服务。无论是定位还是虚拟的微博，它都能轻松地创建云连接。 【移动开发】 移动应用开发再也无需使用特殊工具或学习新的编程语言。软件支持使用Java、HTML和JQuery进行编码，使用移动工具创建拥有良好编码的应用，并嵌入到原生iOS和Android应用中。\n\n\n# MyEclipse2021破解教程\n\n1、在软件学堂下载软件安装包，并对压缩包进行解压得到安装程序和破解文件。 2、然后双击运行软件安装程序，按照安装向导进行安装。 3、接受软件安装协议，点击Next进行下一步。 4、选择软件安装位置，一般默认安装在c盘，用户也可自定义选择其他位置，注意千万不要出现中文目录。 5、软件正在安装中，请用户耐心等待。 6、待到安装完成后，退出安装向导。 7、接下来进入软件主界面，在弹出注册界面，点击Enter License默认进入。 8、然后将软件包中的注册码输入到该界面中，再点击Enable Now。 9、接着载点击Activate Now即可完成激活啦。\n\n\n# 功能介绍\n\n1、优化JavaEE开发 确保企业开发使用的是MyEclipse中当前最新的JavaEE技术，并且它强大的功能随时可用。 2、保持厂商中立 如果IBMWebSphere是你企业开发的重要组成部分，那么厂商锁定肯定会阻碍你的选择。你可以让开发更加自由，为WebSphere开发提供了工具，并支持大量的其他关键性技术。 3、RESTfulWeb服务开发 支持使用RESTweb服务创建云应用。使用REST特殊工具生成和测试添加到应用中的服务。 4、项目工作流中保持Maven 通过标准的Maven项目架构和菜单内置的启动命令，你可以在当前IDE下使用Maven管理项目。\n\n\n# MyEclipse/Eclipse使用教程\n\n设置工作空间编码格式 点击Windows → preference → WorkSpace 或者搜索workspace 选择编码格式，默认为GBK，不过选择UTF-8为好。 成功更改工作空间编码之后，如果对默认字体不适应，可以选择更改字体。 更改字体 点击Windows → preference → General →Appearence → Color and Fonts → Basic 或者搜索Colors and fonts 选择 Text font ，点击Edit编辑，就可以更改字体了，选择合适的就行。 字体设置完之后，最好顺便设置下注释模版，注释模版就是在使用/** /这种注释的时候，会自动按照所设置的注释模版注释。注释是个好习惯。 设置注释模版 Class类的注释模板打开Eclipse/MyEclipse工具，点击 Window->Preferences弹出首选项设置窗口，Java->Code Style->Code Template选项列表，点击Types。 可以输入/，然后回车或按shift+alt+j快捷键补齐注释内容。 注释模版代码: 1、/ 2、 Title: ${type_name} 3、* Description: 4、* Version:1.0.0 5、* @author ${user} 6、* @date ${date} 7、*/\n\n\n# 常用快捷建\n\nCtrl+H 全局搜索 Ctrl+F 本类搜索以及替换 Ctrl+shift+R 搜索文件 shift+tab 整体代码向左移 ctrl+shift+↓ 复制当前代码并向下移一行ctrl+shift+R 搜索文件 ctrl+H 搜索所有文件包括代码 ctrl+f 搜索当前页面存盘 Ctrl+s(肯定知道)注释代码 Ctrl+/取消注释 Ctrl+1 快速修复 Ctrl+L 定位在某行 Ctrl+O 快速显示 OutLine Ctrl+T 快速显示当前类的继承结构 Ctrl+W 关闭当前Editer Ctrl+K 快速定位到下一个 Ctrl+E 快速显示当前Editer的下拉列表 Ctrl+J 正向增量查找 Ctrl+D: 删除当前行 Ctrl+Alt+↓ 复制当前行到下一行(复制增加) Ctrl+Alt+↑ 复制当前行到上一行(复制增加)",normalizedContent:"# myeclipsev2021永久激活版\n\n\n# 激活码\n\n1、zlr8zc-855575-6154505816197416 2、3lr8zc-855575-61567256274007429 3、zlr8zc-855575-61567256215416341 4、3lr8zc-855575-61567256646682235 5、zlr8zc-855575-61567256903775584 6、olr8zc-855575-77665356722269248 7、flr8zc-855575-7766535033841152 8、glr8zc-855575-78507056841444089 9、glr8zc-855575-7850705925145157\n\n\n# 软件特色\n\n【企业级开发】 软件为完成工作提供了智能的企业工具。java ee库和功能是企业级项目的基础，支持部署到几十个企业友好的应用服务器进行快速检测。 【java web开发】 有了它，你就拥有了所有的web开发技术。支持快速添加技术功能到web项目中，使用可视化编辑器以便编码和配置，并且还可以在多种应用服务器上测试你的任务。 【云开发】 脱离缓存，使用内置功能连接到云，支持探索和连接服务，为他人提供自己的rest web服务。无论是定位还是虚拟的微博，它都能轻松地创建云连接。 【移动开发】 移动应用开发再也无需使用特殊工具或学习新的编程语言。软件支持使用java、html和jquery进行编码，使用移动工具创建拥有良好编码的应用，并嵌入到原生ios和android应用中。\n\n\n# myeclipse2021破解教程\n\n1、在软件学堂下载软件安装包，并对压缩包进行解压得到安装程序和破解文件。 2、然后双击运行软件安装程序，按照安装向导进行安装。 3、接受软件安装协议，点击next进行下一步。 4、选择软件安装位置，一般默认安装在c盘，用户也可自定义选择其他位置，注意千万不要出现中文目录。 5、软件正在安装中，请用户耐心等待。 6、待到安装完成后，退出安装向导。 7、接下来进入软件主界面，在弹出注册界面，点击enter license默认进入。 8、然后将软件包中的注册码输入到该界面中，再点击enable now。 9、接着载点击activate now即可完成激活啦。\n\n\n# 功能介绍\n\n1、优化javaee开发 确保企业开发使用的是myeclipse中当前最新的javaee技术，并且它强大的功能随时可用。 2、保持厂商中立 如果ibmwebsphere是你企业开发的重要组成部分，那么厂商锁定肯定会阻碍你的选择。你可以让开发更加自由，为websphere开发提供了工具，并支持大量的其他关键性技术。 3、restfulweb服务开发 支持使用restweb服务创建云应用。使用rest特殊工具生成和测试添加到应用中的服务。 4、项目工作流中保持maven 通过标准的maven项目架构和菜单内置的启动命令，你可以在当前ide下使用maven管理项目。\n\n\n# myeclipse/eclipse使用教程\n\n设置工作空间编码格式 点击windows → preference → workspace 或者搜索workspace 选择编码格式，默认为gbk，不过选择utf-8为好。 成功更改工作空间编码之后，如果对默认字体不适应，可以选择更改字体。 更改字体 点击windows → preference → general →appearence → color and fonts → basic 或者搜索colors and fonts 选择 text font ，点击edit编辑，就可以更改字体了，选择合适的就行。 字体设置完之后，最好顺便设置下注释模版，注释模版就是在使用/** /这种注释的时候，会自动按照所设置的注释模版注释。注释是个好习惯。 设置注释模版 class类的注释模板打开eclipse/myeclipse工具，点击 window->preferences弹出首选项设置窗口，java->code style->code template选项列表，点击types。 可以输入/，然后回车或按shift+alt+j快捷键补齐注释内容。 注释模版代码: 1、/ 2、 title: ${type_name} 3、* description: 4、* version:1.0.0 5、* @author ${user} 6、* @date ${date} 7、*/\n\n\n# 常用快捷建\n\nctrl+h 全局搜索 ctrl+f 本类搜索以及替换 ctrl+shift+r 搜索文件 shift+tab 整体代码向左移 ctrl+shift+↓ 复制当前代码并向下移一行ctrl+shift+r 搜索文件 ctrl+h 搜索所有文件包括代码 ctrl+f 搜索当前页面存盘 ctrl+s(肯定知道)注释代码 ctrl+/取消注释 ctrl+1 快速修复 ctrl+l 定位在某行 ctrl+o 快速显示 outline ctrl+t 快速显示当前类的继承结构 ctrl+w 关闭当前editer ctrl+k 快速定位到下一个 ctrl+e 快速显示当前editer的下拉列表 ctrl+j 正向增量查找 ctrl+d: 删除当前行 ctrl+alt+↓ 复制当前行到下一行(复制增加) ctrl+alt+↑ 复制当前行到上一行(复制增加)",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"MySQL 8",frontmatter:{author:"xlc520",title:"MySQL 8",description:"MySQL 8",time:"2022-01-23T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/MySQL.html",relativePath:"other/MySQL.md",key:"v-ff8cf936",path:"/other/MySQL/",readingTime:{minutes:4.39,words:1318},headersStr:null,content:"# MySQL 8\n\nmysql从5.7一下子跳跃到了8.0，其中的改变还是很大，有点这里就不说了，小伙伴们自己去百度了解一下，这里重点说一下，安装的事\n\n1.解压后，文件下下面是没有my.ini 和 data目录的，需要自己新建一个my.ini和data目录\n\nmy.ini的基本代码就这几行配置，足矣，更详细的自己官网上看（F:\\mysql-8.0.11-winx64 是我的解压路径）\n\n\n[mysqld]\n# 设置3306端口\nport=3306\n# 设置mysql的安装目录\nbasedir=E:\\Software\\mysql-8.0.19-winx64\n# 设置mysql数据库的数据的存放目录，在安装mysql-5.7.30-winx64.zip版本的时候，此配置不可添加，否则mysql将无法启动。\n# datadir=E:\\Software\\mysql-8.0.19-winx64\\data\n# 允许最大连接数\nmax_connections=200\n# 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统\nmax_connect_errors=10\n# 服务端使用的字符集默认为UTF8\ncharacter-set-server=utf8\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n# 默认使用“mysql_native_password”插件认证\ndefault_authentication_plugin=mysql_native_password\n# 关闭ssl\nskip_ssl\n# 配置时区\ndefault-time_zone='+8:00'\n[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8\n[client]\n# 设置mysql客户端连接服务端时默认使用的端口\nport=3306\ndefault-character-set=utf8\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n2.配置环境变量，将解压目录下的bin文件夹的路径配置到系统变量中的path下（F:\\mysql-8.0.11-winx64\\bin）\n\n3.以管理员身份运行命令提示符\n\n\n\n如果顺利会产生下面的信息：\n\n第4行的信息尤其重要，这是初始化密码，请拿笔或者截图记下，这个随机密码会很随机，随机到可能有一些符号；\n\n\n\n提示：如果你关了这个窗口，或者没记住，那也没事，删掉初始化的 datadir 目录（就是解压文件夹下的data文件夹）里面的东西，不要删除data文件夹，再执行一遍初始化命令，又会重新生成的。\n\n4.安装服务 mysqld --install 服务名（可以不写，默认是MySql,如果你的电脑上要安装付哦个mysql,这里的服务名写一下做区分），安装成功后控制它会提示：success ** (忘记了)\n\nmysqld --install [服务名]\n\n\n1\n\n\n5.启动服务（这时候不要去登录mysql,登录不进去的，必须要先启动）\n\n\n\n6.登录mysql，当然是为了修改密码啊，那个随机密码鬼才能记得住，这时候也不要尝试用图形化管理工具（navicat for mysql）去登录，会报错的，继续往下看\n\n\n\n这里踩坑的小朋友一般是密码输错了，或者服务没启动，一直登录不进去。\n\n7.修改密码\n\nALTER USER \"root\"@\"localhost\" IDENTIFIED BY \"你的新密码\";\n\n注意：重点啊，如果你没有设置认证方式，默认的密码加密方式是：caching_sha2_password，而现在很多客户端工具还不支持这种加密认证方式，连接测试的时候就会报错：client does not support authentication protocol requested by server; consider upgrading MySQL client，这里的错误信息就是不支持身份认证方式，没关系，去my.ini里面在[mysqld]下面加上这句话即可：\n\ndefault_authentication_plugin=mysql_native_password\n\n\n1\n\n\n8.打开远程访问\n\n对于允许远程访问，有两种角色，一种是我们的root用户，还有一种是非root用户，从安全的角度（我也不知道什么角度，听别人说的，暂且相信着吧），远程访问最后不要用root用户\n\n用root用户访问：\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%'IDENTIFIED BY '密码' WITH GRANT OPTION;\n\n\n1\n2\n\n\n这里允许root用户远程的时候，如果出现如下的错误，就先去把root用的host改成%，再运行上面那句话，对于mysql用户管理这一块不熟悉的朋友们，请看我另一篇博客--mysql 用户及权限管理\n\n\n\n非root用户，这里就要先去创建一个用户\n\n切换数据库\nmysql>use mysql;\n\n创建用户(user1:用户名;%:任意ip,也可以指定，root默认就是localhost;123456：登录密码)\nmysql>CREATE USER 'user1'@'%' IDENTIFIED BY '123456';\n\n授权，默认创建的用户权限是usage,就是无权限，只能登录而已，（all：所有权限，这里有select,update等等权限，可以去搜一下；后面的*.*：指定数据库.指定表，这里是所有；to后面就是你刚才创建的用户）mysql>grant all on *.* to 'user1'@'%'；\n注意:用以上命令授权的用户不能给其它用户授权,如果想让该用户可以授权,用以下命令: \nGRANT all ON databasename.tablename TO 'username'@'host' WITH GRANT OPTION; \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n其他：\n\n# 修改密码\nALTER USER 'test'@'localhost' IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY '新密码';\n\nALTER USER 'ynau'@'localhost' IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY '123456';\n\n# 创建用户\nCREATE USER 'ynau'@'%' IDENTIFIED BY '123456';\n\n#授权\ngrant all on *.* to 'ynau'@'%';\n\n#刷新：\nflush privileges;\n\n#重启mysql服务\nservice mysqld restart\n\n#验证是否修改成功\nmysql -u test -p\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n",normalizedContent:"# mysql 8\n\nmysql从5.7一下子跳跃到了8.0，其中的改变还是很大，有点这里就不说了，小伙伴们自己去百度了解一下，这里重点说一下，安装的事\n\n1.解压后，文件下下面是没有my.ini 和 data目录的，需要自己新建一个my.ini和data目录\n\nmy.ini的基本代码就这几行配置，足矣，更详细的自己官网上看（f:\\mysql-8.0.11-winx64 是我的解压路径）\n\n\n[mysqld]\n# 设置3306端口\nport=3306\n# 设置mysql的安装目录\nbasedir=e:\\software\\mysql-8.0.19-winx64\n# 设置mysql数据库的数据的存放目录，在安装mysql-5.7.30-winx64.zip版本的时候，此配置不可添加，否则mysql将无法启动。\n# datadir=e:\\software\\mysql-8.0.19-winx64\\data\n# 允许最大连接数\nmax_connections=200\n# 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统\nmax_connect_errors=10\n# 服务端使用的字符集默认为utf8\ncharacter-set-server=utf8\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=innodb\n# 默认使用“mysql_native_password”插件认证\ndefault_authentication_plugin=mysql_native_password\n# 关闭ssl\nskip_ssl\n# 配置时区\ndefault-time_zone='+8:00'\n[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8\n[client]\n# 设置mysql客户端连接服务端时默认使用的端口\nport=3306\ndefault-character-set=utf8\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n2.配置环境变量，将解压目录下的bin文件夹的路径配置到系统变量中的path下（f:\\mysql-8.0.11-winx64\\bin）\n\n3.以管理员身份运行命令提示符\n\n\n\n如果顺利会产生下面的信息：\n\n第4行的信息尤其重要，这是初始化密码，请拿笔或者截图记下，这个随机密码会很随机，随机到可能有一些符号；\n\n\n\n提示：如果你关了这个窗口，或者没记住，那也没事，删掉初始化的 datadir 目录（就是解压文件夹下的data文件夹）里面的东西，不要删除data文件夹，再执行一遍初始化命令，又会重新生成的。\n\n4.安装服务 mysqld --install 服务名（可以不写，默认是mysql,如果你的电脑上要安装付哦个mysql,这里的服务名写一下做区分），安装成功后控制它会提示：success ** (忘记了)\n\nmysqld --install [服务名]\n\n\n1\n\n\n5.启动服务（这时候不要去登录mysql,登录不进去的，必须要先启动）\n\n\n\n6.登录mysql，当然是为了修改密码啊，那个随机密码鬼才能记得住，这时候也不要尝试用图形化管理工具（navicat for mysql）去登录，会报错的，继续往下看\n\n\n\n这里踩坑的小朋友一般是密码输错了，或者服务没启动，一直登录不进去。\n\n7.修改密码\n\nalter user \"root\"@\"localhost\" identified by \"你的新密码\";\n\n注意：重点啊，如果你没有设置认证方式，默认的密码加密方式是：caching_sha2_password，而现在很多客户端工具还不支持这种加密认证方式，连接测试的时候就会报错：client does not support authentication protocol requested by server; consider upgrading mysql client，这里的错误信息就是不支持身份认证方式，没关系，去my.ini里面在[mysqld]下面加上这句话即可：\n\ndefault_authentication_plugin=mysql_native_password\n\n\n1\n\n\n8.打开远程访问\n\n对于允许远程访问，有两种角色，一种是我们的root用户，还有一种是非root用户，从安全的角度（我也不知道什么角度，听别人说的，暂且相信着吧），远程访问最后不要用root用户\n\n用root用户访问：\ngrant all privileges on *.* to 'root'@'%'identified by '密码' with grant option;\n\n\n1\n2\n\n\n这里允许root用户远程的时候，如果出现如下的错误，就先去把root用的host改成%，再运行上面那句话，对于mysql用户管理这一块不熟悉的朋友们，请看我另一篇博客--mysql 用户及权限管理\n\n\n\n非root用户，这里就要先去创建一个用户\n\n切换数据库\nmysql>use mysql;\n\n创建用户(user1:用户名;%:任意ip,也可以指定，root默认就是localhost;123456：登录密码)\nmysql>create user 'user1'@'%' identified by '123456';\n\n授权，默认创建的用户权限是usage,就是无权限，只能登录而已，（all：所有权限，这里有select,update等等权限，可以去搜一下；后面的*.*：指定数据库.指定表，这里是所有；to后面就是你刚才创建的用户）mysql>grant all on *.* to 'user1'@'%'；\n注意:用以上命令授权的用户不能给其它用户授权,如果想让该用户可以授权,用以下命令: \ngrant all on databasename.tablename to 'username'@'host' with grant option; \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n其他：\n\n# 修改密码\nalter user 'test'@'localhost' identified with mysql_native_password by '新密码';\n\nalter user 'ynau'@'localhost' identified with mysql_native_password by '123456';\n\n# 创建用户\ncreate user 'ynau'@'%' identified by '123456';\n\n#授权\ngrant all on *.* to 'ynau'@'%';\n\n#刷新：\nflush privileges;\n\n#重启mysql服务\nservice mysqld restart\n\n#验证是否修改成功\nmysql -u test -p\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"MySQL压缩版安装配置",frontmatter:{author:"xlc520",title:"MySQL压缩版安装配置",description:"MySQL压缩版安装配置",time:"2022-01-24T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/MySQL%E5%8E%8B%E7%BC%A9%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",relativePath:"other/MySQL压缩版安装配置.md",key:"v-018a97d8",path:"/other/MySQL%E5%8E%8B%E7%BC%A9%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/",headers:[{level:2,title:"1 下载",slug:"_1-下载",normalizedTitle:"1 下载",charIndex:19},{level:2,title:"2 安装",slug:"_2-安装",normalizedTitle:"2 安装",charIndex:318},{level:2,title:"3.配置",slug:"_3-配置",normalizedTitle:"3.配置",charIndex:1699},{level:2,title:"4 安装错误提示",slug:"_4-安装错误提示",normalizedTitle:"4 安装错误提示",charIndex:2522},{level:3,title:"提示",slug:"提示",normalizedTitle:"提示",charIndex:1745},{level:3,title:"tips2：",slug:"tips2",normalizedTitle:"tips2：",charIndex:2832},{level:2,title:"5 配置mysql的环境变量",slug:"_5-配置mysql的环境变量",normalizedTitle:"5 配置mysql的环境变量",charIndex:3059}],readingTime:{minutes:4.51,words:1353},headersStr:"1 下载 2 安装 3.配置 4 安装错误提示 提示 tips2： 5 配置mysql的环境变量",content:"# MySQL压缩版安装配置\n\n\n# 1 下载\n\n官网：https://www.mysql.com/ 最新版下载地址：https://dev.mysql.com/downloads/mysql/ 多版本下载地址：https://downloads.mysql.com/archives/community/ 在这里，我使用的是MySQL8.0.19解压缩版，附上下载链接：https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.19-winx64.zip\n\n此时的MySQL版本已经更新到8.0.23，所以我需要进入多版本链接进行下载。\n\n注意：\n\n * 旧版本中存在漏洞\n * \n\n\n# 2 安装\n\n1.我们提前创建好解压目录：\n\n找到刚才下载的压缩包，复制到我们上一步创建的解压目录下：\n\n右键进行解压，解压后的目录如下图所示：\n\n\n\n接下来创建我们的数据库文件存放位置，这里我在mysql解压目录的同级目录下创建了databases文件夹，作为数据库存放目录\n\n接下来进行初始化安装： 用管理员身份打开cmd命令，并进入到mysql解压目录下的bin目录，如：D:\\ProgramFiles\\MySQL8\\bin\n\n2、创建一个名为my.ini的文件：\n\n\n\n3、修改my.ini文件：\n\n[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8\n[mysqld]\n# 设置3306端口\nport = 3306\n# 设置mysql的安装目录\nbasedir = D:\\\\Program Files\\\\mysql\\\\\n# 设置mysql数据库的数据的存放目录\ndatadir = D:\\\\Program Files\\\\mysql\\\\data\n# 允许最大连接数\nmax_connections=20\n# 服务端使用的字符集默认为8比特编码的latin1字符集\ncharacter-set-server=utf8\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n# 创建模式\nsql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\n\n\n\n[mysqld]\n# 设置服务端使⽤用的字符集为utf-8\ncharacter-set-server=utf8\n# 绑定IPv4地址\nbind-address = 127.0.0.1\n# 设置mysql的端⼝口号\nport = 3306\n# 设置mysql的安装⽬目录\nbasedir=D:/ProgramFiles/MySQL8\n# 设置mysql数据库的数据的存放⽬目录\ndatadir=D:/ProgramFiles/MySQL8/data\n# 允许最⼤大连接数\nmax_connections=20\n# 创建新表时将使⽤用的默认存储引擎\ndefault-storage-engine=INNODB\ndefault-time_zone='+8:00'\n# 设置mysql以及数据库的默认编码\n[mysql]\ndefault-character-set=utf8\n[mysql.server]\ndefault-character-set=utf8\n# 设置客户端默认字符集\n[client]\ndefault-character-set=utf8\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\n\n特别要注意：\n\n（1）D:\\Program Files\\mysql\\data 这个目录一定要是“\\”，千万别弄成“\\”不然会报错，或者可以用“/”； （2）Mysq安装目录和数据存放目录一定要修改为你自己设定的目录，除非你设置的目录与上述一致。\n\n\n# 3.配置\n\n3.用管理员身份打开cmd窗口：win -> windows系统 -> 右击命令提示符 -> 更多 -> 以管理员身份运行\n\n4.进入到bin目录下\n\n5.执行 mysqld --install 命令安装（执行 mysqld --remove 卸载安装）\n\n6.继续执行 mysqld --initialize --user=root --console 命令\n\n注意：初始化完成后MySQL会给root用户创建一个默认随机密码，下图白色部分就是密码，同时在data目录下也添加了相关的配置文件，如果密码有字符辨识不了，则把date目录下的文件都删了，重新执行这一步。\n\n\n\n7.执行net start mysql启动服务（执行net stop mysql关闭服务）\n\n\n\n8.执行mysql -uroot -pqLBiVku7k%f登录MySQL（-u后面是用户名，-p后面是密码，即上面的默认随机密码）\n\n9.修改密码\n\nmysql版本是7:\n\nset password = password('root');\n\n注意：如果mysql版本是8或以上，则使用 alter user 'root'@'localhost' identified by '新的密码'; 修改密码\n\nALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '123456'; 这样我们就可以将root账户的密码修改为123456了，将123456处替换为你们要修改的密码，回车执行就可以了。\n\n12.登录MySQL后可以添加一个用户\n\n添加格式：\n\ngrant 权限 on 数据库.表 to 用户名@'IP地址' identified by '密码'\n\n实例：\n\ngrant all on *.* to test@'%' identified by'test'\n\n\n# 4 安装错误提示\n\n\n# 提示\n\n安装过程中如果出现以下错误，是我们的电脑缺少运行时环境。 **注：**在这里我们有出现这种情况，但为了以防万一，还是给大家说一下，这里的图片用的网图，如有侵权，请评论删图！\n\n\n\n解决办法： 下载vcruntime140_1.dll，链接：https://cn.dll-files.com/vcruntime140_1.dll.html\n\n下载完成后，解压提取文件，将提取出来的vcruntime140_1.dll文件复制到我们的C:\\Windows\\System32 注意, 32位版本的vcruntime140_1.dll需要复制到C:\\Windows\\SysWOW64下\n\n\n# tips2：\n\nmysqld –initialize-insecure自动生成无密码的root用户； mysqld –initialize自动生成带随机密码的root用户； mysqld -remove移除自己的mysqld服务； net stop mysql命令，停止mysql服务 如果报错，清空data文件夹，最好还是删掉data文件，重新执行remove--initialize--install--start（这些不是命令）流程即可；\n\n\n# 5 配置mysql的环境变量\n\nMYSQL_HOME\n\nD:\\Program Files\\mysql\n\n\n1\n2\n3\n\n\n\n\n点击Path，增加：\n\n%MYSQL_HOME%\\bin;\n\n\n1\n\n\n",normalizedContent:"# mysql压缩版安装配置\n\n\n# 1 下载\n\n官网：https://www.mysql.com/ 最新版下载地址：https://dev.mysql.com/downloads/mysql/ 多版本下载地址：https://downloads.mysql.com/archives/community/ 在这里，我使用的是mysql8.0.19解压缩版，附上下载链接：https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.19-winx64.zip\n\n此时的mysql版本已经更新到8.0.23，所以我需要进入多版本链接进行下载。\n\n注意：\n\n * 旧版本中存在漏洞\n * \n\n\n# 2 安装\n\n1.我们提前创建好解压目录：\n\n找到刚才下载的压缩包，复制到我们上一步创建的解压目录下：\n\n右键进行解压，解压后的目录如下图所示：\n\n\n\n接下来创建我们的数据库文件存放位置，这里我在mysql解压目录的同级目录下创建了databases文件夹，作为数据库存放目录\n\n接下来进行初始化安装： 用管理员身份打开cmd命令，并进入到mysql解压目录下的bin目录，如：d:\\programfiles\\mysql8\\bin\n\n2、创建一个名为my.ini的文件：\n\n\n\n3、修改my.ini文件：\n\n[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8\n[mysqld]\n# 设置3306端口\nport = 3306\n# 设置mysql的安装目录\nbasedir = d:\\\\program files\\\\mysql\\\\\n# 设置mysql数据库的数据的存放目录\ndatadir = d:\\\\program files\\\\mysql\\\\data\n# 允许最大连接数\nmax_connections=20\n# 服务端使用的字符集默认为8比特编码的latin1字符集\ncharacter-set-server=utf8\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=innodb\n# 创建模式\nsql_mode = no_engine_substitution,strict_trans_tables\n\n\n\n[mysqld]\n# 设置服务端使⽤用的字符集为utf-8\ncharacter-set-server=utf8\n# 绑定ipv4地址\nbind-address = 127.0.0.1\n# 设置mysql的端⼝口号\nport = 3306\n# 设置mysql的安装⽬目录\nbasedir=d:/programfiles/mysql8\n# 设置mysql数据库的数据的存放⽬目录\ndatadir=d:/programfiles/mysql8/data\n# 允许最⼤大连接数\nmax_connections=20\n# 创建新表时将使⽤用的默认存储引擎\ndefault-storage-engine=innodb\ndefault-time_zone='+8:00'\n# 设置mysql以及数据库的默认编码\n[mysql]\ndefault-character-set=utf8\n[mysql.server]\ndefault-character-set=utf8\n# 设置客户端默认字符集\n[client]\ndefault-character-set=utf8\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\n\n特别要注意：\n\n（1）d:\\program files\\mysql\\data 这个目录一定要是“\\”，千万别弄成“\\”不然会报错，或者可以用“/”； （2）mysq安装目录和数据存放目录一定要修改为你自己设定的目录，除非你设置的目录与上述一致。\n\n\n# 3.配置\n\n3.用管理员身份打开cmd窗口：win -> windows系统 -> 右击命令提示符 -> 更多 -> 以管理员身份运行\n\n4.进入到bin目录下\n\n5.执行 mysqld --install 命令安装（执行 mysqld --remove 卸载安装）\n\n6.继续执行 mysqld --initialize --user=root --console 命令\n\n注意：初始化完成后mysql会给root用户创建一个默认随机密码，下图白色部分就是密码，同时在data目录下也添加了相关的配置文件，如果密码有字符辨识不了，则把date目录下的文件都删了，重新执行这一步。\n\n\n\n7.执行net start mysql启动服务（执行net stop mysql关闭服务）\n\n\n\n8.执行mysql -uroot -pqlbivku7k%f登录mysql（-u后面是用户名，-p后面是密码，即上面的默认随机密码）\n\n9.修改密码\n\nmysql版本是7:\n\nset password = password('root');\n\n注意：如果mysql版本是8或以上，则使用 alter user 'root'@'localhost' identified by '新的密码'; 修改密码\n\nalter user 'root'@'localhost' identified with mysql_native_password by '123456'; 这样我们就可以将root账户的密码修改为123456了，将123456处替换为你们要修改的密码，回车执行就可以了。\n\n12.登录mysql后可以添加一个用户\n\n添加格式：\n\ngrant 权限 on 数据库.表 to 用户名@'ip地址' identified by '密码'\n\n实例：\n\ngrant all on *.* to test@'%' identified by'test'\n\n\n# 4 安装错误提示\n\n\n# 提示\n\n安装过程中如果出现以下错误，是我们的电脑缺少运行时环境。 **注：**在这里我们有出现这种情况，但为了以防万一，还是给大家说一下，这里的图片用的网图，如有侵权，请评论删图！\n\n\n\n解决办法： 下载vcruntime140_1.dll，链接：https://cn.dll-files.com/vcruntime140_1.dll.html\n\n下载完成后，解压提取文件，将提取出来的vcruntime140_1.dll文件复制到我们的c:\\windows\\system32 注意, 32位版本的vcruntime140_1.dll需要复制到c:\\windows\\syswow64下\n\n\n# tips2：\n\nmysqld –initialize-insecure自动生成无密码的root用户； mysqld –initialize自动生成带随机密码的root用户； mysqld -remove移除自己的mysqld服务； net stop mysql命令，停止mysql服务 如果报错，清空data文件夹，最好还是删掉data文件，重新执行remove--initialize--install--start（这些不是命令）流程即可；\n\n\n# 5 配置mysql的环境变量\n\nmysql_home\n\nd:\\program files\\mysql\n\n\n1\n2\n3\n\n\n\n\n点击path，增加：\n\n%mysql_home%\\bin;\n\n\n1\n\n\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Nginx从安装到高可用",frontmatter:{author:"xlc520",title:"Nginx从安装到高可用",description:"Nginx从安装到高可用",time:"2022-01-16T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/Nginx%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8.html",relativePath:"other/Nginx从安装到高可用.md",key:"v-4e4a8ca2",path:"/other/Nginx%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8/",headers:[{level:3,title:"一、Nginx安装",slug:"一、nginx安装",normalizedTitle:"一、nginx安装",charIndex:103},{level:3,title:"二、配置反向代理",slug:"二、配置反向代理",normalizedTitle:"二、配置反向代理",charIndex:1324},{level:3,title:"三、配置负载均衡",slug:"三、配置负载均衡",normalizedTitle:"三、配置负载均衡",charIndex:1634},{level:3,title:"四、upstream指令参数",slug:"四、upstream指令参数",normalizedTitle:"四、upstream指令参数",charIndex:2413},{level:3,title:"五、配置ssl证书提供https访问",slug:"五、配置ssl证书提供https访问",normalizedTitle:"五、配置ssl证书提供https访问",charIndex:4253},{level:3,title:"六、配置ha nginx",slug:"六、配置ha-nginx",normalizedTitle:"六、配置ha nginx",charIndex:5736},{level:3,title:"七、LVS（Linux Virtual Server）实现高可用负载均衡",slug:"七、lvs-linux-virtual-server-实现高可用负载均衡",normalizedTitle:"七、lvs（linux virtual server）实现高可用负载均衡",charIndex:10464},{level:3,title:"附：LVS的负载均衡算法",slug:"附-lvs的负载均衡算法",normalizedTitle:"附：lvs的负载均衡算法",charIndex:13909},{level:3,title:"八、搭建Keepalived+Lvs+Nginx高可用集群负载均衡",slug:"八、搭建keepalived-lvs-nginx高可用集群负载均衡",normalizedTitle:"八、搭建keepalived+lvs+nginx高可用集群负载均衡",charIndex:14822}],readingTime:{minutes:16.87,words:5062},headersStr:"一、Nginx安装 二、配置反向代理 三、配置负载均衡 四、upstream指令参数 五、配置ssl证书提供https访问 六、配置ha nginx 七、LVS（Linux Virtual Server）实现高可用负载均衡 附：LVS的负载均衡算法 八、搭建Keepalived+Lvs+Nginx高可用集群负载均衡",content:'# Nginx从安装到高可用\n\n原文：blog.csdn.net/qq_34886352/article/details/103581973\n第1-100期：100期Java项目整理\n\n\n1\n2\n\n\n\n# 一、Nginx安装\n\n# 1、去官网http://nginx.org/下载对应的nginx包，推荐使用稳定版本\n\n# 2、上传nginx到linux系统\n\n# 3、安装依赖环境\n\n(1)安装gcc环境\n\nyum install gcc-c++\n\n\n1\n\n\n(2)安装PCRE库，用于解析正则表达式\n\nyum install -y pcre pcre-devel\n\n\n1\n\n\n(3)zlib压缩和解压缩依赖\n\nyum install -y zlib zlib-devel\n\n\n1\n\n\n(4)SSL 安全的加密的套接字协议层，用于HTTP安全传输，也就是https\n\nyum install -y openssl openssl-devel\n\n\n1\n\n\n# 4、解压，需要注意，解压后得到的是源码，源码需要编译后才能安装\n\ntar -zxvf nginx-1.16.1.tar.gz\n\n\n1\n\n\n# 5、编译之前，先创建nginx临时目录，如果不创建，在启动nginx的过程中会报错\n\nmkdir /var/temp/nginx -p\n\n\n1\n\n\n# 6、在nginx目录，输入如下命令进行配置，目的是为了创建makefile文件\n\n./configure \\   \n--prefix=/usr/local/nginx \\    \n--pid-path=/var/run/nginx/nginx.pid \\    \n--lock-path=/var/lock/nginx.lock \\    \n--error-log-path=/var/log/nginx/error.log \\    \n--http-log-path=/var/log/nginx/access.log \\    \n--with-http_gzip_static_module \\    \n--http-client-body-temp-path=/var/temp/nginx/client \\    \n--http-proxy-temp-path=/var/temp/nginx/proxy \\    \n--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \\    \n--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \\    \n--http-scgi-temp-path=/var/temp/nginx/scgi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注：代表在命令行中换行，用于提高可读性配置命令：\n\n\n\n# 7、make编译&安装\n\nmake\nmake install\n\n\n1\n2\n\n\n# 8、进入sbin目录启动nginx\n\n启动：nginx\n停止：./nginx -s stop\n重新加载：./nginx -s reload\n\n\n1\n2\n3\n\n\n\n# 二、配置反向代理\n\n1、配置upstream\n\nupstream [proxyName] {\n    server 192.168.1.173:8080;\n    server 192.168.1.174:8080;\n    server 192.168.1.175:8080;\n}\n\n\n1\n2\n3\n4\n5\n\n\n2、配置server\n\nserver {\n    listem  80;\n    server_name www.tomcats.com;\n\n    location / {\n        proxy_pass http://tomcats;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 三、配置负载均衡\n\nnginx默认采用轮训的方式进行负载均衡\n\n1、使用加权轮询\n\nupstream [proxyName] {\n    server 192.168.1.173:8080 weight=1;\n    server 192.168.1.174:8080 weight=5;\n    server 192.168.1.175:8080 weight=2;\n}\n\n\n1\n2\n3\n4\n5\n\n\n2、hash负载均衡\n\nupstream [proxyName] {\n    ip_hash\n\n    server 192.168.1.173:8080;\n    server 192.168.1.174:8080;\n    server 192.168.1.175:8080;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nhash算法实际上只会计算 192.168.1这段做哈希\n\n使用ip_hash的注意点：\n\n * 不能把后台服务器直接移除，只能标记down.\n\n3、url hash负载均衡\n\nupstream [proxyName] {\n    hash $request_url;\n\n    server 192.168.1.173:8080;\n    server 192.168.1.174:8080;\n    server 192.168.1.175:8080;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n4、最小连接负载均衡\n\nupstream [proxyName] {\n    least_conn;\n\n    server 192.168.1.173:8080;\n    server 192.168.1.174:8080;\n    server 192.168.1.175:8080;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 四、upstream指令参数\n\n * max_conns：限制最大同时连接数 1.11.5之前只能用于商业版\n * slow_start：单位秒，权重在指定时间内从1上升到指定值，不适用与hash负载均衡、随机负载均衡 如果在 upstream 中只有一台 server，则该参数失效（商业版才有）\n * down：禁止访问\n * backup：备用机 只有在其他服务器无法访问的时候才能访问到 不适用与hash负载均衡、随机负载均衡\n * max_fails：表示失败几次，则标记server已宕机，剔出上游服务 默认值1\n * fail_timeout：表示失败的重试时间 默认值10\n\n1、keepalived\n\nupstream [proxyName] {\n    server 192.168.1.173:8080 weight=1;\n    server 192.168.1.174:8080 weight=5;\n    server 192.168.1.175:8080 weight=2;\n\n    keepalive 32; #保持的连接数\n}\n\nserver {\n    listem  80;\n    server_name www.tomcats.com;\n\n    location / {\n        proxy_pass http://tomcats;\n        proxy_http_version 1.1; #连接的协议版本\n        proxy_set_header Connection ""; 清空连接请求头\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n2、控制浏览器缓存\n\nserver {\n    listem  80;\n    server_name www.tomcats.com;\n\n    location / {\n        proxy_pass http://tomcats;\n               expires 10s;  #浏览器缓存10秒钟\n               #expires @22h30m  #在晚上10点30的时候过期\n               #expires -1h  #缓存在一小时前时效\n               #expires epoch  #不设置缓存\n               #expires off  #缓存关闭，浏览器自己控制缓存\n               #expires max  #最大过期时间\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n3、反向代理缓存\n\nupstream [proxyName] {\n    server 192.168.1.173:8080 weight=1;\n    server 192.168.1.174:8080 weight=5;\n    server 192.168.1.175:8080 weight=2;\n}\n\n#proxy_cache_path 设置缓存保存的目录的位置\n#keys_zone设置共享内以及占用的空间大小\n#mas_size 设置缓存最大空间\n#inactive 缓存过期时间，错过此时间自动清理\n#use_temp_path 关闭零时目录\nproxy_cache_path /usr/local/nginx/upsteam_cache keys_zone=mycache:5m max_size=1g inactive=8h use_temp_path=off;\n\nserver {\n    listem  80;\n    server_name www.tomcats.com;\n    #开启并使用缓存\n    proxy_cache mycache;\n    #针对200和304响应码的缓存过期时间\n    proxy_cache_valid 200 304 8h;   \n\n    location / {\n        proxy_pass http://tomcats;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 五、配置ssl证书提供https访问\n\n# 1. 安装SSL模块\n\n要在nginx中配置https，就必须安装ssl模块，也就是: http_ssl_module。\n\n进入到nginx的解压目录：/home/software/nginx-1.16.1\n\n新增ssl模块(原来的那些模块需要保留)\n\n./configure \\\n--prefix=/usr/local/nginx \\\n--pid-path=/var/run/nginx/nginx.pid \\\n--lock-path=/var/lock/nginx.lock \\\n--error-log-path=/var/log/nginx/error.log \\\n--http-log-path=/var/log/nginx/access.log \\\n--with-http_gzip_static_module \\\n--http-client-body-temp-path=/var/temp/nginx/client \\\n--http-proxy-temp-path=/var/temp/nginx/proxy \\\n--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \\\n--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \\\n--http-scgi-temp-path=/var/temp/nginx/scgi  \\\n--with-http_ssl_module\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n编译和安装\n\nmake\nmake install\n\n\n1\n2\n\n\n# 2、配置HTTPS\n\n把ssl证书 *.crt 和 私钥 *.key 拷贝到/usr/local/nginx/conf目录中。\n\n新增 server 监听 443 端口：\n\nserver {\n    listen       443;\n    server_name  www.imoocdsp.com;\n    # 开启ssl\n    ssl     on;\n    # 配置ssl证书\n    ssl_certificate      1_www.imoocdsp.com_bundle.crt;\n    # 配置证书秘钥\n    ssl_certificate_key  2_www.imoocdsp.com.key;\n    # ssl会话cache\n    ssl_session_cache    shared:SSL:1m;\n    # ssl会话超时时间\n    ssl_session_timeout  5m;\n    # 配置加密套件，写法遵循 openssl 标准\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\n    ssl_prefer_server_ciphers on;\n    \n    location / {\n        proxy_pass http://tomcats/;\n        index  index.html index.htm;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 六、配置ha nginx\n\n# 1、安装keepalived\n\n(1)下载\n\nhttps://www.keepalived.org/download.html\n\n\n1\n\n\n(2)解压\n\ntar -zxvf keepalived-2.0.18.tar.gz\n\n\n1\n\n\n(3)使用configure命令配置安装目录与核心配置文件所在位置：\n\n./configure --prefix=/usr/local/keepalived --sysconf=/etc\n\n\n1\n\n * prefix：keepalived安装的位置sysconf：keepalived核心配置文件所在位置，固定位置，改成其他位置则keepalived启动不了，/var/log/messages中会报错\n * sysconf：keepalived核心配置文件所在位置，固定位置，改成其他位置则keepalived启动不了，/var/log/messages中会报错\n\n配置过程中可能会出现警告信息，如下所示：\n\n*** WARNING - this build will not support IPVS with IPv6. Please install libnl/libnl-3 dev libraries to support IPv6 with IPVS.\n\n# 安装libnl/libnl-3依赖\nyum -y install libnl libnl-devel  \n\n\n1\n2\n3\n4\n\n\n(4)安装keepalived\n\nmake && make install\n\n\n1\n\n\n(5)配置文件 在/etc/keepalived/keepalived.conf\n\n(6)忘记安装配置的目录，则通过如下命令找到：\n\nwhereis keepalived\n\n\n1\n\n\n(7)启动keepalived\n\n进入sbin目录\n\n./keepalived\n\n\n1\n\n\n# 2、配置keepalived 主机\n\n(1)通过命令 vim keepalived.conf 打开配置文件\n\nglobal_defs { \n    # 路由id：当前安装keepalived的节点主机标识符，保证全局唯一 \n    router_id keep_171 \n} \n\nvrrp_instance VI_1 { \n    # 表示状态是MASTER主机还是备用机BACKUP \n    state MASTER \n    # 该实例绑定的网卡 \n    interface ens33 \n    # 保证主备节点一致即可 \n    virtual_router_id 51 \n    # 权重，master权重一般高于backup，如果有多个，那就是选举，谁的权重高，谁就当选 \n    priority 100 \n    # 主备之间同步检查时间间隔，单位秒 \n    advert_int 2 \n    # 认证权限密码，防止非法节点进入 \n    authentication { \n        auth_type PASS \n        auth_pass 1111 \n    } \n    # 虚拟出来的ip，可以有多个（vip） \n    virtual_ipaddress { \n        192.168.1.161 \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n附：查看网卡信息命令\n\nip addr\n\n\n1\n\n\n(2)启动keepalived\n\n(3)查看进程\n\nps -ef|grep keepalived\n\n\n1\n\n\n(4)查看vip(虚拟ip)\n\n在网卡ens33下，多了一个192.168.1.161，这个就是虚拟ip\n\n# 3、把keepalived注册为系统服务\n\n(1)拷贝配置文件\n\n * 将keepalived目录下etc/init.d/keepalived拷贝到/etc/init.d/下\n * 将keepalived目录下etc/sysconfig/keepalived拷贝到/etc/sysconfig/下\n\n(2)刷新systemctl\n\nsystemctl daemon-reload\n\n\n1\n\n\n(3)启动、停止、重启keepalived\n\n#启动\nsystemctl start keepalived.service\n#停止\nsystemctl stop keepalived.service\n#重启\nsystemctl restart keepalived.service\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 4、实现双机主备高可用\n\n\n\n(1)修改备机配置\n\nglobal_defs { \n    router_id keep_172 \n} \nvrrp_instance VI_1 { \n    # 备用机设置为BACKUP \n    state BACKUP \n    interface ens33 \n    virtual_router_id 51 \n    # 权重低于MASTER \n    priority 80 \n    advert_int 2 \n    authentication { \n        auth_type PASS auth_pass 1111 \n    }\n    virtual_ipaddress {\n        # 注意：主备两台的vip都是一样的，绑定到同一个vip \n        192.168.1.161 \n    } \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n(2) 启动 Keepalived\n\n(3) 访问vip即可访问主机，当主机失效时访问vip就会访问到备机\n\n# 5、keepalived配置nginx自动重启\n\n(1)编写脚本\n\n在/etc/keepalived/下创建脚本check_nginx_alive_or_not\n\n#!/bin/bash \n\nA=`ps -C nginx --no-header |wc -l` \n# 判断nginx是否宕机，如果宕机了，尝试重启 \nif [ $A -eq 0 ];then \n    /usr/local/nginx/sbin/nginx \n    # 等待一小会再次检查nginx，如果没有启动成功，则停止keepalived，使其启动备用机 \n    sleep 3 \n        if [ `ps -C nginx --no-header |wc -l` -eq 0 ];then \n            killall keepalived \n        fi \nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n(2)添加运行权限\n\nchmod +x /etc/keepalived/check_nginx_alive_or_not.sh\n\n\n1\n\n\n(3)配置keepalived监听nginx脚本\n\nvrrp_script check_nginx_alive { \n    script "/etc/keepalived/check_nginx_alive_or_not.sh" \n    interval 2 # 每隔两秒运行上一行脚本 \n    weight 10 # 如果脚本运行失败，则升级权重+10 \n}\n\n\n1\n2\n3\n4\n5\n\n\n(4)在vrrp_instance中新增监控的脚本\n\ntrack_script { \n    check_nginx_alive # 追踪 nginx 脚本\n}\n\n\n1\n2\n3\n\n\n(5)重启Keepalived使得配置文件生效\n\nsystemctl restart keepalived\n\n\n1\n\n\n# 6、keepalived双主热备\n\n(1)配置DNS轮询\n\n在同一个域名下配置两个ip，自行百度\n\n(2)配置第一台主机\n\nglobal_defs {\n    router_id keep_171 \n} \nvrrp_instance VI_1 { \n    state MASTER i\n    nterface ens33 \n    virtual_router_id 51 \n    priority 100 \n    advert_int 1 \n    authentication { \n        auth_type PASS \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.161 \n    } \n} \n\nvrrp_instance VI_2  {\n    state BACKUP \n    interface ens33 \n    virtual_router_id 52 \n    priority 80 \n    advert_int 1 \n    authentication { \n        auth_type PASS \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.162 \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n(3)配置第二台主机\n\nglobal_defs {\n    router_id keep_172 \n} \nvrrp_instance VI_1 { \n    state BACKUP \n    interface ens33 \n    virtual_router_id 51 \n    priority 80 \n    advert_int 1 \n    authentication { \n        auth_type PASS \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.161\n    }\n} \n\nvrrp_instance VI_2 {\n    state MASTER \n    interface ens33 \n    virtual_router_id 52 \n    priority 100 \n    advert_int 1 \n    authentication { \n        auth_type PASS \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.162 \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n(4)重启两台Keepalived\n\nsystemctl restart keepalived\n\n\n1\n\n\n\n# 七、LVS（Linux Virtual Server）实现高可用负载均衡\n\n# 1、为什么要使用LVS+Nginx\n\n * lvs基于四层负载均衡，工作效率较Nginx的七层负载更高，使用LVS搭建Nginx集群，可以提高性能\n * 四层负载均衡无法对信息处理，只能通过ip+端口的形式转发，所以需要七成负载进行数据的处理\n * Nginx接收请求来回，LVS可以只接受不响应\n\n# 2、LVS的三种模式\n\n(1)NAT模式\n\n * 客户端将请求发往LVS，LVS会选择一台服务器响应请求，服务器将结果返回给LVS，LVS再返回给客户端。\n * 在NAT模式中，服务器的网关必须指向LVS，否则报文无法送达客户端\n * NAT 技术将请求的报文和响应的报文都需要通过LVS进行地址改写，因此网站访问量比较大的时候负载均衡调度器有比较大的瓶颈，一般要求最多之能 10-20 台节点\n * NAT 模式支持对 IP 地址和端口进行转换。即用户请求的端口和真实服务器的端口可以不一致\n\n(2)TUN模式\n\n * 客户端将请求发往LVS，LVS会选择一台服务器响应请求，在客户端与服务器之间建立隧道，返回结果的时候直接由服务器返回响应，不在经过LVS。\n * TUN模式必须所有的服务器上都绑定VIP的IP地址，所有的服务器都必须有网卡。\n * TUN模式走隧道运维难度大，并且会直接暴露服务器地址\n * 服务器将应答包直接发给用户。所以，减少了负载均衡器的大量数据流动，负载均衡器不再是系统的瓶颈，就能处理很巨大的请求量，这种方式，一台负载均衡器能够为很多服务器进行分发。而且跑在公网上就能进行不同地域的分发\n\n(3)DR模式\n\n * 客户端将请求发往LVS，LVS会选择一台服务器响应请求，返回结果的时候通过统一的路由进行返回，不在经过LVS。\n * 和TUN模式一样，LVS只是分发请求，应答包通过单独的路由返回给客户端，与TUN相比这种方式不需要隧道结构，可以兼容大多数的操作系统，同时统一路由可以隐藏真实的物理服务器。DR模式效率更高，但配置更复杂.\n * 所有服务器节点和LVS只能在一个局域网里面。\n\n# 3、搭建LVS-DR模式\n\n先关闭掉服务器上网络配置管理器，避免网络接口冲突\n\nsystemctl stop NetworkManager\nsystemctl disable NetworkManager\n\n\n1\n2\n\n\n(1)创建子接口（创建LVS的虚拟ip）\n\n进入网卡配置目录/etc/sysconfig/network-scripts/,找到网卡配置文件，这里以ifcfg-ens33为例，拷贝并创建子接口\n\ncp ifcfg-ens33 ifcfg-ens33:1\n\n\n1\n\n\n修改子接口配置如下\n\n * 配置中的 192.168.1.150 就是vip，是提供给外网用户访问的ip地址\n\nDEVICE="ens33:1"\nONBOOT="yes"\nIPADDR=192.168.1.150\nNETMASK=255.255.255.0\nBOOTPROTO=static\n\n\n1\n2\n3\n4\n5\n\n * 重启网络服务\n\nservice network restart\n\n\n1\n\n\n重启成功后，ip addr 查看一下，你会发现多了一个ip，也就是虚拟ip（vip）\n\n> 注意：阿里云不支持配置网卡，需要购买相应的负载均衡服务，腾讯云支持配置网卡，但需要购买网卡支持，一个网卡支持10个虚拟ip配置\n\n(2)安装ipvsadm\n\n如今的centos都集成了LVS，所以ipvs是自带的，我们只需要安装ipvsadm即可（ipvsadm是管理集群的工具，通过ipvs可以管理集群，查看集群等操作）\n\nyum install ipvsadm\n\n\n1\n\n\n(3)配置服务器（RS）的虚拟ip\n\n进入网卡配置目录/etc/sysconfig/network-scripts/,找到ifcfg-lo，拷贝并创建子接口\n\ncp ifcfg-lo ifcfg-lo:1\n\n\n1\n\n\n修改子接口配置如下\n\nDEVICE="lo:1"\nIPADDR=192.168.1.150\nNETMASK=255.255.255.255\nNETWORK=127.0.0.0\nBROADCAST=127.255.255.255\nONBOOT="yes"\nNAME=loopback\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n重启网络服务成功后，ip addr 查看一下，你会发现多了一个ip，也就是虚拟ip（vip）\n\n(4)为服务器（RS）配置arp\n\nARP响应级别与通告行为参数说明\n\narp-ignore：ARP响应级别（处理请求）\n    0：只要本机配置了ip，就能响应请求\n    1：请求的目标地址到达对应的网络接口，才会响应请求\narp-announce：ARP通告行为（返回响应）\n    0：本机上任何网络接口都向外通告，所有的网卡都能接受到通告\n    1：尽可能避免本网卡与不匹配的目标进行通告2：只在本网卡通告\n\n\n1\n2\n3\n4\n5\n6\n\n\n打开sysctl.conf:\n\nvim /etc/sysctl.conf\n\n\n1\n\n\n配置所有网卡、默认网卡以及虚拟网卡的arp响应级别和通告行为，分别对应：all，default，lo\n\n# configration for lvs \nnet.ipv4.conf.all.arp_ignore = 1 \nnet.ipv4.conf.default.arp_ignore = 1 \nnet.ipv4.conf.lo.arp_ignore = 1 \n\nnet.ipv4.conf.all.arp_announce = 2 \nnet.ipv4.conf.default.arp_announce = 2 \nnet.ipv4.conf.lo.arp_announce = 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n刷新配置文件\n\nsysctl -p\n\n\n1\n\n\n增加一个网关，用于接收数据报文，当有请求到本机后，会交给lo去处理\n\nroute add -host 192.168.1.150 dev lo:1\n\n\n1\n\n\n将网关添加至开机启动\n\necho "route add -host 192.168.1.150 dev lo:1" >> /etc/rc.local\n\n\n1\n\n\n(4)使用ipvsadm配置集群规则\n\n创建LVS节点，用户访问的集群调度者\n\nipvsadm -A -t 192.168.1.150:80 -s rr -p 5\n\n\n1\n\n * -A：添加集群\n * -t：tcp协议ip地址：设定集群的访问\n * ip：也就是LVS的虚拟ip\n * -s：设置负载均衡的算法，\n * rr：表示轮询\n * -p：设置连接持久化的时间,在指定时间内同一个用户的请求会访问到同一个服务器中\n\n创建多台RS真实服务器\n\nipvsadm -a -t 192.168.1.150:80 -r 192.168.1.171:80 -g \nipvsadm -a -t 192.168.1.150:80 -r 192.168.1.172:80 -g\n\n\n1\n2\n\n * -a：添加真实服务器\n * -t：tcp协议\n * -r：真实服务器的ip地址\n * -g：设定DR模式\n\n保存到规则库，否则重启失效\n\nipvsadm -S\n\n\n1\n\n\n检查集群\n\n#查看集群列表\nipvsadm -Ln\n#查看集群状态\nipvsadm -Ln --stats\n\n\n1\n2\n3\n4\n\n\n一些其他命令\n\n # 重启ipvsadm，重启后需要重新配置 \n service ipvsadm restart \n # 查看持久化连接 \n ipvsadm -Ln --persistent-conn \n # 查看连接请求过期时间以及请求源ip和目标ip \n ipvsadm -Lnc \n # 设置tcp tcpfin udp 的过期时间（一般保持默认） \n ipvsadm --set 1 1 1 \n # 查看过期时间 \n ipvsadm -Ln --timeout\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n(5)访问虚拟ip，完成LVS搭建\n\n\n# 附：LVS的负载均衡算法\n\n# (1)静态算法\n\n静态：根据LVS本身自由的固定的算法分发用户请求。\n\n * 轮询（Round Robin 简写’rr’）：轮询算法假设所有的服务器处理请求的能力都一样的，调度器会把所有的请求平均分配给每个真实服务器。（同Nginx的轮询）\n * 加权轮询（Weight Round Robin 简写’wrr’）：安装权重比例分配用户请求。权重越高，被分配到处理的请求越多。（同Nginx的权重）\n * 源地址散列（Source Hash 简写’sh’）：同一个用户ip的请求，会由同一个RS来处理。（同Nginx的ip_hash）\n * 目标地址散列（Destination Hash 简写’dh’）：根据url的不同，请求到不同的RS。（同Nginx的url_hash）\n\n# (2)动态算法\n\n动态：会根据流量的不同，或者服务器的压力不同来分配用户请求，这是动态计算的。\n\n * 最小连接数（Least Connections 简写’lc’）：把新的连接请求分配到当前连接数最小的服务器。\n\n * 加权最少连接数（Weight Least Connections 简写’wlc’）：服务器的处理性能用数值来代表，权重越大处理的请求越多。Real Server 有可能会存在性能上的差异，wlc动态获取不同服务器的负载状况，把请求分发到性能好并且比较空闲的服务器。\n\n * 最短期望延迟（Shortest Expected Delay 简写’sed’）：特殊的wlc算法。举例阐述，假设有ABC三台服务器，权重分别为1、2、3 。如果使用wlc算法的话，当一个新请求进来，它可能会分给ABC中的任意一个。使用sed算法后会进行如下运算：\n\n * * A：（1+1）/1=2\n   * B：（1+2）/2=3/2\n   * C：（1+3）/3=4/3\n\n最终结果，会把这个请求交给得出运算结果最小的服务器。最少队列调度（Never Queue 简写’nq’）：永不使用队列。如果有Real Server的连接数等于0，则直接把这个请求分配过去，不需要在排队等待运算了（sed运算）。\n\n\n# 八、搭建Keepalived+Lvs+Nginx高可用集群负载均衡\n\n如果原先服务器上配置了LVS+nginx需要清空ipvsadm中的配置\n\nipvsadm -C\n\n\n1\n\n\n如果配置了Keepalived+Nginx双主集群也需要去除掉Keepalived中原先的配置，按照的后文进行配置\n\n# (1)使用keepalived配置Master LVS\n\n在LVS的机器上安装keepalived，安装过程参考上文\n\n(1)修改keepalived的配置\n\nglobal_defs {\n    router_id keep_151 \n} \nvrrp_instance VI_1 { \n    state MASTER \n    interface ens33 \n    virtual_router_id 41 \n    priority 100 \n    advert_int 1 \n    authentication { \n        auth_type PASS \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.150\n    }\n} \n\n#配置集群访问的ip+端口，端口和nginx保持一致\nvirtual_server 192.168.1.150 80{\n    #健康检查的时间，单位：秒\n    delay_loop 6\n    #配置负载均衡的算法，默认的轮询\n    lb_algo rr\n    #设置LVS的模式 NAT|TUN|DR\n    lb-kind DR\n    #设置会话持久化的时间\n    persistence_timeout 5\n    #协议\n    protocol TCP\n    \n    #配置负载均衡的真实服务器，也就是nginx节点的具体的ip地址\n    real_server 192.168.1.171 80{\n        #轮询权重配比\n        weight 1\n        #设置健康检查\n        TCP_CHECK {\n            #检查80端口\n            connect_port 80\n            #超时时间\n            connect_timeout 2\n            #重试次数\n            nb_get_retry 2\n            #重试间隔时间\n            delay_before_retry 3\n        }\n    }\n    real_server 192.168.1.171 80{\n        weight 1\n        TCP_CHECK {\n            connect_port 80\n            connect_timeout 2\n            nb_get_retry 2\n            delay_before_retry 3\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n(2)启动/重启keepalived\n\nsystemctl restart keepalived\n\n\n1\n\n\n# (2)使用keepalived配置Backup LVS\n\n配置在备用机上\n\nglobal_defs {\n    router_id keep_152 \n} \nvrrp_instance VI_1 { \n    state  BACKUP\n    interface ens33 \n    virtual_router_id 41 \n    priority 50 \n    advert_int 1 \n    authentication { \n        auth_type PASS \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.150\n    }\n} \n\n#配置集群访问的ip+端口，端口和nginx保持一致\nvirtual_server 192.168.1.150 80{\n    #健康检查的时间，单位：秒\n    delay_loop 6\n    #配置负载均衡的算法，默认的轮询\n    lb_algo rr\n    #设置LVS的模式 NAT|TUN|DR\n    lb-kind DR\n    #设置会话持久化的时间\n    persistence_timeout 5\n    #协议\n    protocol TCP\n    \n    #配置负载均衡的真实服务器，也就是nginx节点的具体的ip地址\n    real_server 192.168.1.171 80{\n        #轮询权重配比\n        weight 1\n        #设置健康检查\n        TCP_CHECK {\n            #检查80端口\n            connect_port 80\n            #超时时间\n            connect_timeout 2\n            #重试次数\n            nb_get_retry 2\n            #重试间隔时间\n            delay_before_retry 3\n        }\n    }\n    real_server 192.168.1.171 80{\n        weight 1\n        TCP_CHECK {\n            connect_port 80\n            connect_timeout 2\n            nb_get_retry 2\n            delay_before_retry 3\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n',normalizedContent:'# nginx从安装到高可用\n\n原文：blog.csdn.net/qq_34886352/article/details/103581973\n第1-100期：100期java项目整理\n\n\n1\n2\n\n\n\n# 一、nginx安装\n\n# 1、去官网http://nginx.org/下载对应的nginx包，推荐使用稳定版本\n\n# 2、上传nginx到linux系统\n\n# 3、安装依赖环境\n\n(1)安装gcc环境\n\nyum install gcc-c++\n\n\n1\n\n\n(2)安装pcre库，用于解析正则表达式\n\nyum install -y pcre pcre-devel\n\n\n1\n\n\n(3)zlib压缩和解压缩依赖\n\nyum install -y zlib zlib-devel\n\n\n1\n\n\n(4)ssl 安全的加密的套接字协议层，用于http安全传输，也就是https\n\nyum install -y openssl openssl-devel\n\n\n1\n\n\n# 4、解压，需要注意，解压后得到的是源码，源码需要编译后才能安装\n\ntar -zxvf nginx-1.16.1.tar.gz\n\n\n1\n\n\n# 5、编译之前，先创建nginx临时目录，如果不创建，在启动nginx的过程中会报错\n\nmkdir /var/temp/nginx -p\n\n\n1\n\n\n# 6、在nginx目录，输入如下命令进行配置，目的是为了创建makefile文件\n\n./configure \\   \n--prefix=/usr/local/nginx \\    \n--pid-path=/var/run/nginx/nginx.pid \\    \n--lock-path=/var/lock/nginx.lock \\    \n--error-log-path=/var/log/nginx/error.log \\    \n--http-log-path=/var/log/nginx/access.log \\    \n--with-http_gzip_static_module \\    \n--http-client-body-temp-path=/var/temp/nginx/client \\    \n--http-proxy-temp-path=/var/temp/nginx/proxy \\    \n--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \\    \n--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \\    \n--http-scgi-temp-path=/var/temp/nginx/scgi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注：代表在命令行中换行，用于提高可读性配置命令：\n\n\n\n# 7、make编译&安装\n\nmake\nmake install\n\n\n1\n2\n\n\n# 8、进入sbin目录启动nginx\n\n启动：nginx\n停止：./nginx -s stop\n重新加载：./nginx -s reload\n\n\n1\n2\n3\n\n\n\n# 二、配置反向代理\n\n1、配置upstream\n\nupstream [proxyname] {\n    server 192.168.1.173:8080;\n    server 192.168.1.174:8080;\n    server 192.168.1.175:8080;\n}\n\n\n1\n2\n3\n4\n5\n\n\n2、配置server\n\nserver {\n    listem  80;\n    server_name www.tomcats.com;\n\n    location / {\n        proxy_pass http://tomcats;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 三、配置负载均衡\n\nnginx默认采用轮训的方式进行负载均衡\n\n1、使用加权轮询\n\nupstream [proxyname] {\n    server 192.168.1.173:8080 weight=1;\n    server 192.168.1.174:8080 weight=5;\n    server 192.168.1.175:8080 weight=2;\n}\n\n\n1\n2\n3\n4\n5\n\n\n2、hash负载均衡\n\nupstream [proxyname] {\n    ip_hash\n\n    server 192.168.1.173:8080;\n    server 192.168.1.174:8080;\n    server 192.168.1.175:8080;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nhash算法实际上只会计算 192.168.1这段做哈希\n\n使用ip_hash的注意点：\n\n * 不能把后台服务器直接移除，只能标记down.\n\n3、url hash负载均衡\n\nupstream [proxyname] {\n    hash $request_url;\n\n    server 192.168.1.173:8080;\n    server 192.168.1.174:8080;\n    server 192.168.1.175:8080;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n4、最小连接负载均衡\n\nupstream [proxyname] {\n    least_conn;\n\n    server 192.168.1.173:8080;\n    server 192.168.1.174:8080;\n    server 192.168.1.175:8080;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 四、upstream指令参数\n\n * max_conns：限制最大同时连接数 1.11.5之前只能用于商业版\n * slow_start：单位秒，权重在指定时间内从1上升到指定值，不适用与hash负载均衡、随机负载均衡 如果在 upstream 中只有一台 server，则该参数失效（商业版才有）\n * down：禁止访问\n * backup：备用机 只有在其他服务器无法访问的时候才能访问到 不适用与hash负载均衡、随机负载均衡\n * max_fails：表示失败几次，则标记server已宕机，剔出上游服务 默认值1\n * fail_timeout：表示失败的重试时间 默认值10\n\n1、keepalived\n\nupstream [proxyname] {\n    server 192.168.1.173:8080 weight=1;\n    server 192.168.1.174:8080 weight=5;\n    server 192.168.1.175:8080 weight=2;\n\n    keepalive 32; #保持的连接数\n}\n\nserver {\n    listem  80;\n    server_name www.tomcats.com;\n\n    location / {\n        proxy_pass http://tomcats;\n        proxy_http_version 1.1; #连接的协议版本\n        proxy_set_header connection ""; 清空连接请求头\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n2、控制浏览器缓存\n\nserver {\n    listem  80;\n    server_name www.tomcats.com;\n\n    location / {\n        proxy_pass http://tomcats;\n               expires 10s;  #浏览器缓存10秒钟\n               #expires @22h30m  #在晚上10点30的时候过期\n               #expires -1h  #缓存在一小时前时效\n               #expires epoch  #不设置缓存\n               #expires off  #缓存关闭，浏览器自己控制缓存\n               #expires max  #最大过期时间\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n3、反向代理缓存\n\nupstream [proxyname] {\n    server 192.168.1.173:8080 weight=1;\n    server 192.168.1.174:8080 weight=5;\n    server 192.168.1.175:8080 weight=2;\n}\n\n#proxy_cache_path 设置缓存保存的目录的位置\n#keys_zone设置共享内以及占用的空间大小\n#mas_size 设置缓存最大空间\n#inactive 缓存过期时间，错过此时间自动清理\n#use_temp_path 关闭零时目录\nproxy_cache_path /usr/local/nginx/upsteam_cache keys_zone=mycache:5m max_size=1g inactive=8h use_temp_path=off;\n\nserver {\n    listem  80;\n    server_name www.tomcats.com;\n    #开启并使用缓存\n    proxy_cache mycache;\n    #针对200和304响应码的缓存过期时间\n    proxy_cache_valid 200 304 8h;   \n\n    location / {\n        proxy_pass http://tomcats;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 五、配置ssl证书提供https访问\n\n# 1. 安装ssl模块\n\n要在nginx中配置https，就必须安装ssl模块，也就是: http_ssl_module。\n\n进入到nginx的解压目录：/home/software/nginx-1.16.1\n\n新增ssl模块(原来的那些模块需要保留)\n\n./configure \\\n--prefix=/usr/local/nginx \\\n--pid-path=/var/run/nginx/nginx.pid \\\n--lock-path=/var/lock/nginx.lock \\\n--error-log-path=/var/log/nginx/error.log \\\n--http-log-path=/var/log/nginx/access.log \\\n--with-http_gzip_static_module \\\n--http-client-body-temp-path=/var/temp/nginx/client \\\n--http-proxy-temp-path=/var/temp/nginx/proxy \\\n--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \\\n--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \\\n--http-scgi-temp-path=/var/temp/nginx/scgi  \\\n--with-http_ssl_module\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n编译和安装\n\nmake\nmake install\n\n\n1\n2\n\n\n# 2、配置https\n\n把ssl证书 *.crt 和 私钥 *.key 拷贝到/usr/local/nginx/conf目录中。\n\n新增 server 监听 443 端口：\n\nserver {\n    listen       443;\n    server_name  www.imoocdsp.com;\n    # 开启ssl\n    ssl     on;\n    # 配置ssl证书\n    ssl_certificate      1_www.imoocdsp.com_bundle.crt;\n    # 配置证书秘钥\n    ssl_certificate_key  2_www.imoocdsp.com.key;\n    # ssl会话cache\n    ssl_session_cache    shared:ssl:1m;\n    # ssl会话超时时间\n    ssl_session_timeout  5m;\n    # 配置加密套件，写法遵循 openssl 标准\n    ssl_protocols tlsv1 tlsv1.1 tlsv1.2;\n    ssl_ciphers ecdhe-rsa-aes128-gcm-sha256:high:!anull:!md5:!rc4:!dhe;\n    ssl_prefer_server_ciphers on;\n    \n    location / {\n        proxy_pass http://tomcats/;\n        index  index.html index.htm;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 六、配置ha nginx\n\n# 1、安装keepalived\n\n(1)下载\n\nhttps://www.keepalived.org/download.html\n\n\n1\n\n\n(2)解压\n\ntar -zxvf keepalived-2.0.18.tar.gz\n\n\n1\n\n\n(3)使用configure命令配置安装目录与核心配置文件所在位置：\n\n./configure --prefix=/usr/local/keepalived --sysconf=/etc\n\n\n1\n\n * prefix：keepalived安装的位置sysconf：keepalived核心配置文件所在位置，固定位置，改成其他位置则keepalived启动不了，/var/log/messages中会报错\n * sysconf：keepalived核心配置文件所在位置，固定位置，改成其他位置则keepalived启动不了，/var/log/messages中会报错\n\n配置过程中可能会出现警告信息，如下所示：\n\n*** warning - this build will not support ipvs with ipv6. please install libnl/libnl-3 dev libraries to support ipv6 with ipvs.\n\n# 安装libnl/libnl-3依赖\nyum -y install libnl libnl-devel  \n\n\n1\n2\n3\n4\n\n\n(4)安装keepalived\n\nmake && make install\n\n\n1\n\n\n(5)配置文件 在/etc/keepalived/keepalived.conf\n\n(6)忘记安装配置的目录，则通过如下命令找到：\n\nwhereis keepalived\n\n\n1\n\n\n(7)启动keepalived\n\n进入sbin目录\n\n./keepalived\n\n\n1\n\n\n# 2、配置keepalived 主机\n\n(1)通过命令 vim keepalived.conf 打开配置文件\n\nglobal_defs { \n    # 路由id：当前安装keepalived的节点主机标识符，保证全局唯一 \n    router_id keep_171 \n} \n\nvrrp_instance vi_1 { \n    # 表示状态是master主机还是备用机backup \n    state master \n    # 该实例绑定的网卡 \n    interface ens33 \n    # 保证主备节点一致即可 \n    virtual_router_id 51 \n    # 权重，master权重一般高于backup，如果有多个，那就是选举，谁的权重高，谁就当选 \n    priority 100 \n    # 主备之间同步检查时间间隔，单位秒 \n    advert_int 2 \n    # 认证权限密码，防止非法节点进入 \n    authentication { \n        auth_type pass \n        auth_pass 1111 \n    } \n    # 虚拟出来的ip，可以有多个（vip） \n    virtual_ipaddress { \n        192.168.1.161 \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n附：查看网卡信息命令\n\nip addr\n\n\n1\n\n\n(2)启动keepalived\n\n(3)查看进程\n\nps -ef|grep keepalived\n\n\n1\n\n\n(4)查看vip(虚拟ip)\n\n在网卡ens33下，多了一个192.168.1.161，这个就是虚拟ip\n\n# 3、把keepalived注册为系统服务\n\n(1)拷贝配置文件\n\n * 将keepalived目录下etc/init.d/keepalived拷贝到/etc/init.d/下\n * 将keepalived目录下etc/sysconfig/keepalived拷贝到/etc/sysconfig/下\n\n(2)刷新systemctl\n\nsystemctl daemon-reload\n\n\n1\n\n\n(3)启动、停止、重启keepalived\n\n#启动\nsystemctl start keepalived.service\n#停止\nsystemctl stop keepalived.service\n#重启\nsystemctl restart keepalived.service\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 4、实现双机主备高可用\n\n\n\n(1)修改备机配置\n\nglobal_defs { \n    router_id keep_172 \n} \nvrrp_instance vi_1 { \n    # 备用机设置为backup \n    state backup \n    interface ens33 \n    virtual_router_id 51 \n    # 权重低于master \n    priority 80 \n    advert_int 2 \n    authentication { \n        auth_type pass auth_pass 1111 \n    }\n    virtual_ipaddress {\n        # 注意：主备两台的vip都是一样的，绑定到同一个vip \n        192.168.1.161 \n    } \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n(2) 启动 keepalived\n\n(3) 访问vip即可访问主机，当主机失效时访问vip就会访问到备机\n\n# 5、keepalived配置nginx自动重启\n\n(1)编写脚本\n\n在/etc/keepalived/下创建脚本check_nginx_alive_or_not\n\n#!/bin/bash \n\na=`ps -c nginx --no-header |wc -l` \n# 判断nginx是否宕机，如果宕机了，尝试重启 \nif [ $a -eq 0 ];then \n    /usr/local/nginx/sbin/nginx \n    # 等待一小会再次检查nginx，如果没有启动成功，则停止keepalived，使其启动备用机 \n    sleep 3 \n        if [ `ps -c nginx --no-header |wc -l` -eq 0 ];then \n            killall keepalived \n        fi \nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n(2)添加运行权限\n\nchmod +x /etc/keepalived/check_nginx_alive_or_not.sh\n\n\n1\n\n\n(3)配置keepalived监听nginx脚本\n\nvrrp_script check_nginx_alive { \n    script "/etc/keepalived/check_nginx_alive_or_not.sh" \n    interval 2 # 每隔两秒运行上一行脚本 \n    weight 10 # 如果脚本运行失败，则升级权重+10 \n}\n\n\n1\n2\n3\n4\n5\n\n\n(4)在vrrp_instance中新增监控的脚本\n\ntrack_script { \n    check_nginx_alive # 追踪 nginx 脚本\n}\n\n\n1\n2\n3\n\n\n(5)重启keepalived使得配置文件生效\n\nsystemctl restart keepalived\n\n\n1\n\n\n# 6、keepalived双主热备\n\n(1)配置dns轮询\n\n在同一个域名下配置两个ip，自行百度\n\n(2)配置第一台主机\n\nglobal_defs {\n    router_id keep_171 \n} \nvrrp_instance vi_1 { \n    state master i\n    nterface ens33 \n    virtual_router_id 51 \n    priority 100 \n    advert_int 1 \n    authentication { \n        auth_type pass \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.161 \n    } \n} \n\nvrrp_instance vi_2  {\n    state backup \n    interface ens33 \n    virtual_router_id 52 \n    priority 80 \n    advert_int 1 \n    authentication { \n        auth_type pass \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.162 \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n(3)配置第二台主机\n\nglobal_defs {\n    router_id keep_172 \n} \nvrrp_instance vi_1 { \n    state backup \n    interface ens33 \n    virtual_router_id 51 \n    priority 80 \n    advert_int 1 \n    authentication { \n        auth_type pass \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.161\n    }\n} \n\nvrrp_instance vi_2 {\n    state master \n    interface ens33 \n    virtual_router_id 52 \n    priority 100 \n    advert_int 1 \n    authentication { \n        auth_type pass \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.162 \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n(4)重启两台keepalived\n\nsystemctl restart keepalived\n\n\n1\n\n\n\n# 七、lvs（linux virtual server）实现高可用负载均衡\n\n# 1、为什么要使用lvs+nginx\n\n * lvs基于四层负载均衡，工作效率较nginx的七层负载更高，使用lvs搭建nginx集群，可以提高性能\n * 四层负载均衡无法对信息处理，只能通过ip+端口的形式转发，所以需要七成负载进行数据的处理\n * nginx接收请求来回，lvs可以只接受不响应\n\n# 2、lvs的三种模式\n\n(1)nat模式\n\n * 客户端将请求发往lvs，lvs会选择一台服务器响应请求，服务器将结果返回给lvs，lvs再返回给客户端。\n * 在nat模式中，服务器的网关必须指向lvs，否则报文无法送达客户端\n * nat 技术将请求的报文和响应的报文都需要通过lvs进行地址改写，因此网站访问量比较大的时候负载均衡调度器有比较大的瓶颈，一般要求最多之能 10-20 台节点\n * nat 模式支持对 ip 地址和端口进行转换。即用户请求的端口和真实服务器的端口可以不一致\n\n(2)tun模式\n\n * 客户端将请求发往lvs，lvs会选择一台服务器响应请求，在客户端与服务器之间建立隧道，返回结果的时候直接由服务器返回响应，不在经过lvs。\n * tun模式必须所有的服务器上都绑定vip的ip地址，所有的服务器都必须有网卡。\n * tun模式走隧道运维难度大，并且会直接暴露服务器地址\n * 服务器将应答包直接发给用户。所以，减少了负载均衡器的大量数据流动，负载均衡器不再是系统的瓶颈，就能处理很巨大的请求量，这种方式，一台负载均衡器能够为很多服务器进行分发。而且跑在公网上就能进行不同地域的分发\n\n(3)dr模式\n\n * 客户端将请求发往lvs，lvs会选择一台服务器响应请求，返回结果的时候通过统一的路由进行返回，不在经过lvs。\n * 和tun模式一样，lvs只是分发请求，应答包通过单独的路由返回给客户端，与tun相比这种方式不需要隧道结构，可以兼容大多数的操作系统，同时统一路由可以隐藏真实的物理服务器。dr模式效率更高，但配置更复杂.\n * 所有服务器节点和lvs只能在一个局域网里面。\n\n# 3、搭建lvs-dr模式\n\n先关闭掉服务器上网络配置管理器，避免网络接口冲突\n\nsystemctl stop networkmanager\nsystemctl disable networkmanager\n\n\n1\n2\n\n\n(1)创建子接口（创建lvs的虚拟ip）\n\n进入网卡配置目录/etc/sysconfig/network-scripts/,找到网卡配置文件，这里以ifcfg-ens33为例，拷贝并创建子接口\n\ncp ifcfg-ens33 ifcfg-ens33:1\n\n\n1\n\n\n修改子接口配置如下\n\n * 配置中的 192.168.1.150 就是vip，是提供给外网用户访问的ip地址\n\ndevice="ens33:1"\nonboot="yes"\nipaddr=192.168.1.150\nnetmask=255.255.255.0\nbootproto=static\n\n\n1\n2\n3\n4\n5\n\n * 重启网络服务\n\nservice network restart\n\n\n1\n\n\n重启成功后，ip addr 查看一下，你会发现多了一个ip，也就是虚拟ip（vip）\n\n> 注意：阿里云不支持配置网卡，需要购买相应的负载均衡服务，腾讯云支持配置网卡，但需要购买网卡支持，一个网卡支持10个虚拟ip配置\n\n(2)安装ipvsadm\n\n如今的centos都集成了lvs，所以ipvs是自带的，我们只需要安装ipvsadm即可（ipvsadm是管理集群的工具，通过ipvs可以管理集群，查看集群等操作）\n\nyum install ipvsadm\n\n\n1\n\n\n(3)配置服务器（rs）的虚拟ip\n\n进入网卡配置目录/etc/sysconfig/network-scripts/,找到ifcfg-lo，拷贝并创建子接口\n\ncp ifcfg-lo ifcfg-lo:1\n\n\n1\n\n\n修改子接口配置如下\n\ndevice="lo:1"\nipaddr=192.168.1.150\nnetmask=255.255.255.255\nnetwork=127.0.0.0\nbroadcast=127.255.255.255\nonboot="yes"\nname=loopback\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n重启网络服务成功后，ip addr 查看一下，你会发现多了一个ip，也就是虚拟ip（vip）\n\n(4)为服务器（rs）配置arp\n\narp响应级别与通告行为参数说明\n\narp-ignore：arp响应级别（处理请求）\n    0：只要本机配置了ip，就能响应请求\n    1：请求的目标地址到达对应的网络接口，才会响应请求\narp-announce：arp通告行为（返回响应）\n    0：本机上任何网络接口都向外通告，所有的网卡都能接受到通告\n    1：尽可能避免本网卡与不匹配的目标进行通告2：只在本网卡通告\n\n\n1\n2\n3\n4\n5\n6\n\n\n打开sysctl.conf:\n\nvim /etc/sysctl.conf\n\n\n1\n\n\n配置所有网卡、默认网卡以及虚拟网卡的arp响应级别和通告行为，分别对应：all，default，lo\n\n# configration for lvs \nnet.ipv4.conf.all.arp_ignore = 1 \nnet.ipv4.conf.default.arp_ignore = 1 \nnet.ipv4.conf.lo.arp_ignore = 1 \n\nnet.ipv4.conf.all.arp_announce = 2 \nnet.ipv4.conf.default.arp_announce = 2 \nnet.ipv4.conf.lo.arp_announce = 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n刷新配置文件\n\nsysctl -p\n\n\n1\n\n\n增加一个网关，用于接收数据报文，当有请求到本机后，会交给lo去处理\n\nroute add -host 192.168.1.150 dev lo:1\n\n\n1\n\n\n将网关添加至开机启动\n\necho "route add -host 192.168.1.150 dev lo:1" >> /etc/rc.local\n\n\n1\n\n\n(4)使用ipvsadm配置集群规则\n\n创建lvs节点，用户访问的集群调度者\n\nipvsadm -a -t 192.168.1.150:80 -s rr -p 5\n\n\n1\n\n * -a：添加集群\n * -t：tcp协议ip地址：设定集群的访问\n * ip：也就是lvs的虚拟ip\n * -s：设置负载均衡的算法，\n * rr：表示轮询\n * -p：设置连接持久化的时间,在指定时间内同一个用户的请求会访问到同一个服务器中\n\n创建多台rs真实服务器\n\nipvsadm -a -t 192.168.1.150:80 -r 192.168.1.171:80 -g \nipvsadm -a -t 192.168.1.150:80 -r 192.168.1.172:80 -g\n\n\n1\n2\n\n * -a：添加真实服务器\n * -t：tcp协议\n * -r：真实服务器的ip地址\n * -g：设定dr模式\n\n保存到规则库，否则重启失效\n\nipvsadm -s\n\n\n1\n\n\n检查集群\n\n#查看集群列表\nipvsadm -ln\n#查看集群状态\nipvsadm -ln --stats\n\n\n1\n2\n3\n4\n\n\n一些其他命令\n\n # 重启ipvsadm，重启后需要重新配置 \n service ipvsadm restart \n # 查看持久化连接 \n ipvsadm -ln --persistent-conn \n # 查看连接请求过期时间以及请求源ip和目标ip \n ipvsadm -lnc \n # 设置tcp tcpfin udp 的过期时间（一般保持默认） \n ipvsadm --set 1 1 1 \n # 查看过期时间 \n ipvsadm -ln --timeout\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n(5)访问虚拟ip，完成lvs搭建\n\n\n# 附：lvs的负载均衡算法\n\n# (1)静态算法\n\n静态：根据lvs本身自由的固定的算法分发用户请求。\n\n * 轮询（round robin 简写’rr’）：轮询算法假设所有的服务器处理请求的能力都一样的，调度器会把所有的请求平均分配给每个真实服务器。（同nginx的轮询）\n * 加权轮询（weight round robin 简写’wrr’）：安装权重比例分配用户请求。权重越高，被分配到处理的请求越多。（同nginx的权重）\n * 源地址散列（source hash 简写’sh’）：同一个用户ip的请求，会由同一个rs来处理。（同nginx的ip_hash）\n * 目标地址散列（destination hash 简写’dh’）：根据url的不同，请求到不同的rs。（同nginx的url_hash）\n\n# (2)动态算法\n\n动态：会根据流量的不同，或者服务器的压力不同来分配用户请求，这是动态计算的。\n\n * 最小连接数（least connections 简写’lc’）：把新的连接请求分配到当前连接数最小的服务器。\n\n * 加权最少连接数（weight least connections 简写’wlc’）：服务器的处理性能用数值来代表，权重越大处理的请求越多。real server 有可能会存在性能上的差异，wlc动态获取不同服务器的负载状况，把请求分发到性能好并且比较空闲的服务器。\n\n * 最短期望延迟（shortest expected delay 简写’sed’）：特殊的wlc算法。举例阐述，假设有abc三台服务器，权重分别为1、2、3 。如果使用wlc算法的话，当一个新请求进来，它可能会分给abc中的任意一个。使用sed算法后会进行如下运算：\n\n * * a：（1+1）/1=2\n   * b：（1+2）/2=3/2\n   * c：（1+3）/3=4/3\n\n最终结果，会把这个请求交给得出运算结果最小的服务器。最少队列调度（never queue 简写’nq’）：永不使用队列。如果有real server的连接数等于0，则直接把这个请求分配过去，不需要在排队等待运算了（sed运算）。\n\n\n# 八、搭建keepalived+lvs+nginx高可用集群负载均衡\n\n如果原先服务器上配置了lvs+nginx需要清空ipvsadm中的配置\n\nipvsadm -c\n\n\n1\n\n\n如果配置了keepalived+nginx双主集群也需要去除掉keepalived中原先的配置，按照的后文进行配置\n\n# (1)使用keepalived配置master lvs\n\n在lvs的机器上安装keepalived，安装过程参考上文\n\n(1)修改keepalived的配置\n\nglobal_defs {\n    router_id keep_151 \n} \nvrrp_instance vi_1 { \n    state master \n    interface ens33 \n    virtual_router_id 41 \n    priority 100 \n    advert_int 1 \n    authentication { \n        auth_type pass \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.150\n    }\n} \n\n#配置集群访问的ip+端口，端口和nginx保持一致\nvirtual_server 192.168.1.150 80{\n    #健康检查的时间，单位：秒\n    delay_loop 6\n    #配置负载均衡的算法，默认的轮询\n    lb_algo rr\n    #设置lvs的模式 nat|tun|dr\n    lb-kind dr\n    #设置会话持久化的时间\n    persistence_timeout 5\n    #协议\n    protocol tcp\n    \n    #配置负载均衡的真实服务器，也就是nginx节点的具体的ip地址\n    real_server 192.168.1.171 80{\n        #轮询权重配比\n        weight 1\n        #设置健康检查\n        tcp_check {\n            #检查80端口\n            connect_port 80\n            #超时时间\n            connect_timeout 2\n            #重试次数\n            nb_get_retry 2\n            #重试间隔时间\n            delay_before_retry 3\n        }\n    }\n    real_server 192.168.1.171 80{\n        weight 1\n        tcp_check {\n            connect_port 80\n            connect_timeout 2\n            nb_get_retry 2\n            delay_before_retry 3\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n(2)启动/重启keepalived\n\nsystemctl restart keepalived\n\n\n1\n\n\n# (2)使用keepalived配置backup lvs\n\n配置在备用机上\n\nglobal_defs {\n    router_id keep_152 \n} \nvrrp_instance vi_1 { \n    state  backup\n    interface ens33 \n    virtual_router_id 41 \n    priority 50 \n    advert_int 1 \n    authentication { \n        auth_type pass \n        auth_pass 1111 \n    } \n    virtual_ipaddress { \n        192.168.1.150\n    }\n} \n\n#配置集群访问的ip+端口，端口和nginx保持一致\nvirtual_server 192.168.1.150 80{\n    #健康检查的时间，单位：秒\n    delay_loop 6\n    #配置负载均衡的算法，默认的轮询\n    lb_algo rr\n    #设置lvs的模式 nat|tun|dr\n    lb-kind dr\n    #设置会话持久化的时间\n    persistence_timeout 5\n    #协议\n    protocol tcp\n    \n    #配置负载均衡的真实服务器，也就是nginx节点的具体的ip地址\n    real_server 192.168.1.171 80{\n        #轮询权重配比\n        weight 1\n        #设置健康检查\n        tcp_check {\n            #检查80端口\n            connect_port 80\n            #超时时间\n            connect_timeout 2\n            #重试次数\n            nb_get_retry 2\n            #重试间隔时间\n            delay_before_retry 3\n        }\n    }\n    real_server 192.168.1.171 80{\n        weight 1\n        tcp_check {\n            connect_port 80\n            connect_timeout 2\n            nb_get_retry 2\n            delay_before_retry 3\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Nginx安装Web应用防火墙",frontmatter:{author:"xlc520",title:"Nginx安装Web应用防火墙",description:"Nginx安装Web应用防火墙",time:"2022-01-15T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99.html",relativePath:"other/Nginx安装Web应用防火墙.md",key:"v-33b9b88f",path:"/other/Nginx%E5%AE%89%E8%A3%85Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/",headers:[{level:2,title:"ngxluawaf安装",slug:"ngx-lua-waf安装",normalizedTitle:"ngxluawaf安装",charIndex:null},{level:3,title:"1. lua支持安装",slug:"_1-lua支持安装",normalizedTitle:"1. lua支持安装",charIndex:436},{level:3,title:"2. 安装ngxluawaf",slug:"_2-安装ngx-lua-waf",normalizedTitle:"2. 安装ngxluawaf",charIndex:null},{level:3,title:"3. ngxluawaf防火墙配置",slug:"_3-ngx-lua-waf防火墙配置",normalizedTitle:"3. ngxluawaf防火墙配置",charIndex:null},{level:3,title:"4. ngxluawaf效果图",slug:"_4-ngx-lua-waf效果图",normalizedTitle:"4. ngxluawaf效果图",charIndex:null}],readingTime:{minutes:3.12,words:935},headersStr:"ngxluawaf安装 1. lua支持安装 2. 安装ngxluawaf 3. ngxluawaf防火墙配置 4. ngxluawaf效果图",content:'# Nginx安装Web应用防火墙\n\nLNMP一键安装包 ngx_lua_waf waf(web应用防火墙) 安装设置。WAF中文名是Web应用防火墙，WAF能够根据规则拦截SQL注入、恶意请求、黑客扫描等HTTP请求从而保护WEB应用的安全。\n\n今天我们要说的是一个比较简单好用的基于lua的waf：ngx_lua_waf。它是一个基于lua-nginx-module(openresty)的web应用防火墙，https://github.com/loveshell/ngx_lua_waf。\n\n用途：\n\n * 防止sql注入，本地包含，部分溢出，fuzzing测试，xss，SSRF等web攻击\n * 防止svn/备份之类文件泄漏\n * 防止ApacheBench之类压力测试工具的攻击\n * 屏蔽常见的扫描黑客工具，扫描器\n * 屏蔽异常的网络请求\n * 屏蔽图片附件类目录php执行权限\n * 防止webshell上传\n\n\n# ngx_lua_waf安装\n\n\n# 1. lua支持安装\n\nLNMP一键安装包从1.5开始增加了lua支持的选项，可以通过修改lnmp.conf中Enable_Nginx_Lua后的参数为 y 来启用lua，如果没安装lnmp，修改lnmp.conf后保存，安装完lnmp就是支持lua的，如果已经安装好lnmp，也是按前面修改lnmp.conf\n\n然后lnmp安装包目录下运行./upgrade.sh nginx 升级nginx\n\n./upgrade.sh nginx\n\n\n1\n\n\n输入当前nginx版本号或更新的nginx版本号，升级完成就是支持lua的了。如果出错，请重新下载完整版的LNMP安装包lnmp**-full.tar.gz，再次安装。\n\n\n# 2. 安装ngx_lua_waf\n\n下载安装ngx_lua_waf：\n\nwget https://github.com/loveshell/ngx_lua_waf/archive/master.zip -O ngx_lua_waf.zip\nunzip ngx_lua_waf.zip\nmv ngx_lua_waf-master /usr/local/nginx/conf/waf\n\n\n1\n2\n3\n\n\nnginx上设置并启用ngx_lua_waf\n\n编辑 /usr/local/nginx/conf/nginx.conf在http段的 server_tokens off; 下面添加如下代码：\n\nlua_package_path "/usr/local/nginx/conf/waf/?.lua";\nlua_shared_dict limit 10m;\ninit_by_lua_file /usr/local/nginx/conf/waf/init.lua;\n\n\n1\n2\n3\n\n\n修改完成保存\n\n如果要想在某个虚拟主机启用ngx_lua_waf可以修改对应虚拟主机的server段，在该server段中 root 网站目录行下面添加如下代码：\n\naccess_by_lua_file /usr/local/nginx/conf/waf/waf.lua;\n\n\n1\n\n\n修改完成保存\n\n测试nginx配置文件：/usr/local/nginx/sbin/nginx -t 重载nginx配置生效：/usr/local/nginx/sbin/nginx -s reload\n\n如果测试和重载都没报错就已经生效。\n\n可以通过访问 http://域名/test.php?id=../etc/passwd 来测试\n\n提示：您的请求带有>不合法参数，已被网站管理员设置拦截！说明已经正确设置\n\n\n# 3. ngx_lua_waf防火墙配置\n\nngx_lua_waf配置文件位置：/usr/local/nginx/conf/waf/config.lua ngx_lua_waf配置文件参数说明：\n\nRulePath = “/usr/local/nginx/conf/waf/wafconf/”\n–规则存放目录\nattacklog = “off”\n–是否开启攻击信息记录，需要配置logdir\nlogdir = “/usr/local/nginx/logs/hack/”\n–log存储目录，该目录需要用户自己新建，切需要nginx用户的可写权限\nUrlDeny=”on”\n–是否拦截url访问\nRedirect=”on”\n–是否拦截后重定向\nCookieMatch = “on”\n–是否拦截cookie攻击\npostMatch = “on”\n–是否拦截post攻击\nwhiteModule = “on”\n–是否开启URL白名单\nblack_fileExt={“php”,”jsp”}\n–填写不允许上传文件后缀类型\nipWhitelist={“127.0.0.1”}\n–ip白名单，多个ip用逗号分隔\nipBlocklist={“1.0.0.1″}\n–ip黑名单，多个ip用逗号分隔\nCCDeny=”on”\n–是否开启拦截cc攻击(需要nginx.conf的http段增加lua_shared_dict limit 10m;)\nCCrate = “100/60”\n–设置cc攻击频率，单位为秒.\n–默认1分钟同一个IP只能请求同一个地址100次\nhtml=[[Please go away~~]] –警告内容,可在中括号内自定义\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n备注:不要乱动双引号，区分大小写\n\nngx_lua_waf安装到此结束。\n\n\n# 4. ngx_lua_waf效果图\n\n',normalizedContent:'# nginx安装web应用防火墙\n\nlnmp一键安装包 ngx_lua_waf waf(web应用防火墙) 安装设置。waf中文名是web应用防火墙，waf能够根据规则拦截sql注入、恶意请求、黑客扫描等http请求从而保护web应用的安全。\n\n今天我们要说的是一个比较简单好用的基于lua的waf：ngx_lua_waf。它是一个基于lua-nginx-module(openresty)的web应用防火墙，https://github.com/loveshell/ngx_lua_waf。\n\n用途：\n\n * 防止sql注入，本地包含，部分溢出，fuzzing测试，xss，ssrf等web攻击\n * 防止svn/备份之类文件泄漏\n * 防止apachebench之类压力测试工具的攻击\n * 屏蔽常见的扫描黑客工具，扫描器\n * 屏蔽异常的网络请求\n * 屏蔽图片附件类目录php执行权限\n * 防止webshell上传\n\n\n# ngx_lua_waf安装\n\n\n# 1. lua支持安装\n\nlnmp一键安装包从1.5开始增加了lua支持的选项，可以通过修改lnmp.conf中enable_nginx_lua后的参数为 y 来启用lua，如果没安装lnmp，修改lnmp.conf后保存，安装完lnmp就是支持lua的，如果已经安装好lnmp，也是按前面修改lnmp.conf\n\n然后lnmp安装包目录下运行./upgrade.sh nginx 升级nginx\n\n./upgrade.sh nginx\n\n\n1\n\n\n输入当前nginx版本号或更新的nginx版本号，升级完成就是支持lua的了。如果出错，请重新下载完整版的lnmp安装包lnmp**-full.tar.gz，再次安装。\n\n\n# 2. 安装ngx_lua_waf\n\n下载安装ngx_lua_waf：\n\nwget https://github.com/loveshell/ngx_lua_waf/archive/master.zip -o ngx_lua_waf.zip\nunzip ngx_lua_waf.zip\nmv ngx_lua_waf-master /usr/local/nginx/conf/waf\n\n\n1\n2\n3\n\n\nnginx上设置并启用ngx_lua_waf\n\n编辑 /usr/local/nginx/conf/nginx.conf在http段的 server_tokens off; 下面添加如下代码：\n\nlua_package_path "/usr/local/nginx/conf/waf/?.lua";\nlua_shared_dict limit 10m;\ninit_by_lua_file /usr/local/nginx/conf/waf/init.lua;\n\n\n1\n2\n3\n\n\n修改完成保存\n\n如果要想在某个虚拟主机启用ngx_lua_waf可以修改对应虚拟主机的server段，在该server段中 root 网站目录行下面添加如下代码：\n\naccess_by_lua_file /usr/local/nginx/conf/waf/waf.lua;\n\n\n1\n\n\n修改完成保存\n\n测试nginx配置文件：/usr/local/nginx/sbin/nginx -t 重载nginx配置生效：/usr/local/nginx/sbin/nginx -s reload\n\n如果测试和重载都没报错就已经生效。\n\n可以通过访问 http://域名/test.php?id=../etc/passwd 来测试\n\n提示：您的请求带有>不合法参数，已被网站管理员设置拦截！说明已经正确设置\n\n\n# 3. ngx_lua_waf防火墙配置\n\nngx_lua_waf配置文件位置：/usr/local/nginx/conf/waf/config.lua ngx_lua_waf配置文件参数说明：\n\nrulepath = “/usr/local/nginx/conf/waf/wafconf/”\n–规则存放目录\nattacklog = “off”\n–是否开启攻击信息记录，需要配置logdir\nlogdir = “/usr/local/nginx/logs/hack/”\n–log存储目录，该目录需要用户自己新建，切需要nginx用户的可写权限\nurldeny=”on”\n–是否拦截url访问\nredirect=”on”\n–是否拦截后重定向\ncookiematch = “on”\n–是否拦截cookie攻击\npostmatch = “on”\n–是否拦截post攻击\nwhitemodule = “on”\n–是否开启url白名单\nblack_fileext={“php”,”jsp”}\n–填写不允许上传文件后缀类型\nipwhitelist={“127.0.0.1”}\n–ip白名单，多个ip用逗号分隔\nipblocklist={“1.0.0.1″}\n–ip黑名单，多个ip用逗号分隔\nccdeny=”on”\n–是否开启拦截cc攻击(需要nginx.conf的http段增加lua_shared_dict limit 10m;)\nccrate = “100/60”\n–设置cc攻击频率，单位为秒.\n–默认1分钟同一个ip只能请求同一个地址100次\nhtml=[[please go away~~]] –警告内容,可在中括号内自定义\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n备注:不要乱动双引号，区分大小写\n\nngx_lua_waf安装到此结束。\n\n\n# 4. ngx_lua_waf效果图\n\n',charsets:{cjk:!0},createdTime:1644744787e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 09:33",createTimeStamp:1644744787e3,contributors:[]},{title:"微软Office 365 E5 开发人员计划",frontmatter:{author:"xlc520",title:"微软Office 365 E5 开发人员计划",description:"申请加入微软Office 365 E5 开发人员计划",time:"2022-01-17T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/OfficeE5.html",relativePath:"other/OfficeE5.md",key:"v-2b693b9b",path:"/other/OfficeE5/",headers:[{level:3,title:"修改默认容量",slug:"修改默认容量",normalizedTitle:"修改默认容量",charIndex:571},{level:3,title:"修改已有账号的容量",slug:"修改已有账号的容量",normalizedTitle:"修改已有账号的容量",charIndex:666},{level:3,title:"扩容条件",slug:"扩容条件",normalizedTitle:"扩容条件",charIndex:713},{level:3,title:"提交扩容工单",slug:"提交扩容工单",normalizedTitle:"提交扩容工单",charIndex:770},{level:2,title:"一、注册Azure应用",slug:"一、注册azure应用",normalizedTitle:"一、注册azure应用",charIndex:1185},{level:2,title:"二、安装Rclone和获取refresh_token",slug:"二、安装rclone和获取refresh-token",normalizedTitle:"二、安装rclone和获取refresh_token",charIndex:1746},{level:2,title:"三、使用Docker镜像",slug:"三、使用docker镜像",normalizedTitle:"三、使用docker镜像",charIndex:1992},{level:2,title:"三、一键脚本",slug:"三、一键脚本",normalizedTitle:"三、一键脚本",charIndex:2195},{level:2,title:"四、查看运行日志",slug:"四、查看运行日志",normalizedTitle:"四、查看运行日志",charIndex:2378},{level:2,title:"其他",slug:"其他-2",normalizedTitle:"其他",charIndex:963}],readingTime:{minutes:16.97,words:5092},headersStr:"修改默认容量 修改已有账号的容量 扩容条件 提交扩容工单 一、注册Azure应用 二、安装Rclone和获取refresh_token 三、使用Docker镜像 三、一键脚本 四、查看运行日志 其他",content:'# 申请加入微软Office 365 E5 开发人员计划\n\n\n# 前言\n\n最近闲来无事，申请了个Office E5订阅，对我而言有用的是5T OneDrive（可扩容25T）\n\n订阅有效期90天，证明是开发者即可续订。一共可以开25个子号。\n\n至于证明是开发者，只要触发了OneDrive的API就可以证明是开发者了，当然不仅限于OneDrive，还算是比较简单的。\n\n\n# 申请过程\n\nOffice开发人员中心链接：https://developer.microsoft.com/zh-cn/office/dev-program\n\n打开链接就是大大的 立即加入 几个大字 （注：此过程也许国内网络访问并不友好）\n\n\n\n点 立即加入 就弹出填写信息的界面，如果你没有登录账号，就会让你登录。\n\n填写信息正常填即可\n\n\n\n\n\n\n\n\n\n到这里就OK了，可以订阅我们需要的 E5 了\n\n点击 设置订阅\n\n填写你要设置的开发者账号的账号和密码\n\n账号是一个邮箱的形式，用户名可以随意，域需要唯一\n\n\n\n\n\n填好后点 继续 就完成了，成功订阅了E5。\n\n\n\n\n# 管理E5订阅\n\n管理地址：https://portal.office.com/AdminPortal/Home\n\n需要用你后面填的开发者账号登录\n\n\n# 修改OneDrive容量\n\n\n# 修改默认容量\n\nhttps://admin.onedrive.com/?v=StorageSettings\n\n登录后将1024G改为5120G即可\n\n注：此项设置需要一定时间生效。\n\n\n# 修改已有账号的容量\n\n需要用到 PowerShell\n\n下次再说\n\n\n# 扩容25T\n\n\n# 扩容条件\n\n * 有超过5个订阅的用户（即子号）\n * OneDrive 网盘使用量超过90%，子号亦可\n\n\n# 提交扩容工单\n\n登录后台-支持-提交工单 阐明你的使用量以及扩容的需求，等一段时间以后应该会收到技术人员会的电话，告诉你已经反馈到后台，让你等待大概1天即可升级完成。 工单例：\n\n标题：申请扩容OneDrive 内容：你好！请帮我把admin@yaohuo.onmicrosoft.com的OneDrive的容量扩容到25T。谢谢！ 附件：截你的OneDrive使用量将满的图\n\n\n# 其他\n\nOneList——简单好用的OneDrive目录浏览程序：https://blog.haoduck.com/302.html\n\nDemo：https://disk.gs\n\n\n# 通过Docker部署Office E5开发者订阅续期脚本实现自动续期\n\n首先你要有一个Office E5开发者订阅，如果没有，你可以参考这篇文章申请一个。https://haoduck.com/305.html\n\n其他基础的问题就不多说了，直接开始\n\n\n# 一、注册Azure应用\n\n记得是用订阅下的子账号申请，也就是默认域名为@xxxx.onmicrosoft.com的账号。\n\n登录Azure,https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps\n\n注册azure应用,确保应用有以下权限: files: Files.Read.All、Files.ReadWrite.All、Sites.Read.All、Sites.ReadWrite.All user:User.Read.All、User.ReadWrite.All、Directory.Read.All、Directory.ReadWrite.All mail: Mail.Read、Mail.ReadWrite、MailboxSettings.Read、MailboxSettings.ReadWrite\n\n重定向URL写http://localhost即可，如果你还需要用其他Onedrive列表程序，可以把它们的重定向URL都写上去，比如这些。https://haoduck.com/578.html 注册后一定要再点代表xxx授予管理员同意,否则outlook api无法调用\n\n\n# 二、安装Rclone和获取refresh_token\n\nRclone官网下载地址：https://rclone.org/downloads/\n\nLinux下可以直接用官方一键脚本curl https://rclone.org/install.sh | sudo bash\n\n怎么安装就不多说了，直接到配置这一块\n\n配置Onedrive，其实也没什么好说的，就不上图了\n\n到最后一步完成了，就能看到refresh_token了，是0.A开头的一长串，注意不要复制多了，也不要复制少了。\n\n\n# 三、使用Docker镜像\n\ndocker run -dit --name e5renew --restart always \\-e id="你的id" \\-e secret="你的secret" \\-e refresh_token="你的refresh_token" \\haoduck/e5renew\n\n\n1\n\n\n平均每隔6小时调用API一次，这个6小时不是固定的，随机范围在十几分钟到2个多小时\n\n\n# 三、一键脚本\n\nbash <(curl -sL https://raw.githubusercontent.com/haoduck/E5Renew/main/onekey.sh)`\n或\n`bash <(curl -sL https://cdn.jsdelivr.net/gh/haoduck/E5Renew@main/onekey.sh)\n\n\n1\n2\n3\n\n\n\n# 四、查看运行日志\n\nDocker的运行日志docker logs e5renew\n\n脚本的定时日志(等下次运行了才会有)docker exec e5renew cat /work/crontab.log\n\n其中，docker logs e5renew里的e5renew是容器名，如果你有自定义容器名，对应修改命令。查看定时日志的命令同理。\n\n\n# 其他\n\n代码来源是在Github已经删掉的AutoApi项目\n\nMicrosoft 365 E5 Renew X Microsoft 365 E5 Renew X是一款网页版的E5续订服务，其依赖网页浏览器呈现支持用户多端操作，完全将E5账户API调用托管在了服务器端因此用户无需电脑也可使用。\n\nMicrosoft 365 E5 Renew X 由来 Microsoft 365 E5 Renew X为Microsoft 365 E5 Web的升级版，相对于旧版其增强了管理功能且更容易部署，API调用内核继承于续订桌面版软件Microsoft 365 E5 Renew Plus。\n\n主要功能 用户端 两种可选的调用权限：用户未登录作为守护程序调用(需要客户端密码)、程序以登录用户身份直接调用(需要账户密码) API种类齐全：41/30个可选的Microsoft Graph REST API Beta中的API(未来可能会继续添加) 完全随机的API调用模式：从已选定的API序列中随机抽取一个或几个进行调用（个数和API随机） 完全随机的API调用时间间隔：随机区段1000s-2000s固定 完全随机的API内容(仅部分API支持)：发送邮件的内容随机 Onedirve上传文件的内容随机 邮件通知服务：支持设置通知邮箱，调用异常会通过邮件通知无需反复登录查看 部署端 平台兼容性：使用Asp.Net Core 作为跨平台框架增适用于 Windows|Linux|MacOS x64|x86|ARM64|ARM 灵活部署：支持开放站点部署和私享部署，私享部署不再强制要求配置Https和OAuth 无需数据库：不需要后台数据库支持，前后台一体化程序 用户后台管理：可修改用户的E5账户数量，以及封删管理 系统状态监视：系统占用率一目了然，可控的站点注册通道更容易控制系统用户数量 自定义页面：支持自定义HTML静态页面，可设置支付宝、微信收款码 显示ICP备案：支持ICP备案文字显示，可在国内备案建站 无人值守 运行自动暂停：可自动暂停有错误率过高的账号API调用 无人值守 自动恢复运行：可定期自动恢复全部账号的API调用，防止因微软网络原因触发大量账号停止API调用进而导致的账号续期失败 用户端使用教程(请勿开启账号的双重验证功能) 可用站点 主站 主站：https://e5.sundayrx.net（由 SundayRX 运营）(可登录不可注册)\n\n分站：https://ms-e5-renew.leeskyler.top:11015（由 leeskyler 运营）(已关停)\n\n分站：https://ms-e5-renew-3.eastern.moe（由 leeskyler 运营）(已关停)\n\n自建共享站点 自建共享站：https://ew.chirmyram.com（由 七米蓝 运营）(可登录不可注册)\n\n自建共享站：https://e5.hm0420.cc（由 小冰酱 运营）\n\n自建共享站：https://ms-e5.hm0420.cc（由 小冰酱 运营）\n\n自建共享站：https://e5.xzh.wtf（由 XZH 运营）\n\n自建共享站：https://e5.tianli0.top（由 Tinali 运营）\n\n自建共享站：https://renew.lrize.xyz（由 Lrize、 运营）\n\n1 注册Azure应用程序 1.1 应用注册 点击登录 Azure或点击直接进入Azure应用注册，登录账号使用申请到的Microsoft 365 E5的管理员账户（账户名类似XXXX@YYYY.onmicrosoft.com格式）。 2.登录完成后点击右上角的“门户”按钮进入Azure管理中心，在搜索栏内输入“应用注册”，点击进入（若应用注册搜索不到请点击此处直接进入）。\n\n3.单击“新注册”按钮\n\n4.配置应用 应用名称随意写、注意可访问性选项选择最后一项、重定向URL暂时不填 、完成后点击注册\n\n1.2 配置应用重定向URL（身份验证） 1.先点击“概述”，然后点击“添加重定向URL”，进入重定向URL配置界面，下图中的应用程序(客户端)ID即为"客户端ID"。\n\n2.点击“添加平台”，再点击“移动和桌面应用程序”，\n\n3.继续勾选中第一个URL，最后点击底部的“配置”，该URL为“https://login.microsoftonline.com/common/oauth2/nativeclient”也可手动添加。\n\n4.配置默认客户端类型将应用程序视为公共客户端 点击切换按钮为“是” ，最后点击“保存”按钮保存。\n\n2 配置应用程序的API权限（重要） 小白提示：建议选择“委托的权限(用户登录)”该权限类型，调用API较多，操作步骤较少简单粗暴，调用成功几率高\n\n注册的应用程序API权限类型有两种，其主要区别如下表所示：\n\n权限类型 委托的权限(用户登录) 应用程序权限(非用户登录) 官方释义 应用程序必须以登录用户身份访问API 应用程序在用户未登录的情况下作为后台服务或守护程序运行 需要的信息 账户名称+账户密码+应用程序(客户端)ID 账户名称+客户端机密+应用程序(客户端)ID 功能影响 程序中所有API均可调用 部分API权限受限无法调用(官方限制) API权限配置 可由PC版程序自动配置添加API权限 必须手动配置API权限 显示颜色标识 蓝色 深青色 以下是登录或非登录所需要的权限列表：\n\n最后根据所选的API权限类型在：2.1 选择“委托的权限(用户登录)”类型的API或者2.2 选择“应用程序权限(非用户登录)”类型的API中选择性阅读。\n\n2.1 选择“委托的权限(用户登录)”类型的API 手动配置API权限 1.点击“API权限”-“添加权限”-“Microsoft Graph”\n\n2.选择“委托的权限” 3.根据编辑页面中列出的API权限需求表（注意在程序中切换为"登录"）来勾选所对应的API权限，全部选择完成后点击"添加权限"。\n\n添加完成的效果如图 如果没有“代表XXX授予管理员同意”按钮 说明该账号不是管理员账号 换登管理员账号创建应用\n\n4.最后点击代表XXX授予管理员同意,对话框选择“是”（该图包含了当前程序“委托的权限(用户登录)”全部API所需要的权限）。\n\n2.2 选择“应用程序权限(非用户登录)”类型的API 2.2.1 手动配置API权限 1.点击“API权限”-“添加权限”-“Microsoft Graph”\n\n2.选择“应用程序权限”\n\n3.根据编辑页面中列出的API权限需求表（注意在程序中切换为"非登录"）来勾选所对应的API权限，全部选择完成后点击"添加权限"。\n\n添加完成的效果如图 如果没有“代表XXX授予管理员同意”按钮 说明该账号不是管理员账号 换登管理员账号创建应用\n\n4.最后点击代表XXX授予管理员同意,对话框选择“是”（该图包含了当前程序“应用程序权限(非用户登录)”全部API所需要的权限）。\n\n2.2.2 创建客户端密码 1.点击“证书密码”-“新客户端密码”-“24个月”-“添加”\n\n2.点击“值”该列中的“复制”（不要复制"ID"列中的值），并立即将该密码保存至电脑，保存的值即为“客户端密码”， 注：该值必须立即保存，退出该页面后将永远无法查看。\n\n3 将账号API调用托管至服务 创建一个新的E5子账户(可选步骤) 登入E5管理员账户进入管理员界面，创建一个新的子账户，使用这个子账户登录程序调用API。 为什么建议这样做：Microsoft 365 E5 Renew中的部分API包含了写操作，例如邮件和Onedrive的API，这些API在随机模式下会生成大量垃圾邮件和文件（虽然单独为此设立了一个文件夹），部分人可能会对此行为非常介意，而且程序频繁的读写可能会对您正常使用账户造成影响，因此不建议使用管理员账户登录。\n\n3.1 进入网站注册并登录账户 从一开始的可用站点，选择站点进入（记住无论使用任何人运营网站显示内容都是基本相同的）\n\n从两种登录中任选一个，这里不建议选择GitHub登录（GitHub的第三方登录很迷经常性崩溃）\n\n第一次登录账户系统会显示注册成功，然后再登录一次即可登录进入系统\n\n3.2 激活您的账户 阅读并同意用户协议，点击激活账户\n\n3.3 添加一个E5账户的运行配置信息 在成功登录系统后，页面会自动跳转到“主页”页面，在“账户详情”页面点击“添加运行账号”按钮，前往“账户运行配置”页面\n\n在账户运行配置页面中填写账户信息，且登录调用填写账户密码、非登录调用填写客户端密码，并选择自己选定的调用方式，注意调用方式不要选错了！！！ 最后点击“添加运行账号”按钮完成配置。\n\n由于前后台数据同步需要时间，任何添加账户或者修改账户配置信息的操作都不会立即被后台执行。\n\n返回用户页面查看账户信息中的“配置同步状态”，如果显示为“正在运行”表明配置已经上传至后台，修改账户配置成功。 警示：配置成功了也要定期来看看自己的账户是否在正常运行（虽然有邮件通知服务），但也建议每月查看一次账户状态！！！\n\n3.4 设置一个通知邮箱（可选） 在任何页面下 点击右上角“用户名-账户设置”，进入个人信息设置\n\n记住你的UID，出现任何问题请使用这个UID与你所选站点的管理员沟通 编辑你的邮箱 并点击保存\n\n部署端(请勿使用任何Cookie缓存加速服务) 服务下载(作为站长务必注意查看主站中“关于”页面中的程序发布时间，及时更新服务程序) 传统方式 下载服务程序源文件（https://sundayrx.lanzoui.com/aW09Lsss75g）\n\n参阅 Skyler的部署帮助文档（https://docs-1.leeskyler.top） 参阅 Gladtbam的部署帮助文档 （https://www.gladtbam.top/posts/37680）\n\nDocker方式 参阅 韩韩的Docker版部署帮助文档（https://blog.csdn.net/qq_40605167/article/details/122888580）\n\n传统方式服务部署 安装运行环境 以下示例可能不完全包含全部操作系统，但无论是哪种系统都要安装 Asp.Net Core 3.1 SDK支持包，服务程序运行依赖于这个包也只依赖这一个包，只要成功安装了Asp.Net Core 3.1 SDK支持包，服务程序就可以正常运行！ 详情请参阅在 Windows、Linux 和 macOS 上安装 .NET\n\nWindows 前往https://dotnet.microsoft.com/download/dotnet/3.1下载安装最新的Asp.Net Core 3.1 SDK 安装包\n\nUbuntu 详情请参阅在 Ubuntu 上安装 .NET SDK 或 .NET 运行时\n\nCentOS 详情请参阅在 CentOS 上安装 .NET SDK 或 .NET 运行时\n\nCentOS 8 sudo dnf install dotnet-sdk-3.1 CentOS 7 sudo rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm sudo yum install dotnet-sdk-3.1\n\nMacOS 前往https://dotnet.microsoft.com/download/dotnet/3.1下载安装最新的Asp.Net Core 3.1 SDK 安装包\n\n填写配置信息 站点拥有开放和私用两种模式，请根据自己的部署目的来选择对应的教程来阅读！ 配置文件是Deploy/Config.xml 务必打开并修改默认的管理员登录密码\n\n开放站点 开放站点必须使用全链路HTTPS，即便是使用了Nginx反向代理也必须设置HTTPS为启用状态\n\nConfiguration.ShareSite.Enable设置为true\n\nHTTPS SSL证书 方式1：服务程序Kestrel—(HTTPS)—外部Internet 准备一个PFX格式的SSL证书文件，放置在Deploy文件夹中\n\nConfiguration.HTTPS.Enable设置为true Configuration.HTTPS.Certificate设置为PFX文件的名称带后缀名 Configuration.HTTPS.Password设置为PFX文件的密码\n\n方式2：服务程序Kestrel—(HTTPS localhost)—Nginx/IIS/Apache—(HTTPS 外部访问域名)—外部Internet 反向代理服务器部分请自行配置\n\n执行下列两个命令 以创建localhsot HTTPS证书 该证书时效为1年 dotnet dev-certs https --clean dotnet dev-certs https --trust\n\nConfiguration.HTTPS.Enable设置为true Configuration.HTTPS.Certificate设置为空（什么都不要填） Configuration.HTTPS.Password设置为空（什么都不要填）\n\nMicrosoft OAuth Github OAuth SMTP邮件服务 准备一个可以使用SMTP服务发信的邮箱\n\nConfiguration.ShareSite.SMTP.Email设置为 发件人邮箱地址 Configuration.ShareSite.SMTP.Password设置为 邮箱密钥 Configuration.ShareSite.SMTP.Host设置为 发件人邮箱的SMTP服务器地址 (以Outlook为例子是smtp.office365.com)\n\n私用 在私用模式下不用准备任何配置信息，填写好登录密码端口即可使用！\n\n启用HTTPS（选配） 若要启用HTTPS请在下面选择一种合适的方式来实现\n\n方式1：服务程序Kestrel—(HTTPS)—外部Internet 准备一个PFX格式的SSL证书文件，放置在Deploy文件夹中\n\nConfiguration.HTTPS.Enable设置为true Configuration.HTTPS.Certificate设置为PFX文件的名称带后缀名 Configuration.HTTPS.Password设置为PFX文件的密码\n\n方式2：服务程序Kestrel—(HTTP)—Nginx/IIS/Apache—(HTTPS 外部访问域名)—外部Internet 反向代理服务器部分请自行配置\n\nConfiguration.HTTPS.Enable设置为false\n\n启动服务程序 在任何系统下，打开命令行定位到程序目录 运行dotnet Microsoft365_E5_Renew_X.dll命令即可启动\n\n管理员登录 非OAuth后台登录（开放或私享部署皆可用） 管理员登录路由 /Admin/Login 默认密码在配置文件Deploy/Config.xml中更改\n\nOAuth认证登录（仅开放部署可用） 设置管理员OAuth登录的OAuthID 使用想要关联的OAuth账号（Microsoft/Github）在任意站点登录/注册均可看到此账号的OAuthID,记录此ID\n\n通过管理员密码登录自己的站点：管理员功能-用户列表 找到管理员账户 点击“编辑”按钮填写记录的OAuthID 保存\n\n直接在主登录页面使用与管理员账户关联的OAuth账号登录即可',normalizedContent:'# 申请加入微软office 365 e5 开发人员计划\n\n\n# 前言\n\n最近闲来无事，申请了个office e5订阅，对我而言有用的是5t onedrive（可扩容25t）\n\n订阅有效期90天，证明是开发者即可续订。一共可以开25个子号。\n\n至于证明是开发者，只要触发了onedrive的api就可以证明是开发者了，当然不仅限于onedrive，还算是比较简单的。\n\n\n# 申请过程\n\noffice开发人员中心链接：https://developer.microsoft.com/zh-cn/office/dev-program\n\n打开链接就是大大的 立即加入 几个大字 （注：此过程也许国内网络访问并不友好）\n\n\n\n点 立即加入 就弹出填写信息的界面，如果你没有登录账号，就会让你登录。\n\n填写信息正常填即可\n\n\n\n\n\n\n\n\n\n到这里就ok了，可以订阅我们需要的 e5 了\n\n点击 设置订阅\n\n填写你要设置的开发者账号的账号和密码\n\n账号是一个邮箱的形式，用户名可以随意，域需要唯一\n\n\n\n\n\n填好后点 继续 就完成了，成功订阅了e5。\n\n\n\n\n# 管理e5订阅\n\n管理地址：https://portal.office.com/adminportal/home\n\n需要用你后面填的开发者账号登录\n\n\n# 修改onedrive容量\n\n\n# 修改默认容量\n\nhttps://admin.onedrive.com/?v=storagesettings\n\n登录后将1024g改为5120g即可\n\n注：此项设置需要一定时间生效。\n\n\n# 修改已有账号的容量\n\n需要用到 powershell\n\n下次再说\n\n\n# 扩容25t\n\n\n# 扩容条件\n\n * 有超过5个订阅的用户（即子号）\n * onedrive 网盘使用量超过90%，子号亦可\n\n\n# 提交扩容工单\n\n登录后台-支持-提交工单 阐明你的使用量以及扩容的需求，等一段时间以后应该会收到技术人员会的电话，告诉你已经反馈到后台，让你等待大概1天即可升级完成。 工单例：\n\n标题：申请扩容onedrive 内容：你好！请帮我把admin@yaohuo.onmicrosoft.com的onedrive的容量扩容到25t。谢谢！ 附件：截你的onedrive使用量将满的图\n\n\n# 其他\n\nonelist——简单好用的onedrive目录浏览程序：https://blog.haoduck.com/302.html\n\ndemo：https://disk.gs\n\n\n# 通过docker部署office e5开发者订阅续期脚本实现自动续期\n\n首先你要有一个office e5开发者订阅，如果没有，你可以参考这篇文章申请一个。https://haoduck.com/305.html\n\n其他基础的问题就不多说了，直接开始\n\n\n# 一、注册azure应用\n\n记得是用订阅下的子账号申请，也就是默认域名为@xxxx.onmicrosoft.com的账号。\n\n登录azure,https://portal.azure.com/#blade/microsoft_aad_iam/activedirectorymenublade/registeredapps\n\n注册azure应用,确保应用有以下权限: files: files.read.all、files.readwrite.all、sites.read.all、sites.readwrite.all user:user.read.all、user.readwrite.all、directory.read.all、directory.readwrite.all mail: mail.read、mail.readwrite、mailboxsettings.read、mailboxsettings.readwrite\n\n重定向url写http://localhost即可，如果你还需要用其他onedrive列表程序，可以把它们的重定向url都写上去，比如这些。https://haoduck.com/578.html 注册后一定要再点代表xxx授予管理员同意,否则outlook api无法调用\n\n\n# 二、安装rclone和获取refresh_token\n\nrclone官网下载地址：https://rclone.org/downloads/\n\nlinux下可以直接用官方一键脚本curl https://rclone.org/install.sh | sudo bash\n\n怎么安装就不多说了，直接到配置这一块\n\n配置onedrive，其实也没什么好说的，就不上图了\n\n到最后一步完成了，就能看到refresh_token了，是0.a开头的一长串，注意不要复制多了，也不要复制少了。\n\n\n# 三、使用docker镜像\n\ndocker run -dit --name e5renew --restart always \\-e id="你的id" \\-e secret="你的secret" \\-e refresh_token="你的refresh_token" \\haoduck/e5renew\n\n\n1\n\n\n平均每隔6小时调用api一次，这个6小时不是固定的，随机范围在十几分钟到2个多小时\n\n\n# 三、一键脚本\n\nbash <(curl -sl https://raw.githubusercontent.com/haoduck/e5renew/main/onekey.sh)`\n或\n`bash <(curl -sl https://cdn.jsdelivr.net/gh/haoduck/e5renew@main/onekey.sh)\n\n\n1\n2\n3\n\n\n\n# 四、查看运行日志\n\ndocker的运行日志docker logs e5renew\n\n脚本的定时日志(等下次运行了才会有)docker exec e5renew cat /work/crontab.log\n\n其中，docker logs e5renew里的e5renew是容器名，如果你有自定义容器名，对应修改命令。查看定时日志的命令同理。\n\n\n# 其他\n\n代码来源是在github已经删掉的autoapi项目\n\nmicrosoft 365 e5 renew x microsoft 365 e5 renew x是一款网页版的e5续订服务，其依赖网页浏览器呈现支持用户多端操作，完全将e5账户api调用托管在了服务器端因此用户无需电脑也可使用。\n\nmicrosoft 365 e5 renew x 由来 microsoft 365 e5 renew x为microsoft 365 e5 web的升级版，相对于旧版其增强了管理功能且更容易部署，api调用内核继承于续订桌面版软件microsoft 365 e5 renew plus。\n\n主要功能 用户端 两种可选的调用权限：用户未登录作为守护程序调用(需要客户端密码)、程序以登录用户身份直接调用(需要账户密码) api种类齐全：41/30个可选的microsoft graph rest api beta中的api(未来可能会继续添加) 完全随机的api调用模式：从已选定的api序列中随机抽取一个或几个进行调用（个数和api随机） 完全随机的api调用时间间隔：随机区段1000s-2000s固定 完全随机的api内容(仅部分api支持)：发送邮件的内容随机 onedirve上传文件的内容随机 邮件通知服务：支持设置通知邮箱，调用异常会通过邮件通知无需反复登录查看 部署端 平台兼容性：使用asp.net core 作为跨平台框架增适用于 windows|linux|macos x64|x86|arm64|arm 灵活部署：支持开放站点部署和私享部署，私享部署不再强制要求配置https和oauth 无需数据库：不需要后台数据库支持，前后台一体化程序 用户后台管理：可修改用户的e5账户数量，以及封删管理 系统状态监视：系统占用率一目了然，可控的站点注册通道更容易控制系统用户数量 自定义页面：支持自定义html静态页面，可设置支付宝、微信收款码 显示icp备案：支持icp备案文字显示，可在国内备案建站 无人值守 运行自动暂停：可自动暂停有错误率过高的账号api调用 无人值守 自动恢复运行：可定期自动恢复全部账号的api调用，防止因微软网络原因触发大量账号停止api调用进而导致的账号续期失败 用户端使用教程(请勿开启账号的双重验证功能) 可用站点 主站 主站：https://e5.sundayrx.net（由 sundayrx 运营）(可登录不可注册)\n\n分站：https://ms-e5-renew.leeskyler.top:11015（由 leeskyler 运营）(已关停)\n\n分站：https://ms-e5-renew-3.eastern.moe（由 leeskyler 运营）(已关停)\n\n自建共享站点 自建共享站：https://ew.chirmyram.com（由 七米蓝 运营）(可登录不可注册)\n\n自建共享站：https://e5.hm0420.cc（由 小冰酱 运营）\n\n自建共享站：https://ms-e5.hm0420.cc（由 小冰酱 运营）\n\n自建共享站：https://e5.xzh.wtf（由 xzh 运营）\n\n自建共享站：https://e5.tianli0.top（由 tinali 运营）\n\n自建共享站：https://renew.lrize.xyz（由 lrize、 运营）\n\n1 注册azure应用程序 1.1 应用注册 点击登录 azure或点击直接进入azure应用注册，登录账号使用申请到的microsoft 365 e5的管理员账户（账户名类似xxxx@yyyy.onmicrosoft.com格式）。 2.登录完成后点击右上角的“门户”按钮进入azure管理中心，在搜索栏内输入“应用注册”，点击进入（若应用注册搜索不到请点击此处直接进入）。\n\n3.单击“新注册”按钮\n\n4.配置应用 应用名称随意写、注意可访问性选项选择最后一项、重定向url暂时不填 、完成后点击注册\n\n1.2 配置应用重定向url（身份验证） 1.先点击“概述”，然后点击“添加重定向url”，进入重定向url配置界面，下图中的应用程序(客户端)id即为"客户端id"。\n\n2.点击“添加平台”，再点击“移动和桌面应用程序”，\n\n3.继续勾选中第一个url，最后点击底部的“配置”，该url为“https://login.microsoftonline.com/common/oauth2/nativeclient”也可手动添加。\n\n4.配置默认客户端类型将应用程序视为公共客户端 点击切换按钮为“是” ，最后点击“保存”按钮保存。\n\n2 配置应用程序的api权限（重要） 小白提示：建议选择“委托的权限(用户登录)”该权限类型，调用api较多，操作步骤较少简单粗暴，调用成功几率高\n\n注册的应用程序api权限类型有两种，其主要区别如下表所示：\n\n权限类型 委托的权限(用户登录) 应用程序权限(非用户登录) 官方释义 应用程序必须以登录用户身份访问api 应用程序在用户未登录的情况下作为后台服务或守护程序运行 需要的信息 账户名称+账户密码+应用程序(客户端)id 账户名称+客户端机密+应用程序(客户端)id 功能影响 程序中所有api均可调用 部分api权限受限无法调用(官方限制) api权限配置 可由pc版程序自动配置添加api权限 必须手动配置api权限 显示颜色标识 蓝色 深青色 以下是登录或非登录所需要的权限列表：\n\n最后根据所选的api权限类型在：2.1 选择“委托的权限(用户登录)”类型的api或者2.2 选择“应用程序权限(非用户登录)”类型的api中选择性阅读。\n\n2.1 选择“委托的权限(用户登录)”类型的api 手动配置api权限 1.点击“api权限”-“添加权限”-“microsoft graph”\n\n2.选择“委托的权限” 3.根据编辑页面中列出的api权限需求表（注意在程序中切换为"登录"）来勾选所对应的api权限，全部选择完成后点击"添加权限"。\n\n添加完成的效果如图 如果没有“代表xxx授予管理员同意”按钮 说明该账号不是管理员账号 换登管理员账号创建应用\n\n4.最后点击代表xxx授予管理员同意,对话框选择“是”（该图包含了当前程序“委托的权限(用户登录)”全部api所需要的权限）。\n\n2.2 选择“应用程序权限(非用户登录)”类型的api 2.2.1 手动配置api权限 1.点击“api权限”-“添加权限”-“microsoft graph”\n\n2.选择“应用程序权限”\n\n3.根据编辑页面中列出的api权限需求表（注意在程序中切换为"非登录"）来勾选所对应的api权限，全部选择完成后点击"添加权限"。\n\n添加完成的效果如图 如果没有“代表xxx授予管理员同意”按钮 说明该账号不是管理员账号 换登管理员账号创建应用\n\n4.最后点击代表xxx授予管理员同意,对话框选择“是”（该图包含了当前程序“应用程序权限(非用户登录)”全部api所需要的权限）。\n\n2.2.2 创建客户端密码 1.点击“证书密码”-“新客户端密码”-“24个月”-“添加”\n\n2.点击“值”该列中的“复制”（不要复制"id"列中的值），并立即将该密码保存至电脑，保存的值即为“客户端密码”， 注：该值必须立即保存，退出该页面后将永远无法查看。\n\n3 将账号api调用托管至服务 创建一个新的e5子账户(可选步骤) 登入e5管理员账户进入管理员界面，创建一个新的子账户，使用这个子账户登录程序调用api。 为什么建议这样做：microsoft 365 e5 renew中的部分api包含了写操作，例如邮件和onedrive的api，这些api在随机模式下会生成大量垃圾邮件和文件（虽然单独为此设立了一个文件夹），部分人可能会对此行为非常介意，而且程序频繁的读写可能会对您正常使用账户造成影响，因此不建议使用管理员账户登录。\n\n3.1 进入网站注册并登录账户 从一开始的可用站点，选择站点进入（记住无论使用任何人运营网站显示内容都是基本相同的）\n\n从两种登录中任选一个，这里不建议选择github登录（github的第三方登录很迷经常性崩溃）\n\n第一次登录账户系统会显示注册成功，然后再登录一次即可登录进入系统\n\n3.2 激活您的账户 阅读并同意用户协议，点击激活账户\n\n3.3 添加一个e5账户的运行配置信息 在成功登录系统后，页面会自动跳转到“主页”页面，在“账户详情”页面点击“添加运行账号”按钮，前往“账户运行配置”页面\n\n在账户运行配置页面中填写账户信息，且登录调用填写账户密码、非登录调用填写客户端密码，并选择自己选定的调用方式，注意调用方式不要选错了！！！ 最后点击“添加运行账号”按钮完成配置。\n\n由于前后台数据同步需要时间，任何添加账户或者修改账户配置信息的操作都不会立即被后台执行。\n\n返回用户页面查看账户信息中的“配置同步状态”，如果显示为“正在运行”表明配置已经上传至后台，修改账户配置成功。 警示：配置成功了也要定期来看看自己的账户是否在正常运行（虽然有邮件通知服务），但也建议每月查看一次账户状态！！！\n\n3.4 设置一个通知邮箱（可选） 在任何页面下 点击右上角“用户名-账户设置”，进入个人信息设置\n\n记住你的uid，出现任何问题请使用这个uid与你所选站点的管理员沟通 编辑你的邮箱 并点击保存\n\n部署端(请勿使用任何cookie缓存加速服务) 服务下载(作为站长务必注意查看主站中“关于”页面中的程序发布时间，及时更新服务程序) 传统方式 下载服务程序源文件（https://sundayrx.lanzoui.com/aw09lsss75g）\n\n参阅 skyler的部署帮助文档（https://docs-1.leeskyler.top） 参阅 gladtbam的部署帮助文档 （https://www.gladtbam.top/posts/37680）\n\ndocker方式 参阅 韩韩的docker版部署帮助文档（https://blog.csdn.net/qq_40605167/article/details/122888580）\n\n传统方式服务部署 安装运行环境 以下示例可能不完全包含全部操作系统，但无论是哪种系统都要安装 asp.net core 3.1 sdk支持包，服务程序运行依赖于这个包也只依赖这一个包，只要成功安装了asp.net core 3.1 sdk支持包，服务程序就可以正常运行！ 详情请参阅在 windows、linux 和 macos 上安装 .net\n\nwindows 前往https://dotnet.microsoft.com/download/dotnet/3.1下载安装最新的asp.net core 3.1 sdk 安装包\n\nubuntu 详情请参阅在 ubuntu 上安装 .net sdk 或 .net 运行时\n\ncentos 详情请参阅在 centos 上安装 .net sdk 或 .net 运行时\n\ncentos 8 sudo dnf install dotnet-sdk-3.1 centos 7 sudo rpm -uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm sudo yum install dotnet-sdk-3.1\n\nmacos 前往https://dotnet.microsoft.com/download/dotnet/3.1下载安装最新的asp.net core 3.1 sdk 安装包\n\n填写配置信息 站点拥有开放和私用两种模式，请根据自己的部署目的来选择对应的教程来阅读！ 配置文件是deploy/config.xml 务必打开并修改默认的管理员登录密码\n\n开放站点 开放站点必须使用全链路https，即便是使用了nginx反向代理也必须设置https为启用状态\n\nconfiguration.sharesite.enable设置为true\n\nhttps ssl证书 方式1：服务程序kestrel—(https)—外部internet 准备一个pfx格式的ssl证书文件，放置在deploy文件夹中\n\nconfiguration.https.enable设置为true configuration.https.certificate设置为pfx文件的名称带后缀名 configuration.https.password设置为pfx文件的密码\n\n方式2：服务程序kestrel—(https localhost)—nginx/iis/apache—(https 外部访问域名)—外部internet 反向代理服务器部分请自行配置\n\n执行下列两个命令 以创建localhsot https证书 该证书时效为1年 dotnet dev-certs https --clean dotnet dev-certs https --trust\n\nconfiguration.https.enable设置为true configuration.https.certificate设置为空（什么都不要填） configuration.https.password设置为空（什么都不要填）\n\nmicrosoft oauth github oauth smtp邮件服务 准备一个可以使用smtp服务发信的邮箱\n\nconfiguration.sharesite.smtp.email设置为 发件人邮箱地址 configuration.sharesite.smtp.password设置为 邮箱密钥 configuration.sharesite.smtp.host设置为 发件人邮箱的smtp服务器地址 (以outlook为例子是smtp.office365.com)\n\n私用 在私用模式下不用准备任何配置信息，填写好登录密码端口即可使用！\n\n启用https（选配） 若要启用https请在下面选择一种合适的方式来实现\n\n方式1：服务程序kestrel—(https)—外部internet 准备一个pfx格式的ssl证书文件，放置在deploy文件夹中\n\nconfiguration.https.enable设置为true configuration.https.certificate设置为pfx文件的名称带后缀名 configuration.https.password设置为pfx文件的密码\n\n方式2：服务程序kestrel—(http)—nginx/iis/apache—(https 外部访问域名)—外部internet 反向代理服务器部分请自行配置\n\nconfiguration.https.enable设置为false\n\n启动服务程序 在任何系统下，打开命令行定位到程序目录 运行dotnet microsoft365_e5_renew_x.dll命令即可启动\n\n管理员登录 非oauth后台登录（开放或私享部署皆可用） 管理员登录路由 /admin/login 默认密码在配置文件deploy/config.xml中更改\n\noauth认证登录（仅开放部署可用） 设置管理员oauth登录的oauthid 使用想要关联的oauth账号（microsoft/github）在任意站点登录/注册均可看到此账号的oauthid,记录此id\n\n通过管理员密码登录自己的站点：管理员功能-用户列表 找到管理员账户 点击“编辑”按钮填写记录的oauthid 保存\n\n直接在主登录页面使用与管理员账户关联的oauth账号登录即可',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"March 18, 2022 05:26",updateTimeStamp:1647581164e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"其他",frontmatter:{author:"xlc520",title:"其他",description:"Other",time:"2022-01-14T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/",relativePath:"other/README.md",key:"v-5d53a8d8",path:"/other/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"SSH客户端软件",frontmatter:{author:"xlc520",title:"SSH客户端软件",description:"SSH客户端软件",time:"2022-01-17T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6.html",relativePath:"other/SSH客户端软件.md",key:"v-bfdf533a",path:"/other/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/",headers:[{level:2,title:"Xshell",slug:"xshell",normalizedTitle:"xshell",charIndex:118},{level:2,title:"Finalshell",slug:"finalshell",normalizedTitle:"finalshell",charIndex:424},{level:2,title:"WindTerm v2.2.0",slug:"windterm-v2-2-0",normalizedTitle:"windterm v2.2.0",charIndex:822},{level:2,title:"NxShell v1.4.6",slug:"nxshell-v1-4-6",normalizedTitle:"nxshell v1.4.6",charIndex:957},{level:2,title:"MobaXterm",slug:"mobaxterm",normalizedTitle:"mobaxterm",charIndex:1017},{level:2,title:"Termius",slug:"termius",normalizedTitle:"termius",charIndex:1406},{level:2,title:"PuTTY",slug:"putty",normalizedTitle:"putty",charIndex:1670},{level:2,title:"SimpleRemote",slug:"simpleremote",normalizedTitle:"simpleremote",charIndex:1849},{level:2,title:"ZOC Terminal",slug:"zoc-terminal",normalizedTitle:"zoc terminal",charIndex:2040},{level:2,title:"JuiceSSH",slug:"juicessh",normalizedTitle:"juicessh",charIndex:2201},{level:2,title:"ServerCat",slug:"servercat",normalizedTitle:"servercat",charIndex:2526},{level:2,title:"ShellFish",slug:"shellfish",normalizedTitle:"shellfish",charIndex:2699}],readingTime:{minutes:6.76,words:2027},headersStr:"Xshell Finalshell WindTerm v2.2.0 NxShell v1.4.6 MobaXterm Termius PuTTY SimpleRemote ZOC Terminal JuiceSSH ServerCat ShellFish",content:"# SSH客户端软件\n\nSSH客户端是在管理和配置Linux服务器用到很多的软件了，一款好的SSH管理软件不但可以让你更好地执行Linux命令，对于工作效率的提升也是非常明显，在本文中我们就来介绍几款非常好用的SSH客户端软件\n\n\n# Xshell\n\nXshell Plus Linux连接SSH工具 v7.0.0092 特别版\n\nhttps://lanzoui.com/b010yn1di\n\n\n\nXshell 是国内比较流行的SSH软件，和其他的SSH客户端相比，Xshell更加注重用户体验的一些东西，比如其现代化的界面，多种语言包括简体中文支持，代码高亮等，对于新手非常友好。\n\nXshell中还提供了一些高级功能，比如标签管理、批量命令等，不过有一些为高级功能，需要升级付费版才能使用，当然，因为现在很多操作都可以在网站面板完成，对于新手来说，其实Xshell免费版本已经足够了，而专业人员使用频率足够高的话付费购买也是非常值得的\n\n\n# Finalshell\n\nFinalShell v3.9.2 破解版SSH工具\n\nhttps://lanzoui.com/iAZxSx022ah\n\n * 点击菜单->激活/升级->登陆/激活，即破解离线激活高级版！\n\n\n\nFinalshell 是一款国人开发的远程连接工具，支持 Windows、Linux 和 macOS，通过界面我们可以看出这款软件非常强大，你不仅可以在远程窗口上执行命令，还可以实时监测到系统的消耗，比如CPU、内存、网络等资源的使用量\n\nFinalshell 还有比较方便的一点就是文件的传输，在软件的右下角有一个文件夹管理界面，让你可以像在FTP软件中那样传输文件，支持右键上传下载，支持鼠标拖拽文件上传到服务器，省去了很多命令行的繁琐步骤\n\n除了基础功能，Finalshell 还可以升级到专业版，包括打包传输、高级网络监控、高级进程管理、多地点ping监控等\n\n\n# WindTerm v2.2.0\n\n连接SSH/Telnet/Serial/Shell/Sftp开源工具\n\n项目地址:https://github.com/kingToolbox/WindTerm/ https://lanzoui.com/iafhqwr0fba\n\n\n# NxShell v1.4.6\n\n绿色版/安装版 : https://lanzoui.com/b010z3paf\n\n\n# MobaXterm\n\n\n\nMobaXterm 是一个功能强大的SSH工具，除了支持基本的SSH终端管理外，还有非常多的增强和扩展功能\n\n * 有绿色版本软件，使用方便\n * 多标签管理，随时切换\n * 支持SSH、Telent、FTP、SFTP等多种协议\n * 支持RDP远程连接Windows\n * 图形化SFTP管理，可上传下载文件\n * 内置MobaTextEditor，可以直接在服务端编辑和保存文件\n * 应用内分屏，最多支持4个屏幕\n * 支持安装插件\n\nMobaXterm 是一个非常好的一站式服务器管理工具，对于多种协议的支持，让其不管是Linux、Windows还是VNC等，都可以在一个软件中进行操作管理，配合内置的SFTP文件管理和MobaTextEditor，可以让远程终端文件管理更加便捷\n\nMobaXterm 多功能的Windows终端工具\n\n\n# Termius\n\n\n\nTermius 是一款全平台的SSH客户端，该软件最大的特点就是支持全部平台，包括Windows、Mac、Linux、iOS、Android等，有了移动设备支持，只要有网络，你可以在任何时间地点管理服务器\n\n如果你的工作经常用到SSH连接，还可以升级高级版实现全平台同步，全平台的好处就是只要你在一个平台添加或修改了服务器，其他平台会自动同步，随时随地管理主机，而且也不用在手机上输入复杂的密码了\n\n在功能上，Termius 也有很多实用的东西，比如SFTP、代码片段、选项卡等，可以省下很多事情\n\n\n# PuTTY\n\n\n\nPuTTY 是一款开源免费的SSH客户端，支持SCP，SSH，Telnet，rlogin等多种网络协议，该软件的特点非常小巧，大小只有1M左右， 而且有绿色版本下载下来就能使用，再加上其开源的特性，很多人都一直在使用PuTTY管理Linux服务器，不过由于软件是全英文的界面，而且有些东西需要学习设置，对新手来说可能并不是那么友好\n\n\n# SimpleRemote\n\n\n\nSimpleRemote 是一款免费开源的远程连接管理工具，软件非常的小巧，解压后只有不到3MB的大小\n\n虽然是一款很小的软件，但是基本远程连接功能都有，比如常用的多标签、配色方案、密钥连接、RDP、Telnet等，对于大多数人来说，功能完全够用，而且对于重要的信息，还可以为SimpleRemote设置打开密码，只有输入正确的密码才能使用\n\n\n# ZOC Terminal\n\n\n\nZOC Terminal 是一款强大的终端模拟器，其支持Windows和Mac平台，软件使用很方便，可以快速连接、也可以保存主机，支持多标签、多窗口，如果你对基础的界面不满意，还可以定制样式，包括背景、字体、颜色等，组成自己喜欢的界面，不过这款软件并没有提供免费版本，需要付费购买\n\n\n# JuiceSSH\n\n\n\nJuiceSSH 是一款Android上的免费SSH客户端，你可以用它快速连接到Linux服务器，也可以添加账号密码或密钥保存多台机器，Juice 让你在手机上就能非常方便地执行这些操作\n\n它的主要功能有\n\n * 全彩色终端显示，多个主题可选\n * 轻松输入，弹出键盘可以方便地输入常用的特殊字符\n * Telnet 和 本地 Shell 命令执行\n * 第三方插件支持，比如性能监控、OpenSSH导入等\n * 其他高级功能\n\n对于想要在安卓手机上管理服务器的人来说，JuiceSSH 是一个非常好的选择，免费版本以及足够使用，付费版还有更多强大功能，包括端口转发、自动执行代码段、快捷方式等，能够极大提升运维效率\n\n\n# ServerCat\n\n\n\nServerCat 是一款iOS平台上的Linux管理软件，它可以让你在iPhone上连接远程服务器，用来监视系统性能、管理Docker和执行SSH命令，软件内提供了很多监控参数，比如CPU、内存、系统负载、网速、硬盘等，并且以可视化的形式展示，你可以随时查看自己服务器的系统状态，避免因负载过高则影响产品服务\n\n\n# ShellFish\n\n\n\nShellFish 是一款SFTP和SSH结合的软件，支持iPhone和iPad，你可以用它来连接远程服务并管理上面的文件，它专为移动设备做了很多优化，比如你可以使用SFTP管理服务器上的文件，使用专用键盘执行命令，创建代码片段快速使用等，而且还有一个很不错的地方在于它是支持快捷指令的，你可以和其他APP配合使用，使用语音执行命令等",normalizedContent:"# ssh客户端软件\n\nssh客户端是在管理和配置linux服务器用到很多的软件了，一款好的ssh管理软件不但可以让你更好地执行linux命令，对于工作效率的提升也是非常明显，在本文中我们就来介绍几款非常好用的ssh客户端软件\n\n\n# xshell\n\nxshell plus linux连接ssh工具 v7.0.0092 特别版\n\nhttps://lanzoui.com/b010yn1di\n\n\n\nxshell 是国内比较流行的ssh软件，和其他的ssh客户端相比，xshell更加注重用户体验的一些东西，比如其现代化的界面，多种语言包括简体中文支持，代码高亮等，对于新手非常友好。\n\nxshell中还提供了一些高级功能，比如标签管理、批量命令等，不过有一些为高级功能，需要升级付费版才能使用，当然，因为现在很多操作都可以在网站面板完成，对于新手来说，其实xshell免费版本已经足够了，而专业人员使用频率足够高的话付费购买也是非常值得的\n\n\n# finalshell\n\nfinalshell v3.9.2 破解版ssh工具\n\nhttps://lanzoui.com/iazxsx022ah\n\n * 点击菜单->激活/升级->登陆/激活，即破解离线激活高级版！\n\n\n\nfinalshell 是一款国人开发的远程连接工具，支持 windows、linux 和 macos，通过界面我们可以看出这款软件非常强大，你不仅可以在远程窗口上执行命令，还可以实时监测到系统的消耗，比如cpu、内存、网络等资源的使用量\n\nfinalshell 还有比较方便的一点就是文件的传输，在软件的右下角有一个文件夹管理界面，让你可以像在ftp软件中那样传输文件，支持右键上传下载，支持鼠标拖拽文件上传到服务器，省去了很多命令行的繁琐步骤\n\n除了基础功能，finalshell 还可以升级到专业版，包括打包传输、高级网络监控、高级进程管理、多地点ping监控等\n\n\n# windterm v2.2.0\n\n连接ssh/telnet/serial/shell/sftp开源工具\n\n项目地址:https://github.com/kingtoolbox/windterm/ https://lanzoui.com/iafhqwr0fba\n\n\n# nxshell v1.4.6\n\n绿色版/安装版 : https://lanzoui.com/b010z3paf\n\n\n# mobaxterm\n\n\n\nmobaxterm 是一个功能强大的ssh工具，除了支持基本的ssh终端管理外，还有非常多的增强和扩展功能\n\n * 有绿色版本软件，使用方便\n * 多标签管理，随时切换\n * 支持ssh、telent、ftp、sftp等多种协议\n * 支持rdp远程连接windows\n * 图形化sftp管理，可上传下载文件\n * 内置mobatexteditor，可以直接在服务端编辑和保存文件\n * 应用内分屏，最多支持4个屏幕\n * 支持安装插件\n\nmobaxterm 是一个非常好的一站式服务器管理工具，对于多种协议的支持，让其不管是linux、windows还是vnc等，都可以在一个软件中进行操作管理，配合内置的sftp文件管理和mobatexteditor，可以让远程终端文件管理更加便捷\n\nmobaxterm 多功能的windows终端工具\n\n\n# termius\n\n\n\ntermius 是一款全平台的ssh客户端，该软件最大的特点就是支持全部平台，包括windows、mac、linux、ios、android等，有了移动设备支持，只要有网络，你可以在任何时间地点管理服务器\n\n如果你的工作经常用到ssh连接，还可以升级高级版实现全平台同步，全平台的好处就是只要你在一个平台添加或修改了服务器，其他平台会自动同步，随时随地管理主机，而且也不用在手机上输入复杂的密码了\n\n在功能上，termius 也有很多实用的东西，比如sftp、代码片段、选项卡等，可以省下很多事情\n\n\n# putty\n\n\n\nputty 是一款开源免费的ssh客户端，支持scp，ssh，telnet，rlogin等多种网络协议，该软件的特点非常小巧，大小只有1m左右， 而且有绿色版本下载下来就能使用，再加上其开源的特性，很多人都一直在使用putty管理linux服务器，不过由于软件是全英文的界面，而且有些东西需要学习设置，对新手来说可能并不是那么友好\n\n\n# simpleremote\n\n\n\nsimpleremote 是一款免费开源的远程连接管理工具，软件非常的小巧，解压后只有不到3mb的大小\n\n虽然是一款很小的软件，但是基本远程连接功能都有，比如常用的多标签、配色方案、密钥连接、rdp、telnet等，对于大多数人来说，功能完全够用，而且对于重要的信息，还可以为simpleremote设置打开密码，只有输入正确的密码才能使用\n\n\n# zoc terminal\n\n\n\nzoc terminal 是一款强大的终端模拟器，其支持windows和mac平台，软件使用很方便，可以快速连接、也可以保存主机，支持多标签、多窗口，如果你对基础的界面不满意，还可以定制样式，包括背景、字体、颜色等，组成自己喜欢的界面，不过这款软件并没有提供免费版本，需要付费购买\n\n\n# juicessh\n\n\n\njuicessh 是一款android上的免费ssh客户端，你可以用它快速连接到linux服务器，也可以添加账号密码或密钥保存多台机器，juice 让你在手机上就能非常方便地执行这些操作\n\n它的主要功能有\n\n * 全彩色终端显示，多个主题可选\n * 轻松输入，弹出键盘可以方便地输入常用的特殊字符\n * telnet 和 本地 shell 命令执行\n * 第三方插件支持，比如性能监控、openssh导入等\n * 其他高级功能\n\n对于想要在安卓手机上管理服务器的人来说，juicessh 是一个非常好的选择，免费版本以及足够使用，付费版还有更多强大功能，包括端口转发、自动执行代码段、快捷方式等，能够极大提升运维效率\n\n\n# servercat\n\n\n\nservercat 是一款ios平台上的linux管理软件，它可以让你在iphone上连接远程服务器，用来监视系统性能、管理docker和执行ssh命令，软件内提供了很多监控参数，比如cpu、内存、系统负载、网速、硬盘等，并且以可视化的形式展示，你可以随时查看自己服务器的系统状态，避免因负载过高则影响产品服务\n\n\n# shellfish\n\n\n\nshellfish 是一款sftp和ssh结合的软件，支持iphone和ipad，你可以用它来连接远程服务并管理上面的文件，它专为移动设备做了很多优化，比如你可以使用sftp管理服务器上的文件，使用专用键盘执行命令，创建代码片段快速使用等，而且还有一个很不错的地方在于它是支持快捷指令的，你可以和其他app配合使用，使用语音执行命令等",charsets:{cjk:!0},createdTime:1644744787e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 09:33",createTimeStamp:1644744787e3,contributors:[]},{title:"SpringBoot+拦截器+自定义异常+自定义注解+全局异常处理",frontmatter:{author:"xlc520",title:"SpringBoot+拦截器+自定义异常+自定义注解+全局异常处理",description:"SpringBoot+拦截器+自定义异常+自定义注解+全局异常处理",time:"2022-01-15T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/SpringBoot.html",relativePath:"other/SpringBoot.md",key:"v-448385f5",path:"/other/SpringBoot/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:40},{level:2,title:"资源权限",slug:"资源权限",normalizedTitle:"资源权限",charIndex:47},{level:3,title:"1.静态资源准备",slug:"_1-静态资源准备",normalizedTitle:"1.静态资源准备",charIndex:58},{level:3,title:"2.自定义一个异常，便于拦截抛出",slug:"_2-自定义一个异常-便于拦截抛出",normalizedTitle:"2.自定义一个异常，便于拦截抛出",charIndex:72},{level:3,title:"3.全局异常处理",slug:"_3-全局异常处理",normalizedTitle:"3.全局异常处理",charIndex:94},{level:3,title:"4.controller层",slug:"_4-controller层",normalizedTitle:"4.controller层",charIndex:108},{level:3,title:"5.拦截器创建",slug:"_5-拦截器创建",normalizedTitle:"5.拦截器创建",charIndex:127},{level:3,title:"6.将拦截器注入应用",slug:"_6-将拦截器注入应用",normalizedTitle:"6.将拦截器注入应用",charIndex:140},{level:3,title:"7.验证查看结果",slug:"_7-验证查看结果",normalizedTitle:"7.验证查看结果",charIndex:156},{level:2,title:"操作权限",slug:"操作权限",normalizedTitle:"操作权限",charIndex:169},{level:3,title:"1.和上面一样使用静态资源",slug:"_1-和上面一样使用静态资源",normalizedTitle:"1.和上面一样使用静态资源",charIndex:180},{level:3,title:"2.自定义注解",slug:"_2-自定义注解",normalizedTitle:"2.自定义注解",charIndex:199},{level:3,title:"3.controller层",slug:"_3-controller层",normalizedTitle:"3.controller层",charIndex:212},{level:3,title:"4.修改一下之前的拦截器",slug:"_4-修改一下之前的拦截器",normalizedTitle:"4.修改一下之前的拦截器",charIndex:231},{level:3,title:"5.验证结果",slug:"_5-验证结果",normalizedTitle:"5.验证结果",charIndex:249},{level:2,title:"角色权限",slug:"角色权限",normalizedTitle:"角色权限",charIndex:260},{level:3,title:"1.静态对应关系",slug:"_1-静态对应关系",normalizedTitle:"1.静态对应关系",charIndex:271},{level:3,title:"2.修改controller",slug:"_2-修改controller",normalizedTitle:"2.修改controller",charIndex:285},{level:3,title:"3.修改一下拦截器",slug:"_3-修改一下拦截器",normalizedTitle:"3.修改一下拦截器",charIndex:305},{level:3,title:"4.结果测试",slug:"_4-结果测试",normalizedTitle:"4.结果测试",charIndex:320},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:331}],readingTime:{minutes:9.11,words:2733},headersStr:"前言 资源权限 1.静态资源准备 2.自定义一个异常，便于拦截抛出 3.全局异常处理 4.controller层 5.拦截器创建 6.将拦截器注入应用 7.验证查看结果 操作权限 1.和上面一样使用静态资源 2.自定义注解 3.controller层 4.修改一下之前的拦截器 5.验证结果 角色权限 1.静态对应关系 2.修改controller 3.修改一下拦截器 4.结果测试 总结",content:'# SpringBoot+拦截器+自定义异常+自定义注解+全局异常处理\n\n * 前言\n\n * 资源权限\n\n * * 1.静态资源准备\n   * 2.自定义一个异常，便于拦截抛出\n   * 3.全局异常处理\n   * 4.controller层\n   * 5.拦截器创建\n   * 6.将拦截器注入应用\n   * 7.验证查看结果\n\n * 操作权限\n\n * * 1.和上面一样使用静态资源\n   * 2.自定义注解\n   * 3.controller层\n   * 4.修改一下之前的拦截器\n   * 5.验证结果\n\n * 角色权限\n\n * * 1.静态对应关系\n   * 2.修改controller\n   * 3.修改一下拦截器\n   * 4.结果测试\n\n * 总结\n\n----------------------------------------\n\n\n# 前言\n\n提到权限管理这块肯定很多人第一想到的就是Springboot Security或者是Shiro安全框架，但本文介绍的并不是这两种，不是因为他们不好用，实在是自己太懒了，我觉得一个拦截器加上其他的一些处理就能满足项目的需求，我又何必去多用一个框架呢，这篇文章也不是去对比谁好谁坏，各位自行抉择。\n\n我将权限管理分为三块：\n\n 1. 资源权限 ：将url当做资源，可以给每个账号动态划分Url权限，访问不同的URl；\n 2. 操作权限 ：将所有URL分为增、删、改、查4种操作权限，给用户分配对应的操作权限，如某个用户只有查操作权限那么他就无法做其他的操作；\n 3. 角色权限 ：系统有多个角色，每个角色的权限都不同，如一个管理后台有着账号管理模块、商品模块等，为超级管理员的角色就可以看到所有模块并操作，而为售后的角色就只能看到商品模块，即使他知道账号管理模块下的URL也无权限操作。然后为用户设置角色就有对应的权限；\n\n> “\n> \n> 推荐下自己做的 Spring Boot 的实战项目：\n> \n> https://github.com/YunaiV/ruoyi-vue-pro\n\n\n# 资源权限\n\n\n# 1.静态资源准备\n\n这里方便演示就不直接操作数据库了，对应的权限建表关系也很简单，这里直接建立静态的用户对应的URL关系。\n\npublic class Constant {\n    /**\n     * 权限管理\n     */\n    public static Map<Integer,String[]> permission=new HashMap<>();\n    static {\n        String[] frist={"/url1","/url2","/url3","/url4","/url5","/url6","/url7"};//用户1所拥有的URL权限\n        String[] second={"/url1","/url2","/url3","/url4","/url5"};//用户2所拥有的URL权限\n        String[] third={"/url1","/url2","/url3"};//用户3所拥有的URL权限\n        permission.put(1,frist);\n        permission.put(2,second);\n        permission.put(3,third);\n\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 2.自定义一个异常，便于拦截抛出\n\npublic class APIException extends RuntimeException {\n    private static final long serialVersionUID = 1L;\n    private String msg;\n    public APIException(String msg) {\n        super(msg);\n        this.msg = msg;\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 3.全局异常处理\n\n便于异常后返回统一规范的结果,正常应该是正常返回自定义Vo，但这里目标是为了演示结果，再加上各位应该都有自己的Vo类，所以这里就不用了\n\n@RestControllerAdvice\npublic class WebExceptionControl {\n    \n    @ExceptionHandler(APIException.class)\n    public String APIExceptionHandler(APIException e) {\n        return e.getMessage();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 4.controller层\n\n很简单创建对应的URL就好\n\n\n\n\n# 5.拦截器创建\n\n一般是要先验证token，后根据token取到用户对应信息，这里没有登录所以就直接在token里传对应用户的key值了\n\n/**\n * 权限管理URL拦截器\n */\npublic class URLInterceptor implements HandlerInterceptor {\n\n    // 预处理回调方法，在接口调用之前使用  true代表放行  false代表不放行\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n        HttpServletRequest httpServletRequest = (HttpServletRequest) request;\n        String token = httpServletRequest.getHeader("token");\n        String requestURL = httpServletRequest.getRequestURI();\n        //1.根据token判断用户是否登录\n        if (token==null){   //正常情况下这里还需判断与redis中的token是否匹配\n            // 如果没有token或者token不匹配, 直接抛出异常  提示未登录\n            throw  new APIException("当前用户未登录");\n        }\n        //2.登录成功后 根据用户token中的信息获取到用户对应的URL权限集合\n        String[] strings = Constant.permission.get(Integer.valueOf(token));\n        boolean hasPermission = false;\n        //3.再根据用户对应的URL集合去与当前请求的URL对比  有匹配的则放行  反之则抛出异常\n        for (int i =0;i<strings.length;i++) {\n            if (strings[i].equals(requestURL)){\n                hasPermission = true;\n                break;\n            }\n        }\n        if (hasPermission){\n            return true;\n        }else {\n            throw  new APIException("当前用户没有访问路径" + requestURL + "的权限");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n\n# 6.将拦截器注入应用\n\n@Configuration\npublic class WebMvcConfg implements WebMvcConfigurer {\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        //权限拦截器\n        registry.addInterceptor(urlInterceptor()).addPathPatterns("/**");\n    }\n    @Bean\n    public URLInterceptor urlInterceptor(){\n        return new URLInterceptor();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 7.验证查看结果\n\n分别在token中传入用户1-3的key，访问不同url就可以看到效果，如下\n\n\n\n\n\n> “\n> \n> 推荐下自己做的 Spring Cloud 的实战项目：\n> \n> https://github.com/YunaiV/onemall\n\n\n# 操作权限\n\n\n# 1.和上面一样使用静态资源\n\npublic class Constant {\n    /**\n     * 权限管理\n     */\n    public static Map<Integer,String[]> permission=new HashMap<>();\n    static {\n        String[] frist={"insert","delete","select","update"};//用户1所拥有的操作权限\n        String[] second={"insert","select","update"};//用户2所拥有的URL权限\n        String[] third={"select"};//用户3所拥有的URL权限\n        permission.put(1,frist);\n        permission.put(2,second);\n        permission.put(3,third);\n\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 2.自定义注解\n\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface UrlAnnotation {\n    /**\n     * 操作类型(type):添加,删除,修改,插入\n     * \n     */\n    String type();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 3.controller层\n\n打上自定义的注解，代表对应方法是什么操作\n\n\n\n\n# 4.修改一下之前的拦截器\n\n添加对注解上面的操作类型的获取，并用type类型去对比判断\n\n\n\n\n# 5.验证结果\n\n其他都不变\n\n\n\n\n\n\n# 角色权限\n\n这里其实和上面的操作大同小异，我这里简单演示一下，以两个模块为例\n\n\n# 1.静态对应关系\n\npublic class Constant {\n    /**\n     * 权限管理\n     */\n    public static Map<Integer,String[]> permission=new HashMap<>();\n    static {\n        String[] frist={"test","test1"};//用户1所拥有的模块权限  这里的test是模块URL入口  例如：test模块下所有URL都是/test/**\n        String[] second={"test"};//用户2所拥有的模块权限\n        permission.put(1,frist); //这里的1其实是用户对应ID为1的角色\n        permission.put(2,second);//这个2同理\n\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 2.修改controller\n\n模拟两个模块\n\n\n\n\n# 3.修改一下拦截器\n\n\n\n\n# 4.结果测试\n\n\n\n\n# 总结\n\n其实用自定义的拦截器去做权限，不管是什么类型其实都大同小异，根据需求灵活的去处理才是最重要的，上面的静态权限变通一下，建立角色表、用户表、路径表以及对应关系，就很容易做出URL的动态权限配置了，灵活运用自定义注解搭配可以做到更细致。',normalizedContent:'# springboot+拦截器+自定义异常+自定义注解+全局异常处理\n\n * 前言\n\n * 资源权限\n\n * * 1.静态资源准备\n   * 2.自定义一个异常，便于拦截抛出\n   * 3.全局异常处理\n   * 4.controller层\n   * 5.拦截器创建\n   * 6.将拦截器注入应用\n   * 7.验证查看结果\n\n * 操作权限\n\n * * 1.和上面一样使用静态资源\n   * 2.自定义注解\n   * 3.controller层\n   * 4.修改一下之前的拦截器\n   * 5.验证结果\n\n * 角色权限\n\n * * 1.静态对应关系\n   * 2.修改controller\n   * 3.修改一下拦截器\n   * 4.结果测试\n\n * 总结\n\n----------------------------------------\n\n\n# 前言\n\n提到权限管理这块肯定很多人第一想到的就是springboot security或者是shiro安全框架，但本文介绍的并不是这两种，不是因为他们不好用，实在是自己太懒了，我觉得一个拦截器加上其他的一些处理就能满足项目的需求，我又何必去多用一个框架呢，这篇文章也不是去对比谁好谁坏，各位自行抉择。\n\n我将权限管理分为三块：\n\n 1. 资源权限 ：将url当做资源，可以给每个账号动态划分url权限，访问不同的url；\n 2. 操作权限 ：将所有url分为增、删、改、查4种操作权限，给用户分配对应的操作权限，如某个用户只有查操作权限那么他就无法做其他的操作；\n 3. 角色权限 ：系统有多个角色，每个角色的权限都不同，如一个管理后台有着账号管理模块、商品模块等，为超级管理员的角色就可以看到所有模块并操作，而为售后的角色就只能看到商品模块，即使他知道账号管理模块下的url也无权限操作。然后为用户设置角色就有对应的权限；\n\n> “\n> \n> 推荐下自己做的 spring boot 的实战项目：\n> \n> https://github.com/yunaiv/ruoyi-vue-pro\n\n\n# 资源权限\n\n\n# 1.静态资源准备\n\n这里方便演示就不直接操作数据库了，对应的权限建表关系也很简单，这里直接建立静态的用户对应的url关系。\n\npublic class constant {\n    /**\n     * 权限管理\n     */\n    public static map<integer,string[]> permission=new hashmap<>();\n    static {\n        string[] frist={"/url1","/url2","/url3","/url4","/url5","/url6","/url7"};//用户1所拥有的url权限\n        string[] second={"/url1","/url2","/url3","/url4","/url5"};//用户2所拥有的url权限\n        string[] third={"/url1","/url2","/url3"};//用户3所拥有的url权限\n        permission.put(1,frist);\n        permission.put(2,second);\n        permission.put(3,third);\n\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 2.自定义一个异常，便于拦截抛出\n\npublic class apiexception extends runtimeexception {\n    private static final long serialversionuid = 1l;\n    private string msg;\n    public apiexception(string msg) {\n        super(msg);\n        this.msg = msg;\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 3.全局异常处理\n\n便于异常后返回统一规范的结果,正常应该是正常返回自定义vo，但这里目标是为了演示结果，再加上各位应该都有自己的vo类，所以这里就不用了\n\n@restcontrolleradvice\npublic class webexceptioncontrol {\n    \n    @exceptionhandler(apiexception.class)\n    public string apiexceptionhandler(apiexception e) {\n        return e.getmessage();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 4.controller层\n\n很简单创建对应的url就好\n\n\n\n\n# 5.拦截器创建\n\n一般是要先验证token，后根据token取到用户对应信息，这里没有登录所以就直接在token里传对应用户的key值了\n\n/**\n * 权限管理url拦截器\n */\npublic class urlinterceptor implements handlerinterceptor {\n\n    // 预处理回调方法，在接口调用之前使用  true代表放行  false代表不放行\n    @override\n    public boolean prehandle(httpservletrequest request, httpservletresponse response, object handler) {\n        httpservletrequest httpservletrequest = (httpservletrequest) request;\n        string token = httpservletrequest.getheader("token");\n        string requesturl = httpservletrequest.getrequesturi();\n        //1.根据token判断用户是否登录\n        if (token==null){   //正常情况下这里还需判断与redis中的token是否匹配\n            // 如果没有token或者token不匹配, 直接抛出异常  提示未登录\n            throw  new apiexception("当前用户未登录");\n        }\n        //2.登录成功后 根据用户token中的信息获取到用户对应的url权限集合\n        string[] strings = constant.permission.get(integer.valueof(token));\n        boolean haspermission = false;\n        //3.再根据用户对应的url集合去与当前请求的url对比  有匹配的则放行  反之则抛出异常\n        for (int i =0;i<strings.length;i++) {\n            if (strings[i].equals(requesturl)){\n                haspermission = true;\n                break;\n            }\n        }\n        if (haspermission){\n            return true;\n        }else {\n            throw  new apiexception("当前用户没有访问路径" + requesturl + "的权限");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n\n# 6.将拦截器注入应用\n\n@configuration\npublic class webmvcconfg implements webmvcconfigurer {\n\n    @override\n    public void addinterceptors(interceptorregistry registry) {\n        //权限拦截器\n        registry.addinterceptor(urlinterceptor()).addpathpatterns("/**");\n    }\n    @bean\n    public urlinterceptor urlinterceptor(){\n        return new urlinterceptor();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 7.验证查看结果\n\n分别在token中传入用户1-3的key，访问不同url就可以看到效果，如下\n\n\n\n\n\n> “\n> \n> 推荐下自己做的 spring cloud 的实战项目：\n> \n> https://github.com/yunaiv/onemall\n\n\n# 操作权限\n\n\n# 1.和上面一样使用静态资源\n\npublic class constant {\n    /**\n     * 权限管理\n     */\n    public static map<integer,string[]> permission=new hashmap<>();\n    static {\n        string[] frist={"insert","delete","select","update"};//用户1所拥有的操作权限\n        string[] second={"insert","select","update"};//用户2所拥有的url权限\n        string[] third={"select"};//用户3所拥有的url权限\n        permission.put(1,frist);\n        permission.put(2,second);\n        permission.put(3,third);\n\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 2.自定义注解\n\n@target(elementtype.method)\n@retention(retentionpolicy.runtime)\npublic @interface urlannotation {\n    /**\n     * 操作类型(type):添加,删除,修改,插入\n     * \n     */\n    string type();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 3.controller层\n\n打上自定义的注解，代表对应方法是什么操作\n\n\n\n\n# 4.修改一下之前的拦截器\n\n添加对注解上面的操作类型的获取，并用type类型去对比判断\n\n\n\n\n# 5.验证结果\n\n其他都不变\n\n\n\n\n\n\n# 角色权限\n\n这里其实和上面的操作大同小异，我这里简单演示一下，以两个模块为例\n\n\n# 1.静态对应关系\n\npublic class constant {\n    /**\n     * 权限管理\n     */\n    public static map<integer,string[]> permission=new hashmap<>();\n    static {\n        string[] frist={"test","test1"};//用户1所拥有的模块权限  这里的test是模块url入口  例如：test模块下所有url都是/test/**\n        string[] second={"test"};//用户2所拥有的模块权限\n        permission.put(1,frist); //这里的1其实是用户对应id为1的角色\n        permission.put(2,second);//这个2同理\n\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 2.修改controller\n\n模拟两个模块\n\n\n\n\n# 3.修改一下拦截器\n\n\n\n\n# 4.结果测试\n\n\n\n\n# 总结\n\n其实用自定义的拦截器去做权限，不管是什么类型其实都大同小异，根据需求灵活的去处理才是最重要的，上面的静态权限变通一下，建立角色表、用户表、路径表以及对应关系，就很容易做出url的动态权限配置了，灵活运用自定义注解搭配可以做到更细致。',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"StartAllBack",frontmatter:{author:"xlc520",title:"StartAllBack",description:"StartAllBack",time:"2022-01-16T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/StartAllBack(StartIsBack)v3.2.1Stable.html",relativePath:"other/StartAllBack(StartIsBack)v3.2.1Stable.md",key:"v-3842bc05",path:"/other/StartAllBack(StartIsBack)v3.2.1Stable/",headers:[{level:2,title:"新版变化",slug:"新版变化",normalizedTitle:"新版变化",charIndex:178},{level:2,title:"下载地址",slug:"下载地址",normalizedTitle:"下载地址",charIndex:580}],readingTime:{minutes:1.35,words:406},headersStr:"新版变化 下载地址",content:"# StartAllBack\n\nStartAllBack(StartIsBack) v3.2.1 Stable\n\nWindows11开始菜单增强工具StartAllBack正式版发布了！在任务栏上为Windows 11恢复经典样式的Windows 7主题风格开始菜单，主要功能包括：恢复和改进开始菜单样式、个性化任务栏、资源管理器等功能。\n\n\n\n\n\n\n# 新版变化\n\nStartIsBack for Windows 11 https://www.startallback.com/\n\n2021.12.18 v3.2.1 - 修复 Xbox 应用大小未调整的问题 - 修复更新或重启后选项丢失的问题\n\n最近主要更新： - 支持DEV渠道开发者预览版~22500 - 支持带有经典任务栏中心的开始菜单\n\n特点描述\n\n√ 破解免激活，无30天试用期，无哭脸表情水印！ √ 全面更新中文语言翻译，优化对齐简体中文字串 √ 剥离升级程序，无升级提示弹窗，去选项检查更新项 √ 采用原版7zSFX自解压形式重新打包，支持静默安装\n\n静默安装参数：/ai /gm2 无人值守安装示例： StartAllBack_Repack.exe /ai /gm2 或右键解压后执行： StartAllBackCfg.exe /install /elevated /silent\n\n\n# 下载地址\n\n----------------------------------------\n\nWin11经典开始菜单 StartAllBack v3.2.1.4211 中文破解版\n\nhttps://www.123pan.com/s/A6cA-ODHJh\n\nhttps://423down.lanzouo.com/b0f1rgl8j\n\nhttps://pan.baidu.com/s/1nBlz81CCOQDPcKgkKEF-jg\n\n----------------------------------------\n\nStartAllBack 3.2.1.4211 Final (2021/12/18) https://s3.amazonaws.com/startisback/StartAllBack_3.2.1_setup.exe\n\nStartAllBack v2.x-3.x+ Patch (2021/10/13) https://423down.lanzouo.com/i1YBsva4eqf",normalizedContent:"# startallback\n\nstartallback(startisback) v3.2.1 stable\n\nwindows11开始菜单增强工具startallback正式版发布了！在任务栏上为windows 11恢复经典样式的windows 7主题风格开始菜单，主要功能包括：恢复和改进开始菜单样式、个性化任务栏、资源管理器等功能。\n\n\n\n\n\n\n# 新版变化\n\nstartisback for windows 11 https://www.startallback.com/\n\n2021.12.18 v3.2.1 - 修复 xbox 应用大小未调整的问题 - 修复更新或重启后选项丢失的问题\n\n最近主要更新： - 支持dev渠道开发者预览版~22500 - 支持带有经典任务栏中心的开始菜单\n\n特点描述\n\n√ 破解免激活，无30天试用期，无哭脸表情水印！ √ 全面更新中文语言翻译，优化对齐简体中文字串 √ 剥离升级程序，无升级提示弹窗，去选项检查更新项 √ 采用原版7zsfx自解压形式重新打包，支持静默安装\n\n静默安装参数：/ai /gm2 无人值守安装示例： startallback_repack.exe /ai /gm2 或右键解压后执行： startallbackcfg.exe /install /elevated /silent\n\n\n# 下载地址\n\n----------------------------------------\n\nwin11经典开始菜单 startallback v3.2.1.4211 中文破解版\n\nhttps://www.123pan.com/s/a6ca-odhjh\n\nhttps://423down.lanzouo.com/b0f1rgl8j\n\nhttps://pan.baidu.com/s/1nblz81ccoqdpckgkkef-jg\n\n----------------------------------------\n\nstartallback 3.2.1.4211 final (2021/12/18) https://s3.amazonaws.com/startisback/startallback_3.2.1_setup.exe\n\nstartallback v2.x-3.x+ patch (2021/10/13) https://423down.lanzouo.com/i1ybsva4eqf",charsets:{cjk:!0},createdTime:1644744787e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 09:33",createTimeStamp:1644744787e3,contributors:[]},{title:"Steam",frontmatter:{author:"xlc520",title:"Steam",description:"Steam",time:"2022-01-15T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/Steam%E5%85%8D%E8%B4%B9%E8%A7%A3%E9%94%81.html",relativePath:"other/Steam免费解锁.md",key:"v-13c645d3",path:"/other/Steam%E5%85%8D%E8%B4%B9%E8%A7%A3%E9%94%81/",readingTime:{minutes:.52,words:156},headersStr:null,content:"# Steam\n\n电脑桌面按win+R steam://install/1198260 《Beneath steel clouds》（锁区） steam://install/1084630 《Sacred Sword Princesses》（锁区） steam://install/1024800 《Femdom Waifu》（锁区） steam://install/950860 《Spiral Clicker》（锁区） steam://install/823550 《Booty Calls》（锁区） steam://install/958720 《Second Chance》（锁区） steam://install/510660 《Big Bang Empire》 steam://install/1191420 《Fake Lay》（锁区） steam://install/966460 《Undress Tournament》（锁区） steam://install/962380 《HOT FITI》（锁区） steam://install/966870 《SinVR》（锁区） steam://install/1121310 《ViRo Playspace》（锁区） steam://install/865570 《pact with a witch》（锁区） steam://install/1245610 《AChat》（锁区） steam://install/720380 《Ancestors Legacy Free Peasant Edition》 steam://install/8500 《EVE》（Steam锁区） steam://install/1172470 《Apex》（Steam锁区） steam://install/1205560 《对魔忍雪风体验版》（锁区） steam://install/1330250 《对魔忍COLLECTION：决战竞技场》（锁区）",normalizedContent:"# steam\n\n电脑桌面按win+r steam://install/1198260 《beneath steel clouds》（锁区） steam://install/1084630 《sacred sword princesses》（锁区） steam://install/1024800 《femdom waifu》（锁区） steam://install/950860 《spiral clicker》（锁区） steam://install/823550 《booty calls》（锁区） steam://install/958720 《second chance》（锁区） steam://install/510660 《big bang empire》 steam://install/1191420 《fake lay》（锁区） steam://install/966460 《undress tournament》（锁区） steam://install/962380 《hot fiti》（锁区） steam://install/966870 《sinvr》（锁区） steam://install/1121310 《viro playspace》（锁区） steam://install/865570 《pact with a witch》（锁区） steam://install/1245610 《achat》（锁区） steam://install/720380 《ancestors legacy free peasant edition》 steam://install/8500 《eve》（steam锁区） steam://install/1172470 《apex》（steam锁区） steam://install/1205560 《对魔忍雪风体验版》（锁区） steam://install/1330250 《对魔忍collection：决战竞技场》（锁区）",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Clash - V2ray订阅",frontmatter:{author:"xlc520",title:"Clash - V2ray订阅",description:"Clash - V2ray订阅",time:"2022-01-19T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/clash-v2ray.html",relativePath:"other/clash-v2ray.md",key:"v-0899f725",path:"/other/clash-v2ray/",headers:[{level:2,title:"资源池",slug:"资源池",normalizedTitle:"资源池",charIndex:22},{level:2,title:"在线订阅链接转换",slug:"在线订阅链接转换",normalizedTitle:"在线订阅链接转换",charIndex:2371}],readingTime:{minutes:1.6,words:479},headersStr:"资源池 在线订阅链接转换",content:"# Clash - V2ray订阅\n\n\n# 资源池\n\n[F 搜 free proxies](https://fsou.cc/search?q=free proxies)\n\nhttps://fq.lonxin.net/ https://hellopool.herokuapp.com/ https://proxy.whuboy.com/ https://baby-besitgift.com/ http://111.229.220.110:5000/ http://66.112.210.60.16clouds.com/ http://149.248.8.112/ https://free.kingfu.cf/ https://proxy.yugogo.xyz/\n\nhttps://free.kingfu.cf https://free.dswang.ga https://clashpool.ml https://sspool.nl https://hm2019721.ml/ https://fu.stgod.com/ https://proxy.51798.xyz/ https://hello.stgod.com/ https://upan.tk/ https://proxypool-guest997.herokuapp.com/ https://ss.dswang.ga:8443/ https://free886.herokuapp.com https://fq.lonxin.net http://emby.luoml.eu.org https://etproxypool.ga/ https://outseen.tk/ https://proxypool.fly.dev/ https://sspool.herokuapp.com/ https://www.linbaoz.com/ 不知道那里的小猫咪链接 https://raw.githubusercontent.com/adiwzx/freenode/main/adispeed.yml 伊朗 小猫咪 https://raw.githubusercontent.com/AzadNetCH/Clash/main/AzadNet.yml 自由代理 https://raw.githubusercontent.com/adiwzx/freenode/main/adispeed.txt\n\n2022年1月31日13:22:03\n\nhttps://hello.stgod.com/ https://proxies.bihai.cf/ https://sspool.nl/ https://proxypool-guest997.herokuapp.com/ https://fq.lonxin.net/ https://free886.herokuapp.com/ https://proxypool.fly.dev/ http://8.135.91.61/ https://proxy.51798.xyz/ https://sspool.herokuapp.com/ https://us-proxypool.herokuapp.com/ https://eu-proxypool.herokuapp.com/ http://www.fuckgfw.tk/ https://etproxypool.ga/ https://free.kingfu.cf/ https://www.linbaoz.com/ https://www.qunima.cc/ https://www.joemt.tk/ https://smart.zxcyec.top/ http://158.101.93.192/ https://168.138.204.231/ http://111.229.220.110:5000/ https://hk.xhrzg2017.xyz/ http://39.106.12.141:8081/ http://213.188.195.234/ https://outseen.tk/ http://149.248.8.112/ https://161.35.5.88/ http://104.128.81.6:8080/ http://wxshi.top:9090/ http://104.168.95.4:8080/ https://proxy.whuboy.com/ https://zua426.cf/ https://185.161.70.4/ http://161.35.5.88:8082/ http://213.188.195.217/ https://de.sanshihui.win/ http://124.127.108.210:12345/ http://guobang.herokuapp.com/ https://1rmb.tk/ https://998988.xyz/ https://alexproxy003.herokuapp.com/ https://free.dswang.ga/ https://free.zdl.im/ https://fu.stgod.com/ https://jiedian.faka77.tk/ https://hellopool.herokuapp.com/ https://origamiboy.herokuapp.com/ https://proxy.suntiefeng.com/ https://proxypoolss.fly.dev/ https://ednovas.design/\n\n\n# 在线订阅链接转换\n\nhttps://acl4ssr-sub.github.io/ https://bianyuan.xyz/ https://sub.90.ms/ https://id9.cc/ https://sub-web.netlify.app/ https://sublink.dev/ https://www.con8.tk/ https://subcon.dlj.tf/ https://sub.v1.mk/",normalizedContent:"# clash - v2ray订阅\n\n\n# 资源池\n\n[f 搜 free proxies](https://fsou.cc/search?q=free proxies)\n\nhttps://fq.lonxin.net/ https://hellopool.herokuapp.com/ https://proxy.whuboy.com/ https://baby-besitgift.com/ http://111.229.220.110:5000/ http://66.112.210.60.16clouds.com/ http://149.248.8.112/ https://free.kingfu.cf/ https://proxy.yugogo.xyz/\n\nhttps://free.kingfu.cf https://free.dswang.ga https://clashpool.ml https://sspool.nl https://hm2019721.ml/ https://fu.stgod.com/ https://proxy.51798.xyz/ https://hello.stgod.com/ https://upan.tk/ https://proxypool-guest997.herokuapp.com/ https://ss.dswang.ga:8443/ https://free886.herokuapp.com https://fq.lonxin.net http://emby.luoml.eu.org https://etproxypool.ga/ https://outseen.tk/ https://proxypool.fly.dev/ https://sspool.herokuapp.com/ https://www.linbaoz.com/ 不知道那里的小猫咪链接 https://raw.githubusercontent.com/adiwzx/freenode/main/adispeed.yml 伊朗 小猫咪 https://raw.githubusercontent.com/azadnetch/clash/main/azadnet.yml 自由代理 https://raw.githubusercontent.com/adiwzx/freenode/main/adispeed.txt\n\n2022年1月31日13:22:03\n\nhttps://hello.stgod.com/ https://proxies.bihai.cf/ https://sspool.nl/ https://proxypool-guest997.herokuapp.com/ https://fq.lonxin.net/ https://free886.herokuapp.com/ https://proxypool.fly.dev/ http://8.135.91.61/ https://proxy.51798.xyz/ https://sspool.herokuapp.com/ https://us-proxypool.herokuapp.com/ https://eu-proxypool.herokuapp.com/ http://www.fuckgfw.tk/ https://etproxypool.ga/ https://free.kingfu.cf/ https://www.linbaoz.com/ https://www.qunima.cc/ https://www.joemt.tk/ https://smart.zxcyec.top/ http://158.101.93.192/ https://168.138.204.231/ http://111.229.220.110:5000/ https://hk.xhrzg2017.xyz/ http://39.106.12.141:8081/ http://213.188.195.234/ https://outseen.tk/ http://149.248.8.112/ https://161.35.5.88/ http://104.128.81.6:8080/ http://wxshi.top:9090/ http://104.168.95.4:8080/ https://proxy.whuboy.com/ https://zua426.cf/ https://185.161.70.4/ http://161.35.5.88:8082/ http://213.188.195.217/ https://de.sanshihui.win/ http://124.127.108.210:12345/ http://guobang.herokuapp.com/ https://1rmb.tk/ https://998988.xyz/ https://alexproxy003.herokuapp.com/ https://free.dswang.ga/ https://free.zdl.im/ https://fu.stgod.com/ https://jiedian.faka77.tk/ https://hellopool.herokuapp.com/ https://origamiboy.herokuapp.com/ https://proxy.suntiefeng.com/ https://proxypoolss.fly.dev/ https://ednovas.design/\n\n\n# 在线订阅链接转换\n\nhttps://acl4ssr-sub.github.io/ https://bianyuan.xyz/ https://sub.90.ms/ https://id9.cc/ https://sub-web.netlify.app/ https://sublink.dev/ https://www.con8.tk/ https://subcon.dlj.tf/ https://sub.v1.mk/",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Openssl一键自签证书",frontmatter:{author:"xlc520",title:"Openssl一键自签证书",description:"Openssl一键自签证书",time:"2022-01-18T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6.html",relativePath:"other/openssl一键自签证书.md",key:"v-e7aabd48",path:"/other/openssl%E4%B8%80%E9%94%AE%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/",readingTime:{minutes:.46,words:137},headersStr:null,content:'# Openssl一键自签证书\n\nvim openssl.sh\n\n#!/bin/bash\nwhile [[ -z "$domain" ]];do\n    read -p "输入域名/IP(必填,如 *.haoduck.com): " domain\ndone\nread -p "输入邮箱(选填,默认admin@haoduck.com): " mail\n[[ -z "$mail" ]] && mail=admin@haoduck.com\nread -p "输入日期(选填,默认3650): " day\n[[ -z "$day" ]] && day=3650\ndir=$domain && mkdir -p $dir\ncrt_file="$dir/${domain}.crt"\nkey_file="$dir/${domain}.key"\nif [[ "$(command -v openssl)" ]];then\n    openssl req -x509 -nodes -newkey rsa:2048 -days $day -keyout $key_file -out $crt_file -subj "/C=US/ST=California/L=Los Angeles/O=Haoduck/OU=Aoao/CN=${domain}/emailAddress=${mail}"\n    echo -e "\\t证书：$(pwd)/$crt_file\\n\\t私钥：$(pwd)/$key_file"\nelse\n    echo "openssl 未安装"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\nbash openssl.sh',normalizedContent:'# openssl一键自签证书\n\nvim openssl.sh\n\n#!/bin/bash\nwhile [[ -z "$domain" ]];do\n    read -p "输入域名/ip(必填,如 *.haoduck.com): " domain\ndone\nread -p "输入邮箱(选填,默认admin@haoduck.com): " mail\n[[ -z "$mail" ]] && mail=admin@haoduck.com\nread -p "输入日期(选填,默认3650): " day\n[[ -z "$day" ]] && day=3650\ndir=$domain && mkdir -p $dir\ncrt_file="$dir/${domain}.crt"\nkey_file="$dir/${domain}.key"\nif [[ "$(command -v openssl)" ]];then\n    openssl req -x509 -nodes -newkey rsa:2048 -days $day -keyout $key_file -out $crt_file -subj "/c=us/st=california/l=los angeles/o=haoduck/ou=aoao/cn=${domain}/emailaddress=${mail}"\n    echo -e "\\t证书：$(pwd)/$crt_file\\n\\t私钥：$(pwd)/$key_file"\nelse\n    echo "openssl 未安装"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\nbash openssl.sh',charsets:{cjk:!0},createdTime:1644744787e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 09:33",createTimeStamp:1644744787e3,contributors:[]},{title:"python安装源",frontmatter:{author:"xlc520",title:"python安装源",description:"python安装源",time:"2022-01-19T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/python%E5%AE%89%E8%A3%85%E6%BA%90.html",relativePath:"other/python安装源.md",key:"v-189698dc",path:"/other/python%E5%AE%89%E8%A3%85%E6%BA%90/",readingTime:{minutes:.44,words:131},headersStr:null,content:"# python安装源\n\n在C:\\Users\\Administrator\\pip下，新建pip.ini，输入以下内容：\n\n[global]\ntimeout = 6000\nindex-url = https://mirrors.aliyun.com/pypi/simple/\n[install]\nuse-mirrors = true\nmirrors = https://mirrors.aliyun.com/pypi/simple/\ntrusted-host = mirrors.aliyun.com\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n其他：\n\n[global]\n# 阿里云\nindex-url = https://mirrors.aliyun.com/pypi/simple/ \n# 清华大学\n# index-url = https://pypi.tuna.tsinghua.edu.cn/simple/\n# 中国科技大学\n# index-url = https://pypi.mirrors.ustc.edu.cn/simple/ \n# 豆瓣\n# index-url = http://pypi.douban.com/simple \n# Python官方\n# index-url = https://pypi.python.org/simple/ \n# v2ex\n# index-url = http://pypi.v2ex.com/simple/ \n# 中国科学院\n# index-url = http://pypi.mirrors.opencas.cn/simple/ \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",normalizedContent:"# python安装源\n\n在c:\\users\\administrator\\pip下，新建pip.ini，输入以下内容：\n\n[global]\ntimeout = 6000\nindex-url = https://mirrors.aliyun.com/pypi/simple/\n[install]\nuse-mirrors = true\nmirrors = https://mirrors.aliyun.com/pypi/simple/\ntrusted-host = mirrors.aliyun.com\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n其他：\n\n[global]\n# 阿里云\nindex-url = https://mirrors.aliyun.com/pypi/simple/ \n# 清华大学\n# index-url = https://pypi.tuna.tsinghua.edu.cn/simple/\n# 中国科技大学\n# index-url = https://pypi.mirrors.ustc.edu.cn/simple/ \n# 豆瓣\n# index-url = http://pypi.douban.com/simple \n# python官方\n# index-url = https://pypi.python.org/simple/ \n# v2ex\n# index-url = http://pypi.v2ex.com/simple/ \n# 中国科学院\n# index-url = http://pypi.mirrors.opencas.cn/simple/ \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"SpringBoot打包不同环境配置与shell脚本部署",frontmatter:{author:"xlc520",title:"SpringBoot打包不同环境配置与shell脚本部署",description:"SpringBoot打包不同环境配置与shell脚本部署",time:"2022-01-15T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/springboot%E6%89%93%E5%8C%85%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8Eshell%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2.html",relativePath:"other/springboot打包不同环境配置与shell脚本部署.md",key:"v-025c699a",path:"/other/springboot%E6%89%93%E5%8C%85%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8Eshell%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2/",readingTime:{minutes:8.82,words:2646},headersStr:null,content:'# SpringBoot打包不同环境配置与shell脚本部署\n\n本篇和大家分享的是springboot打包并结合shell脚本命令部署，重点在分享一个shell程序启动工具，希望能便利工作；\n\n * profiles指定不同环境的配置\n * maven-assembly-plugin打发布压缩包\n * 分享shenniu_publish.sh程序启动工具\n * linux上使用shenniu_publish.sh启动程序\n\n\n# profiles指定不同环境的配置\n\n通常一套程序分为了很多个部署环境：开发，测试，uat，线上 等，我们要想对这些环境区分配置文件，可以通过两种方式：\n\n * 通过application.yml中编码指定 profile.active=uat 方式指定\n * 通过mvn中profiles来区分不同环境对应的配置文件夹，人工可以手动在idea勾选生成不同环境的包(推荐)\n\n这里我们要讲的是第二种，首先在mvn中配置如下内容：\n\n 1     <profiles>\n 2         <profile>\n 3             <id>node</id>\n 4             <properties>\n 5                 \x3c!--传递给脚本的参数值--\x3e\n 6                 <activeProfile>node</activeProfile>\n 7                 <package-name>${scripts_packageName}</package-name>\n 8                 <boot-main>${scripts_bootMain}</boot-main>\n 9             </properties>\n10             <activation>\n11                 <activeByDefault>true</activeByDefault>\n12             </activation>\n13         </profile>\n14         <profile>\n15             <id>node1</id>\n16             <properties>\n17                 <activeProfile>node1</activeProfile>\n18                 <package-name>${scripts_packageName}</package-name>\n19                 <boot-main>${scripts_bootMain}</boot-main>\n20             </properties>\n21         </profile>\n22         <profile>\n23             <id>node2</id>\n24             <properties>\n25                 <activeProfile>node2</activeProfile>\n26                 <package-name>${scripts_packageName}</package-name>\n27                 <boot-main>${scripts_bootMain}</boot-main>\n28             </properties>\n29         </profile>\n30     </profiles>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n节点粗解：\n\n * id：用来指定不同环境配置文件所在的目录，如下我这里：\n * properties：该节点中的节点是可作为参数传递给其他配置文件，如我这里的package-name节点值就可以在另外的assembly.xml或者shell脚本文件中通过${package-name}获取到，如下：\n * activeByDefault：指定默认环境配置文件夹\n\n\n# maven-assembly-plugin打发布压缩包\n\n对于springboot程序打包，可以分为jar和war，这里是jar包；有场景是咋们配置文件或者第三方等依赖包不想放到工程jar中，并且把这些文件压缩成一个zip包，方便上传到linux；此时通过maven-assembly-plugin和maven-jar-plugin就可以做到，mvn的配置如：\n\n 1            <plugin>\n 2                 <groupId>org.apache.maven.plugins</groupId>\n 3                 <artifactId>maven-jar-plugin</artifactId>\n 4                 <version>2.6</version>\n 5                 <configuration>\n 6                     <archive>\n 7                         <addMavenDescriptor>false</addMavenDescriptor>\n 8                         <manifest>\n 9                             <addClasspath>true</addClasspath>\n10                             <classpathPrefix>lib/</classpathPrefix>\n11                             <mainClass>${scripts_bootMain}</mainClass>\n12                         </manifest>\n13                     </archive>\n14                     \x3c!--打包排除项--\x3e\n15                     <excludes>\n16                         <exclude>**/*.yml</exclude>\n17                         <exclude>**/*.properties</exclude>\n18                         <exclude>**/*.xml</exclude>\n19                         <exclude>**/*.sh</exclude>\n20                     </excludes>\n21                 </configuration>\n22                 <executions>\n23                     <execution>\n24                         <id>make-a-jar</id>\n25                         <phase>compile</phase>\n26                         <goals>\n27                             <goal>jar</goal>\n28                         </goals>\n29                     </execution>\n30                 </executions>\n31             </plugin>\n32 \n33             <plugin>\n34                 <groupId>org.apache.maven.plugins</groupId>\n35                 <artifactId>maven-assembly-plugin</artifactId>\n36                 <version>2.4</version>\n37                 \x3c!-- The configuration of the plugin --\x3e\n38                 <configuration>\n39                     \x3c!-- Specifies the configuration file of the assembly plugin --\x3e\n40                     <descriptors>\n41                         <descriptor>${project.basedir}/src/main/assembly/assembly.xml</descriptor>\n42                     </descriptors>\n43                 </configuration>\n44                 <executions>\n45                     <execution>\n46                         <id>make-assembly</id>\n47                         <phase>package</phase>\n48                         <goals>\n49                             <goal>single</goal>\n50                         </goals>\n51                     </execution>\n52                 </executions>\n53             </plugin>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n\n\n值得注意的地方如下几点：\n\n * mainClass节点：用来指定启动main函数入口类路径，如这里的：com.sm.EurekaServerApplication\n * excludes节点：排除主jar包中配置等一些列后缀文件，因为我们要包这些配置文件放到主包外面\n * descriptor节点：用来指定assembly插件对应的assembly.xml配置文件\n\n有了上面mvn配置，我们还需要assembly.xml的配置，这里提取了结合shell脚本发布程序的配置：\n\n 1 <assembly xmlns="http://maven.apache.org/ASSEMBLY/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n 2           xsi:schemaLocation="http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd\n 3 http://maven.apache.org/ASSEMBLY/2.0.0 ">\n 4     <id>${activeProfile}</id>\n 5     \x3c!--打包成一个用于发布的zip文件--\x3e\n 6     <formats>\n 7         <format>zip</format>\n 8     </formats>\n 9     \x3c!--true：zip中生成一级目录(此处屏蔽，配合脚本需要profiles后缀)--\x3e\n10     <includeBaseDirectory>false</includeBaseDirectory>\n11     <dependencySets>\n12         <dependencySet>\n13             \x3c!--打包进zip文件的lib目录--\x3e\n14             <useProjectArtifact>false</useProjectArtifact>\n15             <outputDirectory>${package-name}-${activeProfile}/lib</outputDirectory>\n16             <unpack>false</unpack>\n17         </dependencySet>\n18     </dependencySets>\n19 \n20     <fileSets>\n21         \x3c!-- 配置文件打包进zip文件的conf目录 --\x3e\n22         <fileSet>\n23             <directory>${project.basedir}/src/main/profiles/${activeProfile}</directory>\n24             <outputDirectory>${package-name}-${activeProfile}/conf</outputDirectory>\n25             <includes>\n26                 <include>**/*</include>\n27                 \x3c!--<include>*.xml</include>--\x3e\n28                 \x3c!--<include>*.properties</include>--\x3e\n29                 \x3c!--<include>*.yml</include>--\x3e\n30             </includes>\n31         </fileSet>\n32 \n33         \x3c!--启动脚本打包进zip文件--\x3e\n34         <fileSet>\n35             <directory>${project.basedir}/src/main/scripts</directory>\n36             <outputDirectory></outputDirectory>\n37             <includes>\n38                 <include>**/*</include>\n39             </includes>\n40             \x3c!-- 文件文件权限为777 --\x3e\n41             <fileMode>777</fileMode>\n42             \x3c!-- 目录权限为777  --\x3e\n43             <directoryMode>777</directoryMode>\n44             \x3c!--脚本中参数变量为pom中的值 关键--\x3e\n45             <filtered>true</filtered>\n46         </fileSet>\n47 \n48         \x3c!-- 项目编译出来的jar打包进zip文件 --\x3e\n49         <fileSet>\n50             <directory>${project.build.directory}</directory>\n51             <outputDirectory>${package-name}-${activeProfile}/</outputDirectory>\n52             <includes>\n53                 <include>*.jar</include>\n54             </includes>\n55         </fileSet>\n56     </fileSets>\n57 </assembly>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n重点节点介绍：\n\n * formats节点：把配置文件和jar包等压缩成什么文件格式，这里可以有：zip，tar等\n * fileMode节点：指定scripts目录下脚本文件(这里是：shenniu_publish.sh)在linux上文件权限为777\n * filtered节点：脚本中参数变量为pom的profiles中properties的值(该配置，是把mvn中属性值映射生成到sh文件中，如：${package-name})\n\n完成上面配置后，此时我们可以通过idea上勾选切换不同环境来打zip包，如图：\n\n\n\n\n# 分享shenniu_publish.sh程序启动工具\n\n上面步骤完成了zip格式的发布包，我们再分享下启动程序的shell脚本，该脚本具有的功能如：\n\n * 解压zip+启动jar包\n * 启动jar包\n * 停止对应jar运行\n * 重启jar程序\n\n目前该shell中封装了两种启动jar命令的方式：\n\n * java -cp\n * java -jar\n\n如图命令格式：\n\n\n\n来看全部的shell代码：\n\n  1 #!/usr/bin/env bash\n  2 #可变参数变量\n  3 languageType="javac" #支持 java,javac,netcore 发布\n  4 #参数值由pom文件传递\n  5 baseZipName="${package-name}-${activeProfile}" #压缩包名称  publish-test.zip的publish\n  6 packageName="${package-name}" #命令启动包名 xx.jar的xx\n  7 mainclass="${boot-main}" #java -cp启动时，指定main入口类;命令：java -cp conf;lib\\*.jar;${packageName}.jar ${mainclass}\n  8 \n  9 #例子\n 10 # baseZipName="publish-test" #压缩包名称  publish-test.zip的publish\n 11 # packageName="publish" #命令启动包名 publish.jar的xx\n 12 \n 13 #固定变量\n 14 basePath=$(cd `dirname $0`/; pwd)\n 15 baseZipPath="${basePath}/${baseZipName}.zip"  #压缩包路径\n 16 baseDirPath="${basePath}" #解压部署磁盘路径\n 17 pid= #进程pid\n 18 \n 19 #解压\n 20 function shenniu_unzip()\n 21 {\n 22     echo "解压---------------------------------------------"\n 23     echo "压缩包路径：${baseZipPath}"\n 24     if [ ! `find ${baseZipPath}` ]\n 25     then\n 26         echo "不存在压缩包：${baseZipPath}"\n 27     else\n 28         echo "解压磁盘路径：${baseDirPath}/${baseZipName}"\n 29         echo "开始解压..."\n 30 \n 31         #解压命令\n 32         unzip -od ${baseDirPath}/${baseZipName} ${baseZipPath}\n 33 \n 34         #设置执行权限\n 35         chmod +x ${baseDirPath}/${baseZipName}/${packageName}\n 36 \n 37         echo "解压完成。"  \n 38     fi\n 39 }\n 40 \n 41 #检测pid\n 42 function getPid()\n 43 {\n 44     echo "检测状态---------------------------------------------"\n 45     pid=`ps -ef | grep -n ${packageName} | grep -v grep | awk \'{print $2}\'`\n 46     if [ ${pid} ] \n 47     then\n 48         echo "运行pid：${pid}"\n 49     else\n 50         echo "未运行"\n 51     fi\n 52 }\n 53 \n 54 #启动程序\n 55 function start()\n 56 {\n 57     #启动前，先停止之前的\n 58     stop\n 59     if [ ${pid} ]\n 60     then\n 61         echo "停止程序失败，无法启动"\n 62     else\n 63         echo "启动程序---------------------------------------------"\n 64         \n 65         #选择语言类型\n 66         read -p "输入程序类型(java,javac,netcore)，下一步按回车键(默认：${languageType})：" read_languageType\n 67         if [ ${read_languageType} ]\n 68         then\n 69             languageType=${read_languageType}\n 70         fi\n 71         echo "选择程序类型：${languageType}"\n 72 \n 73         #进入运行包目录\n 74         cd ${baseDirPath}/${baseZipName}\n 75 \n 76         #分类启动\n 77         if [ "${languageType}" == "javac" ] \n 78         then\n 79             if [ ${mainclass} ] \n 80             then\n 81                 nohup java -cp conf:lib\\*.jar:${packageName}.jar ${mainclass} >${baseDirPath}/${packageName}.out 2>&1 &\n 82                #nohup java -cp conf:lib\\*.jar:${packageName}.jar ${mainclass} >/dev/null 2>&1 &\n 83             fi\n 84         elif [ "${languageType}" == "java" ] \n 85         then\n 86             nohup java -jar ${baseDirPath}/${baseZipName}/${packageName}.jar >/dev/null 2>&1 &\n 87             # java -jar ${baseDirPath}/${baseZipName}/${packageName}.jar\n 88         elif [ "${languageType}" == "netcore" ] \n 89         then\n 90             #nohup dotnet run ${baseDirPath}/${baseZipName}/${packageName} >/dev/null 2>&1 &\n 91             nohup ${baseDirPath}/${baseZipName}/${packageName} >/dev/null 2>&1 &\n 92         fi\n 93 \n 94         #查询是否有启动进程\n 95         getPid\n 96         if [ ${pid} ]\n 97         then\n 98             echo "已启动"\n 99             #nohup日志\n100             tail -n 50 -f ${baseDirPath}/${packageName}.out\n101         else\n102             echo "启动失败"\n103         fi\n104     fi\n105 }\n106 \n107 #停止程序\n108 function stop()\n109 {\n110     getPid\n111     if [ ${pid} ] \n112     then\n113         echo "停止程序---------------------------------------------"\n114         kill -9 ${pid}\n115         \n116         getPid\n117         if [ ${pid} ] \n118         then\n119             #stop\n120             echo "停止失败"\n121         else\n122             echo "停止成功"\n123         fi\n124     fi\n125 }\n126 \n127 #启动时带参数，根据参数执行\n128 if [ ${#} -ge 1 ] \n129 then\n130     case ${1} in\n131         "start") \n132             start\n133         ;;\n134         "restart") \n135             start\n136         ;;\n137         "stop") \n138             stop\n139         ;;\n140         "unzip") \n141             #执行解压\n142             shenniu_unzip\n143             #执行启动\n144             start\n145         ;;\n146         *) \n147             echo "${1}无任何操作"\n148         ;;\n149     esac\n150 else\n151     echo "\n152     command如下命令：\n153     unzip：解压并启动\n154     start：启动\n155     stop：停止进程\n156     restart：重启\n157 \n158     示例命令如：./shenniu_publish start\n159     "\n160 fi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n\n\n正如上面小节说的，shell中的参数 package-name，activeProfile，boot-main 都是由mvn中profiles的properties中提供，是可变的参数，脚本代码本身不需要人工去修改，只需要变的是mvn的参数即可；其实在我们生成zip包的时候，shell中的参数就被替换了，可以看zip中shell文件内容如：\n\n\n\n\n# linux上使用shenniu_publish.sh启动程序\n\n把生成的zip上传到linux上，通过命令解压：\n\n1 unzip -od eureka-server-0.0.1-node eureka-server-0.0.1-node.zip\n\n\n1\n\n\n其实shell脚本中包含有解压命令，但是我在打包时放在了zip中，所以只能通过手动解压了，当然可以调整；此时进入加压目录如此：\n\n\n\n注：这里第一次执行./shenniu_publish.sh脚本时候，提示了错误信息；是由于我是在windows上编辑的这个脚本，其空格等和linux上不一样，所以运行会有问题，要解决可以使用vim命令在linux把该文件转成linux格式，如下命令：\n\n1 vim shenniu_publish.sh\n2 set ff=unix\n3 :wq\n\n\n1\n2\n3\n\n\n执行完后，再来运行脚本./shenniu_publish.sh，此时有如下提示:\n\n\n\n此刻我们文件是解压状态，因此只需要start命令启动程序即可：\n\n\n\n到这里shenniu_publish.sh脚本使用就完成了，只要脚本没有提示错误，基本都能启动jar服务；其他restart和stop命令也如此执行就行：\n\n\n\n可以去研究下shell代码，希望该脚本能给你带来效率和好的学习思路，下面是测试用例git地址，脚本在eureka-server项目中：https://github.com/shenniubuxing3/springcloud-Finchley.SR2',normalizedContent:'# springboot打包不同环境配置与shell脚本部署\n\n本篇和大家分享的是springboot打包并结合shell脚本命令部署，重点在分享一个shell程序启动工具，希望能便利工作；\n\n * profiles指定不同环境的配置\n * maven-assembly-plugin打发布压缩包\n * 分享shenniu_publish.sh程序启动工具\n * linux上使用shenniu_publish.sh启动程序\n\n\n# profiles指定不同环境的配置\n\n通常一套程序分为了很多个部署环境：开发，测试，uat，线上 等，我们要想对这些环境区分配置文件，可以通过两种方式：\n\n * 通过application.yml中编码指定 profile.active=uat 方式指定\n * 通过mvn中profiles来区分不同环境对应的配置文件夹，人工可以手动在idea勾选生成不同环境的包(推荐)\n\n这里我们要讲的是第二种，首先在mvn中配置如下内容：\n\n 1     <profiles>\n 2         <profile>\n 3             <id>node</id>\n 4             <properties>\n 5                 \x3c!--传递给脚本的参数值--\x3e\n 6                 <activeprofile>node</activeprofile>\n 7                 <package-name>${scripts_packagename}</package-name>\n 8                 <boot-main>${scripts_bootmain}</boot-main>\n 9             </properties>\n10             <activation>\n11                 <activebydefault>true</activebydefault>\n12             </activation>\n13         </profile>\n14         <profile>\n15             <id>node1</id>\n16             <properties>\n17                 <activeprofile>node1</activeprofile>\n18                 <package-name>${scripts_packagename}</package-name>\n19                 <boot-main>${scripts_bootmain}</boot-main>\n20             </properties>\n21         </profile>\n22         <profile>\n23             <id>node2</id>\n24             <properties>\n25                 <activeprofile>node2</activeprofile>\n26                 <package-name>${scripts_packagename}</package-name>\n27                 <boot-main>${scripts_bootmain}</boot-main>\n28             </properties>\n29         </profile>\n30     </profiles>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n节点粗解：\n\n * id：用来指定不同环境配置文件所在的目录，如下我这里：\n * properties：该节点中的节点是可作为参数传递给其他配置文件，如我这里的package-name节点值就可以在另外的assembly.xml或者shell脚本文件中通过${package-name}获取到，如下：\n * activebydefault：指定默认环境配置文件夹\n\n\n# maven-assembly-plugin打发布压缩包\n\n对于springboot程序打包，可以分为jar和war，这里是jar包；有场景是咋们配置文件或者第三方等依赖包不想放到工程jar中，并且把这些文件压缩成一个zip包，方便上传到linux；此时通过maven-assembly-plugin和maven-jar-plugin就可以做到，mvn的配置如：\n\n 1            <plugin>\n 2                 <groupid>org.apache.maven.plugins</groupid>\n 3                 <artifactid>maven-jar-plugin</artifactid>\n 4                 <version>2.6</version>\n 5                 <configuration>\n 6                     <archive>\n 7                         <addmavendescriptor>false</addmavendescriptor>\n 8                         <manifest>\n 9                             <addclasspath>true</addclasspath>\n10                             <classpathprefix>lib/</classpathprefix>\n11                             <mainclass>${scripts_bootmain}</mainclass>\n12                         </manifest>\n13                     </archive>\n14                     \x3c!--打包排除项--\x3e\n15                     <excludes>\n16                         <exclude>**/*.yml</exclude>\n17                         <exclude>**/*.properties</exclude>\n18                         <exclude>**/*.xml</exclude>\n19                         <exclude>**/*.sh</exclude>\n20                     </excludes>\n21                 </configuration>\n22                 <executions>\n23                     <execution>\n24                         <id>make-a-jar</id>\n25                         <phase>compile</phase>\n26                         <goals>\n27                             <goal>jar</goal>\n28                         </goals>\n29                     </execution>\n30                 </executions>\n31             </plugin>\n32 \n33             <plugin>\n34                 <groupid>org.apache.maven.plugins</groupid>\n35                 <artifactid>maven-assembly-plugin</artifactid>\n36                 <version>2.4</version>\n37                 \x3c!-- the configuration of the plugin --\x3e\n38                 <configuration>\n39                     \x3c!-- specifies the configuration file of the assembly plugin --\x3e\n40                     <descriptors>\n41                         <descriptor>${project.basedir}/src/main/assembly/assembly.xml</descriptor>\n42                     </descriptors>\n43                 </configuration>\n44                 <executions>\n45                     <execution>\n46                         <id>make-assembly</id>\n47                         <phase>package</phase>\n48                         <goals>\n49                             <goal>single</goal>\n50                         </goals>\n51                     </execution>\n52                 </executions>\n53             </plugin>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n\n\n值得注意的地方如下几点：\n\n * mainclass节点：用来指定启动main函数入口类路径，如这里的：com.sm.eurekaserverapplication\n * excludes节点：排除主jar包中配置等一些列后缀文件，因为我们要包这些配置文件放到主包外面\n * descriptor节点：用来指定assembly插件对应的assembly.xml配置文件\n\n有了上面mvn配置，我们还需要assembly.xml的配置，这里提取了结合shell脚本发布程序的配置：\n\n 1 <assembly xmlns="http://maven.apache.org/assembly/2.0.0" xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n 2           xsi:schemalocation="http://maven.apache.org/assembly/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd\n 3 http://maven.apache.org/assembly/2.0.0 ">\n 4     <id>${activeprofile}</id>\n 5     \x3c!--打包成一个用于发布的zip文件--\x3e\n 6     <formats>\n 7         <format>zip</format>\n 8     </formats>\n 9     \x3c!--true：zip中生成一级目录(此处屏蔽，配合脚本需要profiles后缀)--\x3e\n10     <includebasedirectory>false</includebasedirectory>\n11     <dependencysets>\n12         <dependencyset>\n13             \x3c!--打包进zip文件的lib目录--\x3e\n14             <useprojectartifact>false</useprojectartifact>\n15             <outputdirectory>${package-name}-${activeprofile}/lib</outputdirectory>\n16             <unpack>false</unpack>\n17         </dependencyset>\n18     </dependencysets>\n19 \n20     <filesets>\n21         \x3c!-- 配置文件打包进zip文件的conf目录 --\x3e\n22         <fileset>\n23             <directory>${project.basedir}/src/main/profiles/${activeprofile}</directory>\n24             <outputdirectory>${package-name}-${activeprofile}/conf</outputdirectory>\n25             <includes>\n26                 <include>**/*</include>\n27                 \x3c!--<include>*.xml</include>--\x3e\n28                 \x3c!--<include>*.properties</include>--\x3e\n29                 \x3c!--<include>*.yml</include>--\x3e\n30             </includes>\n31         </fileset>\n32 \n33         \x3c!--启动脚本打包进zip文件--\x3e\n34         <fileset>\n35             <directory>${project.basedir}/src/main/scripts</directory>\n36             <outputdirectory></outputdirectory>\n37             <includes>\n38                 <include>**/*</include>\n39             </includes>\n40             \x3c!-- 文件文件权限为777 --\x3e\n41             <filemode>777</filemode>\n42             \x3c!-- 目录权限为777  --\x3e\n43             <directorymode>777</directorymode>\n44             \x3c!--脚本中参数变量为pom中的值 关键--\x3e\n45             <filtered>true</filtered>\n46         </fileset>\n47 \n48         \x3c!-- 项目编译出来的jar打包进zip文件 --\x3e\n49         <fileset>\n50             <directory>${project.build.directory}</directory>\n51             <outputdirectory>${package-name}-${activeprofile}/</outputdirectory>\n52             <includes>\n53                 <include>*.jar</include>\n54             </includes>\n55         </fileset>\n56     </filesets>\n57 </assembly>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n重点节点介绍：\n\n * formats节点：把配置文件和jar包等压缩成什么文件格式，这里可以有：zip，tar等\n * filemode节点：指定scripts目录下脚本文件(这里是：shenniu_publish.sh)在linux上文件权限为777\n * filtered节点：脚本中参数变量为pom的profiles中properties的值(该配置，是把mvn中属性值映射生成到sh文件中，如：${package-name})\n\n完成上面配置后，此时我们可以通过idea上勾选切换不同环境来打zip包，如图：\n\n\n\n\n# 分享shenniu_publish.sh程序启动工具\n\n上面步骤完成了zip格式的发布包，我们再分享下启动程序的shell脚本，该脚本具有的功能如：\n\n * 解压zip+启动jar包\n * 启动jar包\n * 停止对应jar运行\n * 重启jar程序\n\n目前该shell中封装了两种启动jar命令的方式：\n\n * java -cp\n * java -jar\n\n如图命令格式：\n\n\n\n来看全部的shell代码：\n\n  1 #!/usr/bin/env bash\n  2 #可变参数变量\n  3 languagetype="javac" #支持 java,javac,netcore 发布\n  4 #参数值由pom文件传递\n  5 basezipname="${package-name}-${activeprofile}" #压缩包名称  publish-test.zip的publish\n  6 packagename="${package-name}" #命令启动包名 xx.jar的xx\n  7 mainclass="${boot-main}" #java -cp启动时，指定main入口类;命令：java -cp conf;lib\\*.jar;${packagename}.jar ${mainclass}\n  8 \n  9 #例子\n 10 # basezipname="publish-test" #压缩包名称  publish-test.zip的publish\n 11 # packagename="publish" #命令启动包名 publish.jar的xx\n 12 \n 13 #固定变量\n 14 basepath=$(cd `dirname $0`/; pwd)\n 15 basezippath="${basepath}/${basezipname}.zip"  #压缩包路径\n 16 basedirpath="${basepath}" #解压部署磁盘路径\n 17 pid= #进程pid\n 18 \n 19 #解压\n 20 function shenniu_unzip()\n 21 {\n 22     echo "解压---------------------------------------------"\n 23     echo "压缩包路径：${basezippath}"\n 24     if [ ! `find ${basezippath}` ]\n 25     then\n 26         echo "不存在压缩包：${basezippath}"\n 27     else\n 28         echo "解压磁盘路径：${basedirpath}/${basezipname}"\n 29         echo "开始解压..."\n 30 \n 31         #解压命令\n 32         unzip -od ${basedirpath}/${basezipname} ${basezippath}\n 33 \n 34         #设置执行权限\n 35         chmod +x ${basedirpath}/${basezipname}/${packagename}\n 36 \n 37         echo "解压完成。"  \n 38     fi\n 39 }\n 40 \n 41 #检测pid\n 42 function getpid()\n 43 {\n 44     echo "检测状态---------------------------------------------"\n 45     pid=`ps -ef | grep -n ${packagename} | grep -v grep | awk \'{print $2}\'`\n 46     if [ ${pid} ] \n 47     then\n 48         echo "运行pid：${pid}"\n 49     else\n 50         echo "未运行"\n 51     fi\n 52 }\n 53 \n 54 #启动程序\n 55 function start()\n 56 {\n 57     #启动前，先停止之前的\n 58     stop\n 59     if [ ${pid} ]\n 60     then\n 61         echo "停止程序失败，无法启动"\n 62     else\n 63         echo "启动程序---------------------------------------------"\n 64         \n 65         #选择语言类型\n 66         read -p "输入程序类型(java,javac,netcore)，下一步按回车键(默认：${languagetype})：" read_languagetype\n 67         if [ ${read_languagetype} ]\n 68         then\n 69             languagetype=${read_languagetype}\n 70         fi\n 71         echo "选择程序类型：${languagetype}"\n 72 \n 73         #进入运行包目录\n 74         cd ${basedirpath}/${basezipname}\n 75 \n 76         #分类启动\n 77         if [ "${languagetype}" == "javac" ] \n 78         then\n 79             if [ ${mainclass} ] \n 80             then\n 81                 nohup java -cp conf:lib\\*.jar:${packagename}.jar ${mainclass} >${basedirpath}/${packagename}.out 2>&1 &\n 82                #nohup java -cp conf:lib\\*.jar:${packagename}.jar ${mainclass} >/dev/null 2>&1 &\n 83             fi\n 84         elif [ "${languagetype}" == "java" ] \n 85         then\n 86             nohup java -jar ${basedirpath}/${basezipname}/${packagename}.jar >/dev/null 2>&1 &\n 87             # java -jar ${basedirpath}/${basezipname}/${packagename}.jar\n 88         elif [ "${languagetype}" == "netcore" ] \n 89         then\n 90             #nohup dotnet run ${basedirpath}/${basezipname}/${packagename} >/dev/null 2>&1 &\n 91             nohup ${basedirpath}/${basezipname}/${packagename} >/dev/null 2>&1 &\n 92         fi\n 93 \n 94         #查询是否有启动进程\n 95         getpid\n 96         if [ ${pid} ]\n 97         then\n 98             echo "已启动"\n 99             #nohup日志\n100             tail -n 50 -f ${basedirpath}/${packagename}.out\n101         else\n102             echo "启动失败"\n103         fi\n104     fi\n105 }\n106 \n107 #停止程序\n108 function stop()\n109 {\n110     getpid\n111     if [ ${pid} ] \n112     then\n113         echo "停止程序---------------------------------------------"\n114         kill -9 ${pid}\n115         \n116         getpid\n117         if [ ${pid} ] \n118         then\n119             #stop\n120             echo "停止失败"\n121         else\n122             echo "停止成功"\n123         fi\n124     fi\n125 }\n126 \n127 #启动时带参数，根据参数执行\n128 if [ ${#} -ge 1 ] \n129 then\n130     case ${1} in\n131         "start") \n132             start\n133         ;;\n134         "restart") \n135             start\n136         ;;\n137         "stop") \n138             stop\n139         ;;\n140         "unzip") \n141             #执行解压\n142             shenniu_unzip\n143             #执行启动\n144             start\n145         ;;\n146         *) \n147             echo "${1}无任何操作"\n148         ;;\n149     esac\n150 else\n151     echo "\n152     command如下命令：\n153     unzip：解压并启动\n154     start：启动\n155     stop：停止进程\n156     restart：重启\n157 \n158     示例命令如：./shenniu_publish start\n159     "\n160 fi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n\n\n正如上面小节说的，shell中的参数 package-name，activeprofile，boot-main 都是由mvn中profiles的properties中提供，是可变的参数，脚本代码本身不需要人工去修改，只需要变的是mvn的参数即可；其实在我们生成zip包的时候，shell中的参数就被替换了，可以看zip中shell文件内容如：\n\n\n\n\n# linux上使用shenniu_publish.sh启动程序\n\n把生成的zip上传到linux上，通过命令解压：\n\n1 unzip -od eureka-server-0.0.1-node eureka-server-0.0.1-node.zip\n\n\n1\n\n\n其实shell脚本中包含有解压命令，但是我在打包时放在了zip中，所以只能通过手动解压了，当然可以调整；此时进入加压目录如此：\n\n\n\n注：这里第一次执行./shenniu_publish.sh脚本时候，提示了错误信息；是由于我是在windows上编辑的这个脚本，其空格等和linux上不一样，所以运行会有问题，要解决可以使用vim命令在linux把该文件转成linux格式，如下命令：\n\n1 vim shenniu_publish.sh\n2 set ff=unix\n3 :wq\n\n\n1\n2\n3\n\n\n执行完后，再来运行脚本./shenniu_publish.sh，此时有如下提示:\n\n\n\n此刻我们文件是解压状态，因此只需要start命令启动程序即可：\n\n\n\n到这里shenniu_publish.sh脚本使用就完成了，只要脚本没有提示错误，基本都能启动jar服务；其他restart和stop命令也如此执行就行：\n\n\n\n可以去研究下shell代码，希望该脚本能给你带来效率和好的学习思路，下面是测试用例git地址，脚本在eureka-server项目中：https://github.com/shenniubuxing3/springcloud-finchley.sr2',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"win10快捷键",frontmatter:{author:"xlc520",title:"win10快捷键",description:"win10快捷键",time:"2022-02-07T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/win10%E5%BF%AB%E6%8D%B7%E9%94%AE.html",relativePath:"other/win10快捷键.md",key:"v-7a96cc32",path:"/other/win10%E5%BF%AB%E6%8D%B7%E9%94%AE/",headers:[{level:3,title:"1.win10 自定义",slug:"_1-win10-自定义",normalizedTitle:"1.win10 自定义",charIndex:15},{level:3,title:"2.WinhotKey",slug:"_2-winhotkey",normalizedTitle:"2.winhotkey",charIndex:182}],readingTime:{minutes:.45,words:136},headersStr:"1.win10 自定义 2.WinhotKey",content:"# win10快捷键\n\n\n# 1.win10 自定义\n\nWin 10 下快捷方式设置了快捷键一直无法呼出。\n\n在目录：\n\nC:\\Users\\xxxxxx\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\n\n将要运行的程序的快捷方式放在这里，在快捷方式上--\x3e右键--\x3e属性增加快捷键即可呼出应用。\n\n\n# 2.WinhotKey\n\nWinhotKey是一款专业的全局快捷键设置软件,可以通过设置热键来实现相应的动作,包括打开文件或文件夹、调用Windows各种功能、执行相应动作等",normalizedContent:"# win10快捷键\n\n\n# 1.win10 自定义\n\nwin 10 下快捷方式设置了快捷键一直无法呼出。\n\n在目录：\n\nc:\\users\\xxxxxx\\appdata\\roaming\\microsoft\\windows\\start menu\\programs\n\n将要运行的程序的快捷方式放在这里，在快捷方式上--\x3e右键--\x3e属性增加快捷键即可呼出应用。\n\n\n# 2.winhotkey\n\nwinhotkey是一款专业的全局快捷键设置软件,可以通过设置热键来实现相应的动作,包括打开文件或文件夹、调用windows各种功能、执行相应动作等",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"临时邮箱和接码",frontmatter:{author:"xlc520",title:"临时邮箱和接码",description:"临时邮箱和接码",time:"2022-02-10T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1%E5%92%8C%E6%8E%A5%E7%A0%81.html",relativePath:"other/临时邮箱和接码.md",key:"v-ac0f7b50",path:"/other/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1%E5%92%8C%E6%8E%A5%E7%A0%81/",headers:[{level:2,title:"短信接码平台",slug:"短信接码平台",normalizedTitle:"短信接码平台",charIndex:526}],readingTime:{minutes:2.77,words:831},headersStr:"短信接码平台",content:"# 临时邮箱和接码\n\n1、10 Minute Mail – Temporary E-Mail\n\n支持中文，有效期 10 分钟，可延时。\n\n2、10分钟邮箱 – BccTo.ME\n\n中文，可自定义地址，有效期 10 分钟。支持绑定自己的域名。\n\n3、MailDrop\n\n英文，可自定义地址，容量 10 封，有效期 24 小时。\n\n4、Guerrilla Mail – Disposable Temporary E-Mail Address －Guerrilla 临时邮件系统\n\n中文，可自定义地址，有效期 60 分钟，支持收发。\n\n5、666Email – 临时邮箱系统，杜绝垃圾广告骚扰\n\n中文，可自定义地址，有效期 3 天。\n\n6、YOPmail : 临时、匿名的免费邮箱地址\n\n中文，可自定义地址，有效期 5 天。支持绑定自己的域名。可发送邮件到其它 YOPmail 地址。\n\n\n# 手机验证码接码平台\n\n----------------------------------------\n\n谨慎使用！号码公用，收到的信息是公开的。\n\n 1. 在线短信接收\n 2. 云短信 – 免费在线短信接收\n 3. 免费接码 – 免费短信验证码接收平台\n\n\n# 短信接码平台\n\nhttps://sms24.me/ ; https://receive-sms.cc https://receive-sms-online.com https://getfreesmsnumber.com ; http://7sim.net https://receive-sms-free.net http://sms.sellaite.com https://ch.freephonenum.com https://smsreceivefree.com https://zh.mytrashmobile.com https://www.receive-sms-online.info https://receiveasms.com https://sms-online.co/receive-free-sms https://receive-sms.com http://receivefreesms.com/ https://www.receivesmsonline.net/ https://www.freeonlinephone.org/ https://us-phone-number.com https://temporary-phone-number.com https://www.receivesms.co/ https://www.smstibo.com/ https://pingme.tel/receive-sms-online-cn/ http://receivefreesms.net/ http://receivesmsonline.in/ https://sms-receive.net/ https://www.receivesms.net/ 国内免费接码平台 超级云短信： http://www.bfkdim.com/ 隐私短信：https://www.yinsiduanxin.com 云短信： https://www.materialtools.com/ 在线短信：http://www.smszk.com/ 游客短信：https://www.visitorsms.com/cn 免费接码：https://www.becmd.com/ 接码平台：http://www.114sim.com/ http://zg.114sim.com/ 云短信：https://www.materialtools.com 免费接码：http://z-sms.com/ 云短信：https://www.zusms.com 免费接码：https://www.shejiinn.com/ 云接码：https://yunjiema.net 云验证码：https://www.cnwml.com 免费接码：https://www.mffac.com 接码科技免费平台：https://f4.work/ 主站http://jiema.tech/ 接码号：https://jiemahao.com 免费接码： https://mianfeijiema.com/ 小鸟接码平台： http://www.xnsms.com/ zero接码平台： https://xinghai.party/ LotHelper： https://www.lothelper.com/cn 免费接码平台： http://www.zsrq.net/ 免费接收短信验证码：https://www.we39.cn KaKa接码平台：http://www.kakasms.com 随用随弃：https://www.suiyongsuiqi.com\n\n接码平台2 임시 SMS수신：https://www.oncesms.com/ https://www.tesms.net/ https://smscodeonline.com/ https://bestsms.xyz/ 澳洲短信網：https://www.australiasms.com/ 米卡網：https://www.mecan.vip/ 免费美国手机号码：https://www.mecan.cc/ （ussms推荐） 免费美国、英国、加拿大号码(sms推荐) https://zaixianjiema.com/ Turtle sms：https://turtle-sms.xyz/ 无敌云短信：https://clearcode.cn/ 云际云短信：https://yunjisms.xyz/ 云短信：https://www.storytrain.info/\n\n> 小技巧\n> \n> 关键词“Receive+SMS” 搜索免费接码平台 https://www.google.com/search?q=Receive+SMS",normalizedContent:"# 临时邮箱和接码\n\n1、10 minute mail – temporary e-mail\n\n支持中文，有效期 10 分钟，可延时。\n\n2、10分钟邮箱 – bccto.me\n\n中文，可自定义地址，有效期 10 分钟。支持绑定自己的域名。\n\n3、maildrop\n\n英文，可自定义地址，容量 10 封，有效期 24 小时。\n\n4、guerrilla mail – disposable temporary e-mail address －guerrilla 临时邮件系统\n\n中文，可自定义地址，有效期 60 分钟，支持收发。\n\n5、666email – 临时邮箱系统，杜绝垃圾广告骚扰\n\n中文，可自定义地址，有效期 3 天。\n\n6、yopmail : 临时、匿名的免费邮箱地址\n\n中文，可自定义地址，有效期 5 天。支持绑定自己的域名。可发送邮件到其它 yopmail 地址。\n\n\n# 手机验证码接码平台\n\n----------------------------------------\n\n谨慎使用！号码公用，收到的信息是公开的。\n\n 1. 在线短信接收\n 2. 云短信 – 免费在线短信接收\n 3. 免费接码 – 免费短信验证码接收平台\n\n\n# 短信接码平台\n\nhttps://sms24.me/ ; https://receive-sms.cc https://receive-sms-online.com https://getfreesmsnumber.com ; http://7sim.net https://receive-sms-free.net http://sms.sellaite.com https://ch.freephonenum.com https://smsreceivefree.com https://zh.mytrashmobile.com https://www.receive-sms-online.info https://receiveasms.com https://sms-online.co/receive-free-sms https://receive-sms.com http://receivefreesms.com/ https://www.receivesmsonline.net/ https://www.freeonlinephone.org/ https://us-phone-number.com https://temporary-phone-number.com https://www.receivesms.co/ https://www.smstibo.com/ https://pingme.tel/receive-sms-online-cn/ http://receivefreesms.net/ http://receivesmsonline.in/ https://sms-receive.net/ https://www.receivesms.net/ 国内免费接码平台 超级云短信： http://www.bfkdim.com/ 隐私短信：https://www.yinsiduanxin.com 云短信： https://www.materialtools.com/ 在线短信：http://www.smszk.com/ 游客短信：https://www.visitorsms.com/cn 免费接码：https://www.becmd.com/ 接码平台：http://www.114sim.com/ http://zg.114sim.com/ 云短信：https://www.materialtools.com 免费接码：http://z-sms.com/ 云短信：https://www.zusms.com 免费接码：https://www.shejiinn.com/ 云接码：https://yunjiema.net 云验证码：https://www.cnwml.com 免费接码：https://www.mffac.com 接码科技免费平台：https://f4.work/ 主站http://jiema.tech/ 接码号：https://jiemahao.com 免费接码： https://mianfeijiema.com/ 小鸟接码平台： http://www.xnsms.com/ zero接码平台： https://xinghai.party/ lothelper： https://www.lothelper.com/cn 免费接码平台： http://www.zsrq.net/ 免费接收短信验证码：https://www.we39.cn kaka接码平台：http://www.kakasms.com 随用随弃：https://www.suiyongsuiqi.com\n\n接码平台2 임시 sms수신：https://www.oncesms.com/ https://www.tesms.net/ https://smscodeonline.com/ https://bestsms.xyz/ 澳洲短信網：https://www.australiasms.com/ 米卡網：https://www.mecan.vip/ 免费美国手机号码：https://www.mecan.cc/ （ussms推荐） 免费美国、英国、加拿大号码(sms推荐) https://zaixianjiema.com/ turtle sms：https://turtle-sms.xyz/ 无敌云短信：https://clearcode.cn/ 云际云短信：https://yunjisms.xyz/ 云短信：https://www.storytrain.info/\n\n> 小技巧\n> \n> 关键词“receive+sms” 搜索免费接码平台 https://www.google.com/search?q=receive+sms",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"免费VPS",frontmatter:{author:"xlc520",title:"免费VPS",description:"免费VPS",time:"2022-01-26T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%85%8D%E8%B4%B9VPS.html",relativePath:"other/免费VPS.md",key:"v-0e60175c",path:"/other/%E5%85%8D%E8%B4%B9VPS/",headers:[{level:2,title:"Oracle Cloud 甲骨文云：",slug:"oracle-cloud-甲骨文云",normalizedTitle:"oracle cloud 甲骨文云：",charIndex:12},{level:3,title:"ARM",slug:"arm",normalizedTitle:"arm",charIndex:225},{level:2,title:"GCP 谷歌云",slug:"gcp-谷歌云",normalizedTitle:"gcp 谷歌云",charIndex:381},{level:2,title:"AWS 亚马逊云",slug:"aws-亚马逊云",normalizedTitle:"aws 亚马逊云",charIndex:510},{level:2,title:"AZURE 微软云",slug:"azure-微软云",normalizedTitle:"azure 微软云",charIndex:616},{level:2,title:"CIVO",slug:"civo",normalizedTitle:"civo",charIndex:837},{level:2,title:"Linuxone",slug:"linuxone",normalizedTitle:"linuxone",charIndex:901},{level:2,title:"Hax VPS",slug:"hax-vps",normalizedTitle:"hax vps",charIndex:1067},{level:2,title:"华为云",slug:"华为云",normalizedTitle:"华为云",charIndex:1159},{level:2,title:"阿里云",slug:"阿里云",normalizedTitle:"阿里云",charIndex:1248},{level:2,title:"Vultr",slug:"vultr",normalizedTitle:"vultr",charIndex:1346},{level:2,title:"Linode",slug:"linode",normalizedTitle:"linode",charIndex:1420},{level:2,title:"Ditital Ocean",slug:"ditital-ocean",normalizedTitle:"ditital ocean",charIndex:1518},{level:2,title:"Euserv",slug:"euserv",normalizedTitle:"euserv",charIndex:1822},{level:2,title:"Kamatera",slug:"kamatera",normalizedTitle:"kamatera",charIndex:2008},{level:2,title:"Yandex Cloud",slug:"yandex-cloud",normalizedTitle:"yandex cloud",charIndex:2366},{level:2,title:"Evolution Host",slug:"evolution-host",normalizedTitle:"evolution host",charIndex:2627}],readingTime:{minutes:4.27,words:1282},headersStr:"Oracle Cloud 甲骨文云： ARM GCP 谷歌云 AWS 亚马逊云 AZURE 微软云 CIVO Linuxone Hax VPS 华为云 阿里云 Vultr Linode Ditital Ocean Euserv Kamatera Yandex Cloud Evolution Host",content:"# 免费VPS\n\n\n# Oracle Cloud 甲骨文云：\n\n永久免费两个 1h1g 的小鸡\n\n十分适合建站用\n\n地区极力推荐韩国春川、日本东京、大版、美国圣何塞、凤凰城，有的 ip 段解锁奈飞\n\n硬盘空间默认 45G，可以用作离线下载也不错\n\n网络 48~60M 每月 10T\n\nhttps://www.oracle.com/cloud/\n\n不要挂梯子，一张自己的双币信用卡过验证即可\n\n参考教程：正确永久白嫖 Oracle Cloud\n\n\n# ARM\n\n新上永久免费 arm 机\n\n配置最高可达 4H24G\n\n但是注意总共（amd 和 arm 加起来）的磁盘空间不能超过 200G，ipv4 数量不能超过 4 个\n\n所以一般最大上限是开两个 amd，两个 2h12g 的 arm，全部用默认分配的磁盘空间（或者 4 个 1h6g 的 arm 机）\n\n\n# GCP 谷歌云\n\n现在是免费薅 3 个月的试用，不升级付费不会额外扣款，300 美刀的免费试用\n\nG 口，推荐使用香港地区\n\nhttps://cloud.google.com/\n\n必须要一张实体信用卡过验证，所以十分难薅，不过只要是自己的即可轻松过\n\n\n# AWS 亚马逊云\n\n免费一年，虚拟卡可过，套路较多，特别容易产生扣费，建议多谷歌一下查看相关教程再薅\n\n每月 15G 流量，所以一般是月抛，自己用不合算\n\nhttps://aws.amazon.com/\n\n\n# AZURE 微软云\n\n免费一年，注意别开错了机子，不然也容易产生扣费，建议谷歌一下相关教程再薅\n\n免费 linux1 & windows1 动态 ip，b1s 机型，64G 硬盘存储是免费的\n\n自己过信用卡验证是 200 刀首月免费，每月 15G，超出即扣费\n\n学生 100 刀不用信用卡验证，需要过手机号验证，建议使用专业接码网站和学生邮箱账户，基本也是月抛\n\nhttps://azure.microsoft.com/en-us/\n\n\n# CIVO\n\n免费英国 VPS 一个月，原生 IP 解锁奈飞。需要信用卡验证\n\nhttps://www.civo.com\n\n\n# Linuxone\n\n免费 120 天，邮箱注册即可，不需要信用卡验证。注册理由写明是学生等研究用途\n\n容易触发风控，目前已知的封号原因：\n\n 1. 脚本触发了 v2ray、trojan 等关键词\n 2. 频繁删机重开\n 3. 大流量占用\n\nhttps://linuxone.cloud.marist.edu/#/login\n\n\n# Hax VPS\n\n纯 ipv6，面板可以很方便的添加 ipv4 配置 1H512M\n\n注册仅需一个 tg 账号，不用信用卡\n\n理论永久免费，需要每周手动续订一下\n\n参考 这里\n\n\n# 华为云\n\n需要信用卡\n\n免费试用 1500 小时\n\nhttps://activity.huaweicloud.com/intl/zh-cn/free_packages/\n\n\n# 阿里云\n\n需要信用卡\n\n免费试用 12 个月 1H1G 或者 3 个月 2H2G\n\nhttps://www.alibabacloud.com/zh/campaign/free-trial\n\n\n# Vultr\n\n需要信用卡\n\n注册送 100 美元，一个月时限\n\nhttps://www.vultr.com/?ref=8971645-8H\n\n\n# Linode\n\n注册免费送两个月有效的 100 刀，需要信用卡，配置 1H1G 等\n\nhttps://www.linode.com/lp/brand-free-credit-short/\n\n\n# Ditital Ocean\n\n需要信用卡或者 paypal\n\n注册送 100 美元\n\nhttps://www.digitalocean.com/?refcode=492076b14fb2&utm_campaign=Referral_Invite&utm_medium=Referral_Program&utm_source=CopyPaste\n\n有学生邮箱的建议开通 GitHub 学生包然后用 DO 的激活码来激活免费的 100 刀，需要过信用卡验证\n\nGitHub 学生包：https://education.github.com/pack\n\n这个包里还有包括域名在内等其他很多免费学生专属福利\n\n\n# Euserv\n\n德国纯 ipv6 小鸡，不用信用卡，审核时间较久\n\n1H1G 配置一般，邻居容易搞事\n\nhttps://euserv.com/\n\n参考教程 白嫖 Euserv VPS（理论永久）\n\nhe tunnel 添加 ipv4（/2021/04/15/hetunnel/）\n\nwarp 添加 ipv4/ipv6（/2021/04/15/warpipv6/）\n\n\n# Kamatera\n\nhttps://www.kamatera.com/express/compute/\n\n绑卡扣除 2 美刀验证，支持 +86 手机和 googlevoice 验证\n\n任选配置，免费一个月，300 刀，试用代码 1MONTH300\n\n最高配置可选 40 核专用 CPU，512G 内存，4TB 固态，5T 流量（香港 1T），1G 带宽\n\nCPU 类型 B 是通用型，性能一般。D 是专用型，性能最强。T 是突发型，性能较强。A 是可用型，性能最弱。\n\n可选美国（纽约、达拉斯、圣塔克拉拉）、加拿大（多伦多）、欧洲（阿姆斯特丹、法兰克福、伦敦）、以色列（皮塔赫。提克瓦、罗什。海因 1/2、特拉维夫、耶路撒冷）、中国（香港）等地区\n\n香港并非三网直连，速度很慢，美国地区是很干净的原生 ip\n\n\n# Yandex Cloud\n\nYandex 云新注册用户赠送价值 4000 卢布 (大概 350 人民币), 有效期 60 天的免费试用。其中 1000 卢布用于云主机，3000 用于其他云计算服务\n\nhttps://concole.cloud.yandex.ru/\n\n需要绑定银行卡，必须支持 3D 安全验证。可以使用 yandex.money 虚拟卡，国家建议选俄罗斯\n\nyandex.money: https://yoomoney.ru/\n\nyandex.money 哪国手机号都可接码，虚拟身份认证一下即可\n\n\n# Evolution Host\n\n需要有一个有流利的博客才可申请，然后博客首页放上他们的广告即可白嫖\n\nhttps://evolution-host.com/free-vps.php",normalizedContent:"# 免费vps\n\n\n# oracle cloud 甲骨文云：\n\n永久免费两个 1h1g 的小鸡\n\n十分适合建站用\n\n地区极力推荐韩国春川、日本东京、大版、美国圣何塞、凤凰城，有的 ip 段解锁奈飞\n\n硬盘空间默认 45g，可以用作离线下载也不错\n\n网络 48~60m 每月 10t\n\nhttps://www.oracle.com/cloud/\n\n不要挂梯子，一张自己的双币信用卡过验证即可\n\n参考教程：正确永久白嫖 oracle cloud\n\n\n# arm\n\n新上永久免费 arm 机\n\n配置最高可达 4h24g\n\n但是注意总共（amd 和 arm 加起来）的磁盘空间不能超过 200g，ipv4 数量不能超过 4 个\n\n所以一般最大上限是开两个 amd，两个 2h12g 的 arm，全部用默认分配的磁盘空间（或者 4 个 1h6g 的 arm 机）\n\n\n# gcp 谷歌云\n\n现在是免费薅 3 个月的试用，不升级付费不会额外扣款，300 美刀的免费试用\n\ng 口，推荐使用香港地区\n\nhttps://cloud.google.com/\n\n必须要一张实体信用卡过验证，所以十分难薅，不过只要是自己的即可轻松过\n\n\n# aws 亚马逊云\n\n免费一年，虚拟卡可过，套路较多，特别容易产生扣费，建议多谷歌一下查看相关教程再薅\n\n每月 15g 流量，所以一般是月抛，自己用不合算\n\nhttps://aws.amazon.com/\n\n\n# azure 微软云\n\n免费一年，注意别开错了机子，不然也容易产生扣费，建议谷歌一下相关教程再薅\n\n免费 linux1 & windows1 动态 ip，b1s 机型，64g 硬盘存储是免费的\n\n自己过信用卡验证是 200 刀首月免费，每月 15g，超出即扣费\n\n学生 100 刀不用信用卡验证，需要过手机号验证，建议使用专业接码网站和学生邮箱账户，基本也是月抛\n\nhttps://azure.microsoft.com/en-us/\n\n\n# civo\n\n免费英国 vps 一个月，原生 ip 解锁奈飞。需要信用卡验证\n\nhttps://www.civo.com\n\n\n# linuxone\n\n免费 120 天，邮箱注册即可，不需要信用卡验证。注册理由写明是学生等研究用途\n\n容易触发风控，目前已知的封号原因：\n\n 1. 脚本触发了 v2ray、trojan 等关键词\n 2. 频繁删机重开\n 3. 大流量占用\n\nhttps://linuxone.cloud.marist.edu/#/login\n\n\n# hax vps\n\n纯 ipv6，面板可以很方便的添加 ipv4 配置 1h512m\n\n注册仅需一个 tg 账号，不用信用卡\n\n理论永久免费，需要每周手动续订一下\n\n参考 这里\n\n\n# 华为云\n\n需要信用卡\n\n免费试用 1500 小时\n\nhttps://activity.huaweicloud.com/intl/zh-cn/free_packages/\n\n\n# 阿里云\n\n需要信用卡\n\n免费试用 12 个月 1h1g 或者 3 个月 2h2g\n\nhttps://www.alibabacloud.com/zh/campaign/free-trial\n\n\n# vultr\n\n需要信用卡\n\n注册送 100 美元，一个月时限\n\nhttps://www.vultr.com/?ref=8971645-8h\n\n\n# linode\n\n注册免费送两个月有效的 100 刀，需要信用卡，配置 1h1g 等\n\nhttps://www.linode.com/lp/brand-free-credit-short/\n\n\n# ditital ocean\n\n需要信用卡或者 paypal\n\n注册送 100 美元\n\nhttps://www.digitalocean.com/?refcode=492076b14fb2&utm_campaign=referral_invite&utm_medium=referral_program&utm_source=copypaste\n\n有学生邮箱的建议开通 github 学生包然后用 do 的激活码来激活免费的 100 刀，需要过信用卡验证\n\ngithub 学生包：https://education.github.com/pack\n\n这个包里还有包括域名在内等其他很多免费学生专属福利\n\n\n# euserv\n\n德国纯 ipv6 小鸡，不用信用卡，审核时间较久\n\n1h1g 配置一般，邻居容易搞事\n\nhttps://euserv.com/\n\n参考教程 白嫖 euserv vps（理论永久）\n\nhe tunnel 添加 ipv4（/2021/04/15/hetunnel/）\n\nwarp 添加 ipv4/ipv6（/2021/04/15/warpipv6/）\n\n\n# kamatera\n\nhttps://www.kamatera.com/express/compute/\n\n绑卡扣除 2 美刀验证，支持 +86 手机和 googlevoice 验证\n\n任选配置，免费一个月，300 刀，试用代码 1month300\n\n最高配置可选 40 核专用 cpu，512g 内存，4tb 固态，5t 流量（香港 1t），1g 带宽\n\ncpu 类型 b 是通用型，性能一般。d 是专用型，性能最强。t 是突发型，性能较强。a 是可用型，性能最弱。\n\n可选美国（纽约、达拉斯、圣塔克拉拉）、加拿大（多伦多）、欧洲（阿姆斯特丹、法兰克福、伦敦）、以色列（皮塔赫。提克瓦、罗什。海因 1/2、特拉维夫、耶路撒冷）、中国（香港）等地区\n\n香港并非三网直连，速度很慢，美国地区是很干净的原生 ip\n\n\n# yandex cloud\n\nyandex 云新注册用户赠送价值 4000 卢布 (大概 350 人民币), 有效期 60 天的免费试用。其中 1000 卢布用于云主机，3000 用于其他云计算服务\n\nhttps://concole.cloud.yandex.ru/\n\n需要绑定银行卡，必须支持 3d 安全验证。可以使用 yandex.money 虚拟卡，国家建议选俄罗斯\n\nyandex.money: https://yoomoney.ru/\n\nyandex.money 哪国手机号都可接码，虚拟身份认证一下即可\n\n\n# evolution host\n\n需要有一个有流利的博客才可申请，然后博客首页放上他们的广告即可白嫖\n\nhttps://evolution-host.com/free-vps.php",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"免费加速器",frontmatter:{author:"xlc520",title:"免费加速器",description:"免费加速器",time:"2022-02-03T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F%E5%99%A8.html",relativePath:"other/免费加速器.md",key:"v-5081093c",path:"/other/%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F%E5%99%A8/",readingTime:{minutes:.18,words:53},headersStr:null,content:"# 免费加速器\n\n蓝泡加速器：https://www.lpjsq.cn/ 快滚加速器：http://www.kuaigun.com/ nn加速器：https://www.nn.com/ ak加速器：https://www.akspeedy.com/ 平台和游戏加速器：https://www.dogfight360.com/blog/475/",normalizedContent:"# 免费加速器\n\n蓝泡加速器：https://www.lpjsq.cn/ 快滚加速器：http://www.kuaigun.com/ nn加速器：https://www.nn.com/ ak加速器：https://www.akspeedy.com/ 平台和游戏加速器：https://www.dogfight360.com/blog/475/",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"图库网站",frontmatter:{author:"xlc520",title:"图库网站",description:"图库网站",time:"2022-02-05T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%93.html",relativePath:"other/免费图库.md",key:"v-01b2b8f8",path:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%93/",headers:[{level:2,title:"Unsplash",slug:"unsplash",normalizedTitle:"unsplash",charIndex:39},{level:2,title:"Pexels",slug:"pexels",normalizedTitle:"pexels",charIndex:78},{level:2,title:"Gratisography",slug:"gratisography",normalizedTitle:"gratisography",charIndex:119},{level:2,title:"picjumbo",slug:"picjumbo",normalizedTitle:"picjumbo",charIndex:168},{level:2,title:"Pixabay",slug:"pixabay",normalizedTitle:"pixabay",charIndex:207},{level:2,title:"Canva",slug:"canva",normalizedTitle:"canva",charIndex:244},{level:2,title:"reshot",slug:"reshot",normalizedTitle:"reshot",charIndex:293},{level:2,title:"rawpixel",slug:"rawpixel",normalizedTitle:"rawpixel",charIndex:332},{level:2,title:"Morguefile",slug:"morguefile",normalizedTitle:"morguefile",charIndex:375},{level:2,title:"pxhere",slug:"pxhere",normalizedTitle:"pxhere",charIndex:418},{level:2,title:"ISO Republic",slug:"iso-republic",normalizedTitle:"iso republic",charIndex:453},{level:2,title:"泼辣有图",slug:"泼辣有图",normalizedTitle:"泼辣有图",charIndex:499},{level:2,title:"canva",slug:"canva-2",normalizedTitle:"canva",charIndex:266}],readingTime:{minutes:.59,words:177},headersStr:"Unsplash Pexels Gratisography picjumbo Pixabay Canva reshot rawpixel Morguefile pxhere ISO Republic 泼辣有图 canva",content:"# 图库网站\n\n下面都是图库网站，提供免费的商业级高清晰度图片下载。\n\n\n# Unsplash\n\n网址：https://unsplash.com/\n\n\n# Pexels\n\n网址：https://www.pexels.com/\n\n\n\n\n# Gratisography\n\n网址：https://gratisography.com/\n\n\n# picjumbo\n\n网址：https://picjumbo.com/\n\n\n# Pixabay\n\n网址：https://pixabay.com/\n\n\n# Canva\n\n网址：https://www.canva.com/photos/free/\n\n\n# reshot\n\n网址：https://www.reshot.com/\n\n\n# rawpixel\n\n网址：https://www.rawpixel.com/\n\n\n# Morguefile\n\n网址：https://morguefile.com/\n\n\n# pxhere\n\n网址：https://pxhere.com/\n\n\n# ISO Republic\n\n网址：https://isorepublic.com/\n\n\n# 泼辣有图\n\n网址：http://www.polayoutu.com\n\n\n# canva\n\nhttps://www.canva.com/photos/free/",normalizedContent:"# 图库网站\n\n下面都是图库网站，提供免费的商业级高清晰度图片下载。\n\n\n# unsplash\n\n网址：https://unsplash.com/\n\n\n# pexels\n\n网址：https://www.pexels.com/\n\n\n\n\n# gratisography\n\n网址：https://gratisography.com/\n\n\n# picjumbo\n\n网址：https://picjumbo.com/\n\n\n# pixabay\n\n网址：https://pixabay.com/\n\n\n# canva\n\n网址：https://www.canva.com/photos/free/\n\n\n# reshot\n\n网址：https://www.reshot.com/\n\n\n# rawpixel\n\n网址：https://www.rawpixel.com/\n\n\n# morguefile\n\n网址：https://morguefile.com/\n\n\n# pxhere\n\n网址：https://pxhere.com/\n\n\n# iso republic\n\n网址：https://isorepublic.com/\n\n\n# 泼辣有图\n\n网址：http://www.polayoutu.com\n\n\n# canva\n\nhttps://www.canva.com/photos/free/",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"免费图标",frontmatter:{author:"xlc520",title:"免费图标",description:"免费图标",time:"2022-02-04T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E6%A0%87.html",relativePath:"other/免费图标.md",key:"v-720fff6e",path:"/other/%E5%85%8D%E8%B4%B9%E5%9B%BE%E6%A0%87/",headers:[{level:2,title:"fontAwesome",slug:"fontawesome",normalizedTitle:"fontawesome",charIndex:11},{level:2,title:"CoreUI Icons",slug:"coreui-icons",normalizedTitle:"coreui icons",charIndex:206},{level:2,title:"My Icon",slug:"my-icon",normalizedTitle:"my icon",charIndex:281},{level:2,title:"Iconic",slug:"iconic",normalizedTitle:"iconic",charIndex:354},{level:2,title:"Tabler Icons",slug:"tabler-icons",normalizedTitle:"tabler icons",charIndex:402},{level:2,title:"IcoMoon App",slug:"icomoon-app",normalizedTitle:"icomoon app",charIndex:546}],readingTime:{minutes:1.47,words:441},headersStr:"fontAwesome CoreUI Icons My Icon Iconic Tabler Icons IcoMoon App",content:"# 免费图标\n\n\n# fontAwesome\n\nhttp://www.fontawesome.com.cn/\n\nFont Awesome 字体为您提供可缩放矢量图标,它可以被定制大小、颜色、阴影以及任何可以用CSS的样式。\n\n该字体是完全开源并且免费的。\n\n * 图标库 FontAwesome 发布最新版本，添加了病毒、医疗方面的许多新图标，用于制作标牌、报告、站点、应用程序，可以免费使用。\n\n\n\n\n\n\n# CoreUI Icons\n\nCoreUI Icons\n\n\n\n一套开源图标，有1500多个，支持 SVG、PNG、Webfonts 多种格式。\n\n\n# My Icon\n\n9、My Icon\n\n\n\n一套免费图标，用来更换 iOS 14 的图标。一共有几千个图标可供选择，还允许自定义和编辑。\n\n\n# Iconic\n\n2、Iconic\n\n一个开放式的图标仓库，可以分类查找图标，免费下载。\n\n\n# Tabler Icons\n\nhttps://tablericons.com/\n\n 1. Tabler Icons 免費圖示集，一共收錄 1298 個圖示圖案\n\n 2. 線上即時調整圖示大小、線條粗細和顏色，即時在網頁預覽效果\n\n 3. 點選圖示快速將 SVG 原始碼複製到剪貼簿\n\n\n# IcoMoon App\n\nhttps://icomoon.io/app/\n\n 1. 收錄超過 5000 個向量圖式，選擇需要的圖案製作為圖示字型\n\n 2. 將圖示下載為 SVG、PNG 或產生為圖示字型（Icon Font）\n\n 3. 使用者可上傳自己的圖示檔並在線上轉為圖示字型",normalizedContent:"# 免费图标\n\n\n# fontawesome\n\nhttp://www.fontawesome.com.cn/\n\nfont awesome 字体为您提供可缩放矢量图标,它可以被定制大小、颜色、阴影以及任何可以用css的样式。\n\n该字体是完全开源并且免费的。\n\n * 图标库 fontawesome 发布最新版本，添加了病毒、医疗方面的许多新图标，用于制作标牌、报告、站点、应用程序，可以免费使用。\n\n\n\n\n\n\n# coreui icons\n\ncoreui icons\n\n\n\n一套开源图标，有1500多个，支持 svg、png、webfonts 多种格式。\n\n\n# my icon\n\n9、my icon\n\n\n\n一套免费图标，用来更换 ios 14 的图标。一共有几千个图标可供选择，还允许自定义和编辑。\n\n\n# iconic\n\n2、iconic\n\n一个开放式的图标仓库，可以分类查找图标，免费下载。\n\n\n# tabler icons\n\nhttps://tablericons.com/\n\n 1. tabler icons 免費圖示集，一共收錄 1298 個圖示圖案\n\n 2. 線上即時調整圖示大小、線條粗細和顏色，即時在網頁預覽效果\n\n 3. 點選圖示快速將 svg 原始碼複製到剪貼簿\n\n\n# icomoon app\n\nhttps://icomoon.io/app/\n\n 1. 收錄超過 5000 個向量圖式，選擇需要的圖案製作為圖示字型\n\n 2. 將圖示下載為 svg、png 或產生為圖示字型（icon font）\n\n 3. 使用者可上傳自己的圖示檔並在線上轉為圖示字型",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"免费工具集锦",frontmatter:{author:"xlc520",title:"免费工具集锦",description:"免费工具集锦",time:"2022-02-02T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6.html",relativePath:"other/免费工具集锦.md",key:"v-e1f1cec4",path:"/other/%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/",headers:[{level:2,title:"ProcessOn",slug:"processon",normalizedTitle:"processon",charIndex:60},{level:2,title:"Diagram Maker",slug:"diagram-maker",normalizedTitle:"diagram maker",charIndex:108},{level:2,title:"Wireflow",slug:"wireflow",normalizedTitle:"wireflow",charIndex:163},{level:2,title:"yEd",slug:"yed",normalizedTitle:"yed",charIndex:201},{level:2,title:"Pencil",slug:"pencil",normalizedTitle:"pencil",charIndex:298},{level:2,title:"Dia",slug:"dia",normalizedTitle:"dia",charIndex:108},{level:2,title:"Inkscape",slug:"inkscape",normalizedTitle:"inkscape",charIndex:382},{level:2,title:"Draw.io",slug:"draw-io",normalizedTitle:"draw.io",charIndex:423},{level:2,title:"Whimsical",slug:"whimsical",normalizedTitle:"whimsical",charIndex:567},{level:2,title:"PlantUML",slug:"plantuml",normalizedTitle:"plantuml",charIndex:610},{level:2,title:"Mermaid",slug:"mermaid",normalizedTitle:"mermaid",charIndex:664},{level:2,title:"迅捷画图",slug:"迅捷画图",normalizedTitle:"迅捷画图",charIndex:732},{level:2,title:"百度脑图",slug:"百度脑图",normalizedTitle:"百度脑图",charIndex:776},{level:2,title:"Visual Paradigm Online",slug:"visual-paradigm-online",normalizedTitle:"visual paradigm online",charIndex:816},{level:2,title:"Creately",slug:"creately",normalizedTitle:"creately",charIndex:885},{level:2,title:"Coggle",slug:"coggle",normalizedTitle:"coggle",charIndex:927},{level:2,title:"Excalidraw",slug:"excalidraw",normalizedTitle:"excalidraw",charIndex:963},{level:2,title:"Zen Flowchart",slug:"zen-flowchart",normalizedTitle:"zen flowchart",charIndex:1014},{level:2,title:"Profile Pic Maker",slug:"profile-pic-maker",normalizedTitle:"profile pic maker",charIndex:1062},{level:2,title:"可视化指标",slug:"可视化指标",normalizedTitle:"可视化指标",charIndex:1140},{level:2,title:"图表制作-Meta-Chart",slug:"图表制作-meta-chart",normalizedTitle:"图表制作-meta-chart",charIndex:1210},{level:2,title:"canva",slug:"canva",normalizedTitle:"canva",charIndex:1312},{level:2,title:"Calligrapher.ai",slug:"calligrapher-ai",normalizedTitle:"calligrapher.ai",charIndex:1368},{level:2,title:"DaVinci Resolve",slug:"davinci-resolve",normalizedTitle:"davinci resolve",charIndex:1480},{level:2,title:"Shotcut",slug:"shotcut",normalizedTitle:"shotcut",charIndex:1564},{level:2,title:"OpenShot",slug:"openshot",normalizedTitle:"openshot",charIndex:1603},{level:2,title:"Kdenlive",slug:"kdenlive",normalizedTitle:"kdenlive",charIndex:1648},{level:2,title:"Mastershot",slug:"mastershot",normalizedTitle:"mastershot",charIndex:1702},{level:2,title:"monaco-editor",slug:"monaco-editor",normalizedTitle:"monaco-editor",charIndex:1803},{level:2,title:"code-server",slug:"code-server",normalizedTitle:"code-server",charIndex:1906},{level:2,title:"StackBlitz",slug:"stackblitz",normalizedTitle:"stackblitz",charIndex:2006},{level:2,title:"Theia",slug:"theia",normalizedTitle:"theia",charIndex:2066},{level:2,title:"视频转GIF",slug:"视频转gif",normalizedTitle:"视频转gif",charIndex:2135},{level:2,title:"avatarify",slug:"avatarify",normalizedTitle:"avatarify",charIndex:2187},{level:2,title:"watermark",slug:"watermark",normalizedTitle:"watermark",charIndex:2248},{level:2,title:"在线屏幕录制",slug:"在线屏幕录制",normalizedTitle:"在线屏幕录制",charIndex:2319},{level:2,title:"TimeCat",slug:"timecat",normalizedTitle:"timecat",charIndex:2356},{level:2,title:"Screen Record",slug:"screen-record",normalizedTitle:"screen record",charIndex:2428},{level:2,title:"md",slug:"md",normalizedTitle:"md",charIndex:2496},{level:2,title:"md2pdf",slug:"md2pdf",normalizedTitle:"md2pdf",charIndex:2573},{level:2,title:"mobi-epub",slug:"mobi-epub",normalizedTitle:"mobi-epub",charIndex:2633},{level:2,title:"粘贴转 md",slug:"粘贴转-md",normalizedTitle:"粘贴转 md",charIndex:2692},{level:2,title:"md 转思维导图",slug:"md-转思维导图",normalizedTitle:"md 转思维导图",charIndex:2757},{level:2,title:"文本到流程图转换",slug:"文本到流程图转换",normalizedTitle:"文本到流程图转换",charIndex:2812},{level:2,title:"md 转静态博客",slug:"md-转静态博客",normalizedTitle:"md 转静态博客",charIndex:2897},{level:2,title:"伪码转流程图",slug:"伪码转流程图",normalizedTitle:"伪码转流程图",charIndex:2992},{level:2,title:"Vugu",slug:"vugu",normalizedTitle:"vugu",charIndex:3053},{level:2,title:"Monica",slug:"monica",normalizedTitle:"monica",charIndex:3158},{level:2,title:"DeepL",slug:"deepl",normalizedTitle:"deepl",charIndex:3232},{level:2,title:"carbon",slug:"carbon",normalizedTitle:"carbon",charIndex:3293},{level:2,title:"Text2image",slug:"text2image",normalizedTitle:"text2image",charIndex:3344},{level:2,title:"TabNine",slug:"tabnine",normalizedTitle:"tabnine",charIndex:3430},{level:2,title:"哈利路亚英文输入法",slug:"哈利路亚英文输入法",normalizedTitle:"哈利路亚英文输入法",charIndex:3490},{level:2,title:"MarginNote 3",slug:"marginnote-3",normalizedTitle:"marginnote 3",charIndex:3562},{level:2,title:"web-clipper",slug:"web-clipper",normalizedTitle:"web-clipper",charIndex:3637},{level:2,title:"小悦记",slug:"小悦记",normalizedTitle:"小悦记",charIndex:3761},{level:2,title:"Fika-专注阅读工具",slug:"fika-专注阅读工具",normalizedTitle:"fika-专注阅读工具",charIndex:4057},{level:2,title:"抠图-removebg",slug:"抠图-removebg",normalizedTitle:"抠图-removebg",charIndex:4149},{level:2,title:"背景去除-FocoClipping",slug:"背景去除-fococlipping",normalizedTitle:"背景去除-fococlipping",charIndex:4240},{level:2,title:"压缩 SVG",slug:"压缩-svg",normalizedTitle:"压缩 svg",charIndex:4443},{level:2,title:"doka",slug:"doka",normalizedTitle:"doka",charIndex:4487},{level:2,title:"squoosh",slug:"squoosh",normalizedTitle:"squoosh",charIndex:4537},{level:2,title:"I love IMG",slug:"i-love-img",normalizedTitle:"i love img",charIndex:4572},{level:2,title:"UI 组件库",slug:"ui-组件库",normalizedTitle:"ui 组件库",charIndex:4654},{level:2,title:"photoflare",slug:"photoflare",normalizedTitle:"photoflare",charIndex:4721},{level:2,title:"Wewatermark",slug:"wewatermark",normalizedTitle:"wewatermark",charIndex:4774},{level:2,title:"Pixelixe Photo Editor",slug:"pixelixe-photo-editor",normalizedTitle:"pixelixe photo editor",charIndex:4831},{level:2,title:"ArtLine",slug:"artline",normalizedTitle:"artline",charIndex:4916},{level:2,title:"8、DALL-E",slug:"_8、dall-e",normalizedTitle:"8、dall-e",charIndex:4987},{level:2,title:"录屏转 GIF",slug:"录屏转-gif",normalizedTitle:"录屏转 gif",charIndex:5121},{level:3,title:"giphy",slug:"giphy",normalizedTitle:"giphy",charIndex:5133},{level:3,title:"ScreenToGif",slug:"screentogif",normalizedTitle:"screentogif",charIndex:5151},{level:3,title:"quickTime + Pic Gif",slug:"quicktime-pic-gif",normalizedTitle:"quicktime + pic gif",charIndex:5991},{level:2,title:"PicGo",slug:"picgo",normalizedTitle:"picgo",charIndex:6205},{level:2,title:"公众号排版 md",slug:"公众号排版-md",normalizedTitle:"公众号排版 md",charIndex:6267},{level:2,title:"ScreenDump",slug:"screendump",normalizedTitle:"screendump",charIndex:6353},{level:2,title:"Motrix",slug:"motrix",normalizedTitle:"motrix",charIndex:6430},{level:2,title:"软件设计工具合集",slug:"软件设计工具合集",normalizedTitle:"软件设计工具合集",charIndex:6509},{level:2,title:"DigitalOcean 应用程序平台",slug:"digitalocean-应用程序平台",normalizedTitle:"digitalocean 应用程序平台",charIndex:6578},{level:2,title:"",slug:"-2",normalizedTitle:"",charIndex:0},{level:2,title:"效率工具",slug:"效率工具",normalizedTitle:"效率工具",charIndex:6706},{level:2,title:"简历",slug:"简历",normalizedTitle:"简历",charIndex:7777},{level:2,title:"Markdown 转简历",slug:"markdown-转简历",normalizedTitle:"markdown 转简历",charIndex:7849},{level:2,title:"Markdown 制作 PPT-Slidev",slug:"markdown-制作-ppt-slidev",normalizedTitle:"markdown 制作 ppt-slidev",charIndex:7905},{level:2,title:"Send",slug:"send",normalizedTitle:"send",charIndex:8045},{level:2,title:"免费可商用字体",slug:"免费可商用字体",normalizedTitle:"免费可商用字体",charIndex:8180},{level:2,title:"阿里巴巴普惠体",slug:"阿里巴巴普惠体",normalizedTitle:"阿里巴巴普惠体",charIndex:8216}],readingTime:{minutes:19.01,words:5703},headersStr:"ProcessOn Diagram Maker Wireflow yEd Pencil Dia Inkscape Draw.io Whimsical PlantUML Mermaid 迅捷画图 百度脑图 Visual Paradigm Online Creately Coggle Excalidraw Zen Flowchart Profile Pic Maker 可视化指标 图表制作-Meta-Chart canva Calligrapher.ai DaVinci Resolve Shotcut OpenShot Kdenlive Mastershot monaco-editor code-server StackBlitz Theia 视频转GIF avatarify watermark 在线屏幕录制 TimeCat Screen Record md md2pdf mobi-epub 粘贴转 md md 转思维导图 文本到流程图转换 md 转静态博客 伪码转流程图 Vugu Monica DeepL carbon Text2image TabNine 哈利路亚英文输入法 MarginNote 3 web-clipper 小悦记 Fika-专注阅读工具 抠图-removebg 背景去除-FocoClipping 压缩 SVG doka squoosh I love IMG UI 组件库 photoflare Wewatermark Pixelixe Photo Editor ArtLine 8、DALL-E 录屏转 GIF giphy ScreenToGif quickTime + Pic Gif PicGo 公众号排版 md ScreenDump Motrix 软件设计工具合集 DigitalOcean 应用程序平台  效率工具 简历 Markdown 转简历 Markdown 制作 PPT-Slidev Send 免费可商用字体 阿里巴巴普惠体",content:"# 免费工具集锦\n\n工作生活常用的工具汇总。\n\n\n# 免费作图工具\n\n本页收集一些免费的工具，创建漂亮的图表。\n\n\n# ProcessOn\n\n在线版：https://www.processon.com/\n\n\n\n\n# Diagram Maker\n\n3、Diagram Maker\n\n\n\n亚马逊推出的开源流程图制作工具。\n\n\n# Wireflow\n\n\n\n一个开源的在线工具，用来画流程图和线框图。\n\n\n# yEd\n\n桌面版：https://www.yworks.com/products/yed\n\n在线版：https://www.yworks.com/products/yed-live\n\n\n\n\n# Pencil\n\n桌面版：https://pencil.evolus.vn/\n\n\n\n\n# Dia\n\n桌面版：http://dia-installer.de/\n\n\n\n\n# Inkscape\n\n网址：https://inkscape.org/\n\n\n\n\n# Draw.io\n\n互联网从业者绘图工具，可自动上传至 GitHub，导出的图片支持导入后二次编辑。\n\n在线版：https://www.draw.io/\n\n桌面版：https://about.draw.io/integrations/#integrations_offline\n\n\n\n\n# Whimsical\n\n在线版：https://whimsical.co/\n\n\n\n\n# PlantUML\n\n在线版：http://www.plantuml.com/plantuml/\n\n\n\n\n# Mermaid\n\n\n\n在线版：https://mermaidjs.github.io/mermaid-live-editor/\n\n\n# 迅捷画图\n\n在线版：https://www.liuchengtu.com/\n\n\n\n\n# 百度脑图\n\n在线版：http://naotu.baidu.com/\n\n\n\n\n# Visual Paradigm Online\n\n在线版：https://online.visual-paradigm.com\n\n\n\n\n# Creately\n\n在线版：https://creately.com/\n\n\n\n\n# Coggle\n\n在线版：https://coggle.it\n\n\n\n\n# Excalidraw\n\n2、Excalidraw\n\n\n\n一个非常简单易用的白板绘图开源工具。\n\n\n# Zen Flowchart\n\nZen Flowchart\n\n简单好用的在线流程图工具。\n\n\n# Profile Pic Maker\n\n9、Profile Pic Maker\n\n\n\n一个在线工具，上传人像照片，可以自动提取头像，生成大头照图片。\n\n\n# 可视化指标\n\n2、SCImago Graphica\n\n\n\n一个桌面软件，可以选择各种指标，定制数据可视化图形，完全不用写一行代码。\n\n\n# 图表制作-Meta-Chart\n\nhttps://www.meta-chart.com/\n\n教程：https://free.com.tw/meta-chart/\n\n\n# 免费 logo 设计工具\n\n\n# canva\n\n海量模板，辅助设计。\n\nhttps://www.canva.cn/\n\n\n# 文字处理工具\n\n\n# Calligrapher.ai\n\n9、Calligrapher.ai\n\n\n\n一个在线工具，可以将英文输入变成手写体，并具有动画效果，提供 SVG 格式下载。上图是输入 Google 的效果。\n\n\n# 免费视频编辑器\n\n\n# DaVinci Resolve\n\n\n\n网址：https://www.blackmagicdesign.com/products/davinciresolve/\n\n\n# Shotcut\n\n\n\n网址：https://shotcut.org/\n\n\n# OpenShot\n\n\n\n网址：https://www.openshot.org/\n\n\n# Kdenlive\n\n\n\n网址：https://kdenlive.org\n\n\n# 免费网页视频编辑器\n\n\n# Mastershot\n\nMastershot\n\n\n\n免费的网页视频编辑器，用的是 FFmpeg 的 webassembly 版本，可以在网页上进行简单的视频编辑。\n\n\n# 免费的在线代码编辑器\n\n\n# monaco-editor\n\n网址：https://github.com/Microsoft/monaco-editor\n\n\n\n微软官方推出的 VS Code 的代码编辑器模块，可以在浏览器运行。\n\n\n# code-server\n\n网址：https://github.com/codercom/code-server\n\n\n\n运行在服务器上的 VS Code，支持大部分插件，可以在浏览器里面使用。\n\n\n# StackBlitz\n\n网址：https://stackblitz.com\n\n\n\nWeb 应用的在线 IDE。\n\n\n# Theia\n\n网址：https://www.theia-ide.org/\n\n\n\n基于浏览器的 IDE。\n\n\n# 免费视频处理工具\n\n\n# 视频转GIF\n\nhttps://www.soogif.com/video/?utmId=363\n\n\n# avatarify\n\navatarify\n\n一个开源软件，只需要提供一张头像照片，就可以生成人物开口讲话的视频。\n\n\n# watermark\n\nWatermark Video\n\n\n\n一个开源的在线工具，可以为小视频加上水印图片。\n\n\n# 免费屏幕录制工具\n\n\n# 在线屏幕录制\n\n在线屏幕录制\n\n一个浏览器里面的在线录屏小工具。\n\n\n# TimeCat\n\nTimeCat\n\n一个网页录屏器，可以将网页操作录制下来，像视频那样播放，但是生成的录像文件的体积远远小于传统视频。\n\n\n# Screen Record\n\nScreen Record\n\n一个浏览器里面的录屏工具，非常简单好用。\n\n\n# 免费格式转换工具\n\n\n# md\n\n6、md\n\n\n\n一款开源的微信公众号 Markdown 编辑器，基于 wechat-format 进行了二次开发。（@acbin 投稿）\n\n\n# md2pdf\n\nmd2pdf\n\n通过浏览器，将 Markdown 文本保存成 PDF 文件，并且可以定制页面。\n\n\n# mobi-epub\n\n电子书格式转换\n\nhttps://convertio.co/zh/mobi-epub/\n\n\n# 粘贴转 md\n\nPaste to Markdown\n\n粘贴到该窗口的任何文本内容，都会自动转为 Markdown 格式。\n\n\n# md 转思维导图\n\nmarkmap-lib\n\n\n\n一个将 Markdown 转为思维导图的开源工具。\n\n\n# 文本到流程图转换\n\n文本到图形的在线工具\n\n这个页面给出一个在线工具的清单，可以将文本（图形的描述）渲染成图形，比如 PlantUML 和 ASCIIFlow。\n\n\n# md 转静态博客\n\ngridea\n\n\n\n一款跨平台桌面软件，可以在本地将 Markdown 文档编译成静态博客，然后发布到 GitHub Pages 或 Coding Pages。\n\n\n# 伪码转流程图\n\ncode2flow\n\n\n\n一个符合直觉的，从伪码生成流程图的工具。\n\n\n# 免费编程语言转换工具\n\n\n# Vugu\n\nVugu\n\n一个使用 Go 语言写 HTML 前端页面的工具。完全不用 JavaScript，就能写出前端页面。未来的全栈将不再限于 JS，后端语言都可以写前端。\n\n\n# 免费网站制作工具\n\n\n# Monica\n\nmonica\n\n\n\n一个个人的 CRM（客户关系管理）系统，可以自己架设服务，管理你的所有人际关系。\n\n\n# 免费翻译工具\n\n\n# DeepL\n\nDeepL\n\n\n\n一家创业公司推出的机器翻译引擎，据称比谷歌翻译得更好。\n\n\n# 免费代码贴图工具\n\n\n# carbon\n\nhttps://carbon.now.sh/\n\n可以导出精美的代码图片。\n\n\n\n\n# Text2image\n\nText2image\n\n\n\n一个将文字或代码转换成图片的网页工具，可定制项多，主题、水印、阴影特效等都能自定义。\n\n\n# 免费代码补全工具\n\n\n# TabNine\n\nTabNine\n\n\n\n基于深度学习的代码补全工具，号称支持所有语言。\n\n\n# 免费输入法工具\n\n\n# 哈利路亚英文输入法\n\n哈利路亚英文输入法\n\n这是 Mac 平台上一款智能英语输入法，可以提示单词拼写和中文解释。\n\n\n# 免费阅读工具\n\n\n# MarginNote 3\n\npdf 阅读工具：MarginNote 3\n\n功能参考：https://sspai.com/post/47317\n\n\n# web-clipper\n\nweb-clipper\n\nChrome 浏览器插件，支持一键将网页内容存储到多个平台，包括 Github、Notion、OneNote、语雀、有道等。\n\n入口：https://clipper.website/\n\n\n\n\n# 小悦记\n\n小悦记\n\n\n\nChrome 浏览器插件，可以一键导出微信读书笔记。（@zxhycxq 投稿）\n\n#\n\n# 下载及安装\n\n请科学登录Chrome 应用商店，搜索“小悦记”即可，不会的可以问身边的小伙伴哈（不要用微信内置的浏览器打开！）\n\n\n\nhttps://chrome.google.com/webstore/detail/%E5%B0%8F%E6%82%A6%E8%AE%B0/dcfmienoiahabnladhacocfbhngagpok\n\n附：谷歌浏览器下载地址：\n\n最新稳定版：https://www.google.cn/chrome/?standalone=1\n\n\n# Fika-专注阅读工具\n\nFika\n\n\n\nChrome 浏览器插件，可以将网页转成可以专心阅读的样式，内置四种主题。（@yueyericardo 投稿）\n\n\n# 图像处理工具\n\n\n# 抠图-removebg\n\n免费抠图工具：https://www.remove.bg/zh/\n\n[\n\n](https://free.com.tw/fococlipping/)\n\n\n# 背景去除-FocoClipping\n\nhttps://www.fococlipping.com/\n\n使用方式：https://free.com.tw/fococlipping/\n\n值得一試的三個理由：\n\n 1. 100% 自動化線上去背工具，上傳圖片自動移除背景保留主體\n\n 2. 可切換手動編輯模式，亦可選擇圖片類型獲得更精確的效果\n\n 3. 支援高解析度畫質（最大 3000×3000 像素）\n\n\n# 压缩 SVG\n\n9、SVGOMG\n\n一个在线工具，用来压缩 SVG 图像文件。\n\n\n# doka\n\ndoka\n\n\n\n一个使用 WebGL 技术搭建的在线图像编辑器，使用非常流畅。\n\n\n# squoosh\n\nsquoosh\n\n谷歌开源的图像压缩服务。\n\n\n# I love IMG\n\nI love IMG\n\n该网站提供各种在线的图像编辑工具，比如图像缩放、压缩、裁剪、水印等。（@ifrontend-xyz 投稿）\n\n\n# UI 组件库\n\nColorUI\n\n专用于微信小程序的 UI 组件库，纯 CSS 组件。（@ifrontend-xyz 投稿）\n\n\n# photoflare\n\n2、photoflare\n\n\n\n跨平台的图像编辑桌面软件，相对小巧简单。\n\n\n# Wewatermark\n\n6、Wewatermark\n\n\n\n一个在线工具，可以为图片加上各种各样的水印。\n\n\n# Pixelixe Photo Editor\n\nPixelixe Photo Editor\n\n\n\n一个 Chrome 浏览器插件，在浏览器里面打开一个图片编辑器。\n\n\n# ArtLine\n\n3、ArtLine\n\n\n\n一个深度学习项目，将照片转为线条素描画，这里有可以运行的 Demo（Flask 应用）。\n\n\n# 8、DALL-E\n\nDALL-E\n\nOpenAI 公司又推出了一个神奇的软件 DALL-E，可以根据文字描述自动生成图片。下面的图片都是软件生成的。\n\n立方体的豪猪\n\n\n\n写着 OpenAI 的店面\n\n\n\n鳄梨状的椅子\n\n\n\n阁楼卧室有一个鱼缸，旁边是床\n\n\n\n\n# 录屏转 GIF\n\n\n# giphy\n\nmac 最佳\n\n\n# ScreenToGif\n\n【只支持Windows】\n\n经常会遇到一些场景，需要你向别人展示一些操作或是效果——例如告诉别人某某软件的配置步骤啊、刚某个动画效果怎么样啊、某某电影里面的一个镜头多么经典啊、打得大快人心的NBA绝杀瞬间是怎么回事啊，等等…. 这些场合，如果单纯截成图片有时难以说清楚，但录成视频又不方便在社交软件上传播，这时就需要一个能够生成动态图的软件：\n\n\n\n\n\n软件简介\n\nScreenToGif 也是一款非常轻便的、完全免费的、没广告的，免安装的【屏幕录制软件】，它可以用来快速录制屏幕上的指定区域，并将其直接保存为GIF动态图。录制后还可以对gif进行编辑，例如删除不合适的某一帧、添加滤镜效果等。软件大小只有两三M（底部链接压缩包大小为395kb），界面也非常简洁，启动速度快，操作简单易上手。\n\n\n\nScreenToGif这个项目以Ms-PL协议开源，由 Nicke Manarin 于2013年发起，其源代码已发布在Github上，具体细节可以到其官方主页获悉\n\n软件使用\n\n双击运行后：\n\n\n\n最左边那个Recorder点进去就是录制屏幕了，第二个Webcam是捕获电脑摄像头画面，第三个Board是录制画板，最后一个编辑素材用。\n\n可以随意拖动边框调整屏幕捕获窗口的大小（下面小格里的“15”是每秒帧速，可调）：\n\n\n\n录制完成后在编辑界面下方会显示具体的每一帧（点击菜单项View可以播放方才录制的动图），有哪一帧不想要的可以直接删除，非常方便：\n\n\n\n该软件还有许多其他的编辑功能，例如添加文字，旋转、裁剪素材，涂鸦等等。另外，在设置里面还有许多选项可以选择，例如快捷键、生成gif质量、语言等等。\n\n总结\n\nScreenToGif是一款轻便实用的【屏幕录制工具】，通过它可以轻松地把一些桌面操作等效果录制成gif图片。无论你是要截下一个精彩的NBA绝杀镜头，还是要录制一个电脑操作教程，亦或是一个演示，它都能帮你轻松高效地完成任务。\n\n\n# quickTime + Pic Gif\n\n如果是苹果电脑+苹果手机，将手机用连接线连接到电脑，然后打开QuickTime player，点击文件 新建影片录制 your iPhone 然后就可以录制屏幕的各种东西啦（包括你在手机上看的电影呀，或者你滑动浏览一篇文章，甚至是app的开启页 任何你在手机上操作的都可以）\n\n然后存下这段视频，再在电脑上打开Pic GIF 就可以直接制作GIF啦～～～\n\n\n# 图片上传工具\n\n\n# PicGo\n\nPicGo\n\n一个桌面工具，直接将图片上传到选定的图床，返回上传后的图片 URL。\n\n\n# 排版工具\n\n\n# 公众号排版 md\n\nmarkdown-nice\n\nMarkdown 文档进行微信公号排版的工具，支持自定义样式。（@zhning12 投稿）\n\n\n# 在线截屏工具\n\n\n# ScreenDump\n\nScreenDump\n\n一个在线截屏工具。用户只要输入网址，就会显示各种设备的网页截屏，相当方便。\n\n\n# 资源下载工具\n\n\n# Motrix\n\nMotrix\n\n一款桌面端下载工具，支持下载 HTTP、FTP、BT、磁力链、百度网盘等资源。（@ifrontend-xyz 投稿）\n\n\n# 软件设计工具合集\n\nhttps://docs.qq.com/sheet/DSm9yRktvcnlEdmJU?tab=uvzb4w\n\n\n# DigitalOcean 应用程序平台\n\nDigitalOcean 应用程序平台\n\n\n\nDigitalOcean 发布应用程序平台，跟 GitHub 深度融合，可以直接把 GitHub 项目在上面部署和运行，很适合那些需要后端的网络应用。\n\n\n#\n\n\n# 效率工具\n\n9、HIPA（黑帕云）\n\n\n\n国产的在线表格数据库，类似国外的 Airtable，提供了强大电子表格功能，比如多表关联、一对多的自动聚合运算、看板视图、多人实时协作、行级数据权限等等。（@mechiland 投稿）\n\n常用20个效率工具合集。\n\n我们的时间有限，如何充分使用它，一个核心就是提升效率。今天系统整理一下常用的工具：\n\n 1.  印象笔记（全平台）：个人知识库，好的文章、常用信息都收纳于此。\n\n 2.  扫描宝（iOS）：扫描重要文件，以备不时之需。\n\n 3.  iSlide（Windows/Mac OS）：PPT 制作神器，里面很多高质量模板、图标、版式。\n\n 4.  彩云小译（iOS/安卓）：翻译为中英文对照结果，适合于外文阅读。\n\n 5.  iMark（iOS）·我的标记：标注图片，功能齐全，而且免费。\n\n 6.  讯飞听见（iOS/安卓/网页）：录音转文字，会议记录必备。\n\n 7.  幕布（全平台）：大纲笔记，而且可以一键转为思维导图。\n\n 8.  潮汐（iOS/安卓/小程序）：白噪音，可用于番茄工作法辅助。\n\n 9.  坚果云（全平台）：网盘工具，同步速度快，安全性高。\n\n 10. 白描（iOS/安卓/小程序/网页）：图片文字提取，识别率高。\n\n 11. Calcbot（iOS）：一款计算器，可以记录计算过程，方便检查是否有错误。\n\n 12. NOMO（iOS/安卓）：让照片充满文艺气息。\n\n 13. Paper（iOS）：简单漂亮的手绘软件。\n\n 14. GoodNotes（iOS）：可以说是最好的手写笔记软件，配合 Apple Pencil ，让 iPad 变成生产力工具。\n\n 15. 微信读书（iOS/安卓/网页）：不只是读书工具，还可以用来搜索一些概念，看到比较专业的解释和案例。\n\n 16. Unsplash（iOS/安卓/网页）：找到高清大图，既可以设置为手机壁纸，也可以作为 PPT 配图。\n\n 17. 快捷指令（iOS）：设置一系列自动化指令，比如快速把复制的文字保存到笔记软件。\n\n 18. 票小秘（iOS/安卓）：拍照就能完成发票识别与录入，1秒钟搞定。\n\n 19. waifu2X（iOS/安卓/网页）：无损放大图片。\n\n 20. Post-it（iOS/安卓）：3M官方出品的便签应用，可以手写，也可以拍便签，然后归类，适合于想法梳理。\n\n希望这些效率应用可以帮助到你。\n\n\n# 网络书签管理\n\n7、Raindrop\n\n\n\n一个跨平台的网络书签管理器。\n\n\n# 简历\n\n1、best-resume-ever\n\n\n\n一个基于 Web 的简历模板，可以生成网页简历，然后用浏览器打印成 PDF 文件。\n\n\n# Markdown 转简历\n\nhttps://resume.mdnice.com/\n\n\n# 视觉表达工具\n\n\n# Markdown 制作 PPT-Slidev\n\n有很多功能丰富的、通用的、所见即所得的幻灯片制作工具\n\n官网：https://sli.dev/\n\nGitHub：Slidev\n\n\n\n这个工具使用 Markdown 格式编写 PPT 幻灯片，功能较多。\n\n\n# 文件分享工具\n\n\n# Send\n\n在线：https://send.vis.ee/\n\nGitHub：Send\n\nMozilla 基金会曾经推出了一个文件分享服务，后来停止开发了。社区就接过来，做成完全的开源版，现在可以自己搭建，并且有 Web、命令行和安卓等各种客户端。\n\n\n# 字体\n\n\n# 免费可商用字体\n\nhttps://ziyouziti.com/\n\n\n# 阿里巴巴普惠体\n\nhttps://alibabafont.taobao.com/",normalizedContent:"# 免费工具集锦\n\n工作生活常用的工具汇总。\n\n\n# 免费作图工具\n\n本页收集一些免费的工具，创建漂亮的图表。\n\n\n# processon\n\n在线版：https://www.processon.com/\n\n\n\n\n# diagram maker\n\n3、diagram maker\n\n\n\n亚马逊推出的开源流程图制作工具。\n\n\n# wireflow\n\n\n\n一个开源的在线工具，用来画流程图和线框图。\n\n\n# yed\n\n桌面版：https://www.yworks.com/products/yed\n\n在线版：https://www.yworks.com/products/yed-live\n\n\n\n\n# pencil\n\n桌面版：https://pencil.evolus.vn/\n\n\n\n\n# dia\n\n桌面版：http://dia-installer.de/\n\n\n\n\n# inkscape\n\n网址：https://inkscape.org/\n\n\n\n\n# draw.io\n\n互联网从业者绘图工具，可自动上传至 github，导出的图片支持导入后二次编辑。\n\n在线版：https://www.draw.io/\n\n桌面版：https://about.draw.io/integrations/#integrations_offline\n\n\n\n\n# whimsical\n\n在线版：https://whimsical.co/\n\n\n\n\n# plantuml\n\n在线版：http://www.plantuml.com/plantuml/\n\n\n\n\n# mermaid\n\n\n\n在线版：https://mermaidjs.github.io/mermaid-live-editor/\n\n\n# 迅捷画图\n\n在线版：https://www.liuchengtu.com/\n\n\n\n\n# 百度脑图\n\n在线版：http://naotu.baidu.com/\n\n\n\n\n# visual paradigm online\n\n在线版：https://online.visual-paradigm.com\n\n\n\n\n# creately\n\n在线版：https://creately.com/\n\n\n\n\n# coggle\n\n在线版：https://coggle.it\n\n\n\n\n# excalidraw\n\n2、excalidraw\n\n\n\n一个非常简单易用的白板绘图开源工具。\n\n\n# zen flowchart\n\nzen flowchart\n\n简单好用的在线流程图工具。\n\n\n# profile pic maker\n\n9、profile pic maker\n\n\n\n一个在线工具，上传人像照片，可以自动提取头像，生成大头照图片。\n\n\n# 可视化指标\n\n2、scimago graphica\n\n\n\n一个桌面软件，可以选择各种指标，定制数据可视化图形，完全不用写一行代码。\n\n\n# 图表制作-meta-chart\n\nhttps://www.meta-chart.com/\n\n教程：https://free.com.tw/meta-chart/\n\n\n# 免费 logo 设计工具\n\n\n# canva\n\n海量模板，辅助设计。\n\nhttps://www.canva.cn/\n\n\n# 文字处理工具\n\n\n# calligrapher.ai\n\n9、calligrapher.ai\n\n\n\n一个在线工具，可以将英文输入变成手写体，并具有动画效果，提供 svg 格式下载。上图是输入 google 的效果。\n\n\n# 免费视频编辑器\n\n\n# davinci resolve\n\n\n\n网址：https://www.blackmagicdesign.com/products/davinciresolve/\n\n\n# shotcut\n\n\n\n网址：https://shotcut.org/\n\n\n# openshot\n\n\n\n网址：https://www.openshot.org/\n\n\n# kdenlive\n\n\n\n网址：https://kdenlive.org\n\n\n# 免费网页视频编辑器\n\n\n# mastershot\n\nmastershot\n\n\n\n免费的网页视频编辑器，用的是 ffmpeg 的 webassembly 版本，可以在网页上进行简单的视频编辑。\n\n\n# 免费的在线代码编辑器\n\n\n# monaco-editor\n\n网址：https://github.com/microsoft/monaco-editor\n\n\n\n微软官方推出的 vs code 的代码编辑器模块，可以在浏览器运行。\n\n\n# code-server\n\n网址：https://github.com/codercom/code-server\n\n\n\n运行在服务器上的 vs code，支持大部分插件，可以在浏览器里面使用。\n\n\n# stackblitz\n\n网址：https://stackblitz.com\n\n\n\nweb 应用的在线 ide。\n\n\n# theia\n\n网址：https://www.theia-ide.org/\n\n\n\n基于浏览器的 ide。\n\n\n# 免费视频处理工具\n\n\n# 视频转gif\n\nhttps://www.soogif.com/video/?utmid=363\n\n\n# avatarify\n\navatarify\n\n一个开源软件，只需要提供一张头像照片，就可以生成人物开口讲话的视频。\n\n\n# watermark\n\nwatermark video\n\n\n\n一个开源的在线工具，可以为小视频加上水印图片。\n\n\n# 免费屏幕录制工具\n\n\n# 在线屏幕录制\n\n在线屏幕录制\n\n一个浏览器里面的在线录屏小工具。\n\n\n# timecat\n\ntimecat\n\n一个网页录屏器，可以将网页操作录制下来，像视频那样播放，但是生成的录像文件的体积远远小于传统视频。\n\n\n# screen record\n\nscreen record\n\n一个浏览器里面的录屏工具，非常简单好用。\n\n\n# 免费格式转换工具\n\n\n# md\n\n6、md\n\n\n\n一款开源的微信公众号 markdown 编辑器，基于 wechat-format 进行了二次开发。（@acbin 投稿）\n\n\n# md2pdf\n\nmd2pdf\n\n通过浏览器，将 markdown 文本保存成 pdf 文件，并且可以定制页面。\n\n\n# mobi-epub\n\n电子书格式转换\n\nhttps://convertio.co/zh/mobi-epub/\n\n\n# 粘贴转 md\n\npaste to markdown\n\n粘贴到该窗口的任何文本内容，都会自动转为 markdown 格式。\n\n\n# md 转思维导图\n\nmarkmap-lib\n\n\n\n一个将 markdown 转为思维导图的开源工具。\n\n\n# 文本到流程图转换\n\n文本到图形的在线工具\n\n这个页面给出一个在线工具的清单，可以将文本（图形的描述）渲染成图形，比如 plantuml 和 asciiflow。\n\n\n# md 转静态博客\n\ngridea\n\n\n\n一款跨平台桌面软件，可以在本地将 markdown 文档编译成静态博客，然后发布到 github pages 或 coding pages。\n\n\n# 伪码转流程图\n\ncode2flow\n\n\n\n一个符合直觉的，从伪码生成流程图的工具。\n\n\n# 免费编程语言转换工具\n\n\n# vugu\n\nvugu\n\n一个使用 go 语言写 html 前端页面的工具。完全不用 javascript，就能写出前端页面。未来的全栈将不再限于 js，后端语言都可以写前端。\n\n\n# 免费网站制作工具\n\n\n# monica\n\nmonica\n\n\n\n一个个人的 crm（客户关系管理）系统，可以自己架设服务，管理你的所有人际关系。\n\n\n# 免费翻译工具\n\n\n# deepl\n\ndeepl\n\n\n\n一家创业公司推出的机器翻译引擎，据称比谷歌翻译得更好。\n\n\n# 免费代码贴图工具\n\n\n# carbon\n\nhttps://carbon.now.sh/\n\n可以导出精美的代码图片。\n\n\n\n\n# text2image\n\ntext2image\n\n\n\n一个将文字或代码转换成图片的网页工具，可定制项多，主题、水印、阴影特效等都能自定义。\n\n\n# 免费代码补全工具\n\n\n# tabnine\n\ntabnine\n\n\n\n基于深度学习的代码补全工具，号称支持所有语言。\n\n\n# 免费输入法工具\n\n\n# 哈利路亚英文输入法\n\n哈利路亚英文输入法\n\n这是 mac 平台上一款智能英语输入法，可以提示单词拼写和中文解释。\n\n\n# 免费阅读工具\n\n\n# marginnote 3\n\npdf 阅读工具：marginnote 3\n\n功能参考：https://sspai.com/post/47317\n\n\n# web-clipper\n\nweb-clipper\n\nchrome 浏览器插件，支持一键将网页内容存储到多个平台，包括 github、notion、onenote、语雀、有道等。\n\n入口：https://clipper.website/\n\n\n\n\n# 小悦记\n\n小悦记\n\n\n\nchrome 浏览器插件，可以一键导出微信读书笔记。（@zxhycxq 投稿）\n\n#\n\n# 下载及安装\n\n请科学登录chrome 应用商店，搜索“小悦记”即可，不会的可以问身边的小伙伴哈（不要用微信内置的浏览器打开！）\n\n\n\nhttps://chrome.google.com/webstore/detail/%e5%b0%8f%e6%82%a6%e8%ae%b0/dcfmienoiahabnladhacocfbhngagpok\n\n附：谷歌浏览器下载地址：\n\n最新稳定版：https://www.google.cn/chrome/?standalone=1\n\n\n# fika-专注阅读工具\n\nfika\n\n\n\nchrome 浏览器插件，可以将网页转成可以专心阅读的样式，内置四种主题。（@yueyericardo 投稿）\n\n\n# 图像处理工具\n\n\n# 抠图-removebg\n\n免费抠图工具：https://www.remove.bg/zh/\n\n[\n\n](https://free.com.tw/fococlipping/)\n\n\n# 背景去除-fococlipping\n\nhttps://www.fococlipping.com/\n\n使用方式：https://free.com.tw/fococlipping/\n\n值得一試的三個理由：\n\n 1. 100% 自動化線上去背工具，上傳圖片自動移除背景保留主體\n\n 2. 可切換手動編輯模式，亦可選擇圖片類型獲得更精確的效果\n\n 3. 支援高解析度畫質（最大 3000×3000 像素）\n\n\n# 压缩 svg\n\n9、svgomg\n\n一个在线工具，用来压缩 svg 图像文件。\n\n\n# doka\n\ndoka\n\n\n\n一个使用 webgl 技术搭建的在线图像编辑器，使用非常流畅。\n\n\n# squoosh\n\nsquoosh\n\n谷歌开源的图像压缩服务。\n\n\n# i love img\n\ni love img\n\n该网站提供各种在线的图像编辑工具，比如图像缩放、压缩、裁剪、水印等。（@ifrontend-xyz 投稿）\n\n\n# ui 组件库\n\ncolorui\n\n专用于微信小程序的 ui 组件库，纯 css 组件。（@ifrontend-xyz 投稿）\n\n\n# photoflare\n\n2、photoflare\n\n\n\n跨平台的图像编辑桌面软件，相对小巧简单。\n\n\n# wewatermark\n\n6、wewatermark\n\n\n\n一个在线工具，可以为图片加上各种各样的水印。\n\n\n# pixelixe photo editor\n\npixelixe photo editor\n\n\n\n一个 chrome 浏览器插件，在浏览器里面打开一个图片编辑器。\n\n\n# artline\n\n3、artline\n\n\n\n一个深度学习项目，将照片转为线条素描画，这里有可以运行的 demo（flask 应用）。\n\n\n# 8、dall-e\n\ndall-e\n\nopenai 公司又推出了一个神奇的软件 dall-e，可以根据文字描述自动生成图片。下面的图片都是软件生成的。\n\n立方体的豪猪\n\n\n\n写着 openai 的店面\n\n\n\n鳄梨状的椅子\n\n\n\n阁楼卧室有一个鱼缸，旁边是床\n\n\n\n\n# 录屏转 gif\n\n\n# giphy\n\nmac 最佳\n\n\n# screentogif\n\n【只支持windows】\n\n经常会遇到一些场景，需要你向别人展示一些操作或是效果——例如告诉别人某某软件的配置步骤啊、刚某个动画效果怎么样啊、某某电影里面的一个镜头多么经典啊、打得大快人心的nba绝杀瞬间是怎么回事啊，等等…. 这些场合，如果单纯截成图片有时难以说清楚，但录成视频又不方便在社交软件上传播，这时就需要一个能够生成动态图的软件：\n\n\n\n\n\n软件简介\n\nscreentogif 也是一款非常轻便的、完全免费的、没广告的，免安装的【屏幕录制软件】，它可以用来快速录制屏幕上的指定区域，并将其直接保存为gif动态图。录制后还可以对gif进行编辑，例如删除不合适的某一帧、添加滤镜效果等。软件大小只有两三m（底部链接压缩包大小为395kb），界面也非常简洁，启动速度快，操作简单易上手。\n\n\n\nscreentogif这个项目以ms-pl协议开源，由 nicke manarin 于2013年发起，其源代码已发布在github上，具体细节可以到其官方主页获悉\n\n软件使用\n\n双击运行后：\n\n\n\n最左边那个recorder点进去就是录制屏幕了，第二个webcam是捕获电脑摄像头画面，第三个board是录制画板，最后一个编辑素材用。\n\n可以随意拖动边框调整屏幕捕获窗口的大小（下面小格里的“15”是每秒帧速，可调）：\n\n\n\n录制完成后在编辑界面下方会显示具体的每一帧（点击菜单项view可以播放方才录制的动图），有哪一帧不想要的可以直接删除，非常方便：\n\n\n\n该软件还有许多其他的编辑功能，例如添加文字，旋转、裁剪素材，涂鸦等等。另外，在设置里面还有许多选项可以选择，例如快捷键、生成gif质量、语言等等。\n\n总结\n\nscreentogif是一款轻便实用的【屏幕录制工具】，通过它可以轻松地把一些桌面操作等效果录制成gif图片。无论你是要截下一个精彩的nba绝杀镜头，还是要录制一个电脑操作教程，亦或是一个演示，它都能帮你轻松高效地完成任务。\n\n\n# quicktime + pic gif\n\n如果是苹果电脑+苹果手机，将手机用连接线连接到电脑，然后打开quicktime player，点击文件 新建影片录制 your iphone 然后就可以录制屏幕的各种东西啦（包括你在手机上看的电影呀，或者你滑动浏览一篇文章，甚至是app的开启页 任何你在手机上操作的都可以）\n\n然后存下这段视频，再在电脑上打开pic gif 就可以直接制作gif啦～～～\n\n\n# 图片上传工具\n\n\n# picgo\n\npicgo\n\n一个桌面工具，直接将图片上传到选定的图床，返回上传后的图片 url。\n\n\n# 排版工具\n\n\n# 公众号排版 md\n\nmarkdown-nice\n\nmarkdown 文档进行微信公号排版的工具，支持自定义样式。（@zhning12 投稿）\n\n\n# 在线截屏工具\n\n\n# screendump\n\nscreendump\n\n一个在线截屏工具。用户只要输入网址，就会显示各种设备的网页截屏，相当方便。\n\n\n# 资源下载工具\n\n\n# motrix\n\nmotrix\n\n一款桌面端下载工具，支持下载 http、ftp、bt、磁力链、百度网盘等资源。（@ifrontend-xyz 投稿）\n\n\n# 软件设计工具合集\n\nhttps://docs.qq.com/sheet/dsm9yrktvcnledmju?tab=uvzb4w\n\n\n# digitalocean 应用程序平台\n\ndigitalocean 应用程序平台\n\n\n\ndigitalocean 发布应用程序平台，跟 github 深度融合，可以直接把 github 项目在上面部署和运行，很适合那些需要后端的网络应用。\n\n\n#\n\n\n# 效率工具\n\n9、hipa（黑帕云）\n\n\n\n国产的在线表格数据库，类似国外的 airtable，提供了强大电子表格功能，比如多表关联、一对多的自动聚合运算、看板视图、多人实时协作、行级数据权限等等。（@mechiland 投稿）\n\n常用20个效率工具合集。\n\n我们的时间有限，如何充分使用它，一个核心就是提升效率。今天系统整理一下常用的工具：\n\n 1.  印象笔记（全平台）：个人知识库，好的文章、常用信息都收纳于此。\n\n 2.  扫描宝（ios）：扫描重要文件，以备不时之需。\n\n 3.  islide（windows/mac os）：ppt 制作神器，里面很多高质量模板、图标、版式。\n\n 4.  彩云小译（ios/安卓）：翻译为中英文对照结果，适合于外文阅读。\n\n 5.  imark（ios）·我的标记：标注图片，功能齐全，而且免费。\n\n 6.  讯飞听见（ios/安卓/网页）：录音转文字，会议记录必备。\n\n 7.  幕布（全平台）：大纲笔记，而且可以一键转为思维导图。\n\n 8.  潮汐（ios/安卓/小程序）：白噪音，可用于番茄工作法辅助。\n\n 9.  坚果云（全平台）：网盘工具，同步速度快，安全性高。\n\n 10. 白描（ios/安卓/小程序/网页）：图片文字提取，识别率高。\n\n 11. calcbot（ios）：一款计算器，可以记录计算过程，方便检查是否有错误。\n\n 12. nomo（ios/安卓）：让照片充满文艺气息。\n\n 13. paper（ios）：简单漂亮的手绘软件。\n\n 14. goodnotes（ios）：可以说是最好的手写笔记软件，配合 apple pencil ，让 ipad 变成生产力工具。\n\n 15. 微信读书（ios/安卓/网页）：不只是读书工具，还可以用来搜索一些概念，看到比较专业的解释和案例。\n\n 16. unsplash（ios/安卓/网页）：找到高清大图，既可以设置为手机壁纸，也可以作为 ppt 配图。\n\n 17. 快捷指令（ios）：设置一系列自动化指令，比如快速把复制的文字保存到笔记软件。\n\n 18. 票小秘（ios/安卓）：拍照就能完成发票识别与录入，1秒钟搞定。\n\n 19. waifu2x（ios/安卓/网页）：无损放大图片。\n\n 20. post-it（ios/安卓）：3m官方出品的便签应用，可以手写，也可以拍便签，然后归类，适合于想法梳理。\n\n希望这些效率应用可以帮助到你。\n\n\n# 网络书签管理\n\n7、raindrop\n\n\n\n一个跨平台的网络书签管理器。\n\n\n# 简历\n\n1、best-resume-ever\n\n\n\n一个基于 web 的简历模板，可以生成网页简历，然后用浏览器打印成 pdf 文件。\n\n\n# markdown 转简历\n\nhttps://resume.mdnice.com/\n\n\n# 视觉表达工具\n\n\n# markdown 制作 ppt-slidev\n\n有很多功能丰富的、通用的、所见即所得的幻灯片制作工具\n\n官网：https://sli.dev/\n\ngithub：slidev\n\n\n\n这个工具使用 markdown 格式编写 ppt 幻灯片，功能较多。\n\n\n# 文件分享工具\n\n\n# send\n\n在线：https://send.vis.ee/\n\ngithub：send\n\nmozilla 基金会曾经推出了一个文件分享服务，后来停止开发了。社区就接过来，做成完全的开源版，现在可以自己搭建，并且有 web、命令行和安卓等各种客户端。\n\n\n# 字体\n\n\n# 免费可商用字体\n\nhttps://ziyouziti.com/\n\n\n# 阿里巴巴普惠体\n\nhttps://alibabafont.taobao.com/",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"免费插图",frontmatter:{author:"xlc520",title:"免费插图",description:"免费插图",time:"2022-02-01T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%85%8D%E8%B4%B9%E6%8F%92%E5%9B%BE.html",relativePath:"other/免费插图.md",key:"v-68bef918",path:"/other/%E5%85%8D%E8%B4%B9%E6%8F%92%E5%9B%BE/",headers:[{level:2,title:"undraw",slug:"undraw",normalizedTitle:"undraw",charIndex:11},{level:2,title:"Covid-19 插图",slug:"covid-19-插图",normalizedTitle:"covid-19 插图",charIndex:92}],readingTime:{minutes:.31,words:93},headersStr:"undraw Covid-19 插图",content:"# 免费插图\n\n\n# undraw\n\n网址：https://undraw.co/illustrations\n\n\n\n一个免费的插图网站，可以在上面寻找合适的插图，用于商业用途。\n\n\n# Covid-19 插图\n\n网址：https://www.pixeltrue.com/frontliner-heroes\n\n",normalizedContent:"# 免费插图\n\n\n# undraw\n\n网址：https://undraw.co/illustrations\n\n\n\n一个免费的插图网站，可以在上面寻找合适的插图，用于商业用途。\n\n\n# covid-19 插图\n\n网址：https://www.pixeltrue.com/frontliner-heroes\n\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"免费资源集锦",frontmatter:{author:"xlc520",title:"免费资源集锦",description:"免费资源集锦",time:"2022-01-25T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%85%8D%E8%B4%B9%E8%B5%84%E6%BA%90%E9%9B%86%E9%94%A6.html",relativePath:"other/免费资源集锦.md",key:"v-2918e2f0",path:"/other/%E5%85%8D%E8%B4%B9%E8%B5%84%E6%BA%90%E9%9B%86%E9%94%A6/",headers:[{level:2,title:"hacker-laws-zh",slug:"hacker-laws-zh",normalizedTitle:"hacker-laws-zh",charIndex:47},{level:2,title:"Pluralsight",slug:"pluralsight",normalizedTitle:"pluralsight",charIndex:1235},{level:2,title:"普通人的微积分教程",slug:"普通人的微积分教程",normalizedTitle:"普通人的微积分教程",charIndex:1360},{level:2,title:"大圣盘",slug:"大圣盘",normalizedTitle:"大圣盘",charIndex:1495}],readingTime:{minutes:2,words:600},headersStr:"hacker-laws-zh Pluralsight 普通人的微积分教程 大圣盘",content:"# 免费资源集锦\n\n文章、电子书、图片、音频、视频等资源获取汇总。\n\n\n# 免费知识\n\n\n# hacker-laws-zh\n\nhacker-laws-zh\n\n这是一个中文仓库，收集对开发人员有用的定律、理论、原则和模式，比如摩尔定律、侯世达定律、墨菲定律等等。\n\n\n# 免费图库\n\n此处为语雀内容卡片，点击链接查看：https://www.yuque.com/woniu666/tools_and_notes/pic\n\n\n# EMOJI 表情\n\n推荐一个中文版「EMOJI词典」\n\nhttps://www.emojiall.com/zh-hans\n\n\n# 免费音乐\n\n以下音乐库网站提供免费音乐，可以用于商业用途。\n\n * Bensound：https://www.bensound.com/\n\n * WOWA：https://www.wowa.me/\n\n * Incompetech：https://incompetech.com/music/，https://incompetech.filmmusic.io/search/\n\n * Free Music Archive：http://freemusicarchive.org/\n\n * CCMixter：http://ccmixter.org/\n\n * Jamendo Music：https://www.jamendo.com/\n\n * Free Loops：http://free-loops.com/\n\n * Freesound：https://freesound.org/\n\n * Internet Archive’s Netlabels Collection ：https://archive.org/details/netlabels\n\n * Jukedeck：https://www.jukedeck.com/\n\n * Sound Image：http://soundimage.org/\n\n * Sound Bible（音效网站）：http://soundbible.com/\n\n\n# 视频素材（包含收费）\n\n * 爱给网 （有水印）\n\n * 傲视网\n\n * videezy\n\n * FootageCrate\n\n * Pexels （免费课商用）\n\n * Distill（免费）\n\n * Mazwai （需署名作者名）\n\n * Vimeo\n\n * IgniteMotion\n\n * Videvo\n\n * Xstockvideo\n\n * iStock\n\n\n# 插件素材\n\n * 书生影视\n\n * 大众脸\n\n * 龋齿一号\n\n\n# 免费商用字体\n\n字制区：https://www.fontqu.com/\n\n\n# 免费电子书\n\n此处为语雀内容卡片，点击链接查看：https://www.yuque.com/woniu666/tools_and_notes/ebook_site\n\n\n# 免费课程\n\n\n# Pluralsight\n\nPluralsight\n\n\n\nPluralsight 宣布四月份对用户免费，网站上面 7000 多门视频课都可以免费听。它家的 C# 课程很有名，最近 Python、JS、Java、Devops 课程也添加了不少。\n\n\n# 普通人的微积分教程\n\n普通人的微积分教程\n\n一个通俗微积分教程，带有大量可视化图形。\n\n\n# 简历模板\n\n此处为语雀内容卡片，点击链接查看：https://www.yuque.com/woniu666/tools_and_notes/resume\n\n\n# 综合\n\n\n# 大圣盘\n\n大圣盘\n\n一个百度网盘资源搜索引擎，由网络爬虫自动抓取。\n\n5、Blacklight\n\n\n\n一个在线工具，可以检查某个网站使用了哪些追踪技术。",normalizedContent:"# 免费资源集锦\n\n文章、电子书、图片、音频、视频等资源获取汇总。\n\n\n# 免费知识\n\n\n# hacker-laws-zh\n\nhacker-laws-zh\n\n这是一个中文仓库，收集对开发人员有用的定律、理论、原则和模式，比如摩尔定律、侯世达定律、墨菲定律等等。\n\n\n# 免费图库\n\n此处为语雀内容卡片，点击链接查看：https://www.yuque.com/woniu666/tools_and_notes/pic\n\n\n# emoji 表情\n\n推荐一个中文版「emoji词典」\n\nhttps://www.emojiall.com/zh-hans\n\n\n# 免费音乐\n\n以下音乐库网站提供免费音乐，可以用于商业用途。\n\n * bensound：https://www.bensound.com/\n\n * wowa：https://www.wowa.me/\n\n * incompetech：https://incompetech.com/music/，https://incompetech.filmmusic.io/search/\n\n * free music archive：http://freemusicarchive.org/\n\n * ccmixter：http://ccmixter.org/\n\n * jamendo music：https://www.jamendo.com/\n\n * free loops：http://free-loops.com/\n\n * freesound：https://freesound.org/\n\n * internet archive’s netlabels collection ：https://archive.org/details/netlabels\n\n * jukedeck：https://www.jukedeck.com/\n\n * sound image：http://soundimage.org/\n\n * sound bible（音效网站）：http://soundbible.com/\n\n\n# 视频素材（包含收费）\n\n * 爱给网 （有水印）\n\n * 傲视网\n\n * videezy\n\n * footagecrate\n\n * pexels （免费课商用）\n\n * distill（免费）\n\n * mazwai （需署名作者名）\n\n * vimeo\n\n * ignitemotion\n\n * videvo\n\n * xstockvideo\n\n * istock\n\n\n# 插件素材\n\n * 书生影视\n\n * 大众脸\n\n * 龋齿一号\n\n\n# 免费商用字体\n\n字制区：https://www.fontqu.com/\n\n\n# 免费电子书\n\n此处为语雀内容卡片，点击链接查看：https://www.yuque.com/woniu666/tools_and_notes/ebook_site\n\n\n# 免费课程\n\n\n# pluralsight\n\npluralsight\n\n\n\npluralsight 宣布四月份对用户免费，网站上面 7000 多门视频课都可以免费听。它家的 c# 课程很有名，最近 python、js、java、devops 课程也添加了不少。\n\n\n# 普通人的微积分教程\n\n普通人的微积分教程\n\n一个通俗微积分教程，带有大量可视化图形。\n\n\n# 简历模板\n\n此处为语雀内容卡片，点击链接查看：https://www.yuque.com/woniu666/tools_and_notes/resume\n\n\n# 综合\n\n\n# 大圣盘\n\n大圣盘\n\n一个百度网盘资源搜索引擎，由网络爬虫自动抓取。\n\n5、blacklight\n\n\n\n一个在线工具，可以检查某个网站使用了哪些追踪技术。",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"卸载windows服务，删除 windows 服务",frontmatter:{author:"xlc520",title:"卸载windows服务，删除 windows 服务",description:"卸载windows服务，删除 windows 服务",time:"2022-01-27T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%88%A0%E9%99%A4%20windows%20%E6%9C%8D%E5%8A%A1.html",relativePath:"other/删除 windows 服务.md",key:"v-101a7a53",path:"/other/%E5%88%A0%E9%99%A4%20windows%20%E6%9C%8D%E5%8A%A1/",headers:[{level:2,title:"方法/步骤",slug:"方法-步骤",normalizedTitle:"方法/步骤",charIndex:32}],readingTime:{minutes:1.19,words:356},headersStr:"方法/步骤",content:'# 卸载windows服务，删除 windows 服务\n\n\n# 方法/步骤\n\n 1. 1\n    \n    windows提供了基于命令窗口删除服务的功能，就是在命令窗口输入\n    \n    sc delete 服务名称\n    \n    在窗口输入上面的命令就能删除了。下面详细说明。\n\n 2. 2\n    \n    确定"服务名称"，"服务名称"并不是我们在服务列表里直接看到的名称，我们看到的是服务的"显示名称",查看服务名称的方法，就是在要删除的服务上右击，选择"属性"，这时就能看到真正的"服务名称"。比如下面的例子我们要删除“SQL Server Browser”服务，其真实的服务名称为“SQLBrowser”\n    \n    \n    \n    \n\n 3. 3\n    \n    执行”sc delete 服务名称“，打开命令窗口，输入 ”sc delete "+刚才查看到的服务名称，回车就会提示删除成功。这里我们输入 sc delete SQLBrowser ，提示删除成功后，在服务窗口列表里也删除掉了。\n    \n    \n    \n    \n    \n    ',normalizedContent:'# 卸载windows服务，删除 windows 服务\n\n\n# 方法/步骤\n\n 1. 1\n    \n    windows提供了基于命令窗口删除服务的功能，就是在命令窗口输入\n    \n    sc delete 服务名称\n    \n    在窗口输入上面的命令就能删除了。下面详细说明。\n\n 2. 2\n    \n    确定"服务名称"，"服务名称"并不是我们在服务列表里直接看到的名称，我们看到的是服务的"显示名称",查看服务名称的方法，就是在要删除的服务上右击，选择"属性"，这时就能看到真正的"服务名称"。比如下面的例子我们要删除“sql server browser”服务，其真实的服务名称为“sqlbrowser”\n    \n    \n    \n    \n\n 3. 3\n    \n    执行”sc delete 服务名称“，打开命令窗口，输入 ”sc delete "+刚才查看到的服务名称，回车就会提示删除成功。这里我们输入 sc delete sqlbrowser ，提示删除成功后，在服务窗口列表里也删除掉了。\n    \n    \n    \n    \n    \n    ',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"安装WSA-激活GPU-双击安装APK",frontmatter:{author:"xlc520",title:"安装WSA-激活GPU-双击安装APK",description:"安装WSA-激活GPU-双击安装APK",time:"2022-02-11T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%AE%89%E8%A3%85WSA-%E6%BF%80%E6%B4%BBGPU-%E5%8F%8C%E5%87%BB%E5%AE%89%E8%A3%85APK.html",relativePath:"other/安装WSA-激活GPU-双击安装APK.md",key:"v-28691cc3",path:"/other/%E5%AE%89%E8%A3%85WSA-%E6%BF%80%E6%B4%BBGPU-%E5%8F%8C%E5%87%BB%E5%AE%89%E8%A3%85APK/",readingTime:{minutes:6.01,words:1802},headersStr:null,content:'# 安装WSA-激活GPU-双击安装APK\n\n仅支持Windows11（包含正式版、RP、Beta、Dev） 》》》 目 录 《《《 1.安装WSA本体（必装） 2.激活GPU（普通用户请跳过！！！） 3.安装“安装程序”（选装） 4.安装ADB（选装） 5.安装Android应用 6.卸载Android应用 7.注意事项 8.参考链接\n\n【1 安装WSA本体】 - ① 微软商店程序抓包网址： 查看链接 ② WSA微软商店链接： 查看链接 - 1.打开①链接，在输入框中输入②，选择Slow通道，确认，下载最底下的"MicrosoftCorporationII.WindowsSubsystemForAndroid_1.7.32815.0_neutral_~_8wekyb3d8bbwe.msixbundle" (注：四个选项与Windows渠道相对应，Fast-Dev渠道，Slow-Beta渠道，RP-RP渠道和Retail-正式版，目前只有Beta版本有发布)\n\n\n\n输入下载地址，选择正确通道\n\n\n\n选择最新安装包\n\n2.右键Windodws徽标，选择"Windows终端（管理员）"输入命令 add-appxpackage "文件路径/文件名"，回车，安装完成\n\n\n\n打开终端\n\n\n\n输入指令\n\n3.开启主板虚拟化支持，具体按照各BIOS进行设置（新购买电脑一般已开启主板虚拟化支持） 4.系统中开启Hyper-V和虚拟机平台，打开资源管理器，在路径中输入中文"控制面板"，回车，即可进入控制面板，选择程序-程序和功能-启用或关闭Windows功能，开启"Hyper-V"和"虚拟机平台"，确定，重启\n\n\n\n资源管理器可以直接进入控制面板\n\n\n\n按图开启Windows功能\n\n5.完成，Enjoy it.\n\n【2 激活GPU】（普通用户无需进行该项设置！！！） - INTEL英特尔： 查看链接 NVIDIA英伟达（经验证无效，请使用官网最新驱动）： 查看链接 AMD超微半导体： 查看链接 opengl3支持： 查看链接 - 1.下载安装对应显卡驱动和opengl3支持，安装后重启 （注：具体是否成功受概率等玄学因素影响，Intel驱动如果安装失败可尝试再次安装；未测试是否影响调用，建议普通用户跳过该步骤） 2.设置中开启高性能模式，设置-系统-显示-图形，应用的自定义选项-浏览，添加WSA，选择WSA，图形首选项选择高性能，保存\n\n\n\n打开设置\n\n\n\n添加WSA\n\n\n\n选项中选择高性能模式\n\n3.显卡设置中开启高性能模式（以N卡为例，集显和A卡请自测），NVIDIA控制面板-管理3D设置-添加-选择WSA，确定，并调整WSA首选图形处理器为高性能NVIDIA处理器\n\n\n\n打开NVIDIA控制面板并添加WSA\n\n\n\n选择高性能NVIDIA处理器\n\n4.重启，完成\n\n\n\n安兔兔GPU显示分数，但很低\n\n【3 安装“安装程序”】 - APKInstaller： 查看链接\n\n\n\n安装程序可以直接桌面显示apk且可以双击安装\n\n\n\n以WinUi的界面进行安卓程序的安装\n\n- 1.下载最新压缩包，如"APKInstaller.Package._0.0.1.0_Test.rar" 2.解压缩 3.开启旁加载模式，设置-隐私和安全性-开发者选项-开启"从任意源（包括松散文件）安装应用"\n\n\n\n打开开发人员模式\n\n4.右键msixbundle文件，如"APKInstaller (Package)_0.0.1.0_x86_x64_arm64.msixbundle"，属性-数字签名-双击签名列表中的签名-查看证书-安装证书-本地计算机-将所有的证书都放入下列储存-受信任人-完成\n\n\n\n打开属性\n\n\n\n安装程序证书 1\n\n\n\n安装程序证书 2\n\n5.双击msixbundle文件，如"APKInstaller (Package)_0.0.1.0_x86_x64_arm64.msixbundle"，自动安装框架，然后提示安装失败 6.右键"Install.ps1"选择"使用PowerShell运行"\n\n\n\n安装程序本体\n\n7.安装完成\n\n【4 安装ADB】 - 最新ADB： 查看链接 - 1.下载解压缩，将文件夹内的所有文件复制到"C:\\Users\\用户名"下即可\n\n\n\n安装adb在正确的位置，无需配置环境变量\n\n【5 安装Android应用】 - 方法一（ADB安装）： 1.打开"Windows Subsystem for Android™"，打开"开发人员模式"\n\n\n\n打开WSA\n\n\n\n开启开发人员模式，注意未启动WSA不能安装程序\n\n\n\n启动WSA\n\n\n\n启动成功，可以安装应用\n\n2.确保已正确安装ADB，Win+R，输入"CMD"，回车，输入指令"adb connect 127.0.0.1:58526" 3."adb install （将安装文件拖入此处）"，回车，安装完成 - 方法二（安装器安装）： 1.确保已正确安装APKInstaller，双击.apk的安卓程序进行安装，根据指引打开"开发人员模式" （注：Android子系统必须处于开机状态才能进行安装，可以点击WSA中"开发人员模式"下"管理开发人员设置"唤醒）\n\n【6 卸载Android应用】 - 1.列表中直接右键卸载即可\n\n【7 注意事项】 1.该教程基于Windows11专业版制作，如家庭版没有某些选项，可以百度其他打开的方式 2.如果遇到鼠标无法点击的情况，如登录酷安，可以使用tab键切换组件 3.提示WiFi连接问题：查看链接 4.PowerShell运行ps1文件的问题：查看链接 5.Windows家庭版没有PowerShell的问题：查看链接\n\n【8 参考链接】 - WSA安装： 查看链接 GPU驱动： 查看链接 APKInstaller： 查看链接',normalizedContent:'# 安装wsa-激活gpu-双击安装apk\n\n仅支持windows11（包含正式版、rp、beta、dev） 》》》 目 录 《《《 1.安装wsa本体（必装） 2.激活gpu（普通用户请跳过！！！） 3.安装“安装程序”（选装） 4.安装adb（选装） 5.安装android应用 6.卸载android应用 7.注意事项 8.参考链接\n\n【1 安装wsa本体】 - ① 微软商店程序抓包网址： 查看链接 ② wsa微软商店链接： 查看链接 - 1.打开①链接，在输入框中输入②，选择slow通道，确认，下载最底下的"microsoftcorporationii.windowssubsystemforandroid_1.7.32815.0_neutral_~_8wekyb3d8bbwe.msixbundle" (注：四个选项与windows渠道相对应，fast-dev渠道，slow-beta渠道，rp-rp渠道和retail-正式版，目前只有beta版本有发布)\n\n\n\n输入下载地址，选择正确通道\n\n\n\n选择最新安装包\n\n2.右键windodws徽标，选择"windows终端（管理员）"输入命令 add-appxpackage "文件路径/文件名"，回车，安装完成\n\n\n\n打开终端\n\n\n\n输入指令\n\n3.开启主板虚拟化支持，具体按照各bios进行设置（新购买电脑一般已开启主板虚拟化支持） 4.系统中开启hyper-v和虚拟机平台，打开资源管理器，在路径中输入中文"控制面板"，回车，即可进入控制面板，选择程序-程序和功能-启用或关闭windows功能，开启"hyper-v"和"虚拟机平台"，确定，重启\n\n\n\n资源管理器可以直接进入控制面板\n\n\n\n按图开启windows功能\n\n5.完成，enjoy it.\n\n【2 激活gpu】（普通用户无需进行该项设置！！！） - intel英特尔： 查看链接 nvidia英伟达（经验证无效，请使用官网最新驱动）： 查看链接 amd超微半导体： 查看链接 opengl3支持： 查看链接 - 1.下载安装对应显卡驱动和opengl3支持，安装后重启 （注：具体是否成功受概率等玄学因素影响，intel驱动如果安装失败可尝试再次安装；未测试是否影响调用，建议普通用户跳过该步骤） 2.设置中开启高性能模式，设置-系统-显示-图形，应用的自定义选项-浏览，添加wsa，选择wsa，图形首选项选择高性能，保存\n\n\n\n打开设置\n\n\n\n添加wsa\n\n\n\n选项中选择高性能模式\n\n3.显卡设置中开启高性能模式（以n卡为例，集显和a卡请自测），nvidia控制面板-管理3d设置-添加-选择wsa，确定，并调整wsa首选图形处理器为高性能nvidia处理器\n\n\n\n打开nvidia控制面板并添加wsa\n\n\n\n选择高性能nvidia处理器\n\n4.重启，完成\n\n\n\n安兔兔gpu显示分数，但很低\n\n【3 安装“安装程序”】 - apkinstaller： 查看链接\n\n\n\n安装程序可以直接桌面显示apk且可以双击安装\n\n\n\n以winui的界面进行安卓程序的安装\n\n- 1.下载最新压缩包，如"apkinstaller.package._0.0.1.0_test.rar" 2.解压缩 3.开启旁加载模式，设置-隐私和安全性-开发者选项-开启"从任意源（包括松散文件）安装应用"\n\n\n\n打开开发人员模式\n\n4.右键msixbundle文件，如"apkinstaller (package)_0.0.1.0_x86_x64_arm64.msixbundle"，属性-数字签名-双击签名列表中的签名-查看证书-安装证书-本地计算机-将所有的证书都放入下列储存-受信任人-完成\n\n\n\n打开属性\n\n\n\n安装程序证书 1\n\n\n\n安装程序证书 2\n\n5.双击msixbundle文件，如"apkinstaller (package)_0.0.1.0_x86_x64_arm64.msixbundle"，自动安装框架，然后提示安装失败 6.右键"install.ps1"选择"使用powershell运行"\n\n\n\n安装程序本体\n\n7.安装完成\n\n【4 安装adb】 - 最新adb： 查看链接 - 1.下载解压缩，将文件夹内的所有文件复制到"c:\\users\\用户名"下即可\n\n\n\n安装adb在正确的位置，无需配置环境变量\n\n【5 安装android应用】 - 方法一（adb安装）： 1.打开"windows subsystem for android™"，打开"开发人员模式"\n\n\n\n打开wsa\n\n\n\n开启开发人员模式，注意未启动wsa不能安装程序\n\n\n\n启动wsa\n\n\n\n启动成功，可以安装应用\n\n2.确保已正确安装adb，win+r，输入"cmd"，回车，输入指令"adb connect 127.0.0.1:58526" 3."adb install （将安装文件拖入此处）"，回车，安装完成 - 方法二（安装器安装）： 1.确保已正确安装apkinstaller，双击.apk的安卓程序进行安装，根据指引打开"开发人员模式" （注：android子系统必须处于开机状态才能进行安装，可以点击wsa中"开发人员模式"下"管理开发人员设置"唤醒）\n\n【6 卸载android应用】 - 1.列表中直接右键卸载即可\n\n【7 注意事项】 1.该教程基于windows11专业版制作，如家庭版没有某些选项，可以百度其他打开的方式 2.如果遇到鼠标无法点击的情况，如登录酷安，可以使用tab键切换组件 3.提示wifi连接问题：查看链接 4.powershell运行ps1文件的问题：查看链接 5.windows家庭版没有powershell的问题：查看链接\n\n【8 参考链接】 - wsa安装： 查看链接 gpu驱动： 查看链接 apkinstaller： 查看链接',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"开源后台管理系统",frontmatter:{author:"xlc520",title:"开源后台管理系统",description:"开源后台管理系统",time:"2022-02-06T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html",relativePath:"other/开源后台管理系统.md",key:"v-576421b3",path:"/other/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/",readingTime:{minutes:2.21,words:663},headersStr:null,content:"# 开源后台管理系统\n\n1. D2admin\n\n开源地址：https://github.com/d2-projects/d2-admin\n\n文档地址：https://d2.pub/zh/doc/d2-admin/\n\n效果预览：https://d2.pub/d2-admin/preview/#/index\n\n开源协议：MIT\n\n图片\n\n2. vue-element-admin\n\n开源地址：https://github.com/PanJiaChen/vue-element-admin\n\n文档地址：https://panjiachen.github.io/vue-element-admin-site/zh/\n\n效果预览：https://d2.pub/d2-admin/preview/#/index\n\n开源协议：MIT\n\n图片\n\n3. JEECG-BOOT\n\n开源地址：https://github.com/zhangdaiscott/jeecg-boot\n\n文档地址：https://panjiachen.github.io/vue-element-admin-site/zh/\n\n效果预览：http://boot.jeecg.com/\n\n开源协议：Apache-2.0 License\n\n图片\n\n\n# 4. GIN-VUE-ADMIN\n\n开源地址：https://github.com/flipped-aurora/gin-vue-admin\n\n文档地址：https://www.gin-vue-admin.com/\n\n效果预览：http://demo.gin-vue-admin.com/#/layout/dashboard\n\n开源协议：Apache-2.0 License\n\n图片\n\n\n# 5. vue-admin-beautiful\n\n开源地址：https://github.com/chuzhixin/vue-admin-beautiful\n\n文档地址：https://www.gin-vue-admin.com/\n\n效果预览：http://beautiful.panm.cn/\n\n开源协议：MPL-2.0 License\n\n图片\n\n6. Dcat-admin\n\n开源地址：https://github.com/jqhph/dcat-admin\n\n文档地址：http://www.dcatadmin.com/\n\n效果预览：http://103.39.211.179:8080/admin\n\n开源协议：MIT License\n\n图片\n\n7. RuoYi\n\n开源地址：https://gitee.com/y_project/RuoYi\n\n文档地址：https://doc.ruoyi.vip/\n\n效果预览：https://vue.ruoyi.vip/index\n\n开源协议：MIT License\n\n图片\n\n8. renren-fast-vue\n\n开源地址：https://gitee.com/renrenio/renren-fast-vue\n\n文档地址：https://www.renren.io/guide\n\n效果预览：http://demo.open.renren.io/renren-fast/#/home\n\n开源协议：MIT License\n\n图片\n\n9. ant-design-pro\n\n开源地址：https://github.com/ant-design/ant-design-pro\n\n文档地址：https://pro.ant.design/index-cn/\n\n效果预览：https://pro.ant.design/\n\n开源协议：MIT License\n\n10. iview-admin\n\n开源地址：https://github.com/iview/iview-admin\n\n文档地址：https://lison16.github.io/iview-admin-doc/\n\n效果预览：https://admin.iviewui.com/home\n\n开源协议：MIT License\n\n图片\n\n11. material-dashboard\n\n开源地址：https://github.com/creativetimofficial/material-dashboard#demo\n\n文档地址：https://demos.creative-tim.com/material-dashboard/docs/2.1/getting-started/introduction.html\n\n效果预览：https://demos.creative-tim.com/material-dashboard/examples/dashboard.html\n\n开源协议：MIT License\n\n图片\n\n12.EAdmin\n\n开源地址：https://github.com/suruibuas/eadmin\n\n文档地址：http://doc.eadmin.com.cn/\n\n效果预览：http://www.eadmin.com.cn/\n\n开源协议：无\n\n",normalizedContent:"# 开源后台管理系统\n\n1. d2admin\n\n开源地址：https://github.com/d2-projects/d2-admin\n\n文档地址：https://d2.pub/zh/doc/d2-admin/\n\n效果预览：https://d2.pub/d2-admin/preview/#/index\n\n开源协议：mit\n\n图片\n\n2. vue-element-admin\n\n开源地址：https://github.com/panjiachen/vue-element-admin\n\n文档地址：https://panjiachen.github.io/vue-element-admin-site/zh/\n\n效果预览：https://d2.pub/d2-admin/preview/#/index\n\n开源协议：mit\n\n图片\n\n3. jeecg-boot\n\n开源地址：https://github.com/zhangdaiscott/jeecg-boot\n\n文档地址：https://panjiachen.github.io/vue-element-admin-site/zh/\n\n效果预览：http://boot.jeecg.com/\n\n开源协议：apache-2.0 license\n\n图片\n\n\n# 4. gin-vue-admin\n\n开源地址：https://github.com/flipped-aurora/gin-vue-admin\n\n文档地址：https://www.gin-vue-admin.com/\n\n效果预览：http://demo.gin-vue-admin.com/#/layout/dashboard\n\n开源协议：apache-2.0 license\n\n图片\n\n\n# 5. vue-admin-beautiful\n\n开源地址：https://github.com/chuzhixin/vue-admin-beautiful\n\n文档地址：https://www.gin-vue-admin.com/\n\n效果预览：http://beautiful.panm.cn/\n\n开源协议：mpl-2.0 license\n\n图片\n\n6. dcat-admin\n\n开源地址：https://github.com/jqhph/dcat-admin\n\n文档地址：http://www.dcatadmin.com/\n\n效果预览：http://103.39.211.179:8080/admin\n\n开源协议：mit license\n\n图片\n\n7. ruoyi\n\n开源地址：https://gitee.com/y_project/ruoyi\n\n文档地址：https://doc.ruoyi.vip/\n\n效果预览：https://vue.ruoyi.vip/index\n\n开源协议：mit license\n\n图片\n\n8. renren-fast-vue\n\n开源地址：https://gitee.com/renrenio/renren-fast-vue\n\n文档地址：https://www.renren.io/guide\n\n效果预览：http://demo.open.renren.io/renren-fast/#/home\n\n开源协议：mit license\n\n图片\n\n9. ant-design-pro\n\n开源地址：https://github.com/ant-design/ant-design-pro\n\n文档地址：https://pro.ant.design/index-cn/\n\n效果预览：https://pro.ant.design/\n\n开源协议：mit license\n\n10. iview-admin\n\n开源地址：https://github.com/iview/iview-admin\n\n文档地址：https://lison16.github.io/iview-admin-doc/\n\n效果预览：https://admin.iviewui.com/home\n\n开源协议：mit license\n\n图片\n\n11. material-dashboard\n\n开源地址：https://github.com/creativetimofficial/material-dashboard#demo\n\n文档地址：https://demos.creative-tim.com/material-dashboard/docs/2.1/getting-started/introduction.html\n\n效果预览：https://demos.creative-tim.com/material-dashboard/examples/dashboard.html\n\n开源协议：mit license\n\n图片\n\n12.eadmin\n\n开源地址：https://github.com/suruibuas/eadmin\n\n文档地址：http://doc.eadmin.com.cn/\n\n效果预览：http://www.eadmin.com.cn/\n\n开源协议：无\n\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"影视",frontmatter:{author:"xlc520",title:"影视",description:"影视",time:"2022-01-28T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E5%BD%B1%E8%A7%86.html",relativePath:"other/影视.md",key:"v-daa4f2c0",path:"/other/%E5%BD%B1%E8%A7%86/",headers:[{level:2,title:"恒星播放器(电脑看片工具)",slug:"恒星播放器-电脑看片工具",normalizedTitle:"恒星播放器(电脑看片工具)",charIndex:9}],readingTime:{minutes:.56,words:169},headersStr:"恒星播放器(电脑看片工具)",content:"# 影视\n\n\n# 恒星播放器(电脑看片工具)\n\nhttps://tsq.lanzoui.com/b0c3ne46d\n\n【第一部分：6个影视资源插件】\n\n第三方直播插件\n\nhttps://github.com/simplecelery/stellar-stream\n\n看直播插件\n\nhttps://github.com/simplecelery/zhibo\n\n电影天堂插件\n\nhttps://github.com/ninebird1/stellar_dytt\n\n看电影插件\n\nhttps://github.com/xiaohu-xh/stellar-movie\n\n看各大视频平台影视资源插件\n\nhttps://github.com/ninebird1/stellar-youget\n\n看电视插件 https://github.com/stellarplayer/stellar-watch-tv\n\n【新增4个插件】 遥控器 https://github.com/stellarplayer/stellar-web-ctrl\n\n恒星播放器 - 字幕天堂插件 https://github.com/Garefield/stellar-zmtt\n\n恒星播放器 - 80s电影 https://github.com/Garefield/stellar-80s\n\n恒星播放器 - 电影先生 https://github.com/Garefield/stellar-dyxs",normalizedContent:"# 影视\n\n\n# 恒星播放器(电脑看片工具)\n\nhttps://tsq.lanzoui.com/b0c3ne46d\n\n【第一部分：6个影视资源插件】\n\n第三方直播插件\n\nhttps://github.com/simplecelery/stellar-stream\n\n看直播插件\n\nhttps://github.com/simplecelery/zhibo\n\n电影天堂插件\n\nhttps://github.com/ninebird1/stellar_dytt\n\n看电影插件\n\nhttps://github.com/xiaohu-xh/stellar-movie\n\n看各大视频平台影视资源插件\n\nhttps://github.com/ninebird1/stellar-youget\n\n看电视插件 https://github.com/stellarplayer/stellar-watch-tv\n\n【新增4个插件】 遥控器 https://github.com/stellarplayer/stellar-web-ctrl\n\n恒星播放器 - 字幕天堂插件 https://github.com/garefield/stellar-zmtt\n\n恒星播放器 - 80s电影 https://github.com/garefield/stellar-80s\n\n恒星播放器 - 电影先生 https://github.com/garefield/stellar-dyxs",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"截图工具大全",frontmatter:{author:"xlc520",title:"截图工具大全",description:"截图工具大全",time:"2022-02-12T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7.html",relativePath:"other/截图工具.md",key:"v-2bc0448a",path:"/other/%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7/",readingTime:{minutes:1.44,words:432},headersStr:null,content:"# 截图工具大全\n\n第一款. win10自带\n\n快捷键：Windows键+Shift+S\n\n第二款.微信自带\n\n快捷键：Alt+A\n\n\n\n第三款.QQ自带\n\n快捷键：Ctrl+Alt+A\n\n\n\n第四款.钉钉自带\n\n快捷键：Ctrl+Shift+A\n\n\n\n第五款.浏览器自带\n\n个人使用的星愿浏览器\n\n第六款.Snipaste\n\nhttps://zh.snipaste.com/\n\n快捷键：F1\n\n它还有一个超好用的贴图功能！把一些资料贴在桌面上，然后再去编辑文章，省得来回切换了\n\n第七款.Sniptool\n\nhttps://tc5.us/file/15690961-442919658\n\n它可以将多个截取的图片组合到一个画布中,并且，它拥有强大的标注编辑功能，对于截图内容可以进行编辑标注。比如添加文本、画框、表情，对截图进行透明化处理，更换背景等。\n\n更赞的时，它还有一个模糊图像功能，可以对截图内容进行局部\n\n第八款. FsCapture\n\nhttp://xz.w10a.com/Small/FastStoneCapturev2020.zip\n\n可以长截图，屏幕放大与聚焦，这在视频演示中很常用。除此之外，它还有一个强大的编辑器，可以做一些图片的处理，比如模糊（私密部分打码）、调整色彩等，基本是个简版的PS。\n\n\n\n第九款.FireShot https://www.chrome666.com/chrome-extension/fireshot.html\n\n能搞定网页长图，基本功能都具备\n\n\n\n第十款.ShareX\n\nhttps://getsharex.com/\n\n开源免费，steam有收录\n\n",normalizedContent:"# 截图工具大全\n\n第一款. win10自带\n\n快捷键：windows键+shift+s\n\n第二款.微信自带\n\n快捷键：alt+a\n\n\n\n第三款.qq自带\n\n快捷键：ctrl+alt+a\n\n\n\n第四款.钉钉自带\n\n快捷键：ctrl+shift+a\n\n\n\n第五款.浏览器自带\n\n个人使用的星愿浏览器\n\n第六款.snipaste\n\nhttps://zh.snipaste.com/\n\n快捷键：f1\n\n它还有一个超好用的贴图功能！把一些资料贴在桌面上，然后再去编辑文章，省得来回切换了\n\n第七款.sniptool\n\nhttps://tc5.us/file/15690961-442919658\n\n它可以将多个截取的图片组合到一个画布中,并且，它拥有强大的标注编辑功能，对于截图内容可以进行编辑标注。比如添加文本、画框、表情，对截图进行透明化处理，更换背景等。\n\n更赞的时，它还有一个模糊图像功能，可以对截图内容进行局部\n\n第八款. fscapture\n\nhttp://xz.w10a.com/small/faststonecapturev2020.zip\n\n可以长截图，屏幕放大与聚焦，这在视频演示中很常用。除此之外，它还有一个强大的编辑器，可以做一些图片的处理，比如模糊（私密部分打码）、调整色彩等，基本是个简版的ps。\n\n\n\n第九款.fireshot https://www.chrome666.com/chrome-extension/fireshot.html\n\n能搞定网页长图，基本功能都具备\n\n\n\n第十款.sharex\n\nhttps://getsharex.com/\n\n开源免费，steam有收录\n\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"浏览器UA",frontmatter:{author:"xlc520",title:"浏览器UA",description:"浏览器UA",time:"2022-02-11T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E6%B5%8F%E8%A7%88%E5%99%A8UA.html",relativePath:"other/浏览器UA.md",key:"v-6612aa59",path:"/other/%E6%B5%8F%E8%A7%88%E5%99%A8UA/",readingTime:{minutes:2.24,words:673},headersStr:null,content:"# 浏览器UA\n\n百度+简单搜索+苹果+微信+夸克+QQ浏览器+Uc浏览器+微博,(带自动翻页)----（自用）\n\n> 有MicroMessenger/8.0.16.2640(0x28001037)有会导致CSDN打开跳微信登陆\n\nMozilla/5.0 (Linux; Android 11; zh-cn; Redmi K30 5G Build/RKQ1.200826.002; wv lite baiduboxapp) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/98.0.4758.80 Mobile Safari/537.36 SearchCraft/3.9.2 T7/13.3 SP-engine/2.41.0 baiduboxapp/ (Baidu; P1 11) MQQBrowser/26 Quark/4.5.5.155 UCBrowser/13.0.0.1080 Redmi K30 5G_11_weibo_12.2.1_android MMWEBID/999 Process/toolsmp WeChat/arm64 Weixin NetType/WIFI Language/zh_CN ABI/arm64\n\n苹果+百度+简单搜索+夸克+微信，（带自动翻页）\n\nMozilla/5.0 (Linux; Android 12.0.1; zh-cn; Pixel 6 Pro; wv lite baiduboxapp) baiduboxapp/ AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/98.0.4758.46 Mobile Safari/537.36 SearchCraft/3.7.0 (Baidu; P1 9) Quark/4.5.5.155 MMWEBID/4268 MicroMessenger/8.0.16.2640(0x28001037) Process/toolsmp WeChat/arm64 Weixin NetType/WIFI Language/zh_CN ABI/arm64\n\n百度App\n\nMozilla/5.0 (Linux; Android 11; Redmi K30 5G Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/76.0.3809.89 Mobile Safari/537.36 T7/13.3 SP-engine/2.41.0 baiduboxapp/13.3.0.11 (Baidu; P1 11) NABar/1.0\n\nMozilla/5.0 (Linux; Android 11; Redmi K30 5G Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/76.0.3809.89 Mobile Safari/537.36 T7/13.3 light/1.0 SP-engine/2.41.0 baiduboxapp/13.3.0.11 (Baidu; P1 11)\n\nMozilla/5.0 (Linux; Android 11; Redmi k40 Build/QKQ1.191222.002) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.203 mobile Safari/537.36baiduboxapp/3.2.5.10 SearchCraft/2.8.2 (Baidu; P1 10)\n\nQQ浏览器 Mozilla/5.0 (Linux; U; Android 11; zh-cn; Redmi K40 Pro Build/QKQ1.200114.002) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/11.0 Mobile Safari/537.36 COVC/045429\n\nUc浏览器 Mozilla/5.0 (Linux; U; Android 11; zh-CN; Redmi K40 Pro Build/QKQ1.190825.002) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/57.0.2987.108 UCBrowser/13.0.0.1080 Mobile Safari/537.36\n\nQuark浏览器+简单搜索 Mozilla/5.0 (Linux; Android 11; Redmi K40 Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/84.0.4147.105 Mobile Safari/537.36 SearchCraft/2.8.2 baiduboxapp/3.2.5.10\n\nQQ Mozilla/5.0 (Linux; U; Android 11; zh-cn; Redmi K40 Pro Build/PKQ1.181121.001) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/9.4 Mobile Safari/537.36\n\n微信\n\nMozilla/5.0 (Linux; Android 11; Redmi K30 5G Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.99 XWEB/3185 MMWEBSDK/20211001 Mobile Safari/537.36 MMWEBID/999 MicroMessenger/8.0.16.2040(0x2800105F) Process/toolsmp WeChat/arm64 Weixin NetType/WIFI Language/zh_CN ABI/arm64\n\nMozilla/5.0 (Linux; Android 11; Redmi K40 Pro Build/QKQ1.190910.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.62 XWEB/2757 MMWEBSDK/201101 Mobile Safari/537.36 MMWEBID/70 MicroMessenger/7.0.21.1800(0x2700153B) Process/toolsmp WeChat/arm64 Weixin NetType/4G Language/zh_CN ABI/arm64\n\nIphone Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1",normalizedContent:"# 浏览器ua\n\n百度+简单搜索+苹果+微信+夸克+qq浏览器+uc浏览器+微博,(带自动翻页)----（自用）\n\n> 有micromessenger/8.0.16.2640(0x28001037)有会导致csdn打开跳微信登陆\n\nmozilla/5.0 (linux; android 11; zh-cn; redmi k30 5g build/rkq1.200826.002; wv lite baiduboxapp) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/98.0.4758.80 mobile safari/537.36 searchcraft/3.9.2 t7/13.3 sp-engine/2.41.0 baiduboxapp/ (baidu; p1 11) mqqbrowser/26 quark/4.5.5.155 ucbrowser/13.0.0.1080 redmi k30 5g_11_weibo_12.2.1_android mmwebid/999 process/toolsmp wechat/arm64 weixin nettype/wifi language/zh_cn abi/arm64\n\n苹果+百度+简单搜索+夸克+微信，（带自动翻页）\n\nmozilla/5.0 (linux; android 12.0.1; zh-cn; pixel 6 pro; wv lite baiduboxapp) baiduboxapp/ applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/98.0.4758.46 mobile safari/537.36 searchcraft/3.7.0 (baidu; p1 9) quark/4.5.5.155 mmwebid/4268 micromessenger/8.0.16.2640(0x28001037) process/toolsmp wechat/arm64 weixin nettype/wifi language/zh_cn abi/arm64\n\n百度app\n\nmozilla/5.0 (linux; android 11; redmi k30 5g build/rkq1.200826.002; wv) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/76.0.3809.89 mobile safari/537.36 t7/13.3 sp-engine/2.41.0 baiduboxapp/13.3.0.11 (baidu; p1 11) nabar/1.0\n\nmozilla/5.0 (linux; android 11; redmi k30 5g build/rkq1.200826.002; wv) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/76.0.3809.89 mobile safari/537.36 t7/13.3 light/1.0 sp-engine/2.41.0 baiduboxapp/13.3.0.11 (baidu; p1 11)\n\nmozilla/5.0 (linux; android 11; redmi k40 build/qkq1.191222.002) applewebkit/537.36 (khtml, like gecko) chrome/66.0.3359.203 mobile safari/537.36baiduboxapp/3.2.5.10 searchcraft/2.8.2 (baidu; p1 10)\n\nqq浏览器 mozilla/5.0 (linux; u; android 11; zh-cn; redmi k40 pro build/qkq1.200114.002) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/77.0.3865.120 mqqbrowser/11.0 mobile safari/537.36 covc/045429\n\nuc浏览器 mozilla/5.0 (linux; u; android 11; zh-cn; redmi k40 pro build/qkq1.190825.002) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/57.0.2987.108 ucbrowser/13.0.0.1080 mobile safari/537.36\n\nquark浏览器+简单搜索 mozilla/5.0 (linux; android 11; redmi k40 pro build/qkq1.190825.002; wv) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/84.0.4147.105 mobile safari/537.36 searchcraft/2.8.2 baiduboxapp/3.2.5.10\n\nqq mozilla/5.0 (linux; u; android 11; zh-cn; redmi k40 pro build/pkq1.181121.001) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/66.0.3359.126 mqqbrowser/9.4 mobile safari/537.36\n\n微信\n\nmozilla/5.0 (linux; android 11; redmi k30 5g build/rkq1.200826.002; wv) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/86.0.4240.99 xweb/3185 mmwebsdk/20211001 mobile safari/537.36 mmwebid/999 micromessenger/8.0.16.2040(0x2800105f) process/toolsmp wechat/arm64 weixin nettype/wifi language/zh_cn abi/arm64\n\nmozilla/5.0 (linux; android 11; redmi k40 pro build/qkq1.190910.002; wv) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/78.0.3904.62 xweb/2757 mmwebsdk/201101 mobile safari/537.36 mmwebid/70 micromessenger/7.0.21.1800(0x2700153b) process/toolsmp wechat/arm64 weixin nettype/4g language/zh_cn abi/arm64\n\niphone mozilla/5.0 (iphone; cpu iphone os 14_0 like mac os x) applewebkit/605.1.15 (khtml, like gecko) version/14.0 mobile/15e148 safari/604.1",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 23, 2022 14:25",updateTimeStamp:1645626317e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"漏洞监控平台——Monitor",frontmatter:{author:"xlc520",title:"漏洞监控平台——Monitor",description:"漏洞监控平台——Monitor",time:"2022-02-11T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0Monitor.html",relativePath:"other/漏洞监控平台Monitor.md",key:"v-ddb14b62",path:"/other/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0Monitor/",headers:[{level:2,title:"写在前面的话",slug:"写在前面的话",normalizedTitle:"写在前面的话",charIndex:22},{level:2,title:"项目介绍",slug:"项目介绍",normalizedTitle:"项目介绍",charIndex:212},{level:3,title:"项目目录结构",slug:"项目目录结构",normalizedTitle:"项目目录结构",charIndex:221},{level:3,title:"文件说明",slug:"文件说明",normalizedTitle:"文件说明",charIndex:736},{level:3,title:"功能介绍",slug:"功能介绍",normalizedTitle:"功能介绍",charIndex:891},{level:2,title:"项目部署",slug:"项目部署",normalizedTitle:"项目部署",charIndex:1262},{level:3,title:"前期准备",slug:"前期准备",normalizedTitle:"前期准备",charIndex:1271},{level:3,title:"环境搭建",slug:"环境搭建",normalizedTitle:"环境搭建",charIndex:1811},{level:3,title:"配置企业微信推送",slug:"配置企业微信推送",normalizedTitle:"配置企业微信推送",charIndex:2644}],readingTime:{minutes:3.61,words:1082},headersStr:"写在前面的话 项目介绍 项目目录结构 文件说明 功能介绍 项目部署 前期准备 环境搭建 配置企业微信推送",content:"# 漏洞监控平台——Monitor\n\n\n# 写在前面的话\n\n对于网络安全从业者来说，实时掌握漏洞动态是至关重要的，所以萌生了开发一个监控平台的想法，把最新漏洞资讯集成然后进行推送。这里推送选的是企业微信，留下了邮件推送的接口，默认是关闭的，想开启的小伙伴自行开启。数据库选用的是sqlite。目前实现了监控GitHub、微软、CNNVD。（不要问我为啥不监控CNVD，我是不会告诉你我干不过它的反爬【狗头保命】）。\n\n\n# 项目介绍\n\n\n# 项目目录结构\n\n│  cve_db.db\n│  monitor.py\n│  style.css\n│\n├─Functions\n│  ├─Commons\n│  │      excel.py\n│  │      excel_html.py\n│  │      github.py\n│  │      mail.py\n│  │      style.css\n│  │      translate.py\n│  │      wechat_api.py\n│  │      __init__.py\n│  │\n│  ├─RequestInfo\n│  │      cnnvd_monitor.py\n│  │      github_monitor.py\n│  │      MS_monitor.py\n│  │      __init__.py\n│  │\n│  └─Sql\n│          installDb.py\n│          sql_helper.py\n│\n└─log\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 文件说明\n\nmonitor.py文件是主文件，部署完成后直接运行就此文件可以。\n\nCommons目录下的文件为主要功能文件。\n\nRequestInfo目录下为监控目标的一些文件。\n\nSql目录下为数据库相关文件，installDb.py是用来生成数据库和日志文件的。\n\nlog目录为存放日志文件目录。\n\n\n# 功能介绍\n\n同时监控CNNVD、Github、微软官方的漏洞消息。\n\n# CNNVD\n\n * 每天推送企业微信卡片消息\n * Web端漏洞信息表格展示\n * 每周五统计漏洞数量（高危、中危、低危）\n * 高危漏洞信息醒目标注\n\n# 微软官方漏洞消息\n\n * 每天推送企业微信卡片消息\n * Web端漏洞信息表格展示\n\n# Github\n\n * 每天推送企业微信卡片消息\n * 点击卡片消息自动跳转对应Github链接\n\n# 展示效果\n\n效果如下图\n\ncve\n\n当点击CNNVD的消息卡片时，会跳转到相对应的Web端以表格形式展示，如下图：\n\ncnnvd\n\n点击微软漏洞消息的漏洞卡片时，也会跳转到相对应的Web端表格展示，如下图：\n\n微软\n\n点击Github的漏洞消息通知时，跳转到相对于的Github地址，如下图：\n\ngithub\n\n\n# 项目部署\n\n\n# 前期准备\n\n * 开发语言：python3\n * 一台服务器(脚本跑在服务器上)\n * 一个域名(可选)\n\n首先安装依赖，如下：\n\nimport os\nimport time\nfrom io import BytesIO\nimport xlwt\nfrom xlrd import open_workbook\nimport datetime\nimport dominate\nfrom dominate.tags import *\nimport requests\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\nimport hashlib\nfrom lxml import etree\nimport json\nfrom bs4 import BeautifulSoup\nimport re\nimport sqlite3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n然后进行数据库初始化，初始化时生成log文件夹用来存放生成的日志文件。命令如下：\n\npython3 installDb.py\n\n\n1\n\n\n\n# 环境搭建\n\n因为要做Web端表格展示，所以这里使用Nginx做了目录浏览。服务器系统使用的是CentOS7，过程如下。\n\n首先使用yum源下载nginx，命令如下：\n\nyum install -y nginx\n\n\n1\n\n\n装好后，查看版本，检查是否安装成功，如下图：\n\n\n\n然后找到nginx的配置文件，具体位置为：\n\ncd /etc/nginx/\n\n\n1\n\n\n找到nginx.conf文件，对其中的server板块进行修改就可以了，主要是添加了末尾三行。\n\nserver {\n    listen       80;\n    listen       [::]:80;\n    server_name  _;\n   # root         /usr/share/nginx/html;\n    charset utf-8;\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n    location / {\n            root /usr/share/nginx/html/download;\n    autoindex on; #开启索引功能\n    autoindex_exact_size off; #关闭计算文件确切大小(bytes)\n    autoindex_localtime on; #显示本机时间\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n注意生成文件位置，我这里是/usr/share/nginx/html/download ，看个人爱好。\n\n如果修改，请修改monitor.py的24行和excel_html.py的11行。\n\nimage-20220122141836235\n\nimage-20220122142248502\n\n\n# 配置企业微信推送\n\n这个需要先到企业微信创建一个企业，并自建一个应用，获取到自定义应用的 Secret和注册的企业 corpid，就可以了。修改位置在**wechat_api.py**文件****的14行至17行，如下图：\n\nimage-20220122142707821\n\n启动监控脚本，命令如下：\n\npython3 moniter.py\n\n\n1\n\n\n大功告成！！！",normalizedContent:"# 漏洞监控平台——monitor\n\n\n# 写在前面的话\n\n对于网络安全从业者来说，实时掌握漏洞动态是至关重要的，所以萌生了开发一个监控平台的想法，把最新漏洞资讯集成然后进行推送。这里推送选的是企业微信，留下了邮件推送的接口，默认是关闭的，想开启的小伙伴自行开启。数据库选用的是sqlite。目前实现了监控github、微软、cnnvd。（不要问我为啥不监控cnvd，我是不会告诉你我干不过它的反爬【狗头保命】）。\n\n\n# 项目介绍\n\n\n# 项目目录结构\n\n│  cve_db.db\n│  monitor.py\n│  style.css\n│\n├─functions\n│  ├─commons\n│  │      excel.py\n│  │      excel_html.py\n│  │      github.py\n│  │      mail.py\n│  │      style.css\n│  │      translate.py\n│  │      wechat_api.py\n│  │      __init__.py\n│  │\n│  ├─requestinfo\n│  │      cnnvd_monitor.py\n│  │      github_monitor.py\n│  │      ms_monitor.py\n│  │      __init__.py\n│  │\n│  └─sql\n│          installdb.py\n│          sql_helper.py\n│\n└─log\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 文件说明\n\nmonitor.py文件是主文件，部署完成后直接运行就此文件可以。\n\ncommons目录下的文件为主要功能文件。\n\nrequestinfo目录下为监控目标的一些文件。\n\nsql目录下为数据库相关文件，installdb.py是用来生成数据库和日志文件的。\n\nlog目录为存放日志文件目录。\n\n\n# 功能介绍\n\n同时监控cnnvd、github、微软官方的漏洞消息。\n\n# cnnvd\n\n * 每天推送企业微信卡片消息\n * web端漏洞信息表格展示\n * 每周五统计漏洞数量（高危、中危、低危）\n * 高危漏洞信息醒目标注\n\n# 微软官方漏洞消息\n\n * 每天推送企业微信卡片消息\n * web端漏洞信息表格展示\n\n# github\n\n * 每天推送企业微信卡片消息\n * 点击卡片消息自动跳转对应github链接\n\n# 展示效果\n\n效果如下图\n\ncve\n\n当点击cnnvd的消息卡片时，会跳转到相对应的web端以表格形式展示，如下图：\n\ncnnvd\n\n点击微软漏洞消息的漏洞卡片时，也会跳转到相对应的web端表格展示，如下图：\n\n微软\n\n点击github的漏洞消息通知时，跳转到相对于的github地址，如下图：\n\ngithub\n\n\n# 项目部署\n\n\n# 前期准备\n\n * 开发语言：python3\n * 一台服务器(脚本跑在服务器上)\n * 一个域名(可选)\n\n首先安装依赖，如下：\n\nimport os\nimport time\nfrom io import bytesio\nimport xlwt\nfrom xlrd import open_workbook\nimport datetime\nimport dominate\nfrom dominate.tags import *\nimport requests\nimport smtplib\nfrom email.mime.text import mimetext\nfrom email.header import header\nimport hashlib\nfrom lxml import etree\nimport json\nfrom bs4 import beautifulsoup\nimport re\nimport sqlite3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n然后进行数据库初始化，初始化时生成log文件夹用来存放生成的日志文件。命令如下：\n\npython3 installdb.py\n\n\n1\n\n\n\n# 环境搭建\n\n因为要做web端表格展示，所以这里使用nginx做了目录浏览。服务器系统使用的是centos7，过程如下。\n\n首先使用yum源下载nginx，命令如下：\n\nyum install -y nginx\n\n\n1\n\n\n装好后，查看版本，检查是否安装成功，如下图：\n\n\n\n然后找到nginx的配置文件，具体位置为：\n\ncd /etc/nginx/\n\n\n1\n\n\n找到nginx.conf文件，对其中的server板块进行修改就可以了，主要是添加了末尾三行。\n\nserver {\n    listen       80;\n    listen       [::]:80;\n    server_name  _;\n   # root         /usr/share/nginx/html;\n    charset utf-8;\n    # load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n    location / {\n            root /usr/share/nginx/html/download;\n    autoindex on; #开启索引功能\n    autoindex_exact_size off; #关闭计算文件确切大小(bytes)\n    autoindex_localtime on; #显示本机时间\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n注意生成文件位置，我这里是/usr/share/nginx/html/download ，看个人爱好。\n\n如果修改，请修改monitor.py的24行和excel_html.py的11行。\n\nimage-20220122141836235\n\nimage-20220122142248502\n\n\n# 配置企业微信推送\n\n这个需要先到企业微信创建一个企业，并自建一个应用，获取到自定义应用的 secret和注册的企业 corpid，就可以了。修改位置在**wechat_api.py**文件****的14行至17行，如下图：\n\nimage-20220122142707821\n\n启动监控脚本，命令如下：\n\npython3 moniter.py\n\n\n1\n\n\n大功告成！！！",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"猫影视资源接口",frontmatter:{author:"xlc520",title:"猫影视资源接口",description:"猫影视资源接口-BiuBiuTV",time:"2022-02-09T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E7%8C%AB%E5%BD%B1%E8%A7%86.html",relativePath:"other/猫影视.md",key:"v-ea47bfcc",path:"/other/%E7%8C%AB%E5%BD%B1%E8%A7%86/",headers:[{level:3,title:"BiuBiuTV（支持添加片源接口）",slug:"biubiutv-支持添加片源接口",normalizedTitle:"biubiutv（支持添加片源接口）",charIndex:2},{level:3,title:"猫影视资源接口",slug:"猫影视资源接口",normalizedTitle:"猫影视资源接口",charIndex:35},{level:3,title:"下载",slug:"下载",normalizedTitle:"下载",charIndex:735},{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:17},{level:3,title:"其他接口：（有和上面重复）",slug:"其他接口-有和上面重复",normalizedTitle:"其他接口：（有和上面重复）",charIndex:1664},{level:2,title:"猫影视配置编辑器：",slug:"猫影视配置编辑器",normalizedTitle:"猫影视配置编辑器：",charIndex:2470},{level:2,title:"播放源",slug:"播放源",normalizedTitle:"播放源",charIndex:2530}],readingTime:{minutes:2.33,words:700},headersStr:"BiuBiuTV（支持添加片源接口） 猫影视资源接口 下载 接口 其他接口：（有和上面重复） 猫影视配置编辑器： 播放源",content:"# BiuBiuTV（支持添加片源接口）\n\n\n# MaoTV\n\n\n# 猫影视资源接口\n\n国内镜像：\n\n官方\n\n * https://raw.fastgit.org/xlc520/MaoTV/main/guanfang.json\n * https://cdn.jsdelivr.net/gh/xlc520/MaoTV@main/guanfang.json\n\nmao0209.json\n\n * https://raw.fastgit.org/xlc520/MaoTV/main/mao0209.json\n * https://cdn.jsdelivr.net/gh/xlc520/MaoTV@main/mao0209.json\n\nmao0208.json\n\n * https://raw.fastgit.org/xlc520/MaoTV/main/mao0208.json\n * https://cdn.jsdelivr.net/gh/xlc520/MaoTV@main/mao0208.json\n\nmao.json\n\n * fastgit：https://raw.fastgit.org/xlc520/MaoTV/main/mao.json\n * staticaly：https://cdn.staticaly.com/gh/xlc520/MaoTV@main/mao.json\n\n212757.json\n\n * https://raw.fastgit.org/xlc520/MaoTV/main/212757.json\n\n213013.json\n\n * https://raw.fastgit.org/xlc520/MaoTV/main/213013.json\n\n\n# 下载\n\n猫影视TV208版：片源接口大替换！稳定接口！能用才是王道~ https://pan.lanzoui.com/b0c3cb92f\n\n猫影视更新后空壳解决方案\n\n设置——当前配置接口输入\n\n\n# 接口\n\n2.0.8版本专用接口： 爬虫源 https://wds.ecsxs.com/212757.json\n\nhttps://tool.wotianna.com/mysjk.json\n\nhttps://wds.ecsxs.com/213821.json\n\nhttps://wds.ecsxs.com/213679.json\n\nhttps://wds.ecsxs.com/213766.txt\n\n2.0.8版本以下专用接口：\n\nhttps://wds.ecsxs.com/212757.json\n\nhttps://c1n.cn/2\n\nhttp://c1n.cn/mao\n\n————————————— 其它备用片源（主要适合2.0.8版以下）\n\n稳定源接口：\n\nhttps://wds.ecsxs.com/213013.json （比较全）\n\n含爬虫的接口https://wds.ecsxs.com/212757.json\n\nhttps://pastebin.com/raw/GG51y0JG\n\n备选接口\n\nhttps://wds.ecsxs.com/212010.json（可用爬虫源，阿房影视）\n\n备用接口\n\nhttps://tvapp.guilaile.cn/wp-content/uploads/2021/08/dshzjk.txt\n\n10.13新增\n\nhttps://wds.ecsxs.com/213313.json\n\n10月18日新增\n\nhttps://wds.ecsxs.com/213679.json\n\n10月25新增\n\nhttps://wds.ecsxs.com/213821.json\n\nhttps://tool.wotianna.com/mysjk.json\n\n10月30日\n\nhttps://wds.ecsxs.com/216537.json\n\n11.2 https://wds.ecsxs.com/216731.json\n\n\n# 其他接口：（有和上面重复）\n\nhttps://maoys.c1n.cn\n\nhttp://gg.gg/898900\n\nhttp://www.nihaogege.com/cat/yl.js\n\nhttps://pastebin.com/raw/FuMsfJWw\n\nhttps://tool.wotianna.com/mysjk.json\n\nhttps://wds.ecsxs.com/213821.json\n\nhttps://pglblb-1307091970.cos.ap-guangzhou.myqcloud.com/88.json\n\nhttps://pastebin.com/raw/d7spQMWr\n\nhttps://wds.ecsxs.com/212757.json\n\nhttps://wds.ecsxs.com/213679.json\n\nhttps://c1n.cn/cat\n\nhttp://gg.gg/cccvvv\n\nhttps://pastebin.com/raw/izVq5sXv\n\nhttps://wds.ecsxs.com/213013.json\n\nhttps://c1n.cn/mao\n\nhttps://api.jsonbin.io/b/618753564a56fb3dee0a896d\n\nhttps://wds.ecsxs.com/216537.json\n\nhttps://gitlab.com/GDaily1/cat_tv/-/raw/main/zh_tw_2.0.json\n\nhttps://wds.ecsxs.com/213766.txt\n\nhttps://wds.ecsxs.com/213313.json\n\n----------------------------------------\n\n----------------------------------------\n\n\n# 猫影视配置编辑器：\n\nhttps://catvod.github.io/CatVodTVJsonEditor/\n\n\n# 播放源\n\n猫影视接口搜集：http://ich.vaiwan.com/raw/share/maotv-sj.txt\n\n自动同步已更新（免翻流畅访问）：https://sub.ytzb.workers.dev/hstsws008/dizhi/-/raw/main/2345.json\n\n猫影视接口 https://pastebin.com/raw/d7spQMWr\n\nhttps://gitlab.com/hstsws008/dizhi/-/raw/main/2345.json\n\nhttps://c1n.cn/mao\n\nhttps://api.jsonbin.io/b/618753564a56fb3dee0a896d\n\nhttps://wds.ecsxs.com/216537.json\n\nhttps://gitlab.com/GDaily1/cat_tv/-/raw/main/zh_tw_2.0.json\n\nhttps://wds.ecsxs.com/213766.txt\n\nhttps://wds.ecsxs.com/213313.json\n\nhttps://wds.ecsxs.com/212757.json\n\nhttps://vipmods.net/texthost/raw/maojson-77\n\nhttps://91io.cn/s/9JoqbtO/666.txt\n\nhttps://91io.cn/s/pp2ADU9/Mao.txt\n\nhttps://wds.ecsxs.com/213679.json\n\nhttps://vipmods.net/texthost/raw/123-77197\n\nhttps://vipmods.net/texthost/raw/888-85395\n\nhttps://vipmods.net/texthost/raw/123-17492\n\nhttps://vipmods.net/texthost/raw/888-80906\n\nhttps://pastebin.com/raw/FuMsfJWw\n\nhttps://tool.wotianna.com/mysjk.json",normalizedContent:"# biubiutv（支持添加片源接口）\n\n\n# maotv\n\n\n# 猫影视资源接口\n\n国内镜像：\n\n官方\n\n * https://raw.fastgit.org/xlc520/maotv/main/guanfang.json\n * https://cdn.jsdelivr.net/gh/xlc520/maotv@main/guanfang.json\n\nmao0209.json\n\n * https://raw.fastgit.org/xlc520/maotv/main/mao0209.json\n * https://cdn.jsdelivr.net/gh/xlc520/maotv@main/mao0209.json\n\nmao0208.json\n\n * https://raw.fastgit.org/xlc520/maotv/main/mao0208.json\n * https://cdn.jsdelivr.net/gh/xlc520/maotv@main/mao0208.json\n\nmao.json\n\n * fastgit：https://raw.fastgit.org/xlc520/maotv/main/mao.json\n * staticaly：https://cdn.staticaly.com/gh/xlc520/maotv@main/mao.json\n\n212757.json\n\n * https://raw.fastgit.org/xlc520/maotv/main/212757.json\n\n213013.json\n\n * https://raw.fastgit.org/xlc520/maotv/main/213013.json\n\n\n# 下载\n\n猫影视tv208版：片源接口大替换！稳定接口！能用才是王道~ https://pan.lanzoui.com/b0c3cb92f\n\n猫影视更新后空壳解决方案\n\n设置——当前配置接口输入\n\n\n# 接口\n\n2.0.8版本专用接口： 爬虫源 https://wds.ecsxs.com/212757.json\n\nhttps://tool.wotianna.com/mysjk.json\n\nhttps://wds.ecsxs.com/213821.json\n\nhttps://wds.ecsxs.com/213679.json\n\nhttps://wds.ecsxs.com/213766.txt\n\n2.0.8版本以下专用接口：\n\nhttps://wds.ecsxs.com/212757.json\n\nhttps://c1n.cn/2\n\nhttp://c1n.cn/mao\n\n————————————— 其它备用片源（主要适合2.0.8版以下）\n\n稳定源接口：\n\nhttps://wds.ecsxs.com/213013.json （比较全）\n\n含爬虫的接口https://wds.ecsxs.com/212757.json\n\nhttps://pastebin.com/raw/gg51y0jg\n\n备选接口\n\nhttps://wds.ecsxs.com/212010.json（可用爬虫源，阿房影视）\n\n备用接口\n\nhttps://tvapp.guilaile.cn/wp-content/uploads/2021/08/dshzjk.txt\n\n10.13新增\n\nhttps://wds.ecsxs.com/213313.json\n\n10月18日新增\n\nhttps://wds.ecsxs.com/213679.json\n\n10月25新增\n\nhttps://wds.ecsxs.com/213821.json\n\nhttps://tool.wotianna.com/mysjk.json\n\n10月30日\n\nhttps://wds.ecsxs.com/216537.json\n\n11.2 https://wds.ecsxs.com/216731.json\n\n\n# 其他接口：（有和上面重复）\n\nhttps://maoys.c1n.cn\n\nhttp://gg.gg/898900\n\nhttp://www.nihaogege.com/cat/yl.js\n\nhttps://pastebin.com/raw/fumsfjww\n\nhttps://tool.wotianna.com/mysjk.json\n\nhttps://wds.ecsxs.com/213821.json\n\nhttps://pglblb-1307091970.cos.ap-guangzhou.myqcloud.com/88.json\n\nhttps://pastebin.com/raw/d7spqmwr\n\nhttps://wds.ecsxs.com/212757.json\n\nhttps://wds.ecsxs.com/213679.json\n\nhttps://c1n.cn/cat\n\nhttp://gg.gg/cccvvv\n\nhttps://pastebin.com/raw/izvq5sxv\n\nhttps://wds.ecsxs.com/213013.json\n\nhttps://c1n.cn/mao\n\nhttps://api.jsonbin.io/b/618753564a56fb3dee0a896d\n\nhttps://wds.ecsxs.com/216537.json\n\nhttps://gitlab.com/gdaily1/cat_tv/-/raw/main/zh_tw_2.0.json\n\nhttps://wds.ecsxs.com/213766.txt\n\nhttps://wds.ecsxs.com/213313.json\n\n----------------------------------------\n\n----------------------------------------\n\n\n# 猫影视配置编辑器：\n\nhttps://catvod.github.io/catvodtvjsoneditor/\n\n\n# 播放源\n\n猫影视接口搜集：http://ich.vaiwan.com/raw/share/maotv-sj.txt\n\n自动同步已更新（免翻流畅访问）：https://sub.ytzb.workers.dev/hstsws008/dizhi/-/raw/main/2345.json\n\n猫影视接口 https://pastebin.com/raw/d7spqmwr\n\nhttps://gitlab.com/hstsws008/dizhi/-/raw/main/2345.json\n\nhttps://c1n.cn/mao\n\nhttps://api.jsonbin.io/b/618753564a56fb3dee0a896d\n\nhttps://wds.ecsxs.com/216537.json\n\nhttps://gitlab.com/gdaily1/cat_tv/-/raw/main/zh_tw_2.0.json\n\nhttps://wds.ecsxs.com/213766.txt\n\nhttps://wds.ecsxs.com/213313.json\n\nhttps://wds.ecsxs.com/212757.json\n\nhttps://vipmods.net/texthost/raw/maojson-77\n\nhttps://91io.cn/s/9joqbto/666.txt\n\nhttps://91io.cn/s/pp2adu9/mao.txt\n\nhttps://wds.ecsxs.com/213679.json\n\nhttps://vipmods.net/texthost/raw/123-77197\n\nhttps://vipmods.net/texthost/raw/888-85395\n\nhttps://vipmods.net/texthost/raw/123-17492\n\nhttps://vipmods.net/texthost/raw/888-80906\n\nhttps://pastebin.com/raw/fumsfjww\n\nhttps://tool.wotianna.com/mysjk.json",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"电子书网站",frontmatter:{author:"xlc520",title:"电子书网站",description:"电子书网站",time:"2022-02-16T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E7%94%B5%E5%AD%90%E4%B9%A6%E7%BD%91%E7%AB%99.html",relativePath:"other/电子书网站.md",key:"v-2b68fff7",path:"/other/%E7%94%B5%E5%AD%90%E4%B9%A6%E7%BD%91%E7%AB%99/",headers:[{level:2,title:"计算机领域",slug:"计算机领域",normalizedTitle:"计算机领域",charIndex:12},{level:3,title:"1、图灵社区",slug:"_1、图灵社区",normalizedTitle:"1、图灵社区",charIndex:111},{level:3,title:"2、博文视点",slug:"_2、博文视点",normalizedTitle:"2、博文视点",charIndex:206},{level:3,title:"3、书栈网",slug:"_3、书栈网",normalizedTitle:"3、书栈网",charIndex:288},{level:3,title:"4、脚本之家",slug:"_4、脚本之家",normalizedTitle:"4、脚本之家",charIndex:374},{level:3,title:"5、Java知识分享网",slug:"_5、java知识分享网",normalizedTitle:"5、java知识分享网",charIndex:457},{level:3,title:"6、码农之家",slug:"_6、码农之家",normalizedTitle:"6、码农之家",charIndex:573},{level:3,title:"7、绿色资源网",slug:"_7、绿色资源网",normalizedTitle:"7、绿色资源网",charIndex:644},{level:3,title:"8、鸠摩搜书",slug:"_8、鸠摩搜书",normalizedTitle:"8、鸠摩搜书",charIndex:733},{level:3,title:"10、淘链客",slug:"_10、淘链客",normalizedTitle:"10、淘链客",charIndex:814},{level:3,title:"",slug:"",normalizedTitle:"",charIndex:0},{level:3,title:"11、hello girl",slug:"_11、hello-girl",normalizedTitle:"11、hello girl",charIndex:898},{level:3,title:"12、工联信息网",slug:"_12、工联信息网",normalizedTitle:"12、工联信息网",charIndex:1004},{level:3,title:"13、it熊猫",slug:"_13、it熊猫",normalizedTitle:"13、it熊猫",charIndex:1100},{level:3,title:"14、极客图书",slug:"_14、极客图书",normalizedTitle:"14、极客图书",charIndex:1176},{level:3,title:"15、搬书匠",slug:"_15、搬书匠",normalizedTitle:"15、搬书匠",charIndex:1268},{level:3,title:"16、ai books",slug:"_16、ai-books",normalizedTitle:"16、ai books",charIndex:1388},{level:3,title:"17、CSBook",slug:"_17、csbook",normalizedTitle:"17、csbook",charIndex:1469},{level:2,title:"其他领域",slug:"其他领域",normalizedTitle:"其他领域",charIndex:1700},{level:3,title:"书格",slug:"书格",normalizedTitle:"书格",charIndex:1709},{level:3,title:"田间小站",slug:"田间小站",normalizedTitle:"田间小站",charIndex:1830},{level:2,title:"",slug:"-2",normalizedTitle:"",charIndex:0},{level:3,title:"Standard Ebooks",slug:"standard-ebooks",normalizedTitle:"standard ebooks",charIndex:1954}],readingTime:{minutes:3.24,words:972},headersStr:"计算机领域 1、图灵社区 2、博文视点 3、书栈网 4、脚本之家 5、Java知识分享网 6、码农之家 7、绿色资源网 8、鸠摩搜书 10、淘链客  11、hello girl 12、工联信息网 13、it熊猫 14、极客图书 15、搬书匠 16、ai books 17、CSBook 其他领域 书格 田间小站  Standard Ebooks",content:"# 电子书网站\n\n\n# 计算机领域\n\n学习编程，有些书是必须要看的，实体书就不多说了，某宝、某东等等电商平台都能买到。\n\n如果是想做一些笔记或者不方便携带纸质书的时候，电子书是个不错的选择。（有条件请支持实体书）\n\n\n# 1、图灵社区\n\n * 地 址：https://www.ituring.com.cn/\n\n * 简 介：书籍比较全面的图书社区，电子书的价格是纸质书的一半。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 2、博文视点\n\n * 地 址：http://www.broadview.com.cn/\n\n * 简 介：博文视点也是有一些好书的。\n\n * 推荐指数：⭐⭐\n\n\n# 3、书栈网\n\n * 地 址：https://www.bookstack.cn/\n\n * 简 介：电子书门类比较全，支持在线查看和下载。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n# 4、脚本之家\n\n * 地 址：https://www.jb51.net/books/\n\n * 简 介：脚本之家电子书区有不少电子书\n\n * 推荐指数：⭐⭐⭐\n\n\n# 5、Java知识分享网\n\n * 地 址：http://www.java1234.com/a/javabook/\n\n * 简 介：如网站名字，主要分享Java知识，电子书一般不会挂太久，删的比较快。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 6、码农之家\n\n * 地 址：https://www.xz577.com/\n\n * 简 介：比较多的电子书\n\n * 推荐指数：⭐⭐⭐\n\n\n# 7、绿色资源网\n\n * 地 址：http://www.downcc.com/\n\n * 简 介：以软件下载为主，也有不少编程电子书，搜索就行了。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 8、鸠摩搜书\n\n * 地 址：https://www.jiumodiary.com/\n\n * 简 介：比较不错的图书搜索引擎。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 10、淘链客\n\n * 地 址：http://www.toplinks.cc/s/\n\n * 简 介：可以搜索电子书下载链接。\n\n * 推荐指数：⭐⭐\n\n\n\n\n#\n\n\n# 11、hello girl\n\n * 地 址：https://www.jqhtml.com/down/category/resources\n\n * 简 介：有不少电子书资源的网站。\n\n * 推荐指数：⭐⭐\n\n\n# 12、工联信息网\n\n * 地 址：https://www.glxxw2018.com/study/index.html\n\n * 简 介：有很多优质的技术资料。\n\n * 推荐指数：⭐⭐\n\n\n# 13、it熊猫\n\n * 地 址：https://itpanda.net/book/\n\n * 简 介：有数百本技术书籍。\n\n * 推荐指数：⭐⭐\n\n\n# 14、极客图书\n\n * 地 址：https://jikbook.com/\n\n * 简 介：可观的技术书籍资源。\n\n * 推荐指数：⭐⭐⭐\n\n【下载到本地部分书籍需要付费解压】\n\n\n# 15、搬书匠\n\n * 地 址：http://www.banshujiang.cn/category/programming_language/Java/page/10\n\n * 简 介：可观的技术书籍资源。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 16、ai books\n\n * 地 址：https://www.aibooks.cc/\n\n * 简 介：比较多的开发技术图书。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 17、CSBook\n\n * 地 址：https://github.com/iCSToCS/CSBook\n\n * 简 介：计算机类常用电子书整理，并且附带下载链接，包括Java，Python，Linux，Go，C，C++，数据结构与算法，人工智能，计算机基础，面试，设计模式，数据库，前端等书籍。\n\n * 网盘地址：https://pan.baidu.com/s/175TD0bg96iGPl-l1DnQ7yQ 提取码:v78n\n\n * 推荐指数：⭐⭐⭐\n\n\n# 其他领域\n\n\n# 书格\n\n传送门： https://new.shuge.org/\n\n书格是一个自由开放的在线古籍图书馆资源网站。\n\n致力于开放式分享、介绍、推荐有价值的古籍善本，并鼓励将文化艺术作品数字化归档，分享的内容限定为公共版权领域的书籍。\n\n\n\n\n# 田间小站\n\n**传送门：**https://www.tianfateng.cn/\n\n这是一个高质量英语免费学习和资源分享的宝库网站！里面有各种英语文摘，英语演讲，英语杂谈等等学习资料，可以帮助你提高英语口语、词汇、写作、阅读。\n\n\n\n\n#\n\n\n# Standard Ebooks\n\nStandard Ebooks\n\n\n\n一个对版权过期的英文小说进行精心排版，提供电子书下载的网站。",normalizedContent:"# 电子书网站\n\n\n# 计算机领域\n\n学习编程，有些书是必须要看的，实体书就不多说了，某宝、某东等等电商平台都能买到。\n\n如果是想做一些笔记或者不方便携带纸质书的时候，电子书是个不错的选择。（有条件请支持实体书）\n\n\n# 1、图灵社区\n\n * 地 址：https://www.ituring.com.cn/\n\n * 简 介：书籍比较全面的图书社区，电子书的价格是纸质书的一半。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 2、博文视点\n\n * 地 址：http://www.broadview.com.cn/\n\n * 简 介：博文视点也是有一些好书的。\n\n * 推荐指数：⭐⭐\n\n\n# 3、书栈网\n\n * 地 址：https://www.bookstack.cn/\n\n * 简 介：电子书门类比较全，支持在线查看和下载。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n# 4、脚本之家\n\n * 地 址：https://www.jb51.net/books/\n\n * 简 介：脚本之家电子书区有不少电子书\n\n * 推荐指数：⭐⭐⭐\n\n\n# 5、java知识分享网\n\n * 地 址：http://www.java1234.com/a/javabook/\n\n * 简 介：如网站名字，主要分享java知识，电子书一般不会挂太久，删的比较快。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 6、码农之家\n\n * 地 址：https://www.xz577.com/\n\n * 简 介：比较多的电子书\n\n * 推荐指数：⭐⭐⭐\n\n\n# 7、绿色资源网\n\n * 地 址：http://www.downcc.com/\n\n * 简 介：以软件下载为主，也有不少编程电子书，搜索就行了。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 8、鸠摩搜书\n\n * 地 址：https://www.jiumodiary.com/\n\n * 简 介：比较不错的图书搜索引擎。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 10、淘链客\n\n * 地 址：http://www.toplinks.cc/s/\n\n * 简 介：可以搜索电子书下载链接。\n\n * 推荐指数：⭐⭐\n\n\n\n\n#\n\n\n# 11、hello girl\n\n * 地 址：https://www.jqhtml.com/down/category/resources\n\n * 简 介：有不少电子书资源的网站。\n\n * 推荐指数：⭐⭐\n\n\n# 12、工联信息网\n\n * 地 址：https://www.glxxw2018.com/study/index.html\n\n * 简 介：有很多优质的技术资料。\n\n * 推荐指数：⭐⭐\n\n\n# 13、it熊猫\n\n * 地 址：https://itpanda.net/book/\n\n * 简 介：有数百本技术书籍。\n\n * 推荐指数：⭐⭐\n\n\n# 14、极客图书\n\n * 地 址：https://jikbook.com/\n\n * 简 介：可观的技术书籍资源。\n\n * 推荐指数：⭐⭐⭐\n\n【下载到本地部分书籍需要付费解压】\n\n\n# 15、搬书匠\n\n * 地 址：http://www.banshujiang.cn/category/programming_language/java/page/10\n\n * 简 介：可观的技术书籍资源。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 16、ai books\n\n * 地 址：https://www.aibooks.cc/\n\n * 简 介：比较多的开发技术图书。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 17、csbook\n\n * 地 址：https://github.com/icstocs/csbook\n\n * 简 介：计算机类常用电子书整理，并且附带下载链接，包括java，python，linux，go，c，c++，数据结构与算法，人工智能，计算机基础，面试，设计模式，数据库，前端等书籍。\n\n * 网盘地址：https://pan.baidu.com/s/175td0bg96igpl-l1dnq7yq 提取码:v78n\n\n * 推荐指数：⭐⭐⭐\n\n\n# 其他领域\n\n\n# 书格\n\n传送门： https://new.shuge.org/\n\n书格是一个自由开放的在线古籍图书馆资源网站。\n\n致力于开放式分享、介绍、推荐有价值的古籍善本，并鼓励将文化艺术作品数字化归档，分享的内容限定为公共版权领域的书籍。\n\n\n\n\n# 田间小站\n\n**传送门：**https://www.tianfateng.cn/\n\n这是一个高质量英语免费学习和资源分享的宝库网站！里面有各种英语文摘，英语演讲，英语杂谈等等学习资料，可以帮助你提高英语口语、词汇、写作、阅读。\n\n\n\n\n#\n\n\n# standard ebooks\n\nstandard ebooks\n\n\n\n一个对版权过期的英文小说进行精心排版，提供电子书下载的网站。",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"白嫖机场",frontmatter:{author:"xlc520",title:"白嫖机场",description:"白嫖机场",time:"2022-02-18T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E7%99%BD%E5%AB%96%E6%9C%BA%E5%9C%BA.html",relativePath:"other/白嫖机场.md",key:"v-7b85727a",path:"/other/%E7%99%BD%E5%AB%96%E6%9C%BA%E5%9C%BA/",readingTime:{minutes:3.49,words:1046},headersStr:null,content:"# 白嫖机场\n\n2022年2月7日18:32:31\n\n日语迷 https://free.riyumi.xyz 0元购\n\n海淼云 https://cloud.joker007.top 注册送。\n\n几鸡 https://a.luxury/signin 注册送。\n\n免费V2ray https://www.mfv2ray.top 注册送。\n\nNovaCloud https://www.q88q.cyou 注册送。\n\n狗子快跑 https://www.freedog.cyou 0元购。\n\nikuuu https://ikuuu.live 注册送。\n\n白给 https://portal.getfree.cloud/auth/register 注册送。\n\n神器 https://v2r.proxypools.top/#/register 白嫖码0元购。\n\nAntlink https://antlink.icu 注册送。\n\n闪烁科技 https://bulink.xyz 注册送。\n\n蔡徐坤 https://www.cxkv2.xyz 注册送。\n\nflyxxl http://flyxxl.holiganfan.com 输入白嫖码qifei即可0元购\n\n免流骚流量站 https://mlsao.xyz 0元购\n\nMarsLink https://ss.marslink.org 注册送\n\n善云 https://shancloud.xyz 0元购\n\n西部世界 https://xbsj9729.website/portal/account/login 注册送\n\n扶梯 https://x.futi.online 注册送\n\nEVA https://eva01.cc 0元购\n\nQTY https://www.qtycloud.xyz 注册送\n\nEM https://yyds.emovpn.top 0元购\n\n奇点 https://t.me/qdyun_bot TG直接打开就行\n\n飞速云 https://feisucloud.pw 注册送\n\nFlyss https://www.flyss.xyz 注册送\n\n猪猪 https://zhuzhu12.xyz 注册送\n\nvproxy https://vproxy.us/#/register 注册送\n\n速云 https://yooo.me/ 注册送\n\npuup https://pupu.live/auth/register 注册送\n\nPikap https://pikap.me 注册送\n\n小鸟云 https://niaoyun.me/auth/register 注册送\n\nfq https://fanqianga.top/user 注册送\n\nportx https://portx.cc/auth/register 注册送\n\nscoc https://www.scoc.cc/ 注册送\n\n天翼 https://pupuup.tools/ 注册送\n\nWelink https://t.me/welink345bot 注册送\n\n摆烂云 https://ayyy.space/ 0元购\n\n苏星云 https://www.suxingcloud.com/ 注册送\n\n达西 https://net.dacy.cc/ 0元购\n\n公元云 https://www.v2gyy.com 0元购白嫖码：RnIZT1Xw\n\n加速器 https://yun.mooncloud.bike 注册送\n\n阶梯云 https://jietiyun.xyz/#/register 0元购白嫖码：白嫖立减百分百\n\nT加速 https://telegram.me/TJiaSu_Bot TG打开就行了不用注册。\n\nX扶梯 : 点此进入 (https://suo.yt/rnvR4gB)\n注册免费试用30天独享50G流量 邮箱注册，无需绑定。\n\nQTY Cloud：点此进入 (https://suo.yt/B0ume9Z) 注册免费试用30天独享10G流量，每天签到也可白嫖，邮箱注册，无需绑定。\n\nPUPUUP：点此进入 (https://suo.yt/JhNKwu2) 注册免费试用14天独享20G流量， 每天签到也可白嫖， 邮箱注册，无需绑定\n\n几鸡机场:学习助理 (https://suo.yt/VtF0nla) 注册免费白嫖10G,每天签到也可白嫖，无需邮箱注册，无需绑定\n\nBulink 永久免费机场:点此获取 (https://bulink.xyz/) 邮箱注册(非一次性邮箱)，无需绑定 每月送5g,2099年到期。\n\nPikap机场:点此进入 (https://pikap.me/) 邮箱注册 一年20g，无需绑定\n\nMofast机场:点此进入 (https://www.mofast.cloud/) 可用谷歌邮箱小号无限注册，每次20G，登录后直接一键订阅。\n\n爱探索机场:点此进入 (https://suo.yt/I5Kxw5y) 邮箱注册免费体验一天66g ,0元购买一个月33g 无需绑定\n\n新小鸟云:立即上车 (https://suo.yt/yA597j7) 注册立即送1TB超大流量 签到可无限续杯 可用一次性邮箱注册\n\n原Malio机场：点此进入 (https://suo.yt/crMKJFx) 现在数据清空 需邮箱重新注册 送永久白嫖 可用一次性邮箱无限注册 无需绑定\n\n米速云机场:点此进入 (https://suo.yt/CEr1BtB) 邮箱注册送50g,永久不删户,签到可叠加流量 无需绑定\n\nDot86机场：点此进入 (https://dot86.xyz//) 邮箱注册永久白嫖 每月200g，无需绑定\n\nVS机场：点此进入 (https://suo.yt/oWUquRL) 邮箱注册送30g/7天 可用outlook邮箱无限注册。 无需绑定\n\nVPROXY机场：点此进入 (https://suo.yt/VjBBFtX) 邮箱注册送1T/年 可用outlook邮箱无限注册。 无需绑定\n\n公元云机场：点此进入 (https://suo.yt/tdvewoW) 邮箱注册送5g/3天 解锁Nerflix 还送一个月青铜会员兑换码 可用outlook邮箱无限注册 无需绑定 码：gyy\n\n达西公益机场：点此进入 (https://suo.yt/Oz6yybD) 邮箱注册 送永久白嫖 可无限重置流量 无需绑定\n\n青藤树下机场：点此进入 (https://suo.yt/amfSb0G) 邮箱注册 送999g/年 无需绑定\n\n果园公益机场:点此进入 (http://878887.xyz/) 邮箱注册0元购，月送1T. 无需绑定",normalizedContent:"# 白嫖机场\n\n2022年2月7日18:32:31\n\n日语迷 https://free.riyumi.xyz 0元购\n\n海淼云 https://cloud.joker007.top 注册送。\n\n几鸡 https://a.luxury/signin 注册送。\n\n免费v2ray https://www.mfv2ray.top 注册送。\n\nnovacloud https://www.q88q.cyou 注册送。\n\n狗子快跑 https://www.freedog.cyou 0元购。\n\nikuuu https://ikuuu.live 注册送。\n\n白给 https://portal.getfree.cloud/auth/register 注册送。\n\n神器 https://v2r.proxypools.top/#/register 白嫖码0元购。\n\nantlink https://antlink.icu 注册送。\n\n闪烁科技 https://bulink.xyz 注册送。\n\n蔡徐坤 https://www.cxkv2.xyz 注册送。\n\nflyxxl http://flyxxl.holiganfan.com 输入白嫖码qifei即可0元购\n\n免流骚流量站 https://mlsao.xyz 0元购\n\nmarslink https://ss.marslink.org 注册送\n\n善云 https://shancloud.xyz 0元购\n\n西部世界 https://xbsj9729.website/portal/account/login 注册送\n\n扶梯 https://x.futi.online 注册送\n\neva https://eva01.cc 0元购\n\nqty https://www.qtycloud.xyz 注册送\n\nem https://yyds.emovpn.top 0元购\n\n奇点 https://t.me/qdyun_bot tg直接打开就行\n\n飞速云 https://feisucloud.pw 注册送\n\nflyss https://www.flyss.xyz 注册送\n\n猪猪 https://zhuzhu12.xyz 注册送\n\nvproxy https://vproxy.us/#/register 注册送\n\n速云 https://yooo.me/ 注册送\n\npuup https://pupu.live/auth/register 注册送\n\npikap https://pikap.me 注册送\n\n小鸟云 https://niaoyun.me/auth/register 注册送\n\nfq https://fanqianga.top/user 注册送\n\nportx https://portx.cc/auth/register 注册送\n\nscoc https://www.scoc.cc/ 注册送\n\n天翼 https://pupuup.tools/ 注册送\n\nwelink https://t.me/welink345bot 注册送\n\n摆烂云 https://ayyy.space/ 0元购\n\n苏星云 https://www.suxingcloud.com/ 注册送\n\n达西 https://net.dacy.cc/ 0元购\n\n公元云 https://www.v2gyy.com 0元购白嫖码：rnizt1xw\n\n加速器 https://yun.mooncloud.bike 注册送\n\n阶梯云 https://jietiyun.xyz/#/register 0元购白嫖码：白嫖立减百分百\n\nt加速 https://telegram.me/tjiasu_bot tg打开就行了不用注册。\n\nx扶梯 : 点此进入 (https://suo.yt/rnvr4gb)\n注册免费试用30天独享50g流量 邮箱注册，无需绑定。\n\nqty cloud：点此进入 (https://suo.yt/b0ume9z) 注册免费试用30天独享10g流量，每天签到也可白嫖，邮箱注册，无需绑定。\n\npupuup：点此进入 (https://suo.yt/jhnkwu2) 注册免费试用14天独享20g流量， 每天签到也可白嫖， 邮箱注册，无需绑定\n\n几鸡机场:学习助理 (https://suo.yt/vtf0nla) 注册免费白嫖10g,每天签到也可白嫖，无需邮箱注册，无需绑定\n\nbulink 永久免费机场:点此获取 (https://bulink.xyz/) 邮箱注册(非一次性邮箱)，无需绑定 每月送5g,2099年到期。\n\npikap机场:点此进入 (https://pikap.me/) 邮箱注册 一年20g，无需绑定\n\nmofast机场:点此进入 (https://www.mofast.cloud/) 可用谷歌邮箱小号无限注册，每次20g，登录后直接一键订阅。\n\n爱探索机场:点此进入 (https://suo.yt/i5kxw5y) 邮箱注册免费体验一天66g ,0元购买一个月33g 无需绑定\n\n新小鸟云:立即上车 (https://suo.yt/ya597j7) 注册立即送1tb超大流量 签到可无限续杯 可用一次性邮箱注册\n\n原malio机场：点此进入 (https://suo.yt/crmkjfx) 现在数据清空 需邮箱重新注册 送永久白嫖 可用一次性邮箱无限注册 无需绑定\n\n米速云机场:点此进入 (https://suo.yt/cer1btb) 邮箱注册送50g,永久不删户,签到可叠加流量 无需绑定\n\ndot86机场：点此进入 (https://dot86.xyz//) 邮箱注册永久白嫖 每月200g，无需绑定\n\nvs机场：点此进入 (https://suo.yt/owuqurl) 邮箱注册送30g/7天 可用outlook邮箱无限注册。 无需绑定\n\nvproxy机场：点此进入 (https://suo.yt/vjbbftx) 邮箱注册送1t/年 可用outlook邮箱无限注册。 无需绑定\n\n公元云机场：点此进入 (https://suo.yt/tdvewow) 邮箱注册送5g/3天 解锁nerflix 还送一个月青铜会员兑换码 可用outlook邮箱无限注册 无需绑定 码：gyy\n\n达西公益机场：点此进入 (https://suo.yt/oz6yybd) 邮箱注册 送永久白嫖 可无限重置流量 无需绑定\n\n青藤树下机场：点此进入 (https://suo.yt/amfsb0g) 邮箱注册 送999g/年 无需绑定\n\n果园公益机场:点此进入 (http://878887.xyz/) 邮箱注册0元购，月送1t. 无需绑定",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"直播源",frontmatter:{author:"xlc520",title:"直播源",description:"直播源",time:"2022-01-29T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E7%9B%B4%E6%92%AD%E6%BA%90.html",relativePath:"other/直播源.md",key:"v-11822864",path:"/other/%E7%9B%B4%E6%92%AD%E6%BA%90/",readingTime:{minutes:.08,words:25},headersStr:null,content:"# 直播源\n\n * iptv直播源，取自某电视直播源\n * https://gitee.com/bahtyar/iptv",normalizedContent:"# 直播源\n\n * iptv直播源，取自某电视直播源\n * https://gitee.com/bahtyar/iptv",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"程序员常逛的网站",frontmatter:{author:"xlc520",title:"程序员常逛的网站",description:"程序员常逛的网站",time:"2022-02-17T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E9%80%9B%E7%9A%84%E7%BD%91%E7%AB%99.html",relativePath:"other/程序员常逛的网站.md",key:"v-16a70b21",path:"/other/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E9%80%9B%E7%9A%84%E7%BD%91%E7%AB%99/",headers:[{level:3,title:"一、在线教程",slug:"一、在线教程",normalizedTitle:"一、在线教程",charIndex:15},{level:3,title:"1、http://how2j.cn",slug:"_1、http-how2j-cn",normalizedTitle:"1、http://how2j.cn",charIndex:90},{level:3,title:"2、w3cschool",slug:"_2、w3cschool",normalizedTitle:"2、w3cschool",charIndex:196},{level:3,title:"3、菜鸟教程",slug:"_3、菜鸟教程",normalizedTitle:"3、菜鸟教程",charIndex:297},{level:3,title:"4、易百教程",slug:"_4、易百教程",normalizedTitle:"4、易百教程",charIndex:400},{level:3,title:"9、并发编程网",slug:"_9、并发编程网",normalizedTitle:"9、并发编程网",charIndex:479},{level:3,title:"10、http://jenkov.com",slug:"_10、http-jenkov-com",normalizedTitle:"10、http://jenkov.com",charIndex:578},{level:3,title:"11、http://baeldung.com",slug:"_11、http-baeldung-com",normalizedTitle:"11、http://baeldung.com",charIndex:687},{level:3,title:"二、视频教程",slug:"二、视频教程",normalizedTitle:"二、视频教程",charIndex:797},{level:3,title:"1、B站",slug:"_1、b站",normalizedTitle:"1、b站",charIndex:868},{level:3,title:"2、慕课网",slug:"_2、慕课网",normalizedTitle:"2、慕课网",charIndex:990},{level:3,title:"3、中国大学MOOC",slug:"_3、中国大学mooc",normalizedTitle:"3、中国大学mooc",charIndex:1094},{level:3,title:"4、网易云课堂",slug:"_4、网易云课堂",normalizedTitle:"4、网易云课堂",charIndex:1184},{level:3,title:"5、实验楼",slug:"_5、实验楼",normalizedTitle:"5、实验楼",charIndex:1266},{level:3,title:"6、我要自学网",slug:"_6、我要自学网",normalizedTitle:"6、我要自学网",charIndex:1346},{level:3,title:"7、大学生自学网",slug:"_7、大学生自学网",normalizedTitle:"7、大学生自学网",charIndex:1420},{level:3,title:"8、极客学院",slug:"_8、极客学院",normalizedTitle:"8、极客学院",charIndex:1507},{level:2,title:"",slug:"",normalizedTitle:"",charIndex:0},{level:2,title:"四、官网",slug:"四、官网",normalizedTitle:"四、官网",charIndex:1598},{level:3,title:"1、Java",slug:"_1、java",normalizedTitle:"1、java",charIndex:1720},{level:3,title:"2、Spring",slug:"_2、spring",normalizedTitle:"2、spring",charIndex:1870},{level:3,title:"3、MySQL",slug:"_3、mysql",normalizedTitle:"3、mysql",charIndex:1964},{level:3,title:"4、MyBatis",slug:"_4、mybatis",normalizedTitle:"4、mybatis",charIndex:2039},{level:3,title:"5、Vue.js",slug:"_5、vue-js",normalizedTitle:"5、vue.js",charIndex:2169},{level:3,title:"6、Linux",slug:"_6、linux",normalizedTitle:"6、linux",charIndex:2265},{level:3,title:"7、Git",slug:"_7、git",normalizedTitle:"7、git",charIndex:2347},{level:3,title:"8、Dubbo",slug:"_8、dubbo",normalizedTitle:"8、dubbo",charIndex:2433},{level:3,title:"9、Redis",slug:"_9、redis",normalizedTitle:"9、redis",charIndex:2550},{level:3,title:"五、国内博客社区",slug:"五、国内博客社区",normalizedTitle:"五、国内博客社区",charIndex:2627},{level:3,title:"1、CSDN",slug:"_1、csdn",normalizedTitle:"1、csdn",charIndex:2687},{level:3,title:"2、博客园",slug:"_2、博客园",normalizedTitle:"2、博客园",charIndex:2792},{level:3,title:"3、掘金",slug:"_3、掘金",normalizedTitle:"3、掘金",charIndex:2927},{level:3,title:"4、简书",slug:"_4、简书",normalizedTitle:"4、简书",charIndex:3037},{level:3,title:"5、思否",slug:"_5、思否",normalizedTitle:"5、思否",charIndex:3124},{level:3,title:"6、开源中国",slug:"_6、开源中国",normalizedTitle:"6、开源中国",charIndex:3204},{level:3,title:"7、http://51CTO.COM",slug:"_7、http-51cto-com",normalizedTitle:"7、http://51cto.com",charIndex:3280},{level:3,title:"8、V2EX",slug:"_8、v2ex",normalizedTitle:"8、v2ex",charIndex:3367},{level:3,title:"9、腾讯云社区",slug:"_9、腾讯云社区",normalizedTitle:"9、腾讯云社区",charIndex:3446},{level:3,title:"10、阿里云社区",slug:"_10、阿里云社区",normalizedTitle:"10、阿里云社区",charIndex:3537},{level:3,title:"11、开发者头条",slug:"_11、开发者头条",normalizedTitle:"11、开发者头条",charIndex:3615},{level:3,title:"12、GitChat",slug:"_12、gitchat",normalizedTitle:"12、gitchat",charIndex:3688},{level:3,title:"13、知乎",slug:"_13、知乎",normalizedTitle:"13、知乎",charIndex:3762},{level:3,title:"六、国外技术博客社区",slug:"六、国外技术博客社区",normalizedTitle:"六、国外技术博客社区",charIndex:3883},{level:3,title:"1、Stack Overflow",slug:"_1、stack-overflow",normalizedTitle:"1、stack overflow",charIndex:3974},{level:3,title:"2、http://dev.io",slug:"_2、http-dev-io",normalizedTitle:"2、http://dev.io",charIndex:4096},{level:3,title:"3、DZone",slug:"_3、dzone",normalizedTitle:"3、dzone",charIndex:4177},{level:3,title:"4、Bytes",slug:"_4、bytes",normalizedTitle:"4、bytes",charIndex:4271},{level:3,title:"5、Google Developers",slug:"_5、google-developers",normalizedTitle:"5、google developers",charIndex:4356},{level:3,title:"七、小微型博客",slug:"七、小微型博客",normalizedTitle:"七、小微型博客",charIndex:4455},{level:3,title:"1、美团技术团队",slug:"_1、美团技术团队",normalizedTitle:"1、美团技术团队",charIndex:4577},{level:3,title:"2、阮一峰的网络日志",slug:"_2、阮一峰的网络日志",normalizedTitle:"2、阮一峰的网络日志",charIndex:4666},{level:3,title:"3、Spring Boot中文导航",slug:"_3、spring-boot中文导航",normalizedTitle:"3、spring boot中文导航",charIndex:4767},{level:3,title:"4、Spring Cloud中文导航",slug:"_4、spring-cloud中文导航",normalizedTitle:"4、spring cloud中文导航",charIndex:4876},{level:3,title:"5、Web前端导航",slug:"_5、web前端导航",normalizedTitle:"5、web前端导航",charIndex:5042},{level:3,title:"6、Spring For All",slug:"_6、spring-for-all",normalizedTitle:"6、spring for all",charIndex:5166},{level:3,title:"7、廖雪峰的官方网站",slug:"_7、廖雪峰的官方网站",normalizedTitle:"7、廖雪峰的官方网站",charIndex:5267},{level:3,title:"8、bugstack",slug:"_8、bugstack",normalizedTitle:"8、bugstack",charIndex:5364},{level:3,title:"9、Java技术驿站",slug:"_9、java技术驿站",normalizedTitle:"9、java技术驿站",charIndex:5463},{level:3,title:"10、酷壳",slug:"_10、酷壳",normalizedTitle:"10、酷壳",charIndex:5545},{level:3,title:"11、床长人工智能教程",slug:"_11、床长人工智能教程",normalizedTitle:"11、床长人工智能教程",charIndex:5626},{level:3,title:"12、五分钟学算法",slug:"_12、五分钟学算法",normalizedTitle:"12、五分钟学算法",charIndex:5743},{level:3,title:"13、犬小哈教程网",slug:"_13、犬小哈教程网",normalizedTitle:"13、犬小哈教程网",charIndex:5846},{level:3,title:"15、原创技术大联盟",slug:"_15、原创技术大联盟",normalizedTitle:"15、原创技术大联盟",charIndex:5938},{level:3,title:"八、开源社区",slug:"八、开源社区",normalizedTitle:"八、开源社区",charIndex:6062},{level:3,title:"1、GitHub",slug:"_1、github",normalizedTitle:"1、github",charIndex:6114},{level:3,title:"2、码云",slug:"_2、码云",normalizedTitle:"2、码云",charIndex:6206},{level:3,title:"九、面试刷题",slug:"九、面试刷题",normalizedTitle:"九、面试刷题",charIndex:6338},{level:3,title:"1、LeetCode",slug:"_1、leetcode",normalizedTitle:"1、leetcode",charIndex:6349},{level:3,title:"2、LintCode",slug:"_2、lintcode",normalizedTitle:"2、lintcode",charIndex:6439},{level:3,title:"3、牛客网",slug:"_3、牛客网",normalizedTitle:"3、牛客网",charIndex:6525},{level:2,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:6608}],readingTime:{minutes:16.44,words:4931},headersStr:"一、在线教程 1、http://how2j.cn 2、w3cschool 3、菜鸟教程 4、易百教程 9、并发编程网 10、http://jenkov.com 11、http://baeldung.com 二、视频教程 1、B站 2、慕课网 3、中国大学MOOC 4、网易云课堂 5、实验楼 6、我要自学网 7、大学生自学网 8、极客学院  四、官网 1、Java 2、Spring 3、MySQL 4、MyBatis 5、Vue.js 6、Linux 7、Git 8、Dubbo 9、Redis 五、国内博客社区 1、CSDN 2、博客园 3、掘金 4、简书 5、思否 6、开源中国 7、http://51CTO.COM 8、V2EX 9、腾讯云社区 10、阿里云社区 11、开发者头条 12、GitChat 13、知乎 六、国外技术博客社区 1、Stack Overflow 2、http://dev.io 3、DZone 4、Bytes 5、Google Developers 七、小微型博客 1、美团技术团队 2、阮一峰的网络日志 3、Spring Boot中文导航 4、Spring Cloud中文导航 5、Web前端导航 6、Spring For All 7、廖雪峰的官方网站 8、bugstack 9、Java技术驿站 10、酷壳 11、床长人工智能教程 12、五分钟学算法 13、犬小哈教程网 15、原创技术大联盟 八、开源社区 1、GitHub 2、码云 九、面试刷题 1、LeetCode 2、LintCode 3、牛客网 其他",content:"# 程序员常逛的网站\n\n\n# 一、在线教程\n\n首先列出一些在线教程网站，这些在线教程网站通常都比较适合入门，可以作为开发学习路上的第一个阶梯，也可以作为工作中的在线文档。\n\n\n# 1、http://how2j.cn\n\n * 地 址：https://how2j.cn/\n\n * 简 介：一个 Java 全栈开发教程网站，内容全面，简洁易懂，非常适合入门。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n# 2、w3cschool\n\n * 地 址：https://www.w3cschool.cn/\n\n * 简 介：前端和脚本语言为主的在线教程网站，前端的内容非常不错。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n# 3、菜鸟教程\n\n * 地 址：https://www.runoob.com/\n\n * 简 介：和 w3cschool 类似的在线教程网站，前端学习看这两个网站就够了。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n# 4、易百教程\n\n * 地 址：https://www.yiibai.com/\n\n * 简 介：内容比较全面的在线教程网站。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 9、并发编程网\n\n * 地 址：http://ifeve.com/\n\n * 简 介：比较不错的技术网站，以Java为主，关注并发、NIO、JVM、框架等方面的内容。\n\n * 推荐指数：⭐⭐\n\n\n# 10、http://jenkov.com\n\n * 地 址：http://tutorials.jenkov.com/\n\n * 简 介：一个国外的技术网站，提供了非常不错的Java教程。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 11、http://baeldung.com\n\n * 地 址：https://www.baeldung.com/\n\n * 简 介：也是一个国外的技术网站，提供了非常不错的Java教程。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 二、视频教程\n\n上面的在线教程网站以文字性内容为主，同样收藏了一些以视频为主的一些网站，相比较而言，更容易上手，当然，也更加耗时间。\n\n\n# 1、B站\n\n * 地 址：https://www.bilibili.com/\n\n * 简 介：没错，bilibili也可以用来学习，除了番剧、鬼畜之外，b站同样有非常多的高质量的编程教学视频，搜索就行了。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n# 2、慕课网\n\n * 地 址：https://www.imooc.com/\n\n * 简 介：比较不错的编程视频教学网站，可以找到比较体系的东西，当然，有些内容要花钱就是了。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n# 3、中国大学MOOC\n\n * 地 址：https://www.icourse163.org/\n\n * 简 介：有很多名校的课程，当然不止CS。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n# 4、网易云课堂\n\n * 地 址：https://study.163.com\n\n * 简 介：有一些计算机编程方面的视频教程。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 5、实验楼\n\n * 地 址：https://www.lanqiao.cn/courses/\n\n * 简 介：IT技术课程网站。\n\n * 推荐指数：⭐⭐\n\n\n# 6、我要自学网\n\n * 地 址：（敏感词，自行百度）\n\n * 简 介：比较多的自学教程，有程序设计内容的分类。\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 7、大学生自学网\n\n * 地 址：http://v.dxsbb.com/jisuanji/\n\n * 简 介：有一些计算机软件的大学课程。\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 8、极客学院\n\n * 地 址：https://www.jikexueyuan.com/\n\n * 简 介：IT编程课程网站，付费内容居多。\n\n * 推荐指数：⭐⭐\n\n\n\n\n#\n\n\n# 四、官网\n\n毫无疑问，一项技术，最权威的文档一定是它的官方文档，所有的教程、书籍都是直接或者间接在官方相关文档的基础上完成。所以，编程学习，后面最好还是要看官网的。当然，官网大部分都是英文——其实配合一些翻译插件，没有想象中的那么难。\n\n\n# 1、Java\n\n * 地 址：https://www.java.com/zh_CN/ 、https://docs.oracle.com/en/java/javase/index.html\n\n * 简 介：这个不需要多介绍，Java官网和Java官方API。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、Spring\n\n * 地 址：https://spring.io/\n\n * 简 介：毫无疑问Spring已经成为Java EE事实上的标准。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 3、MySQL\n\n * 地 址：https://www.mysql.com/\n\n * 简 介：MySQL官网\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 4、MyBatis\n\n * 地 址：https://mybatis.org/mybatis-3/zh/index.html\n\n * 简 介：国内最流行的Java持久层框架，而且幸运的是，MyBatis文档是有中文版的。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 5、Vue.js\n\n * 地 址：https://cn.vuejs.org/\n\n * 简 介：国内最流行的前端SOP框架，Vue.js的文档是中文的。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 6、Linux\n\n * 地 址：https://www.linux.org/\n\n * 简 介：后端程序员必会的Linux.\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 7、Git\n\n * 地 址：https://git-scm.com/\n\n * 简 介：版本管理推荐用Git，同样有中文版本的文档。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 8、Dubbo\n\n * 地 址：http://dubbo.apache.org/zh-cn/\n\n * 简 介：一款高性能的Java RPC框架，国内用的还是比较广泛，源于阿里，中文文档是有的。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 9、Redis\n\n * 地 址：https://redis.io/\n\n * 简 介：最流行的No SQL数据库。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 五、国内博客社区\n\n了解技术动态、解决各种问题都会用到技术博客。有些优质博主同样创作了一些比较优秀的技术教程。\n\n\n# 1、CSDN\n\n * 地 址：https://blog.csdn.net/kexuanxiu1163\n\n * 简 介：最大的中文技术博客社区，内容最多，SEO做的也不错。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 2、博客园\n\n * 地 址：https://www.cnblogs.com/\n\n * 简 介：老牌中文技术博客社区，博客质量比较高，商业化气息也比较淡，之前广为诟病的UI风格也在今年进行了改进，自定义主题也让能让博客百花争艳。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 3、掘金\n\n * 地 址：https://juejin.im/user/4230576474426685\n\n * 简 介：UI做的最漂亮的中文技术博客社区，内容以前端和面试居多。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 4、简书\n\n * 地 址：https://www.jianshu.com/\n\n * 简 介：并不是纯粹的技术博客社区，很多伤春悲秋的东西。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 5、思否\n\n * 地 址：https://segmentfault.com/\n\n * 简 介：包含博客、问答的技术社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 6、开源中国\n\n * 地 址：https://www.oschina.net\n\n * 简 介：一个技术博客社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 7、http://51CTO.COM\n\n * 地 址: https://www.51cto.com/\n\n * 简 介：一个IT技术网站。\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 8、V2EX\n\n * 地 址: https://www.v2ex.com\n\n * 简 介：逼格很高，只支持谷歌邮箱登录。\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 9、腾讯云社区\n\n * 地 址: https://cloud.tencent.com/developer\n\n * 简 介：腾讯云的开发者社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 10、阿里云社区\n\n * 地 址: https://yq.aliyun.com\n\n * 简 介：阿里云的开发者社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 11、开发者头条\n\n * 地 址: https://toutiao.io/\n\n * 简 介：一个程序员分享平台。\n\n * 推荐指数：⭐⭐\n\n\n# 12、GitChat\n\n * 地 址:https://gitbook.cn/\n\n * 简 介：一个技术博客社区\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 13、知乎\n\n * 地 址: https://www.zhihu.com/people/cxyxiaowu\n\n * 简 介：知乎是个综合性的问答社区，但是聚集的程序员也比较多，有一些高质量的问答和专栏。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 六、国外技术博客社区\n\n上面介绍了一些国内的博客社区，事实上，放眼看世界也很重要，毕竟我们用的技术大部分都来自国外。当然，其实更加建议想办法访问谷歌，个人觉得一个谷歌足矣。\n\n\n# 1、Stack Overflow\n\n * 地 址: https://stackoverflow.com/\n\n * 简 介：全球最活跃的程序员技术问答交流社区，有人说程序员的所有问题都能在上面找到答案。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、http://dev.io\n\n * 地 址: https://dev.to/\n\n * 简 介：可以说是掘金的国外版。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 3、DZone\n\n * 地 址: https://dzone.com/\n\n * 简 介：http://DZone.com是世界上最大的在线社区之一。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 4、Bytes\n\n * 地 址: https://bytes.com/\n\n * 简 介：一个面向开发人员和IT专业人员的交流社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 5、Google Developers\n\n * 地 址: https://developers.google.com/\n\n * 简 介：google开发社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 七、小微型博客\n\n上面列出的博客都是比较大型、综合的博客社区，实际上还有很多比较优质某个技术分类的博客、大厂技术博客、小而美的个人博客。这些博客可能也会发布到各大博客社区，但是这些博客网站风格不一，各有个性，也是很值得单独拿出来看的。\n\n\n# 1、美团技术团队\n\n * 地 址: https://tech.meituan.com/\n\n * 简 介：美团技术团队的博客，干货满满。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、阮一峰的网络日志\n\n * 地 址: http://www.ruanyifeng.com/blog/\n\n * 简 介：大神阮一峰，博客风格真正做到深入浅出。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 3、Spring Boot中文导航\n\n * 地 址: http://springboot.fun/\n\n * 简 介：汇总了一些比较优秀的Spring Boot博客、开源作品等。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 4、Spring Cloud中文导航\n\n * 地 址: http://springcloud.fun/\n\n * 简 介：汇总了一些比较优秀的Spring Cloud 博客、开源作品等。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n上面两个索引里已经有了一些比较优秀的个人博主的相关博客地址，所以里面出现的个人博客，后面就不再列出了。\n\n\n# 5、Web前端导航\n\n * 地 址: http://www.alloyteam.com/nav/\n\n * 简 介：比较全的Web前端导航，包括 团队组织 、开发社区 、 前端门户、框架类库 等等网站的导航。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 6、Spring For All\n\n * 地 址: http://www.spring4all.com/\n\n * 简 介：目标是做最专业的的民间Sptng组织。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 7、廖雪峰的官方网站\n\n * 地 址: https://www.liaoxuefeng.com/\n\n * 简 介：廖雪峰老师的网站，有一些不错的入门教程。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 8、bugstack\n\n * 地 址: https://bugstack.cn/\n\n * 简 介：博主是京东架构师，产出非常丰富，包括框架、源码、设计模式等。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 9、Java技术驿站\n\n * 地 址: http://cmsblogs.com/\n\n * 简 介：有很多不错的Java系列文章。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 10、酷壳\n\n * 地 址: https://coolshell.cn/\n\n * 简 介：可以了解陈皓，是个很有个性的人。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 11、床长人工智能教程\n\n * 地 址: https://www.captainbed.net/blog-neo/\n\n * 简 介：不搞人工智能也可以看看，写的很有意思的教程，可以作为科普看看。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 12、五分钟学算法\n\n * 地 址: https://www.cxyxiaowu.com/\n\n * 简 介：有一些非常不错的数据结构、算法相关的内容，有个同名公众号。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 13、犬小哈教程网\n\n * 地 址: https://www.exception.site/\n\n * 简 介：一些哈士奇的技术问答漫画很有意思。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 15、原创技术大联盟\n\n * 地 址: http://techblog.pub/\n\n * 简 介：优秀的技术博主实在太多了，列不完，也看不完，这里有一个导航页，有上百个优秀博主的博客链接，感兴趣的按需去找吧。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 八、开源社区\n\n在学习的过程中，可以学习开源社区的优秀项目，也可以把自己的项目发布到开源社区。\n\n\n# 1、GitHub\n\n * 地 址: https://github.com/\n\n * 简 介：全球最大开源社区，被戏称为全球最大同性交友网站。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、码云\n\n * 地 址: https://gitee.com/\n\n * 简 介：可以看做GitHub的国内版，GitHub虽好，但GitHub服务器在美国，网络方面main一直是个问题，这种情况下，码云是个不错的替代者。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 九、面试刷题\n\n\n# 1、LeetCode\n\n * 地 址: https://leetcode-cn.com/\n\n * 简 介：经典的刷题网站，主要是算法题。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、LintCode\n\n * 地 址: https://www.lintcode.com/\n\n * 简 介：和LeetCode类似\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 3、牛客网\n\n * 地 址: https://www.nowcoder.com/\n\n * 简 介：一个联网求职学习交流社区。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 其他\n\nhttps://valine.js.org/index.html\n\n无后端评论系统",normalizedContent:"# 程序员常逛的网站\n\n\n# 一、在线教程\n\n首先列出一些在线教程网站，这些在线教程网站通常都比较适合入门，可以作为开发学习路上的第一个阶梯，也可以作为工作中的在线文档。\n\n\n# 1、http://how2j.cn\n\n * 地 址：https://how2j.cn/\n\n * 简 介：一个 java 全栈开发教程网站，内容全面，简洁易懂，非常适合入门。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n# 2、w3cschool\n\n * 地 址：https://www.w3cschool.cn/\n\n * 简 介：前端和脚本语言为主的在线教程网站，前端的内容非常不错。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n# 3、菜鸟教程\n\n * 地 址：https://www.runoob.com/\n\n * 简 介：和 w3cschool 类似的在线教程网站，前端学习看这两个网站就够了。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n# 4、易百教程\n\n * 地 址：https://www.yiibai.com/\n\n * 简 介：内容比较全面的在线教程网站。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 9、并发编程网\n\n * 地 址：http://ifeve.com/\n\n * 简 介：比较不错的技术网站，以java为主，关注并发、nio、jvm、框架等方面的内容。\n\n * 推荐指数：⭐⭐\n\n\n# 10、http://jenkov.com\n\n * 地 址：http://tutorials.jenkov.com/\n\n * 简 介：一个国外的技术网站，提供了非常不错的java教程。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 11、http://baeldung.com\n\n * 地 址：https://www.baeldung.com/\n\n * 简 介：也是一个国外的技术网站，提供了非常不错的java教程。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 二、视频教程\n\n上面的在线教程网站以文字性内容为主，同样收藏了一些以视频为主的一些网站，相比较而言，更容易上手，当然，也更加耗时间。\n\n\n# 1、b站\n\n * 地 址：https://www.bilibili.com/\n\n * 简 介：没错，bilibili也可以用来学习，除了番剧、鬼畜之外，b站同样有非常多的高质量的编程教学视频，搜索就行了。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n# 2、慕课网\n\n * 地 址：https://www.imooc.com/\n\n * 简 介：比较不错的编程视频教学网站，可以找到比较体系的东西，当然，有些内容要花钱就是了。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n# 3、中国大学mooc\n\n * 地 址：https://www.icourse163.org/\n\n * 简 介：有很多名校的课程，当然不止cs。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n# 4、网易云课堂\n\n * 地 址：https://study.163.com\n\n * 简 介：有一些计算机编程方面的视频教程。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 5、实验楼\n\n * 地 址：https://www.lanqiao.cn/courses/\n\n * 简 介：it技术课程网站。\n\n * 推荐指数：⭐⭐\n\n\n# 6、我要自学网\n\n * 地 址：（敏感词，自行百度）\n\n * 简 介：比较多的自学教程，有程序设计内容的分类。\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 7、大学生自学网\n\n * 地 址：http://v.dxsbb.com/jisuanji/\n\n * 简 介：有一些计算机软件的大学课程。\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 8、极客学院\n\n * 地 址：https://www.jikexueyuan.com/\n\n * 简 介：it编程课程网站，付费内容居多。\n\n * 推荐指数：⭐⭐\n\n\n\n\n#\n\n\n# 四、官网\n\n毫无疑问，一项技术，最权威的文档一定是它的官方文档，所有的教程、书籍都是直接或者间接在官方相关文档的基础上完成。所以，编程学习，后面最好还是要看官网的。当然，官网大部分都是英文——其实配合一些翻译插件，没有想象中的那么难。\n\n\n# 1、java\n\n * 地 址：https://www.java.com/zh_cn/ 、https://docs.oracle.com/en/java/javase/index.html\n\n * 简 介：这个不需要多介绍，java官网和java官方api。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、spring\n\n * 地 址：https://spring.io/\n\n * 简 介：毫无疑问spring已经成为java ee事实上的标准。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 3、mysql\n\n * 地 址：https://www.mysql.com/\n\n * 简 介：mysql官网\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 4、mybatis\n\n * 地 址：https://mybatis.org/mybatis-3/zh/index.html\n\n * 简 介：国内最流行的java持久层框架，而且幸运的是，mybatis文档是有中文版的。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 5、vue.js\n\n * 地 址：https://cn.vuejs.org/\n\n * 简 介：国内最流行的前端sop框架，vue.js的文档是中文的。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 6、linux\n\n * 地 址：https://www.linux.org/\n\n * 简 介：后端程序员必会的linux.\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 7、git\n\n * 地 址：https://git-scm.com/\n\n * 简 介：版本管理推荐用git，同样有中文版本的文档。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 8、dubbo\n\n * 地 址：http://dubbo.apache.org/zh-cn/\n\n * 简 介：一款高性能的java rpc框架，国内用的还是比较广泛，源于阿里，中文文档是有的。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 9、redis\n\n * 地 址：https://redis.io/\n\n * 简 介：最流行的no sql数据库。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 五、国内博客社区\n\n了解技术动态、解决各种问题都会用到技术博客。有些优质博主同样创作了一些比较优秀的技术教程。\n\n\n# 1、csdn\n\n * 地 址：https://blog.csdn.net/kexuanxiu1163\n\n * 简 介：最大的中文技术博客社区，内容最多，seo做的也不错。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 2、博客园\n\n * 地 址：https://www.cnblogs.com/\n\n * 简 介：老牌中文技术博客社区，博客质量比较高，商业化气息也比较淡，之前广为诟病的ui风格也在今年进行了改进，自定义主题也让能让博客百花争艳。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 3、掘金\n\n * 地 址：https://juejin.im/user/4230576474426685\n\n * 简 介：ui做的最漂亮的中文技术博客社区，内容以前端和面试居多。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 4、简书\n\n * 地 址：https://www.jianshu.com/\n\n * 简 介：并不是纯粹的技术博客社区，很多伤春悲秋的东西。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 5、思否\n\n * 地 址：https://segmentfault.com/\n\n * 简 介：包含博客、问答的技术社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 6、开源中国\n\n * 地 址：https://www.oschina.net\n\n * 简 介：一个技术博客社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 7、http://51cto.com\n\n * 地 址: https://www.51cto.com/\n\n * 简 介：一个it技术网站。\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 8、v2ex\n\n * 地 址: https://www.v2ex.com\n\n * 简 介：逼格很高，只支持谷歌邮箱登录。\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 9、腾讯云社区\n\n * 地 址: https://cloud.tencent.com/developer\n\n * 简 介：腾讯云的开发者社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 10、阿里云社区\n\n * 地 址: https://yq.aliyun.com\n\n * 简 介：阿里云的开发者社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 11、开发者头条\n\n * 地 址: https://toutiao.io/\n\n * 简 介：一个程序员分享平台。\n\n * 推荐指数：⭐⭐\n\n\n# 12、gitchat\n\n * 地 址:https://gitbook.cn/\n\n * 简 介：一个技术博客社区\n\n * 推荐指数：⭐⭐\n\n\n\n\n# 13、知乎\n\n * 地 址: https://www.zhihu.com/people/cxyxiaowu\n\n * 简 介：知乎是个综合性的问答社区，但是聚集的程序员也比较多，有一些高质量的问答和专栏。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 六、国外技术博客社区\n\n上面介绍了一些国内的博客社区，事实上，放眼看世界也很重要，毕竟我们用的技术大部分都来自国外。当然，其实更加建议想办法访问谷歌，个人觉得一个谷歌足矣。\n\n\n# 1、stack overflow\n\n * 地 址: https://stackoverflow.com/\n\n * 简 介：全球最活跃的程序员技术问答交流社区，有人说程序员的所有问题都能在上面找到答案。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、http://dev.io\n\n * 地 址: https://dev.to/\n\n * 简 介：可以说是掘金的国外版。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 3、dzone\n\n * 地 址: https://dzone.com/\n\n * 简 介：http://dzone.com是世界上最大的在线社区之一。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 4、bytes\n\n * 地 址: https://bytes.com/\n\n * 简 介：一个面向开发人员和it专业人员的交流社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 5、google developers\n\n * 地 址: https://developers.google.com/\n\n * 简 介：google开发社区。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 七、小微型博客\n\n上面列出的博客都是比较大型、综合的博客社区，实际上还有很多比较优质某个技术分类的博客、大厂技术博客、小而美的个人博客。这些博客可能也会发布到各大博客社区，但是这些博客网站风格不一，各有个性，也是很值得单独拿出来看的。\n\n\n# 1、美团技术团队\n\n * 地 址: https://tech.meituan.com/\n\n * 简 介：美团技术团队的博客，干货满满。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、阮一峰的网络日志\n\n * 地 址: http://www.ruanyifeng.com/blog/\n\n * 简 介：大神阮一峰，博客风格真正做到深入浅出。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 3、spring boot中文导航\n\n * 地 址: http://springboot.fun/\n\n * 简 介：汇总了一些比较优秀的spring boot博客、开源作品等。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 4、spring cloud中文导航\n\n * 地 址: http://springcloud.fun/\n\n * 简 介：汇总了一些比较优秀的spring cloud 博客、开源作品等。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n上面两个索引里已经有了一些比较优秀的个人博主的相关博客地址，所以里面出现的个人博客，后面就不再列出了。\n\n\n# 5、web前端导航\n\n * 地 址: http://www.alloyteam.com/nav/\n\n * 简 介：比较全的web前端导航，包括 团队组织 、开发社区 、 前端门户、框架类库 等等网站的导航。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 6、spring for all\n\n * 地 址: http://www.spring4all.com/\n\n * 简 介：目标是做最专业的的民间sptng组织。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 7、廖雪峰的官方网站\n\n * 地 址: https://www.liaoxuefeng.com/\n\n * 简 介：廖雪峰老师的网站，有一些不错的入门教程。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 8、bugstack\n\n * 地 址: https://bugstack.cn/\n\n * 简 介：博主是京东架构师，产出非常丰富，包括框架、源码、设计模式等。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 9、java技术驿站\n\n * 地 址: http://cmsblogs.com/\n\n * 简 介：有很多不错的java系列文章。\n\n * 推荐指数：⭐⭐⭐\n\n\n# 10、酷壳\n\n * 地 址: https://coolshell.cn/\n\n * 简 介：可以了解陈皓，是个很有个性的人。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 11、床长人工智能教程\n\n * 地 址: https://www.captainbed.net/blog-neo/\n\n * 简 介：不搞人工智能也可以看看，写的很有意思的教程，可以作为科普看看。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 12、五分钟学算法\n\n * 地 址: https://www.cxyxiaowu.com/\n\n * 简 介：有一些非常不错的数据结构、算法相关的内容，有个同名公众号。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 13、犬小哈教程网\n\n * 地 址: https://www.exception.site/\n\n * 简 介：一些哈士奇的技术问答漫画很有意思。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 15、原创技术大联盟\n\n * 地 址: http://techblog.pub/\n\n * 简 介：优秀的技术博主实在太多了，列不完，也看不完，这里有一个导航页，有上百个优秀博主的博客链接，感兴趣的按需去找吧。\n\n * 推荐指数：⭐⭐⭐\n\n\n\n\n# 八、开源社区\n\n在学习的过程中，可以学习开源社区的优秀项目，也可以把自己的项目发布到开源社区。\n\n\n# 1、github\n\n * 地 址: https://github.com/\n\n * 简 介：全球最大开源社区，被戏称为全球最大同性交友网站。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、码云\n\n * 地 址: https://gitee.com/\n\n * 简 介：可以看做github的国内版，github虽好，但github服务器在美国，网络方面main一直是个问题，这种情况下，码云是个不错的替代者。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 九、面试刷题\n\n\n# 1、leetcode\n\n * 地 址: https://leetcode-cn.com/\n\n * 简 介：经典的刷题网站，主要是算法题。\n\n * 推荐指数：⭐⭐⭐⭐⭐\n\n\n\n\n# 2、lintcode\n\n * 地 址: https://www.lintcode.com/\n\n * 简 介：和leetcode类似\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 3、牛客网\n\n * 地 址: https://www.nowcoder.com/\n\n * 简 介：一个联网求职学习交流社区。\n\n * 推荐指数：⭐⭐⭐⭐\n\n\n\n\n# 其他\n\nhttps://valine.js.org/index.html\n\n无后端评论系统",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"网址",frontmatter:{author:"xlc520",title:"网址",description:"网址",time:"2022-01-27T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E7%BD%91%E5%9D%80.html",relativePath:"other/网址.md",key:"v-e8e7a6a2",path:"/other/%E7%BD%91%E5%9D%80/",headers:[{level:2,title:"蓝奏云破解软件合集",slug:"蓝奏云破解软件合集",normalizedTitle:"蓝奏云破解软件合集",charIndex:9},{level:2,title:"视频解析网址",slug:"视频解析网址",normalizedTitle:"视频解析网址",charIndex:361}],readingTime:{minutes:1.81,words:543},headersStr:"蓝奏云破解软件合集 视频解析网址",content:"# 网址\n\n\n# 蓝奏云破解软件合集\n\nhttps://wws.lanzoui.com/b01u9z07i https://lanzoux.com/b60364 https://lanzoux.com/b202139 https://www.lanzoui.com/b133841/ https://www.lanzoui.com/b63771/ https://www.lanzoui.com/b196932 https://www.lanzoui.com/b66477 https://wws.lanzoui.com/b01u6u6ti https://lanzoux.com/b60586 https://lanzoux.com/s/zero https://rjjd.lanzoui.com/s/ptrj\n\n\n# 视频解析网址\n\n各大影视软件VIP视频解析 直接复制地址到 = 后就行 https://z1.m1907.cn/?jx=***** 直接一点可以使用脚本 https://t.me/LDList/223\n\nm1907.cn https://z1.m1907.cn/?jx= 天翼解析_仅供学习使用_请勿非法使用 https://jsap.attakids.com/?url= Parwix解析系统 https://jx.parwix.com:4433/player/?url= OK解析 https://okjx.cc/?url= 诺讯智能解析系统 https://www.ckmov.com/?url= 虾米解析 https://jx.xmflv.com/?url= bingdou https://api.qianqi.net/vip/?url= 迪奥解析客户端 https://123.1dior.cn/?url= ckplayer无广告解析 https://www.ckplayer.vip/jiexi/?url= lecurl https://lecurl.cn/?url= ckmov解析 https://www.ckmov.vip/api.php?url= 1717云视频解析 https://ckmov.ccyjjd.com/ckmov/?url= 云解析播放器 https://jx.aidouer.net/?url= H8无广告视频解析 https://www.h8jx.com/jiexi.php?url= BL解析 https://vip.bljiex.cc/?v= 全网VIP视频免费无广告解析 https://api.jiexi.la/?url= M3U8.TV免费无广告解析 https://jiexi.janan.net/jiexi/?url= 全网视频解析 https://vip.laobandq.com/jiexi.php?url= 盘古无广告解析 https://www.pangujiexi.cc/jiexi.php?url= 盖世免费解析 https://www.gai4.com/?url=\n\n小蒋极致云解析 https://www.kpezp.cn/jlexi.php?url= YiTV解析 https://jiexi.us/?url= 60解析 http://60jx.com/?url= 盘古云解析 https://go.yh0523.cn/y.cy?url= 1717yun https://www.1717yun.com/jx/ty.php?url= 4kdv https://jx.4kdv.com/?url= 云解析 https://yparse.jn1.cc/index.php?url= 8090解析 https://www.8090g.cn/?url= 江湖云免费学习接口 https://api.jhdyw.vip/?url= 诺讯智能解析系统 https://www.nxflv.com/?url= Playm3u8解析 https://www.playm3u8.cn/jiexi.php?url= qimihe.com https://qimihe.com/?url= 思云解析系统 https://jx.ap2p.cn/?url= 听乐解析 https://jx.dj6u.com/?url= 爱解析免费无广告接口 https://jiexi.t7g.cn/?url= 夜幕解析 https://www.yemu.xyz/?url= 云解析 https://parse.123mingren.com/?url= 180解析 https://jx.000180.top/jx/?url= 无名小站 https://www.administratorw.com/video.php?url= 思云解析系统 https://jx.youyitv.com/?url=",normalizedContent:"# 网址\n\n\n# 蓝奏云破解软件合集\n\nhttps://wws.lanzoui.com/b01u9z07i https://lanzoux.com/b60364 https://lanzoux.com/b202139 https://www.lanzoui.com/b133841/ https://www.lanzoui.com/b63771/ https://www.lanzoui.com/b196932 https://www.lanzoui.com/b66477 https://wws.lanzoui.com/b01u6u6ti https://lanzoux.com/b60586 https://lanzoux.com/s/zero https://rjjd.lanzoui.com/s/ptrj\n\n\n# 视频解析网址\n\n各大影视软件vip视频解析 直接复制地址到 = 后就行 https://z1.m1907.cn/?jx=***** 直接一点可以使用脚本 https://t.me/ldlist/223\n\nm1907.cn https://z1.m1907.cn/?jx= 天翼解析_仅供学习使用_请勿非法使用 https://jsap.attakids.com/?url= parwix解析系统 https://jx.parwix.com:4433/player/?url= ok解析 https://okjx.cc/?url= 诺讯智能解析系统 https://www.ckmov.com/?url= 虾米解析 https://jx.xmflv.com/?url= bingdou https://api.qianqi.net/vip/?url= 迪奥解析客户端 https://123.1dior.cn/?url= ckplayer无广告解析 https://www.ckplayer.vip/jiexi/?url= lecurl https://lecurl.cn/?url= ckmov解析 https://www.ckmov.vip/api.php?url= 1717云视频解析 https://ckmov.ccyjjd.com/ckmov/?url= 云解析播放器 https://jx.aidouer.net/?url= h8无广告视频解析 https://www.h8jx.com/jiexi.php?url= bl解析 https://vip.bljiex.cc/?v= 全网vip视频免费无广告解析 https://api.jiexi.la/?url= m3u8.tv免费无广告解析 https://jiexi.janan.net/jiexi/?url= 全网视频解析 https://vip.laobandq.com/jiexi.php?url= 盘古无广告解析 https://www.pangujiexi.cc/jiexi.php?url= 盖世免费解析 https://www.gai4.com/?url=\n\n小蒋极致云解析 https://www.kpezp.cn/jlexi.php?url= yitv解析 https://jiexi.us/?url= 60解析 http://60jx.com/?url= 盘古云解析 https://go.yh0523.cn/y.cy?url= 1717yun https://www.1717yun.com/jx/ty.php?url= 4kdv https://jx.4kdv.com/?url= 云解析 https://yparse.jn1.cc/index.php?url= 8090解析 https://www.8090g.cn/?url= 江湖云免费学习接口 https://api.jhdyw.vip/?url= 诺讯智能解析系统 https://www.nxflv.com/?url= playm3u8解析 https://www.playm3u8.cn/jiexi.php?url= qimihe.com https://qimihe.com/?url= 思云解析系统 https://jx.ap2p.cn/?url= 听乐解析 https://jx.dj6u.com/?url= 爱解析免费无广告接口 https://jiexi.t7g.cn/?url= 夜幕解析 https://www.yemu.xyz/?url= 云解析 https://parse.123mingren.com/?url= 180解析 https://jx.000180.top/jx/?url= 无名小站 https://www.administratorw.com/video.php?url= 思云解析系统 https://jx.youyitv.com/?url=",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"美团年货电子书",frontmatter:{author:"xlc520",title:"美团年货电子书",description:"美团年货电子书",time:"2022-02-08T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E7%BE%8E%E5%9B%A2%E5%B9%B4%E8%B4%A7%E7%94%B5%E5%AD%90%E4%B9%A6.html",relativePath:"other/美团年货电子书.md",key:"v-0a93eeb9",path:"/other/%E7%BE%8E%E5%9B%A2%E5%B9%B4%E8%B4%A7%E7%94%B5%E5%AD%90%E4%B9%A6/",readingTime:{minutes:.85,words:256},headersStr:null,content:"# 美团年货电子书\n\n美团年货电子书下载地址：\n\n2020美团技术年货-合集：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%E7%BE%8E%E5%9B%A2%E6%8A%80%E6%9C%AF%E5%B9%B4%E8%B4%A7-%E5%90%88%E9%9B%86.pdf\n\n2020美团技术年货-前端篇：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%E7%BE%8E%E5%9B%A2%E6%8A%80%E6%9C%AF%E5%B9%B4%E8%B4%A7-%E5%89%8D%E7%AB%AF%E7%AF%87.pdf\n\n2020美团技术年货-后台篇：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%E7%BE%8E%E5%9B%A2%E6%8A%80%E6%9C%AF%E5%B9%B4%E8%B4%A7-%E5%90%8E%E5%8F%B0%E7%AF%87.pdf\n\n2020美团技术年货-算法篇：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%E7%BE%8E%E5%9B%A2%E6%8A%80%E6%9C%AF%E5%B9%B4%E8%B4%A7-%E7%AE%97%E6%B3%95%E7%AF%87.pdf\n\n2020美团技术年货-顶会论文精选：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%E7%BE%8E%E5%9B%A2%E6%8A%80%E6%9C%AF%E5%B9%B4%E8%B4%A7-%E9%A1%B6%E4%BC%9A%E8%AE%BA%E6%96%87%E7%B2%BE%E9%80%89.pdf",normalizedContent:"# 美团年货电子书\n\n美团年货电子书下载地址：\n\n2020美团技术年货-合集：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%e7%be%8e%e5%9b%a2%e6%8a%80%e6%9c%af%e5%b9%b4%e8%b4%a7-%e5%90%88%e9%9b%86.pdf\n\n2020美团技术年货-前端篇：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%e7%be%8e%e5%9b%a2%e6%8a%80%e6%9c%af%e5%b9%b4%e8%b4%a7-%e5%89%8d%e7%ab%af%e7%af%87.pdf\n\n2020美团技术年货-后台篇：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%e7%be%8e%e5%9b%a2%e6%8a%80%e6%9c%af%e5%b9%b4%e8%b4%a7-%e5%90%8e%e5%8f%b0%e7%af%87.pdf\n\n2020美团技术年货-算法篇：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%e7%be%8e%e5%9b%a2%e6%8a%80%e6%9c%af%e5%b9%b4%e8%b4%a7-%e7%ae%97%e6%b3%95%e7%af%87.pdf\n\n2020美团技术年货-顶会论文精选：https://s3plus.meituan.net/v1/mss_e63d09aec75b41879dcb3069234793ac/file/2020%e7%be%8e%e5%9b%a2%e6%8a%80%e6%9c%af%e5%b9%b4%e8%b4%a7-%e9%a1%b6%e4%bc%9a%e8%ae%ba%e6%96%87%e7%b2%be%e9%80%89.pdf",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"脚本仓库",frontmatter:{author:"xlc520",title:"脚本仓库",description:"脚本仓库",time:"2022-02-14T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93.html",relativePath:"other/脚本仓库.md",key:"v-6f682815",path:"/other/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/",readingTime:{minutes:.04,words:12},headersStr:null,content:"# 脚本仓库\n\n爱奇艺\n\n * https://github.com/ioutime/Aiqiyi_Sign",normalizedContent:"# 脚本仓库\n\n爱奇艺\n\n * https://github.com/ioutime/aiqiyi_sign",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"蓝奏云安卓APP合集",frontmatter:{author:"xlc520",title:"蓝奏云安卓APP合集",description:"蓝奏云安卓APP合集",time:"2022-03-06T00:00:00.000Z",category:"other",tags:"蓝奏",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E8%93%9D%E5%A5%8F%E4%BA%91%E5%AE%89%E5%8D%93APP%E5%90%88%E9%9B%86.html",relativePath:"other/蓝奏云安卓APP合集.md",key:"v-1cb0ad38",path:"/other/%E8%93%9D%E5%A5%8F%E4%BA%91%E5%AE%89%E5%8D%93APP%E5%90%88%E9%9B%86/",readingTime:{minutes:9.77,words:2932},headersStr:null,content:"# 蓝奏云安卓APP合集\n\n> 好软分享：https://github.com/yoyodadada/haoruanfenxiang\n> \n> 优质APP集散地：https://www.lanzoui.com/u/yoyodadada\n> \n> 未归类的比较好用的软件：https://www.lanzoui.com/b01b01h9a\n> \n> 软件阁分享：https://www.lanzoui.com/u/%E9%86%8B%E5%91%B3%E8%BE%B0\n> \n> 线报坊软件合集：https://www.lanzoui.com/b60364\n> \n> Bs团队分享合集：https://www.lanzoui.com/b93256\n> \n> 安惠购分享合集：https://pan.lanzoui.com/b174576/\n> \n> 黑哥软件基地：https://www.lanzoui.com/s/rjjdt=2403\n> \n> hai分享推荐合集：https://pan.lanzoui.com/b221497/\n> \n> 辉少软件分享合集：https://pan.lanzoui.com/b221505\n> \n> 乐分享软件合集：https://pan.lanzoui.com/b215476/\n> \n> BhVip软件更新合集：https://pan.lanzoui.com/u/%E5%BD%AA%E7%85%8Cqq1846055318\n> \n> 大肥精品软件合集：https://pan.lanzoui.com/u/qianxun8\n> \n> 影视合集软件：https://www.lanzoui.com/b0jrkv4b\n> \n> 暗部分享免费软件：https://www.lanzoui.com/u/chudali\n> \n> 分享社软件分享：https://pan.lanzoui.com/b63771/\n> \n> 稚初软件集合：https://pan.lanzoui.com/b200130\n> \n> 无名软件汇总：https://pan.lanzoui.com/b206983/\n> \n> 口令专享软件团队：https://pan.lanzoui.com/b240011/\n> \n> 安卓破解类软件：https://pan.lanzoui.com/b828085\n> \n> Hs团队破解游戏：https://pan.lanzoui.com/b888887\n> \n> 淘购街软件分享：https://pan.lanzoui.com/b165784\n> \n> 小聪分享社合集：https://pan.lanzoui.com/b94326/\n> \n> 允晨软件库合集：https://pan.lanzoui.com/b54212/\n> \n> 电视盒子软件：https://pan.lanzoui.com/b167839/\n> \n> 软件实验室合集：http://pan.lanzoui.com/u/ygtq\n> \n> 软件田园合集：https://pan.lanzoui.com/u/longluobo\n> \n> 日历APP分享合集：https://pan.lanzoui.com/u/hyfl\n> \n> 北笙软件合集：https://www.lanzoui.com/b003fkotc\n> \n> 青风软件分享合集：https://pan.lanzoui.com/b60564/\n> \n> 蜗牛软件库：https://www.lanzoui.com/b1001808\n> \n> 搬运鼠服务公社：https://pan.lanzoui.com/b218606\n> \n> 小说软件合集：https://pan.lanzoui.com/b158157/\n> \n> 漫画类软件合集：https://pan.lanzoui.com/b765262/\n> \n> FKzhang_WX模块：https://pan.lanzoui.com/b44314\n> \n> TV/盒子软件合集：https://www.lanzoui.com/b699768/ 密码：987456\n> \n> 清秋暖冬合集：https://www.lanzoui.com/b474214 密码：qingqiu\n> \n> 二狗娱乐网合集：https://www.lanzoui.com/b896145\n> \n> 阿友软件合集：https://pan.lanzoui.com/u/aybaba\n> \n> 福利吧分享：https://www.lanzoui.com/u/fuliba\n> \n> 影视TV版APP合集：https://lanzoui.com/b00t6lcrg 密码：QPMZ\n> \n> 戏子软件库分享：https://www.lanzoui.com/b554854\n> \n> 免费看视频：https://www.lanzoui.com/b749444\n> \n> 黑科技玩机：https://www.lanzoui.com/b281858\n> \n> 兜兜线报软件合集：https://www.lanzoui.com/b133841/\n> \n> 软科技软件合集：https://www.lanzoui.com/u/13145212431\n> \n> 霖淘购软件共享：https://www.lanzoui.com/b252370/\n> \n> 小鹏软件合集：http://www.lanzoui.com/u/xiaopengi\n> \n> 分享社：https://www.lanzoui.com/b63771/\n> \n> 『BhVip』软件更新合集：http://pan.lanzoui.com/u/%E5%BD%AA%E7%85%8Cqq1846055318\n> \n> 软件梦软件合集：https://www.lanzoui.com/u/Hicro\n> \n> 全网软件分享合集：https://www.lanzoui.com/b117359\n> \n> 全网软件合集：https://www.lanzoui.com/b66477\n> \n> 软件合集：http://www.lanzoui.com/u/9383679\n> \n> 软件库软件阁线报软件基地：https://www.lanzoui.com/b244238\n> \n> 嗨分享软件合集：https://www.lanzoui.com/u/%E6%8B%BD%E6%8B%BD\n> \n> 软件库软件游戏合集：https://www.lanzoui.com/u/rjk\n> \n> 牛之家：https://www.lanzoui.com/u/memedawq\n> \n> 星辰软件合集：https://www.lanzoui.com/u/azsoft\n> \n> 爱分享团队软件合集：https://www.lanzoui.com/u/zqf000\n> \n> 七月软件库：https://www.lanzoui.com/b196932\n> \n> 软件大全：https://www.lanzoui.com/u/296742969\n> \n> 旧梦软件集合：https://www.lanzoui.com/u/jinjunpo\n> \n> 雄哥软件合集：https://www.lanzoui.com/u/%E9%9B ... %E4%BC%A0%E5%AA%92.\n> \n> 轩哥软件网盘：https://www.lanzoui.com/u/%E8%BD ... C%E4%BC%A0%E5%AA%92\n> \n> 安卓软件合集：https://www.lanzoui.com/u/langman666\n> \n> 小蠢货旗下软件合集：https://www.lanzoui.com/u/616737520\n> \n> 大白软件库：https://www.lanzoui.com/u/dabai666\n> \n> 牛牛软件合集：http://www.lanzoui.com/u/36277009\n> \n> 软件屋：https://www.lanzoui.com/u/xaichen\n> \n> 萝卜软件库：https://www.lanzoui.com/u/longluobo\n> \n> 小银软件库：https://www.lanzoui.com/u/jiek\n> \n> 优享汇-软件镖局：https://www.lanzoui.com/u/%E6%B1%9F%E4%B8%8A\n> \n> 新起点软件库：https://www.lanzoui.com/u/xinqidian\n> \n> 辉少软件集：https://www.lanzoui.com/u/%E4%B8%9C%E6%80%BB2017\n> \n> 新世界软件合集：https://www.lanzoui.com/u/adminqizh\n> \n> 少宇团队：https://www.lanzoui.com/u/shaoyu\n> \n> 阿轻软件库：https://www.lanzoui.com/u/aq1433709042\n> \n> 稚初软件分享：https://www.lanzoui.com/u/zhichu\n> \n> Kl软件分享库：https://www.lanzoui.com/u/aguo\n> \n> 软件分享基地：https://www.lanzoui.com/u/aiwange\n> \n> 软件园旗下软件共享：https://www.lanzoui.com/u/anxin666\n> \n> 小伟软件库发布：https://www.lanzoui.com/u/%E5%B0 ... F%E4%BB%B6%E5%BA%93\n> \n> 千城软件库：https://www.lanzoui.com/u/%E5%8D%83%E5%9F%8E1\n> \n> A分享-全网软件合集：https://www.lanzoui.com/b205552/\n> \n> 秋颜软件库：https://www.lanzoui.com/b341705\n> \n> 天天分享软件库：http://pan.lanzoui.com/u/qq348740911\n> \n> 游戏破解合集：https://www.lanzoui.com/b654140\n> \n> 阡陌软件库：https://pan.lanzoui.com/b221640\n> \n> 软件工厂精品软件：https://www.lanzoui.com/u/sg88\n> \n> nPlayer：https://www.lanzoui.com/b0cpu28tc\n> \n> 乐淘分享软件库：https://www.lanzoui.com/u/YZ457104\n> \n> 滚哥网盘资源：https://www.lanzoui.com/b838976\n> \n> 电视盒子软件合集：https://www.lanzoui.com/b07xdohkf 密码：FULIBA\n> \n> 壹零贰肆软件分享：https://1024.lanzoui.com/b06xqal9g 密码:dl7p\n> \n> 乌龟上高速：https://www.lanzoui.com/b0ejb48da\n> \n> 安卓精选破解游戏合集：https://www.lanzoui.com/b053xt4vg\n> \n> 陈蛋蛋的宝藏库http://www.chendandan.ys168.com/\n> \n> 阿虚同学的储物间http://kyon945.ys168.com/\n> \n> 更多软件——https://www.lanzoui.com/b0c8d2te\n> \n> 其他类型浏览器https://www.lanzoui.com/b0c8jqyj",normalizedContent:"# 蓝奏云安卓app合集\n\n> 好软分享：https://github.com/yoyodadada/haoruanfenxiang\n> \n> 优质app集散地：https://www.lanzoui.com/u/yoyodadada\n> \n> 未归类的比较好用的软件：https://www.lanzoui.com/b01b01h9a\n> \n> 软件阁分享：https://www.lanzoui.com/u/%e9%86%8b%e5%91%b3%e8%be%b0\n> \n> 线报坊软件合集：https://www.lanzoui.com/b60364\n> \n> bs团队分享合集：https://www.lanzoui.com/b93256\n> \n> 安惠购分享合集：https://pan.lanzoui.com/b174576/\n> \n> 黑哥软件基地：https://www.lanzoui.com/s/rjjdt=2403\n> \n> hai分享推荐合集：https://pan.lanzoui.com/b221497/\n> \n> 辉少软件分享合集：https://pan.lanzoui.com/b221505\n> \n> 乐分享软件合集：https://pan.lanzoui.com/b215476/\n> \n> bhvip软件更新合集：https://pan.lanzoui.com/u/%e5%bd%aa%e7%85%8cqq1846055318\n> \n> 大肥精品软件合集：https://pan.lanzoui.com/u/qianxun8\n> \n> 影视合集软件：https://www.lanzoui.com/b0jrkv4b\n> \n> 暗部分享免费软件：https://www.lanzoui.com/u/chudali\n> \n> 分享社软件分享：https://pan.lanzoui.com/b63771/\n> \n> 稚初软件集合：https://pan.lanzoui.com/b200130\n> \n> 无名软件汇总：https://pan.lanzoui.com/b206983/\n> \n> 口令专享软件团队：https://pan.lanzoui.com/b240011/\n> \n> 安卓破解类软件：https://pan.lanzoui.com/b828085\n> \n> hs团队破解游戏：https://pan.lanzoui.com/b888887\n> \n> 淘购街软件分享：https://pan.lanzoui.com/b165784\n> \n> 小聪分享社合集：https://pan.lanzoui.com/b94326/\n> \n> 允晨软件库合集：https://pan.lanzoui.com/b54212/\n> \n> 电视盒子软件：https://pan.lanzoui.com/b167839/\n> \n> 软件实验室合集：http://pan.lanzoui.com/u/ygtq\n> \n> 软件田园合集：https://pan.lanzoui.com/u/longluobo\n> \n> 日历app分享合集：https://pan.lanzoui.com/u/hyfl\n> \n> 北笙软件合集：https://www.lanzoui.com/b003fkotc\n> \n> 青风软件分享合集：https://pan.lanzoui.com/b60564/\n> \n> 蜗牛软件库：https://www.lanzoui.com/b1001808\n> \n> 搬运鼠服务公社：https://pan.lanzoui.com/b218606\n> \n> 小说软件合集：https://pan.lanzoui.com/b158157/\n> \n> 漫画类软件合集：https://pan.lanzoui.com/b765262/\n> \n> fkzhang_wx模块：https://pan.lanzoui.com/b44314\n> \n> tv/盒子软件合集：https://www.lanzoui.com/b699768/ 密码：987456\n> \n> 清秋暖冬合集：https://www.lanzoui.com/b474214 密码：qingqiu\n> \n> 二狗娱乐网合集：https://www.lanzoui.com/b896145\n> \n> 阿友软件合集：https://pan.lanzoui.com/u/aybaba\n> \n> 福利吧分享：https://www.lanzoui.com/u/fuliba\n> \n> 影视tv版app合集：https://lanzoui.com/b00t6lcrg 密码：qpmz\n> \n> 戏子软件库分享：https://www.lanzoui.com/b554854\n> \n> 免费看视频：https://www.lanzoui.com/b749444\n> \n> 黑科技玩机：https://www.lanzoui.com/b281858\n> \n> 兜兜线报软件合集：https://www.lanzoui.com/b133841/\n> \n> 软科技软件合集：https://www.lanzoui.com/u/13145212431\n> \n> 霖淘购软件共享：https://www.lanzoui.com/b252370/\n> \n> 小鹏软件合集：http://www.lanzoui.com/u/xiaopengi\n> \n> 分享社：https://www.lanzoui.com/b63771/\n> \n> 『bhvip』软件更新合集：http://pan.lanzoui.com/u/%e5%bd%aa%e7%85%8cqq1846055318\n> \n> 软件梦软件合集：https://www.lanzoui.com/u/hicro\n> \n> 全网软件分享合集：https://www.lanzoui.com/b117359\n> \n> 全网软件合集：https://www.lanzoui.com/b66477\n> \n> 软件合集：http://www.lanzoui.com/u/9383679\n> \n> 软件库软件阁线报软件基地：https://www.lanzoui.com/b244238\n> \n> 嗨分享软件合集：https://www.lanzoui.com/u/%e6%8b%bd%e6%8b%bd\n> \n> 软件库软件游戏合集：https://www.lanzoui.com/u/rjk\n> \n> 牛之家：https://www.lanzoui.com/u/memedawq\n> \n> 星辰软件合集：https://www.lanzoui.com/u/azsoft\n> \n> 爱分享团队软件合集：https://www.lanzoui.com/u/zqf000\n> \n> 七月软件库：https://www.lanzoui.com/b196932\n> \n> 软件大全：https://www.lanzoui.com/u/296742969\n> \n> 旧梦软件集合：https://www.lanzoui.com/u/jinjunpo\n> \n> 雄哥软件合集：https://www.lanzoui.com/u/%e9%9b ... %e4%bc%a0%e5%aa%92.\n> \n> 轩哥软件网盘：https://www.lanzoui.com/u/%e8%bd ... c%e4%bc%a0%e5%aa%92\n> \n> 安卓软件合集：https://www.lanzoui.com/u/langman666\n> \n> 小蠢货旗下软件合集：https://www.lanzoui.com/u/616737520\n> \n> 大白软件库：https://www.lanzoui.com/u/dabai666\n> \n> 牛牛软件合集：http://www.lanzoui.com/u/36277009\n> \n> 软件屋：https://www.lanzoui.com/u/xaichen\n> \n> 萝卜软件库：https://www.lanzoui.com/u/longluobo\n> \n> 小银软件库：https://www.lanzoui.com/u/jiek\n> \n> 优享汇-软件镖局：https://www.lanzoui.com/u/%e6%b1%9f%e4%b8%8a\n> \n> 新起点软件库：https://www.lanzoui.com/u/xinqidian\n> \n> 辉少软件集：https://www.lanzoui.com/u/%e4%b8%9c%e6%80%bb2017\n> \n> 新世界软件合集：https://www.lanzoui.com/u/adminqizh\n> \n> 少宇团队：https://www.lanzoui.com/u/shaoyu\n> \n> 阿轻软件库：https://www.lanzoui.com/u/aq1433709042\n> \n> 稚初软件分享：https://www.lanzoui.com/u/zhichu\n> \n> kl软件分享库：https://www.lanzoui.com/u/aguo\n> \n> 软件分享基地：https://www.lanzoui.com/u/aiwange\n> \n> 软件园旗下软件共享：https://www.lanzoui.com/u/anxin666\n> \n> 小伟软件库发布：https://www.lanzoui.com/u/%e5%b0 ... f%e4%bb%b6%e5%ba%93\n> \n> 千城软件库：https://www.lanzoui.com/u/%e5%8d%83%e5%9f%8e1\n> \n> a分享-全网软件合集：https://www.lanzoui.com/b205552/\n> \n> 秋颜软件库：https://www.lanzoui.com/b341705\n> \n> 天天分享软件库：http://pan.lanzoui.com/u/qq348740911\n> \n> 游戏破解合集：https://www.lanzoui.com/b654140\n> \n> 阡陌软件库：https://pan.lanzoui.com/b221640\n> \n> 软件工厂精品软件：https://www.lanzoui.com/u/sg88\n> \n> nplayer：https://www.lanzoui.com/b0cpu28tc\n> \n> 乐淘分享软件库：https://www.lanzoui.com/u/yz457104\n> \n> 滚哥网盘资源：https://www.lanzoui.com/b838976\n> \n> 电视盒子软件合集：https://www.lanzoui.com/b07xdohkf 密码：fuliba\n> \n> 壹零贰肆软件分享：https://1024.lanzoui.com/b06xqal9g 密码:dl7p\n> \n> 乌龟上高速：https://www.lanzoui.com/b0ejb48da\n> \n> 安卓精选破解游戏合集：https://www.lanzoui.com/b053xt4vg\n> \n> 陈蛋蛋的宝藏库http://www.chendandan.ys168.com/\n> \n> 阿虚同学的储物间http://kyon945.ys168.com/\n> \n> 更多软件——https://www.lanzoui.com/b0c8d2te\n> \n> 其他类型浏览器https://www.lanzoui.com/b0c8jqyj",charsets:{cjk:!0},createdTime:1646575587e3,updateTime:"March 6, 2022 14:06",updateTimeStamp:1646575587e3,createTime:"March 6, 2022 14:06",createTimeStamp:1646575587e3,contributors:[]},{title:"阿里十大最受开发者欢迎的工具",frontmatter:{author:"xlc520",title:"阿里十大最受开发者欢迎的工具",description:"阿里十大最受开发者欢迎的工具",time:"2022-02-19T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E9%98%BF%E9%87%8C%E5%8D%81%E5%A4%A7%E6%9C%80%E5%8F%97%E5%BC%80%E5%8F%91%E8%80%85%E6%AC%A2%E8%BF%8E%E7%9A%84%E5%B7%A5%E5%85%B7.html",relativePath:"other/阿里十大最受开发者欢迎的工具.md",key:"v-2df24c52",path:"/other/%E9%98%BF%E9%87%8C%E5%8D%81%E5%A4%A7%E6%9C%80%E5%8F%97%E5%BC%80%E5%8F%91%E8%80%85%E6%AC%A2%E8%BF%8E%E7%9A%84%E5%B7%A5%E5%85%B7/",headers:[{level:3,title:"1. Java 工程脚手架 Java Initializr",slug:"_1-java-工程脚手架-java-initializr",normalizedTitle:"1. java 工程脚手架 java initializr",charIndex:86},{level:3,title:"2. Java 线上诊断工具 Arthas",slug:"_2-java-线上诊断工具-arthas",normalizedTitle:"2. java 线上诊断工具 arthas",charIndex:368},{level:3,title:"3. Java 工具集 Dragonwell",slug:"_3-java-工具集-dragonwell",normalizedTitle:"3. java 工具集 dragonwell",charIndex:792},{level:3,title:"4. Java 代码规约扫描插件",slug:"_4-java-代码规约扫描插件",normalizedTitle:"4. java 代码规约扫描插件",charIndex:1430},{level:3,title:"5. 应用实时监控工具 ARMS",slug:"_5-应用实时监控工具-arms",normalizedTitle:"5. 应用实时监控工具 arms",charIndex:1830},{level:3,title:"6. 性能测试工具 PTS",slug:"_6-性能测试工具-pts",normalizedTitle:"6. 性能测试工具 pts",charIndex:2178},{level:3,title:"7. 架构可视化工具 AHAS",slug:"_7-架构可视化工具-ahas",normalizedTitle:"7. 架构可视化工具 ahas",charIndex:2508},{level:3,title:"8. 数据处理工具 EasyExcel",slug:"_8-数据处理工具-easyexcel",normalizedTitle:"8. 数据处理工具 easyexcel",charIndex:2821},{level:3,title:"9. iOS 类工具 HandyJSON",slug:"_9-ios-类工具-handyjson",normalizedTitle:"9. ios 类工具 handyjson",charIndex:3163},{level:3,title:"10. 数据库落地 Druid",slug:"_10-数据库落地-druid",normalizedTitle:"10. 数据库落地 druid",charIndex:3656}],readingTime:{minutes:7.62,words:2286},headersStr:"1. Java 工程脚手架 Java Initializr 2. Java 线上诊断工具 Arthas 3. Java 工具集 Dragonwell 4. Java 代码规约扫描插件 5. 应用实时监控工具 ARMS 6. 性能测试工具 PTS 7. 架构可视化工具 AHAS 8. 数据处理工具 EasyExcel 9. iOS 类工具 HandyJSON 10. 数据库落地 Druid",content:"# 阿里十大最受开发者欢迎的工具\n\n精选了一些阿里经济体内部最受开发者欢迎的开发者工具，筛选出一些带有普适性同样适合外部开发者的，希望能助力开发者们提高开发效率。\n\n\n# 1. Java 工程脚手架 Java Initializr\n\n官网： https://start.aliyun.com/bootstrap.html\n\n简介： 2020 年由阿里巴巴中间件团队发布的定制版 Java工程脚手架，快速搭建工程应用。\n\nJava工程脚手架是一个项目框架生成工具，旨在减少开发者的工程搭建成本，为开发者提供简便、快捷的项目配置体验。\n\n支持 Spring 官方脚手架的全部功能，且增加了丰富的典型配置和使用案例。多种标准应用架构供选择，让你生成完工程就可以直接写代码。基于浏览器的运行环境，进一步降低功能体验和试用的复杂度。\n\n\n\n\n# 2. Java 线上诊断工具 Arthas\n\n官网： https://arthas.aliyun.com/en-us/index.html\n\n简介：Arthas 是阿里巴巴 2018 年 9 月开源的一款 Java 线上诊断工具。\n\n工具的使用场景：\n\n * 这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？\n * 我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？\n * 遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？\n * 线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！\n * 是否有一个全局视角来查看系统的运行状况？\n * 有什么办法可以监控到 JVM 的实时运行状态？\n\nArthas 支持 JDK 6+，支持 Linux/Mac/Windows，采用命令行交互模式，同时提供丰富的 Tab 自动补全功能，进一步方便进行问题的定位和诊断。\n\n\n# 3. Java 工具集 Dragonwell\n\n官网： https://www.aliyun.com/product/dragonwell\n\n简介： Alibaba Dragonwell 是一款免费的, 生产就绪型 Open JDK 发行版，提供长期支持，包括性能增强和安全修复。阿里巴巴拥有最丰富的 Java 应用场景，覆盖电商，金融，物流等众多领域，世界上最大的 Java 用户之一。Alibaba Dragonwell 作为 Java 应用的基石，支撑了阿里经济体内所有的 Java 业务。Alibaba Dragonwell 完全兼容 Java SE 标准，您可以在任何常用操作系统（包括 Linux、Windows 和 macOS）上开发 Java 应用程序， 运行时生产环境选择 Alibaba Dragonwell。\n\n特性\n\n * 安全与稳定 紧密与 OpenJDK 社区保持合作，保持对社区工作的跟踪，及时同步上游更新；同时，Dragonwell 选择性的移植高版本 Java 的重要功能，这些移植功能已经在阿里内部被大规模部署，用户都可以免费使用，而不用等下一个 LTS 版本\n\n * 标准兼容 OpenJDK 的下游, 完全遵循 Java SE 标准，通过 JCK 兼容性测试\n\n * 性能卓越 Dragonwell 作为阿里巴巴 Java 应用的基石，支撑了阿里经济体内所有的 Java 业务，积累了大量业务场景下的实践和创新\n   \n   \n\n\n# 4. Java 代码规约扫描插件\n\n官网： https://github.com/alibaba/p3c\n\n简介： 《阿里巴巴Java开发手册》自从第一个版本起，倍受业界关注，相信很多人对其中的规则也有了一定的了解，很多人甚至希望能尽快在自己的团队推行起来，这样大家有了一套共同的开发准则。但是，如何更好的去遵守规则并且按照手册去开发我们的系统确变得不那么容易，为了让开发者更加方便、快速的将规范推动并实行起来，阿里巴巴基于手册内容，研发了一套自动化的IDE检测插件（IDEA、Eclipse）， 该插件在扫描代码后，将不符合《手册》的代码按Blocker/Critical/Major三个等级显示在下方，甚至在IDEA上，还基于Inspection机制提供了实时检测功能，编写代码的同时也能快速发现问题所在。对于历史代码，部分规则实现了批量一键修复的功能，提升代码质量，提高团队研发效能。\n\n\n# 5. 应用实时监控工具 ARMS\n\n官网： https://www.aliyun.com/product/arms\n\n简介： 应用实时监控服务 (Application Real-Time Monitoring Service, 简称ARMS) 是一款应用性能管理产品，包含前端监控，应用监控和Prometheus监控三大子产品，涵盖了浏览器，小程序，APP，分布式应用和容器环境等性能管理，能帮助你实现全栈式的性能监控和端到端的全链路追踪诊断， 让应用运维从未如此轻松高效。\n\n工具的使用场景：\n\n * 晚上 10 点收到 37 条报警信息，你却无从下手？\n\n * 当我们发现问题的时候，客户/业务方已经发起投诉？\n\n * 每个月花几十万买服务器，却无法保障用户体验？\n   \n   \n\n\n# 6. 性能测试工具 PTS\n\n官网： https://www.aliyun.com/product/pts ；\n\n简介： PTS（Performance Testing Service）是面向所有技术背景人员的云化测试工具。有别于传统工具的繁复，PTS以互联网化的交互，提供性能测试、API调试和监测等多种能力。自研和适配开源的功能都可以轻松模拟任意体量的用户访问业务的场景，任务随时发起，免去繁琐的搭建和维护成本。更是紧密结合监控、流控等兄弟产品提供一站式高可用能力，高效检验和管理业务性能。\n\n使用场景：\n\n * 大促活动准备前，想模拟真实多用户高并发访问场景？\n\n * 产品版本迭代，想观察流量洪峰时产品表现？\n\n * 产品交付\n   \n   \n\n\n# 7. 架构可视化工具 AHAS\n\n官网： https://www.aliyun.com/product/ahas\n\n简介： 应用高可用服务（Application High Availability Service）是专注于提高应用及业务高可用的工具平台，目前主要提供 应用架构探测感知，故障注入式高可用能力评测 和 流控降级高可用防护 三大核心能力，通过各自的工具模块可以快速低成本的在营销活动场景、业务核心场景全面提升业务稳定性和韧性。\n\n使用场景：\n\n * 服务化改造过程中，想精确的了解资源实例的构成和交互情况，实现架构的可视化？\n * 想引入真实的故障场景和演练模型？\n * 低门槛获得流控、降级功能？\n\n\n\n\n# 8. 数据处理工具 EasyExcel\n\n官网： https://github.com/alibaba/easyexcel\n\n简介： Java解析、生成Excel比较有名的框架有Apache poi、jxl。但他们都存在一个严重的问题就是非常的耗内存，poi有一套SAX模式的API可以一定程度的解决一些内存溢出的问题，但POI还是有一些缺陷，比如07版Excel解压缩以及解压后存储都是在内存中完成的，内存消耗依然很大。easyexcel重写了poi对07版Excel的解析，能够原本一个3M的excel用POI sax依然需要100M左右内存降低到几M，并且再大的excel不会出现内存溢出，03版依赖POI的sax模式。在上层做了模型转换的封装，让使用者更加简单方便.\n\n\n# 9. iOS 类工具 HandyJSON\n\n官网： https://github.com/alibaba/HandyJSON\n\n简介： HandyJSON是一个用于Swift语言中的JSON序列化/反序列化库。\n\n与其他流行的Swift JSON库相比，HandyJSON的特点是，它支持纯swift类，使用也简单。它反序列化时(把JSON转换为Model)不要求Model从NSObject继承(因为它不是基于KVC机制)，也不要求你为Model定义一个Mapping函数。只要你定义好Model类，声明它服从HandyJSON协议，HandyJSON就能自行以各个属性的属性名为Key，从JSON串中解析值。\n\n# 特性\n\n * 序列化Model到JSON、从JSON反序列化到Model\n * 自然地以Model的属性名称作为解析JSON的Key，不需要额外指定\n * 支持Swift中大部分类型\n * 支持class、struct定义的Model\n * 支持自定义解析规则\n * 类型自适应，如JSON中是一个Int，但对应Model是String字段，会自动完成转化\n\n\n# 10. 数据库落地 Druid\n\n官网： https://github.com/alibaba/druid\n\n简介： Druid 是一个 JDBC 组件库，包含数据库连接池、SQL Parser 等组件, 被大量业务和技术产品使用或集成，经历过最严苛线上业务场景考验，是你值得信赖的技术产品。",normalizedContent:"# 阿里十大最受开发者欢迎的工具\n\n精选了一些阿里经济体内部最受开发者欢迎的开发者工具，筛选出一些带有普适性同样适合外部开发者的，希望能助力开发者们提高开发效率。\n\n\n# 1. java 工程脚手架 java initializr\n\n官网： https://start.aliyun.com/bootstrap.html\n\n简介： 2020 年由阿里巴巴中间件团队发布的定制版 java工程脚手架，快速搭建工程应用。\n\njava工程脚手架是一个项目框架生成工具，旨在减少开发者的工程搭建成本，为开发者提供简便、快捷的项目配置体验。\n\n支持 spring 官方脚手架的全部功能，且增加了丰富的典型配置和使用案例。多种标准应用架构供选择，让你生成完工程就可以直接写代码。基于浏览器的运行环境，进一步降低功能体验和试用的复杂度。\n\n\n\n\n# 2. java 线上诊断工具 arthas\n\n官网： https://arthas.aliyun.com/en-us/index.html\n\n简介：arthas 是阿里巴巴 2018 年 9 月开源的一款 java 线上诊断工具。\n\n工具的使用场景：\n\n * 这个类从哪个 jar 包加载的？为什么会报各种类相关的 exception？\n * 我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？\n * 遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？\n * 线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！\n * 是否有一个全局视角来查看系统的运行状况？\n * 有什么办法可以监控到 jvm 的实时运行状态？\n\narthas 支持 jdk 6+，支持 linux/mac/windows，采用命令行交互模式，同时提供丰富的 tab 自动补全功能，进一步方便进行问题的定位和诊断。\n\n\n# 3. java 工具集 dragonwell\n\n官网： https://www.aliyun.com/product/dragonwell\n\n简介： alibaba dragonwell 是一款免费的, 生产就绪型 open jdk 发行版，提供长期支持，包括性能增强和安全修复。阿里巴巴拥有最丰富的 java 应用场景，覆盖电商，金融，物流等众多领域，世界上最大的 java 用户之一。alibaba dragonwell 作为 java 应用的基石，支撑了阿里经济体内所有的 java 业务。alibaba dragonwell 完全兼容 java se 标准，您可以在任何常用操作系统（包括 linux、windows 和 macos）上开发 java 应用程序， 运行时生产环境选择 alibaba dragonwell。\n\n特性\n\n * 安全与稳定 紧密与 openjdk 社区保持合作，保持对社区工作的跟踪，及时同步上游更新；同时，dragonwell 选择性的移植高版本 java 的重要功能，这些移植功能已经在阿里内部被大规模部署，用户都可以免费使用，而不用等下一个 lts 版本\n\n * 标准兼容 openjdk 的下游, 完全遵循 java se 标准，通过 jck 兼容性测试\n\n * 性能卓越 dragonwell 作为阿里巴巴 java 应用的基石，支撑了阿里经济体内所有的 java 业务，积累了大量业务场景下的实践和创新\n   \n   \n\n\n# 4. java 代码规约扫描插件\n\n官网： https://github.com/alibaba/p3c\n\n简介： 《阿里巴巴java开发手册》自从第一个版本起，倍受业界关注，相信很多人对其中的规则也有了一定的了解，很多人甚至希望能尽快在自己的团队推行起来，这样大家有了一套共同的开发准则。但是，如何更好的去遵守规则并且按照手册去开发我们的系统确变得不那么容易，为了让开发者更加方便、快速的将规范推动并实行起来，阿里巴巴基于手册内容，研发了一套自动化的ide检测插件（idea、eclipse）， 该插件在扫描代码后，将不符合《手册》的代码按blocker/critical/major三个等级显示在下方，甚至在idea上，还基于inspection机制提供了实时检测功能，编写代码的同时也能快速发现问题所在。对于历史代码，部分规则实现了批量一键修复的功能，提升代码质量，提高团队研发效能。\n\n\n# 5. 应用实时监控工具 arms\n\n官网： https://www.aliyun.com/product/arms\n\n简介： 应用实时监控服务 (application real-time monitoring service, 简称arms) 是一款应用性能管理产品，包含前端监控，应用监控和prometheus监控三大子产品，涵盖了浏览器，小程序，app，分布式应用和容器环境等性能管理，能帮助你实现全栈式的性能监控和端到端的全链路追踪诊断， 让应用运维从未如此轻松高效。\n\n工具的使用场景：\n\n * 晚上 10 点收到 37 条报警信息，你却无从下手？\n\n * 当我们发现问题的时候，客户/业务方已经发起投诉？\n\n * 每个月花几十万买服务器，却无法保障用户体验？\n   \n   \n\n\n# 6. 性能测试工具 pts\n\n官网： https://www.aliyun.com/product/pts ；\n\n简介： pts（performance testing service）是面向所有技术背景人员的云化测试工具。有别于传统工具的繁复，pts以互联网化的交互，提供性能测试、api调试和监测等多种能力。自研和适配开源的功能都可以轻松模拟任意体量的用户访问业务的场景，任务随时发起，免去繁琐的搭建和维护成本。更是紧密结合监控、流控等兄弟产品提供一站式高可用能力，高效检验和管理业务性能。\n\n使用场景：\n\n * 大促活动准备前，想模拟真实多用户高并发访问场景？\n\n * 产品版本迭代，想观察流量洪峰时产品表现？\n\n * 产品交付\n   \n   \n\n\n# 7. 架构可视化工具 ahas\n\n官网： https://www.aliyun.com/product/ahas\n\n简介： 应用高可用服务（application high availability service）是专注于提高应用及业务高可用的工具平台，目前主要提供 应用架构探测感知，故障注入式高可用能力评测 和 流控降级高可用防护 三大核心能力，通过各自的工具模块可以快速低成本的在营销活动场景、业务核心场景全面提升业务稳定性和韧性。\n\n使用场景：\n\n * 服务化改造过程中，想精确的了解资源实例的构成和交互情况，实现架构的可视化？\n * 想引入真实的故障场景和演练模型？\n * 低门槛获得流控、降级功能？\n\n\n\n\n# 8. 数据处理工具 easyexcel\n\n官网： https://github.com/alibaba/easyexcel\n\n简介： java解析、生成excel比较有名的框架有apache poi、jxl。但他们都存在一个严重的问题就是非常的耗内存，poi有一套sax模式的api可以一定程度的解决一些内存溢出的问题，但poi还是有一些缺陷，比如07版excel解压缩以及解压后存储都是在内存中完成的，内存消耗依然很大。easyexcel重写了poi对07版excel的解析，能够原本一个3m的excel用poi sax依然需要100m左右内存降低到几m，并且再大的excel不会出现内存溢出，03版依赖poi的sax模式。在上层做了模型转换的封装，让使用者更加简单方便.\n\n\n# 9. ios 类工具 handyjson\n\n官网： https://github.com/alibaba/handyjson\n\n简介： handyjson是一个用于swift语言中的json序列化/反序列化库。\n\n与其他流行的swift json库相比，handyjson的特点是，它支持纯swift类，使用也简单。它反序列化时(把json转换为model)不要求model从nsobject继承(因为它不是基于kvc机制)，也不要求你为model定义一个mapping函数。只要你定义好model类，声明它服从handyjson协议，handyjson就能自行以各个属性的属性名为key，从json串中解析值。\n\n# 特性\n\n * 序列化model到json、从json反序列化到model\n * 自然地以model的属性名称作为解析json的key，不需要额外指定\n * 支持swift中大部分类型\n * 支持class、struct定义的model\n * 支持自定义解析规则\n * 类型自适应，如json中是一个int，但对应model是string字段，会自动完成转化\n\n\n# 10. 数据库落地 druid\n\n官网： https://github.com/alibaba/druid\n\n简介： druid 是一个 jdbc 组件库，包含数据库连接池、sql parser 等组件, 被大量业务和技术产品使用或集成，经历过最严苛线上业务场景考验，是你值得信赖的技术产品。",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"高清视频解析接口",frontmatter:{author:"xlc520",title:"高清视频解析接口",description:"高清视频解析接口",time:"2022-02-15T00:00:00.000Z",category:"other",tags:"other",article:!0,timeline:!0,icon:null,password:null},regularPath:"/other/%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3.html",relativePath:"other/高清视频解析接口.md",key:"v-a7b7763e",path:"/other/%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3/",readingTime:{minutes:.12,words:35},headersStr:null,content:"# 高清视频解析接口\n\nhttps://okjx.cc/?url=\n\nhttps://vip.parwix.com:4433/player/?url=\n\nhttps://jx.m3u8.tv/jiexi/?url=\n\nhttps://m2090.com/?url=\n\nhttp://17kyun.com/api.php?url=",normalizedContent:"# 高清视频解析接口\n\nhttps://okjx.cc/?url=\n\nhttps://vip.parwix.com:4433/player/?url=\n\nhttps://jx.m3u8.tv/jiexi/?url=\n\nhttps://m2090.com/?url=\n\nhttp://17kyun.com/api.php?url=",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 19, 2022 10:13",updateTimeStamp:1645265632e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Script",frontmatter:{author:"xlc520",title:"Script",description:"Script",time:null,category:"Script",tags:"Script",article:!0,timeline:!0,icon:null,password:null},regularPath:"/script/",relativePath:"script/README.md",key:"v-3f9264e6",path:"/script/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1644739094e3,updateTime:"February 15, 2022 16:19",updateTimeStamp:1644941981e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"京东脚本仓库",frontmatter:{},regularPath:"/script/repository.html",relativePath:"script/repository.md",key:"v-5afc35c5",path:"/script/repository/",readingTime:{minutes:1.68,words:503},headersStr:null,content:'# 京东脚本仓库\n\n2022年2月8日 https://github.com/danteswx/fxxk\n\nhttps://github.com/woaim65/Oz\n\nhttps://github.com/xdhgsq/xdh\n\nhttps://github.com/whzsyx/xuescripts\n\nhttps://github.com/sanbing666/scripts\n\nhttps://github.com/XCould/jd-scripts-docker\n\nhttps://github.com/skyyaman/temp\n\nhttps://github.com/linmudaye/linmudaye\n\n\nchiupam仓库(京喜工厂瓜分电力开团ID) ql repo https://github.com/chiupam/JD_Diy.git "activeId" 1 1-23/4 * * *\n柠檬（胖虎）仓库  ql repo https://github.com/panghu999/panghu.git "jd_"  3 1-23/4 * * *\n\nAriszy（Zhiyi-N）仓库  ql repo https://github.com/Ariszy/Private-Script.git "JD"  5 1-23/4 * * *\n\njiulan仓库  ql repo https://github.com/jiulan/platypus.git "jd_|jx_" "" "overdue" "main" 7 1-23/4 * * *\n\npasserby-b仓库  ql repo https://github.com/passerby-b/JDDJ.git "jddj_" "_cookie|_getck" "^jd[^_]"  9 1-23/4 * * *\n\ncurtinlv仓库  ql repo https://github.com/curtinlv/JD-Script.git "jd_"  13 1-23/4 * * *\n\ncdle仓库  ql repo https://github.com/cdle/xdd.git "jd_" "disposable|expired|jdc"  15 1-23/4 * * *\n\nsmiek2221(青蛙)仓库  ql repo https://github.com/smiek2221/scripts.git "jd_|gua_" "" "^MovementFaker|^JDJRValidator|^ZooFaker|^sign" 17 1-23/4 * * *\n\nstar261仓库 ql repo https://github.com/star261/jd.git "jd_|star_" "" "code" "main" 19 1-23/4 * * *\n\n温某人仓库  ql repo https://github.com/Wenmoux/scripts.git "other|jd" "" "" "wen" 21 1-23/4 * * *\n\nhe1pu仓库  ql repo https://github.com/he1pu/JDHelp.git "jd_|jx_|getJDCookie" "Coupon|update" "^jd[^_]|USER|^sign|^ZooFaker|utils" 23 1-23/4 * * *\n\nshufflewzc仓库 ql repo https://github.com/shufflewzc/faker2.git "jd_|jx_|gua_|jddj_|getJDCookie" "activity|backUp|Coupon|update" "^jd[^_]|USER|^JS|^TS|^JDJRValidator_Pure|^ZooFaker|^sign" 25 1-23/4 * * *\n\nJDHelloWorld仓库 ql repo https://github.com/JDHelloWorld/jd_scripts.git "jd_|jx_|getJDCookie" "activity|backUp|Coupon|enen|update|test" "^jd[^_]|USER|^TS|utils|notify|env|package|ken.js" 27 1-23/4 * * *\n\nNobyDa仓库(拉取京东签到基础脚本JD_DailyBonus.js专用) ql repo https://github.com/NobyDa/Script.git "JD-DailyBonus" "" "JD_DailyBonus" "master" 29 1-23/4 * * *\n\nTsukasa007仓库 ql repo https://github.com/Tsukasa007/my_script.git "jd_|jx_" "jdCookie|USER_AGENTS|sendNotify|backup" "" "master" 31 1-23/4 * * *\n\nAaron-lv仓库 ql repo https://github.com/Aaron-lv/sync.git "jd_|jx_|getJDCookie" "activity|backUp|Coupon" "^jd[^_]|USER|utils" "jd_scripts" 33 1-23/4 * * *\n\n\n\n\n\n【Faker集合仓库】\n ql repo https://ghproxy.com/https://github.com/shufflewzc/faker2.git "jd_|jx_|gua_|jddj_|getJDCookie" "activity|backUp" "^jd[^_]|USER|ZooFaker_Necklace.js|JDJRValidator_Pure|sign_graphics_validate"\n\n 【curtinlv仓库】\nql repo https://github.com/curtinlv/JD-Script.git\n\n【温某某】\nql repo https://ghproxy.com/https://github.com/shufflewzc/Wenmoux.git \n \n【柠檬（胖虎）】\nql repo https://github.com/panghu999/panghu.git "jd_"\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n',normalizedContent:'# 京东脚本仓库\n\n2022年2月8日 https://github.com/danteswx/fxxk\n\nhttps://github.com/woaim65/oz\n\nhttps://github.com/xdhgsq/xdh\n\nhttps://github.com/whzsyx/xuescripts\n\nhttps://github.com/sanbing666/scripts\n\nhttps://github.com/xcould/jd-scripts-docker\n\nhttps://github.com/skyyaman/temp\n\nhttps://github.com/linmudaye/linmudaye\n\n\nchiupam仓库(京喜工厂瓜分电力开团id) ql repo https://github.com/chiupam/jd_diy.git "activeid" 1 1-23/4 * * *\n柠檬（胖虎）仓库  ql repo https://github.com/panghu999/panghu.git "jd_"  3 1-23/4 * * *\n\nariszy（zhiyi-n）仓库  ql repo https://github.com/ariszy/private-script.git "jd"  5 1-23/4 * * *\n\njiulan仓库  ql repo https://github.com/jiulan/platypus.git "jd_|jx_" "" "overdue" "main" 7 1-23/4 * * *\n\npasserby-b仓库  ql repo https://github.com/passerby-b/jddj.git "jddj_" "_cookie|_getck" "^jd[^_]"  9 1-23/4 * * *\n\ncurtinlv仓库  ql repo https://github.com/curtinlv/jd-script.git "jd_"  13 1-23/4 * * *\n\ncdle仓库  ql repo https://github.com/cdle/xdd.git "jd_" "disposable|expired|jdc"  15 1-23/4 * * *\n\nsmiek2221(青蛙)仓库  ql repo https://github.com/smiek2221/scripts.git "jd_|gua_" "" "^movementfaker|^jdjrvalidator|^zoofaker|^sign" 17 1-23/4 * * *\n\nstar261仓库 ql repo https://github.com/star261/jd.git "jd_|star_" "" "code" "main" 19 1-23/4 * * *\n\n温某人仓库  ql repo https://github.com/wenmoux/scripts.git "other|jd" "" "" "wen" 21 1-23/4 * * *\n\nhe1pu仓库  ql repo https://github.com/he1pu/jdhelp.git "jd_|jx_|getjdcookie" "coupon|update" "^jd[^_]|user|^sign|^zoofaker|utils" 23 1-23/4 * * *\n\nshufflewzc仓库 ql repo https://github.com/shufflewzc/faker2.git "jd_|jx_|gua_|jddj_|getjdcookie" "activity|backup|coupon|update" "^jd[^_]|user|^js|^ts|^jdjrvalidator_pure|^zoofaker|^sign" 25 1-23/4 * * *\n\njdhelloworld仓库 ql repo https://github.com/jdhelloworld/jd_scripts.git "jd_|jx_|getjdcookie" "activity|backup|coupon|enen|update|test" "^jd[^_]|user|^ts|utils|notify|env|package|ken.js" 27 1-23/4 * * *\n\nnobyda仓库(拉取京东签到基础脚本jd_dailybonus.js专用) ql repo https://github.com/nobyda/script.git "jd-dailybonus" "" "jd_dailybonus" "master" 29 1-23/4 * * *\n\ntsukasa007仓库 ql repo https://github.com/tsukasa007/my_script.git "jd_|jx_" "jdcookie|user_agents|sendnotify|backup" "" "master" 31 1-23/4 * * *\n\naaron-lv仓库 ql repo https://github.com/aaron-lv/sync.git "jd_|jx_|getjdcookie" "activity|backup|coupon" "^jd[^_]|user|utils" "jd_scripts" 33 1-23/4 * * *\n\n\n\n\n\n【faker集合仓库】\n ql repo https://ghproxy.com/https://github.com/shufflewzc/faker2.git "jd_|jx_|gua_|jddj_|getjdcookie" "activity|backup" "^jd[^_]|user|zoofaker_necklace.js|jdjrvalidator_pure|sign_graphics_validate"\n\n 【curtinlv仓库】\nql repo https://github.com/curtinlv/jd-script.git\n\n【温某某】\nql repo https://ghproxy.com/https://github.com/shufflewzc/wenmoux.git \n \n【柠檬（胖虎）】\nql repo https://github.com/panghu999/panghu.git "jd_"\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n',charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"脚本仓库",frontmatter:{},regularPath:"/script/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93.html",relativePath:"script/脚本仓库.md",key:"v-2515e26a",path:"/script/%E8%84%9A%E6%9C%AC%E4%BB%93%E5%BA%93/",readingTime:{minutes:.25,words:75},headersStr:null,content:"# 脚本仓库\n\nhttps://git.spiritlhl.workers.dev/o0oo0ooo0/EUserv_extend\n\nhttps://hub.fastgit.org/xbt370/Collection\n\nhttps://hub.fastgit.org/qcasxy/MagicCodes\n\nhttps://hub.fastgit.org/gitk01n/Youth\n\nhttps://hub.fastgit.org/GANHAOXIANG/zhongqing\n\nhttps://hub.fastgit.org/caixukun112/js\n\n\nbash <(curl -L https://raw.fastgit.org/v2fly/fhs-install-v2ray/master/install-release.sh)\n\nhttps://github.com/Tsukasa007/my_script.git\n\nhttps://github.com/F-19-F/XM_BBS\n\nhttps://github.com/ClassmateLin/jd_scripts\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n",normalizedContent:"# 脚本仓库\n\nhttps://git.spiritlhl.workers.dev/o0oo0ooo0/euserv_extend\n\nhttps://hub.fastgit.org/xbt370/collection\n\nhttps://hub.fastgit.org/qcasxy/magiccodes\n\nhttps://hub.fastgit.org/gitk01n/youth\n\nhttps://hub.fastgit.org/ganhaoxiang/zhongqing\n\nhttps://hub.fastgit.org/caixukun112/js\n\n\nbash <(curl -l https://raw.fastgit.org/v2fly/fhs-install-v2ray/master/install-release.sh)\n\nhttps://github.com/tsukasa007/my_script.git\n\nhttps://github.com/f-19-f/xm_bbs\n\nhttps://github.com/classmatelin/jd_scripts\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Code",frontmatter:{author:"xlc520",title:"Code",description:"Code分类",time:null,category:"Code",tags:"Code",article:!0,timeline:!0,icon:null,password:null},regularPath:"/source_code/",relativePath:"source_code/README.md",key:"v-dbc9215c",path:"/source_code/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1644739094e3,updateTime:"February 15, 2022 16:19",updateTimeStamp:1644941981e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"开源后台管理项目",frontmatter:{},regularPath:"/source_code/admin.html",relativePath:"source_code/admin.md",key:"v-7e9249e5",path:"/source_code/admin/",readingTime:{minutes:1.31,words:392},headersStr:null,content:"# 开源后台管理项目\n\n1、vue-Element-Admin\n\nGithub Star 数 45100， Github 地址：\n\nhttps://github.com/PanJiaChen/vue-element-admin\n\nhttps://panjiachen.github.io/vue-element-admin-site/zh/\n\n一个基于 vue2.0 和 Eelement 的控制面板 UI 框架。\n\n2、AdminLTE\n\nGithub Star 数 32000 ， Github 地址：\n\nhttps://github.com/almasaeed2010/AdminLTE\n\nhttps://adminlte.io/\n\n3、ant-design-pro\n\nGithub Star 数 22600，Github 地址：\n\nhttps://github.com/ant-design/ant-design-pro\n\n开箱即用的中台前端/设计解决方案\n\n4、tabler\n\nGithub Star 数 20000， Github 地址：\n\nhttps://github.com/tabler/tabler\n\n构建在 BootStrap 4 之上的免费的 HTML 控制面板框架\n\n5、ng2-admin\n\nGithub Star 数 19000， Github 地址：\n\nhttps://github.com/akveo/ngx-admin\n\n基于 Angular 2, Bootstrap 4 和 Webpack 的后台管理面板框架。\n\n6、Gentelella\n\nGithub Star 数 18300， Github 地址：\n\nhttps://github.com/puikinsh/gentelella\n\n一个基于 Bootstarp 的免费的后台控制面板。\n\n7、iview-admin\n\nGithub Star 数 13700，Github 地址：\n\nhttps://github.com/iview/iview-admin\n\n基于 iView 的 Vue 2.0 控制面板。\n\n8、blur-admin\n\nGithub Star 数 10600，Github 地址：\n\nhttps://github.com/akveo/blur-admin\n\n基于 Angular 和 Bootstrap 的后台管理面板框架。\n\n9、vue-admin\n\nGithub Star 数 9400，Github 地址：\n\nhttps://github.com/vue-bulma/vue-admin\n\n基于 Vue 和 Bulma 的控制面板。\n\n10、material-dashboard\n\nGithub Star 数 8600，Github 地址：\n\nhttps://github.com/creativetimofficial/material-dashboard\n\n基于 Bootstrap 4 和 Material 风格的控制面板。\n\n11、pearadmin\n\nhttp://www.pearadmin.com",normalizedContent:"# 开源后台管理项目\n\n1、vue-element-admin\n\ngithub star 数 45100， github 地址：\n\nhttps://github.com/panjiachen/vue-element-admin\n\nhttps://panjiachen.github.io/vue-element-admin-site/zh/\n\n一个基于 vue2.0 和 eelement 的控制面板 ui 框架。\n\n2、adminlte\n\ngithub star 数 32000 ， github 地址：\n\nhttps://github.com/almasaeed2010/adminlte\n\nhttps://adminlte.io/\n\n3、ant-design-pro\n\ngithub star 数 22600，github 地址：\n\nhttps://github.com/ant-design/ant-design-pro\n\n开箱即用的中台前端/设计解决方案\n\n4、tabler\n\ngithub star 数 20000， github 地址：\n\nhttps://github.com/tabler/tabler\n\n构建在 bootstrap 4 之上的免费的 html 控制面板框架\n\n5、ng2-admin\n\ngithub star 数 19000， github 地址：\n\nhttps://github.com/akveo/ngx-admin\n\n基于 angular 2, bootstrap 4 和 webpack 的后台管理面板框架。\n\n6、gentelella\n\ngithub star 数 18300， github 地址：\n\nhttps://github.com/puikinsh/gentelella\n\n一个基于 bootstarp 的免费的后台控制面板。\n\n7、iview-admin\n\ngithub star 数 13700，github 地址：\n\nhttps://github.com/iview/iview-admin\n\n基于 iview 的 vue 2.0 控制面板。\n\n8、blur-admin\n\ngithub star 数 10600，github 地址：\n\nhttps://github.com/akveo/blur-admin\n\n基于 angular 和 bootstrap 的后台管理面板框架。\n\n9、vue-admin\n\ngithub star 数 9400，github 地址：\n\nhttps://github.com/vue-bulma/vue-admin\n\n基于 vue 和 bulma 的控制面板。\n\n10、material-dashboard\n\ngithub star 数 8600，github 地址：\n\nhttps://github.com/creativetimofficial/material-dashboard\n\n基于 bootstrap 4 和 material 风格的控制面板。\n\n11、pearadmin\n\nhttp://www.pearadmin.com",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"March 6, 2022 14:06",updateTimeStamp:1646575587e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"国内常用静态资源 CDN 公共库",frontmatter:{author:"xlc520",title:"国内常用静态资源 CDN 公共库",description:"国内常用静态资源 CDN 公共库加速服务",time:"2022-03-06T00:00:00.000Z",category:"Code",tags:["Code","CDN"],article:!0,timeline:!0,icon:null,password:null},regularPath:"/source_code/%E5%9B%BD%E5%86%85%E5%B8%B8%E7%94%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90CDN%E5%85%AC%E5%85%B1%E5%BA%93.html",relativePath:"source_code/国内常用静态资源CDN公共库.md",key:"v-50da21d8",path:"/source_code/%E5%9B%BD%E5%86%85%E5%B8%B8%E7%94%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90CDN%E5%85%AC%E5%85%B1%E5%BA%93/",readingTime:{minutes:4.36,words:1307},headersStr:null,content:"# 国内常用静态资源 CDN 公共库加速服务\n\nCDN的全称是Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。\n\n1.BootCDN\n\nBootCDN 是 Bootstrap 中文网和又拍云共同支持并维护的前端开源项目免费 CDN 服务，由又拍云提供全部 CDN 支持，致力于为 Bootstrap、jQuery、Angular 一样优秀的前端开源项目提供稳定、快速的免费 CDN 加速服务。BootCDN 所收录的开源项目主要同步于 cdnjs 仓库。\n\n自2013年10月31日上线以来已经为上万家网站提供了稳定、可靠的免费 CDN 加速服务。\n\nhttp://www.bootcdn.cn/\n\n2.字节跳动静态资源公共库\n\n字节跳动静态资源库支持多协议、资源动态拼接、快速检索及资源的动态更新,安全、稳定、实时。\n\nhttp://cdn.bytedance.com/\n\n3.又拍云常用JavaScript库CDN服务\n\n又拍云为您托管常用的JavaScript库，您可以在自己的网页上直接通过script标记引用这些资源。这样做不仅可以为您节省流量，还能通过我们的CDN加速，获得更快的访问速度。\n\nhttp://jscdn.upai.com/\n\n4.百度静态资源公共库\n\n是稳定，快速，全面，开源的国内CDN加速服务。\n\n由百度遍布全国各地100+个CDN节点提供加速服务。\n\n让开源库享受与百度首页静态资源同等待遇。\n\n全面，开源\n\n收录超过180+开源库，并且这个数字正在不断增加。\n\n百度静态资源公共库服务不仅在Github开源库上接受任何人的提交请求，同时实时同步国外如CDNJS上优秀的开源库。\n\nhttp://cdn.code.baidu.com/\n\n5.新浪云计算公共Js库\n\n新浪云计算是新浪研发中心下属的部门，主要负责新浪在云计算领域的战略规划，技术研发和平台运营工作。主要产品包括 应用云平台Sina App Engine（简称SAE）。\n\nSAE的CDN节点覆盖全国各大城市的多路（电信、联通、移动、教育）骨干网络，使开发者能够方便的使用高质量的CDN服务。\n\nhttp://lib.sinaapp.com/\n\n6.Staticfile CDN\n\n像 Google Ajax Library，Microsoft ASP.net CDN，SAE，Baidu，Upyun 等 CDN 上都免费提供的 JS 库的存储，但使用起来却都有些局限，因为他们只提供了部分 JS 库。当然，我们还可以有像 CDNJS 这样的平台，存储了大部分主流的 JS 库，甚至 CSS、image 和 swf，但国内的访问速度却不是很理想，并且缺少很多国内优秀开源库。\n\n因此，我们提供这样一个仓库，让它尽可能全面收录优秀的开源库，并免费为之提供 CDN 加速服务，使之有更好的访问速度和稳定的环境。同时，我们也提供开源库源接入的入口，让所有人都可以提交开源库，包括 JS、CSS、image 和 swf 等静态文件。\n\nhttp://www.staticfile.org/\n\n7.360 前端静态资源库\n\n60 前端静态资源库是由奇舞团支持并维护的开源项目免费 CDN 服务，支持 HTTPS 和 HTTP/2，囊括上千个前端资源库和 Google 字体库。\n\n本站静态资源库数据均同步于 cdnjs，如发现版本更新不及时或未收录，欢迎向 cdnjs 提交 PR。\n\nhttps://cdn.baomitu.com/\n\n7.Microsoft ASP.net CDN\n\nASP.Net开发团队推出的一个新的微软Ajax CDN（Content Delivery Network，内容分发网络）服务，该服务提供了对AJAX库（包括jQuery 和 ASP.NET AJAX）的缓存支持。该服务是免费的，不需任何注册，可用于商业性或非商业性用途。\n\nhttps://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview\n\n8.jsDelivr开源CDN\n\nA free super-fast CDN for developers and webmasters jsDelivr开源CDN(内容分发网络)是一个公开的,任何人都可以提交。 通过使用GitHub,允许社区完全与jsDelivr通过添加和更新文件。\n\nhttp://www.jsdelivr.com/\n\n9.7ED.NET\n\n7ED.NET 为您提供一系列的服务，包含静态资源 CDN 加速服务、Github RAW 加速服务、海外图片内地加速服务、Bing 每日图片 API等。\n\nhttps://www.7ed.net/",normalizedContent:"# 国内常用静态资源 cdn 公共库加速服务\n\ncdn的全称是content delivery network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，cdn系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 internet网络拥挤的状况，提高用户访问网站的响应速度。\n\n1.bootcdn\n\nbootcdn 是 bootstrap 中文网和又拍云共同支持并维护的前端开源项目免费 cdn 服务，由又拍云提供全部 cdn 支持，致力于为 bootstrap、jquery、angular 一样优秀的前端开源项目提供稳定、快速的免费 cdn 加速服务。bootcdn 所收录的开源项目主要同步于 cdnjs 仓库。\n\n自2013年10月31日上线以来已经为上万家网站提供了稳定、可靠的免费 cdn 加速服务。\n\nhttp://www.bootcdn.cn/\n\n2.字节跳动静态资源公共库\n\n字节跳动静态资源库支持多协议、资源动态拼接、快速检索及资源的动态更新,安全、稳定、实时。\n\nhttp://cdn.bytedance.com/\n\n3.又拍云常用javascript库cdn服务\n\n又拍云为您托管常用的javascript库，您可以在自己的网页上直接通过script标记引用这些资源。这样做不仅可以为您节省流量，还能通过我们的cdn加速，获得更快的访问速度。\n\nhttp://jscdn.upai.com/\n\n4.百度静态资源公共库\n\n是稳定，快速，全面，开源的国内cdn加速服务。\n\n由百度遍布全国各地100+个cdn节点提供加速服务。\n\n让开源库享受与百度首页静态资源同等待遇。\n\n全面，开源\n\n收录超过180+开源库，并且这个数字正在不断增加。\n\n百度静态资源公共库服务不仅在github开源库上接受任何人的提交请求，同时实时同步国外如cdnjs上优秀的开源库。\n\nhttp://cdn.code.baidu.com/\n\n5.新浪云计算公共js库\n\n新浪云计算是新浪研发中心下属的部门，主要负责新浪在云计算领域的战略规划，技术研发和平台运营工作。主要产品包括 应用云平台sina app engine（简称sae）。\n\nsae的cdn节点覆盖全国各大城市的多路（电信、联通、移动、教育）骨干网络，使开发者能够方便的使用高质量的cdn服务。\n\nhttp://lib.sinaapp.com/\n\n6.staticfile cdn\n\n像 google ajax library，microsoft asp.net cdn，sae，baidu，upyun 等 cdn 上都免费提供的 js 库的存储，但使用起来却都有些局限，因为他们只提供了部分 js 库。当然，我们还可以有像 cdnjs 这样的平台，存储了大部分主流的 js 库，甚至 css、image 和 swf，但国内的访问速度却不是很理想，并且缺少很多国内优秀开源库。\n\n因此，我们提供这样一个仓库，让它尽可能全面收录优秀的开源库，并免费为之提供 cdn 加速服务，使之有更好的访问速度和稳定的环境。同时，我们也提供开源库源接入的入口，让所有人都可以提交开源库，包括 js、css、image 和 swf 等静态文件。\n\nhttp://www.staticfile.org/\n\n7.360 前端静态资源库\n\n60 前端静态资源库是由奇舞团支持并维护的开源项目免费 cdn 服务，支持 https 和 http/2，囊括上千个前端资源库和 google 字体库。\n\n本站静态资源库数据均同步于 cdnjs，如发现版本更新不及时或未收录，欢迎向 cdnjs 提交 pr。\n\nhttps://cdn.baomitu.com/\n\n7.microsoft asp.net cdn\n\nasp.net开发团队推出的一个新的微软ajax cdn（content delivery network，内容分发网络）服务，该服务提供了对ajax库（包括jquery 和 asp.net ajax）的缓存支持。该服务是免费的，不需任何注册，可用于商业性或非商业性用途。\n\nhttps://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview\n\n8.jsdelivr开源cdn\n\na free super-fast cdn for developers and webmasters jsdelivr开源cdn(内容分发网络)是一个公开的,任何人都可以提交。 通过使用github,允许社区完全与jsdelivr通过添加和更新文件。\n\nhttp://www.jsdelivr.com/\n\n9.7ed.net\n\n7ed.net 为您提供一系列的服务，包含静态资源 cdn 加速服务、github raw 加速服务、海外图片内地加速服务、bing 每日图片 api等。\n\nhttps://www.7ed.net/",charsets:{cjk:!0},createdTime:1646574032e3,updateTime:"March 6, 2022 13:55",updateTimeStamp:1646574919e3,createTime:"March 6, 2022 13:40",createTimeStamp:1646574032e3,contributors:[]},{title:"Study",frontmatter:{author:"xlc520",title:"Study",description:"Study",time:null,category:"Study",tags:"Study",article:!0,timeline:!0,icon:null,password:null},regularPath:"/study/",relativePath:"study/README.md",key:"v-47d10e62",path:"/study/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1644739094e3,updateTime:"February 15, 2022 16:19",updateTimeStamp:1644941981e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"表单系统",frontmatter:{},regularPath:"/study/form%E8%A1%A8%E5%8D%95%E7%B3%BB%E7%BB%9F.html",relativePath:"study/form表单系统.md",key:"v-4065d6b0",path:"/study/form%E8%A1%A8%E5%8D%95%E7%B3%BB%E7%BB%9F/",readingTime:{minutes:.95,words:285},headersStr:null,content:"# 表单系统\n\n> 包括了前端 和 后端\n\nVariant Form\n\n🚀一款高效的Vue 2低代码表单，可视化设计，一键生成源码\n\nhttps://www.vform666.com/\n\nElement UI表单设计及代码生成器\n\njakhuang.github.io/form-generator\n\nhttps://github.com/JakHuang/form-generator\n\nhttps://gitee.com/mrhj/form-generator\n\n工作流，表单，报表结合的多模块系统\n\nwww.plumdo.com/plumdo-work/#/design\n\nhttps://github.com/wengwh/plumdo-work\n\nhttps://gitee.com/wengwh/plumdo-work\n\nTduck-填鸭收集器是一款开源的表单在线收集系统，后台基于SpringBoot+MybatisPlus+MySql+Redis，前端基于Vue ElementUI开发，功能强大，界面美观。keywords：问卷/表单/信息收集/survey questionnaire\n\nwww.tduckcloud.com/\n\nhttps://github.com/TDuckCloud/tduck-front\n\nSurvey System. 最好用的开源问卷调查系统、表单系统。\n\nwww.diaowen.net\n\nhttps://github.com/wkeyuan/DWSurvey\n\n动态表单页面设计--自动生成页面\n\nvincentzyc.github.io/form-design/\n\nhttps://github.com/vincentzyc/form-design",normalizedContent:"# 表单系统\n\n> 包括了前端 和 后端\n\nvariant form\n\n🚀一款高效的vue 2低代码表单，可视化设计，一键生成源码\n\nhttps://www.vform666.com/\n\nelement ui表单设计及代码生成器\n\njakhuang.github.io/form-generator\n\nhttps://github.com/jakhuang/form-generator\n\nhttps://gitee.com/mrhj/form-generator\n\n工作流，表单，报表结合的多模块系统\n\nwww.plumdo.com/plumdo-work/#/design\n\nhttps://github.com/wengwh/plumdo-work\n\nhttps://gitee.com/wengwh/plumdo-work\n\ntduck-填鸭收集器是一款开源的表单在线收集系统，后台基于springboot+mybatisplus+mysql+redis，前端基于vue elementui开发，功能强大，界面美观。keywords：问卷/表单/信息收集/survey questionnaire\n\nwww.tduckcloud.com/\n\nhttps://github.com/tduckcloud/tduck-front\n\nsurvey system. 最好用的开源问卷调查系统、表单系统。\n\nwww.diaowen.net\n\nhttps://github.com/wkeyuan/dwsurvey\n\n动态表单页面设计--自动生成页面\n\nvincentzyc.github.io/form-design/\n\nhttps://github.com/vincentzyc/form-design",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 28, 2022 10:16",updateTimeStamp:1646043413e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"VuePress 学习",frontmatter:{},regularPath:"/study/vuepress.html",relativePath:"study/vuepress.md",key:"v-11fc78ab",path:"/study/vuepress/",headers:[{level:2,title:"VuePress  Vue 驱动的静态网站生成器",slug:"vuepress-vue-驱动的静态网站生成器",normalizedTitle:"vuepress  vue 驱动的静态网站生成器",charIndex:null},{level:2,title:"vuepress-theme-hope",slug:"vuepress-theme-hope",normalizedTitle:"vuepress-theme-hope",charIndex:75},{level:2,title:"vuepress-theme-vdoing",slug:"vuepress-theme-vdoing",normalizedTitle:"vuepress-theme-vdoing",charIndex:139},{level:2,title:"vuepress-theme-hope",slug:"vuepress-theme-hope-2",normalizedTitle:"vuepress-theme-hope",charIndex:75},{level:2,title:"Young Kbt blog",slug:"young-kbt-blog",normalizedTitle:"young kbt blog",charIndex:338},{level:2,title:"vuepress 自动生成侧边栏的插件",slug:"vuepress-自动生成侧边栏的插件",normalizedTitle:"vuepress 自动生成侧边栏的插件",charIndex:385},{level:2,title:"vuepress-theme-reco",slug:"vuepress-theme-reco",normalizedTitle:"vuepress-theme-reco",charIndex:474},{level:2,title:"Vuepress Plugin Auto Sidebar",slug:"vuepress-plugin-auto-sidebar",normalizedTitle:"vuepress plugin auto sidebar",charIndex:572}],readingTime:{minutes:.67,words:200},headersStr:"VuePress  Vue 驱动的静态网站生成器 vuepress-theme-hope vuepress-theme-vdoing vuepress-theme-hope Young Kbt blog vuepress 自动生成侧边栏的插件 vuepress-theme-reco Vuepress Plugin Auto Sidebar",content:"# VuePress 学习\n\n\n# VuePress Vue 驱动的静态网站生成器\n\nhttps://vuepress.vuejs.org/\n\n\n# vuepress-theme-hope\n\nhttps://vuepress-theme-hope.github.io/\n\n\n# vuepress-theme-vdoing\n\n🚀一款简洁高效的VuePress 知识管理&博客 主题\n\nhttps://doc.xugaoyi.com/\n\nhttps://doc.xugaoyi.com/pages/db78e2/#插件推荐\n\n\n# vuepress-theme-hope\n\n一个具有强大功能的 vuepress 主题\n\nhttps://doc.xugaoyi.com/\n\n\n# Young Kbt blog\n\nhttps://notes.youngkbt.cn/\n\n\n# vuepress 自动生成侧边栏的插件\n\nhttps://shanyuhai123.github.io/vuepress-plugin-auto-sidebar/zh/\n\n\n# vuepress-theme-reco\n\n一款简洁而优雅的 vuepress 博客 & 文档 主题。\n\nhttps://vuepress-theme-reco.recoluan.com/\n\n\n# Vuepress Plugin Auto Sidebar\n\nhttps://shanyuhai123.github.io/vuepress-plugin-auto-sidebar/zh/",normalizedContent:"# vuepress 学习\n\n\n# vuepress vue 驱动的静态网站生成器\n\nhttps://vuepress.vuejs.org/\n\n\n# vuepress-theme-hope\n\nhttps://vuepress-theme-hope.github.io/\n\n\n# vuepress-theme-vdoing\n\n🚀一款简洁高效的vuepress 知识管理&博客 主题\n\nhttps://doc.xugaoyi.com/\n\nhttps://doc.xugaoyi.com/pages/db78e2/#插件推荐\n\n\n# vuepress-theme-hope\n\n一个具有强大功能的 vuepress 主题\n\nhttps://doc.xugaoyi.com/\n\n\n# young kbt blog\n\nhttps://notes.youngkbt.cn/\n\n\n# vuepress 自动生成侧边栏的插件\n\nhttps://shanyuhai123.github.io/vuepress-plugin-auto-sidebar/zh/\n\n\n# vuepress-theme-reco\n\n一款简洁而优雅的 vuepress 博客 & 文档 主题。\n\nhttps://vuepress-theme-reco.recoluan.com/\n\n\n# vuepress plugin auto sidebar\n\nhttps://shanyuhai123.github.io/vuepress-plugin-auto-sidebar/zh/",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"March 6, 2022 14:06",updateTimeStamp:1646575587e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"API",frontmatter:{},regularPath:"/tools/API.html",relativePath:"tools/API.md",key:"v-6855c6c5",path:"/tools/API/",headers:[{level:2,title:"hutool",slug:"hutool",normalizedTitle:"hutool",charIndex:10},{level:2,title:"apipost",slug:"apipost",normalizedTitle:"apipost",charIndex:102},{level:2,title:"代码转图片",slug:"代码转图片",normalizedTitle:"代码转图片",charIndex:139},{level:2,title:"将网页转成 Markdown 代码",slug:"将网页转成-markdown-代码",normalizedTitle:"将网页转成 markdown 代码",charIndex:204},{level:2,title:"SpiderFlow-开源爬虫平台",slug:"spiderflow-开源爬虫平台",normalizedTitle:"spiderflow-开源爬虫平台",charIndex:256},{level:2,title:"艺术二维码",slug:"艺术二维码",normalizedTitle:"艺术二维码",charIndex:360},{level:2,title:"图片压缩",slug:"图片压缩",normalizedTitle:"图片压缩",charIndex:390}],readingTime:{minutes:.76,words:227},headersStr:"hutool apipost 代码转图片 将网页转成 Markdown 代码 SpiderFlow-开源爬虫平台 艺术二维码 图片压缩",content:"# API\n\n\n# hutool\n\n一个小而全的 Java 工具类库，通过静态方法封装，并提供详细完整的中文文档和注释，使Java拥有函数式语言般的优雅。\n\nhttps://hutool.cn/\n\n\n# apipost\n\nhttps://www.apipost.cn/\n\n\n# 代码转图片\n\n该网站将代码片段转为美观的图片，可以贴到社交媒体上面。\n\nhttps://www.codepng.app/\n\n\n# 将网页转成 Markdown 代码\n\nhttps://devtool.tech/html-md\n\n\n# SpiderFlow-开源爬虫平台\n\n一个开源的爬虫平台，以图形化方式定义爬虫，不写代码即可完成抓取网页。\n\nhttps://github.com/ssssssss-team/spider-flow\n\n\n# 艺术二维码\n\nhttps://qrbtf.com/\n\n\n# 图片压缩\n\n一个批量压缩图片的网页工具，纯浏览器端压缩，不经过服务器，速度较快。\n\nhttps://devtool.tech/tiny-image",normalizedContent:"# api\n\n\n# hutool\n\n一个小而全的 java 工具类库，通过静态方法封装，并提供详细完整的中文文档和注释，使java拥有函数式语言般的优雅。\n\nhttps://hutool.cn/\n\n\n# apipost\n\nhttps://www.apipost.cn/\n\n\n# 代码转图片\n\n该网站将代码片段转为美观的图片，可以贴到社交媒体上面。\n\nhttps://www.codepng.app/\n\n\n# 将网页转成 markdown 代码\n\nhttps://devtool.tech/html-md\n\n\n# spiderflow-开源爬虫平台\n\n一个开源的爬虫平台，以图形化方式定义爬虫，不写代码即可完成抓取网页。\n\nhttps://github.com/ssssssss-team/spider-flow\n\n\n# 艺术二维码\n\nhttps://qrbtf.com/\n\n\n# 图片压缩\n\n一个批量压缩图片的网页工具，纯浏览器端压缩，不经过服务器，速度较快。\n\nhttps://devtool.tech/tiny-image",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Tools",frontmatter:{author:"xlc520",title:"Tools",description:"Tools分类",time:null,category:"Tools",tags:"Tools",article:!0,timeline:!0,icon:null,password:null},regularPath:"/tools/",relativePath:"tools/README.md",key:"v-163b0284",path:"/tools/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{},createdTime:1644739094e3,updateTime:"February 15, 2022 16:19",updateTimeStamp:1644941981e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"SSH客户端软件",frontmatter:{},regularPath:"/tools/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6.html",relativePath:"tools/SSH客户端软件.md",key:"v-0f5332b9",path:"/tools/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BD%AF%E4%BB%B6/",headers:[{level:2,title:"Xshell",slug:"xshell",normalizedTitle:"xshell",charIndex:118},{level:2,title:"Finalshell",slug:"finalshell",normalizedTitle:"finalshell",charIndex:424},{level:2,title:"WindTerm v2.2.0",slug:"windterm-v2-2-0",normalizedTitle:"windterm v2.2.0",charIndex:822},{level:2,title:"NxShell v1.4.6",slug:"nxshell-v1-4-6",normalizedTitle:"nxshell v1.4.6",charIndex:957},{level:2,title:"MobaXterm",slug:"mobaxterm",normalizedTitle:"mobaxterm",charIndex:1017},{level:2,title:"Termius",slug:"termius",normalizedTitle:"termius",charIndex:1406},{level:2,title:"PuTTY",slug:"putty",normalizedTitle:"putty",charIndex:1670},{level:2,title:"SimpleRemote",slug:"simpleremote",normalizedTitle:"simpleremote",charIndex:1849},{level:2,title:"ZOC Terminal",slug:"zoc-terminal",normalizedTitle:"zoc terminal",charIndex:2040},{level:2,title:"JuiceSSH",slug:"juicessh",normalizedTitle:"juicessh",charIndex:2201},{level:2,title:"ServerCat",slug:"servercat",normalizedTitle:"servercat",charIndex:2526},{level:2,title:"ShellFish",slug:"shellfish",normalizedTitle:"shellfish",charIndex:2699}],readingTime:{minutes:6.76,words:2027},headersStr:"Xshell Finalshell WindTerm v2.2.0 NxShell v1.4.6 MobaXterm Termius PuTTY SimpleRemote ZOC Terminal JuiceSSH ServerCat ShellFish",content:"# SSH客户端软件\n\nSSH客户端是在管理和配置Linux服务器用到很多的软件了，一款好的SSH管理软件不但可以让你更好地执行Linux命令，对于工作效率的提升也是非常明显，在本文中我们就来介绍几款非常好用的SSH客户端软件\n\n\n# Xshell\n\nXshell Plus Linux连接SSH工具 v7.0.0092 特别版\n\nhttps://lanzoui.com/b010yn1di\n\n\n\nXshell 是国内比较流行的SSH软件，和其他的SSH客户端相比，Xshell更加注重用户体验的一些东西，比如其现代化的界面，多种语言包括简体中文支持，代码高亮等，对于新手非常友好。\n\nXshell中还提供了一些高级功能，比如标签管理、批量命令等，不过有一些为高级功能，需要升级付费版才能使用，当然，因为现在很多操作都可以在网站面板完成，对于新手来说，其实Xshell免费版本已经足够了，而专业人员使用频率足够高的话付费购买也是非常值得的\n\n\n# Finalshell\n\nFinalShell v3.9.2 破解版SSH工具\n\nhttps://lanzoui.com/iAZxSx022ah\n\n * 点击菜单->激活/升级->登陆/激活，即破解离线激活高级版！\n\n\n\nFinalshell 是一款国人开发的远程连接工具，支持 Windows、Linux 和 macOS，通过界面我们可以看出这款软件非常强大，你不仅可以在远程窗口上执行命令，还可以实时监测到系统的消耗，比如CPU、内存、网络等资源的使用量\n\nFinalshell 还有比较方便的一点就是文件的传输，在软件的右下角有一个文件夹管理界面，让你可以像在FTP软件中那样传输文件，支持右键上传下载，支持鼠标拖拽文件上传到服务器，省去了很多命令行的繁琐步骤\n\n除了基础功能，Finalshell 还可以升级到专业版，包括打包传输、高级网络监控、高级进程管理、多地点ping监控等\n\n\n# WindTerm v2.2.0\n\n连接SSH/Telnet/Serial/Shell/Sftp开源工具\n\n项目地址:https://github.com/kingToolbox/WindTerm/ https://lanzoui.com/iafhqwr0fba\n\n\n# NxShell v1.4.6\n\n绿色版/安装版 : https://lanzoui.com/b010z3paf\n\n\n# MobaXterm\n\n\n\nMobaXterm 是一个功能强大的SSH工具，除了支持基本的SSH终端管理外，还有非常多的增强和扩展功能\n\n * 有绿色版本软件，使用方便\n * 多标签管理，随时切换\n * 支持SSH、Telent、FTP、SFTP等多种协议\n * 支持RDP远程连接Windows\n * 图形化SFTP管理，可上传下载文件\n * 内置MobaTextEditor，可以直接在服务端编辑和保存文件\n * 应用内分屏，最多支持4个屏幕\n * 支持安装插件\n\nMobaXterm 是一个非常好的一站式服务器管理工具，对于多种协议的支持，让其不管是Linux、Windows还是VNC等，都可以在一个软件中进行操作管理，配合内置的SFTP文件管理和MobaTextEditor，可以让远程终端文件管理更加便捷\n\nMobaXterm 多功能的Windows终端工具\n\n\n# Termius\n\n\n\nTermius 是一款全平台的SSH客户端，该软件最大的特点就是支持全部平台，包括Windows、Mac、Linux、iOS、Android等，有了移动设备支持，只要有网络，你可以在任何时间地点管理服务器\n\n如果你的工作经常用到SSH连接，还可以升级高级版实现全平台同步，全平台的好处就是只要你在一个平台添加或修改了服务器，其他平台会自动同步，随时随地管理主机，而且也不用在手机上输入复杂的密码了\n\n在功能上，Termius 也有很多实用的东西，比如SFTP、代码片段、选项卡等，可以省下很多事情\n\n\n# PuTTY\n\n\n\nPuTTY 是一款开源免费的SSH客户端，支持SCP，SSH，Telnet，rlogin等多种网络协议，该软件的特点非常小巧，大小只有1M左右， 而且有绿色版本下载下来就能使用，再加上其开源的特性，很多人都一直在使用PuTTY管理Linux服务器，不过由于软件是全英文的界面，而且有些东西需要学习设置，对新手来说可能并不是那么友好\n\n\n# SimpleRemote\n\n\n\nSimpleRemote 是一款免费开源的远程连接管理工具，软件非常的小巧，解压后只有不到3MB的大小\n\n虽然是一款很小的软件，但是基本远程连接功能都有，比如常用的多标签、配色方案、密钥连接、RDP、Telnet等，对于大多数人来说，功能完全够用，而且对于重要的信息，还可以为SimpleRemote设置打开密码，只有输入正确的密码才能使用\n\n\n# ZOC Terminal\n\n\n\nZOC Terminal 是一款强大的终端模拟器，其支持Windows和Mac平台，软件使用很方便，可以快速连接、也可以保存主机，支持多标签、多窗口，如果你对基础的界面不满意，还可以定制样式，包括背景、字体、颜色等，组成自己喜欢的界面，不过这款软件并没有提供免费版本，需要付费购买\n\n\n# JuiceSSH\n\n\n\nJuiceSSH 是一款Android上的免费SSH客户端，你可以用它快速连接到Linux服务器，也可以添加账号密码或密钥保存多台机器，Juice 让你在手机上就能非常方便地执行这些操作\n\n它的主要功能有\n\n * 全彩色终端显示，多个主题可选\n * 轻松输入，弹出键盘可以方便地输入常用的特殊字符\n * Telnet 和 本地 Shell 命令执行\n * 第三方插件支持，比如性能监控、OpenSSH导入等\n * 其他高级功能\n\n对于想要在安卓手机上管理服务器的人来说，JuiceSSH 是一个非常好的选择，免费版本以及足够使用，付费版还有更多强大功能，包括端口转发、自动执行代码段、快捷方式等，能够极大提升运维效率\n\n\n# ServerCat\n\n\n\nServerCat 是一款iOS平台上的Linux管理软件，它可以让你在iPhone上连接远程服务器，用来监视系统性能、管理Docker和执行SSH命令，软件内提供了很多监控参数，比如CPU、内存、系统负载、网速、硬盘等，并且以可视化的形式展示，你可以随时查看自己服务器的系统状态，避免因负载过高则影响产品服务\n\n\n# ShellFish\n\n\n\nShellFish 是一款SFTP和SSH结合的软件，支持iPhone和iPad，你可以用它来连接远程服务并管理上面的文件，它专为移动设备做了很多优化，比如你可以使用SFTP管理服务器上的文件，使用专用键盘执行命令，创建代码片段快速使用等，而且还有一个很不错的地方在于它是支持快捷指令的，你可以和其他APP配合使用，使用语音执行命令等",normalizedContent:"# ssh客户端软件\n\nssh客户端是在管理和配置linux服务器用到很多的软件了，一款好的ssh管理软件不但可以让你更好地执行linux命令，对于工作效率的提升也是非常明显，在本文中我们就来介绍几款非常好用的ssh客户端软件\n\n\n# xshell\n\nxshell plus linux连接ssh工具 v7.0.0092 特别版\n\nhttps://lanzoui.com/b010yn1di\n\n\n\nxshell 是国内比较流行的ssh软件，和其他的ssh客户端相比，xshell更加注重用户体验的一些东西，比如其现代化的界面，多种语言包括简体中文支持，代码高亮等，对于新手非常友好。\n\nxshell中还提供了一些高级功能，比如标签管理、批量命令等，不过有一些为高级功能，需要升级付费版才能使用，当然，因为现在很多操作都可以在网站面板完成，对于新手来说，其实xshell免费版本已经足够了，而专业人员使用频率足够高的话付费购买也是非常值得的\n\n\n# finalshell\n\nfinalshell v3.9.2 破解版ssh工具\n\nhttps://lanzoui.com/iazxsx022ah\n\n * 点击菜单->激活/升级->登陆/激活，即破解离线激活高级版！\n\n\n\nfinalshell 是一款国人开发的远程连接工具，支持 windows、linux 和 macos，通过界面我们可以看出这款软件非常强大，你不仅可以在远程窗口上执行命令，还可以实时监测到系统的消耗，比如cpu、内存、网络等资源的使用量\n\nfinalshell 还有比较方便的一点就是文件的传输，在软件的右下角有一个文件夹管理界面，让你可以像在ftp软件中那样传输文件，支持右键上传下载，支持鼠标拖拽文件上传到服务器，省去了很多命令行的繁琐步骤\n\n除了基础功能，finalshell 还可以升级到专业版，包括打包传输、高级网络监控、高级进程管理、多地点ping监控等\n\n\n# windterm v2.2.0\n\n连接ssh/telnet/serial/shell/sftp开源工具\n\n项目地址:https://github.com/kingtoolbox/windterm/ https://lanzoui.com/iafhqwr0fba\n\n\n# nxshell v1.4.6\n\n绿色版/安装版 : https://lanzoui.com/b010z3paf\n\n\n# mobaxterm\n\n\n\nmobaxterm 是一个功能强大的ssh工具，除了支持基本的ssh终端管理外，还有非常多的增强和扩展功能\n\n * 有绿色版本软件，使用方便\n * 多标签管理，随时切换\n * 支持ssh、telent、ftp、sftp等多种协议\n * 支持rdp远程连接windows\n * 图形化sftp管理，可上传下载文件\n * 内置mobatexteditor，可以直接在服务端编辑和保存文件\n * 应用内分屏，最多支持4个屏幕\n * 支持安装插件\n\nmobaxterm 是一个非常好的一站式服务器管理工具，对于多种协议的支持，让其不管是linux、windows还是vnc等，都可以在一个软件中进行操作管理，配合内置的sftp文件管理和mobatexteditor，可以让远程终端文件管理更加便捷\n\nmobaxterm 多功能的windows终端工具\n\n\n# termius\n\n\n\ntermius 是一款全平台的ssh客户端，该软件最大的特点就是支持全部平台，包括windows、mac、linux、ios、android等，有了移动设备支持，只要有网络，你可以在任何时间地点管理服务器\n\n如果你的工作经常用到ssh连接，还可以升级高级版实现全平台同步，全平台的好处就是只要你在一个平台添加或修改了服务器，其他平台会自动同步，随时随地管理主机，而且也不用在手机上输入复杂的密码了\n\n在功能上，termius 也有很多实用的东西，比如sftp、代码片段、选项卡等，可以省下很多事情\n\n\n# putty\n\n\n\nputty 是一款开源免费的ssh客户端，支持scp，ssh，telnet，rlogin等多种网络协议，该软件的特点非常小巧，大小只有1m左右， 而且有绿色版本下载下来就能使用，再加上其开源的特性，很多人都一直在使用putty管理linux服务器，不过由于软件是全英文的界面，而且有些东西需要学习设置，对新手来说可能并不是那么友好\n\n\n# simpleremote\n\n\n\nsimpleremote 是一款免费开源的远程连接管理工具，软件非常的小巧，解压后只有不到3mb的大小\n\n虽然是一款很小的软件，但是基本远程连接功能都有，比如常用的多标签、配色方案、密钥连接、rdp、telnet等，对于大多数人来说，功能完全够用，而且对于重要的信息，还可以为simpleremote设置打开密码，只有输入正确的密码才能使用\n\n\n# zoc terminal\n\n\n\nzoc terminal 是一款强大的终端模拟器，其支持windows和mac平台，软件使用很方便，可以快速连接、也可以保存主机，支持多标签、多窗口，如果你对基础的界面不满意，还可以定制样式，包括背景、字体、颜色等，组成自己喜欢的界面，不过这款软件并没有提供免费版本，需要付费购买\n\n\n# juicessh\n\n\n\njuicessh 是一款android上的免费ssh客户端，你可以用它快速连接到linux服务器，也可以添加账号密码或密钥保存多台机器，juice 让你在手机上就能非常方便地执行这些操作\n\n它的主要功能有\n\n * 全彩色终端显示，多个主题可选\n * 轻松输入，弹出键盘可以方便地输入常用的特殊字符\n * telnet 和 本地 shell 命令执行\n * 第三方插件支持，比如性能监控、openssh导入等\n * 其他高级功能\n\n对于想要在安卓手机上管理服务器的人来说，juicessh 是一个非常好的选择，免费版本以及足够使用，付费版还有更多强大功能，包括端口转发、自动执行代码段、快捷方式等，能够极大提升运维效率\n\n\n# servercat\n\n\n\nservercat 是一款ios平台上的linux管理软件，它可以让你在iphone上连接远程服务器，用来监视系统性能、管理docker和执行ssh命令，软件内提供了很多监控参数，比如cpu、内存、系统负载、网速、硬盘等，并且以可视化的形式展示，你可以随时查看自己服务器的系统状态，避免因负载过高则影响产品服务\n\n\n# shellfish\n\n\n\nshellfish 是一款sftp和ssh结合的软件，支持iphone和ipad，你可以用它来连接远程服务并管理上面的文件，它专为移动设备做了很多优化，比如你可以使用sftp管理服务器上的文件，使用专用键盘执行命令，创建代码片段快速使用等，而且还有一个很不错的地方在于它是支持快捷指令的，你可以和其他app配合使用，使用语音执行命令等",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"StartAllBack",frontmatter:{},regularPath:"/tools/StartAllBack(StartIsBack)v3.2.1Stable.html",relativePath:"tools/StartAllBack(StartIsBack)v3.2.1Stable.md",key:"v-401c0936",path:"/tools/StartAllBack(StartIsBack)v3.2.1Stable/",headers:[{level:2,title:"新版变化",slug:"新版变化",normalizedTitle:"新版变化",charIndex:178},{level:2,title:"下载地址",slug:"下载地址",normalizedTitle:"下载地址",charIndex:580}],readingTime:{minutes:1.35,words:406},headersStr:"新版变化 下载地址",content:"# StartAllBack\n\nStartAllBack(StartIsBack) v3.2.1 Stable\n\nWindows11开始菜单增强工具StartAllBack正式版发布了！在任务栏上为Windows 11恢复经典样式的Windows 7主题风格开始菜单，主要功能包括：恢复和改进开始菜单样式、个性化任务栏、资源管理器等功能。\n\n\n\n\n\n\n# 新版变化\n\nStartIsBack for Windows 11 https://www.startallback.com/\n\n2021.12.18 v3.2.1 - 修复 Xbox 应用大小未调整的问题 - 修复更新或重启后选项丢失的问题\n\n最近主要更新： - 支持DEV渠道开发者预览版~22500 - 支持带有经典任务栏中心的开始菜单\n\n特点描述\n\n√ 破解免激活，无30天试用期，无哭脸表情水印！ √ 全面更新中文语言翻译，优化对齐简体中文字串 √ 剥离升级程序，无升级提示弹窗，去选项检查更新项 √ 采用原版7zSFX自解压形式重新打包，支持静默安装\n\n静默安装参数：/ai /gm2 无人值守安装示例： StartAllBack_Repack.exe /ai /gm2 或右键解压后执行： StartAllBackCfg.exe /install /elevated /silent\n\n\n# 下载地址\n\n----------------------------------------\n\nWin11经典开始菜单 StartAllBack v3.2.1.4211 中文破解版\n\nhttps://www.123pan.com/s/A6cA-ODHJh\n\nhttps://423down.lanzouo.com/b0f1rgl8j\n\nhttps://pan.baidu.com/s/1nBlz81CCOQDPcKgkKEF-jg\n\n----------------------------------------\n\nStartAllBack 3.2.1.4211 Final (2021/12/18) https://s3.amazonaws.com/startisback/StartAllBack_3.2.1_setup.exe\n\nStartAllBack v2.x-3.x+ Patch (2021/10/13) https://423down.lanzouo.com/i1YBsva4eqf",normalizedContent:"# startallback\n\nstartallback(startisback) v3.2.1 stable\n\nwindows11开始菜单增强工具startallback正式版发布了！在任务栏上为windows 11恢复经典样式的windows 7主题风格开始菜单，主要功能包括：恢复和改进开始菜单样式、个性化任务栏、资源管理器等功能。\n\n\n\n\n\n\n# 新版变化\n\nstartisback for windows 11 https://www.startallback.com/\n\n2021.12.18 v3.2.1 - 修复 xbox 应用大小未调整的问题 - 修复更新或重启后选项丢失的问题\n\n最近主要更新： - 支持dev渠道开发者预览版~22500 - 支持带有经典任务栏中心的开始菜单\n\n特点描述\n\n√ 破解免激活，无30天试用期，无哭脸表情水印！ √ 全面更新中文语言翻译，优化对齐简体中文字串 √ 剥离升级程序，无升级提示弹窗，去选项检查更新项 √ 采用原版7zsfx自解压形式重新打包，支持静默安装\n\n静默安装参数：/ai /gm2 无人值守安装示例： startallback_repack.exe /ai /gm2 或右键解压后执行： startallbackcfg.exe /install /elevated /silent\n\n\n# 下载地址\n\n----------------------------------------\n\nwin11经典开始菜单 startallback v3.2.1.4211 中文破解版\n\nhttps://www.123pan.com/s/a6ca-odhjh\n\nhttps://423down.lanzouo.com/b0f1rgl8j\n\nhttps://pan.baidu.com/s/1nblz81ccoqdpckgkkef-jg\n\n----------------------------------------\n\nstartallback 3.2.1.4211 final (2021/12/18) https://s3.amazonaws.com/startisback/startallback_3.2.1_setup.exe\n\nstartallback v2.x-3.x+ patch (2021/10/13) https://423down.lanzouo.com/i1ybsva4eqf",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"12 个后端开发工具",frontmatter:{},regularPath:"/tools/develop-tools.html",relativePath:"tools/develop-tools.md",key:"v-391c58e5",path:"/tools/develop-tools/",headers:[{level:2,title:"1.阿尔萨斯Java在线诊断工具",slug:"_1-阿尔萨斯java在线诊断工具",normalizedTitle:"1.阿尔萨斯java在线诊断工具",charIndex:199},{level:2,title:"2.Cloud Toolkit IDE插件",slug:"_2-cloud-toolkit-ide插件",normalizedTitle:"2.cloud toolkit ide插件",charIndex:886}],readingTime:{minutes:7.09,words:2126},headersStr:"1.阿尔萨斯Java在线诊断工具 2.Cloud Toolkit IDE插件",content:"# 12 个后端开发工具\n\n从手动编码到自动化，从重复工作到创新，开发人员工具随着技术的发展而不断发展。阿里巴巴集团和阿里巴巴云已通过开源发布和基于云的实施向公众提供其技术。通过在各种业务场景中的多年开发积累了这些技术。本文介绍了一些阿里巴巴开发人员工具，希望它们可以帮助您的开发过程更加高效和优雅。\n\n鉴于开发人员可能参与的技术分支的多样性，本文介绍了一些可能对后端开发人员有用的工具。\n\n\n# 1.阿尔萨斯Java在线诊断工具\n\nArthas是一款用于Java应用程序的在线诊断工具，由阿里巴巴于2018年9月开源。\n\n典型场景：\n\n您不知道从中加载类的特定JAR包。您想弄清楚为什么您的系统会抛出各种与类相关的异常。\n\n您不知道为什么修改后的代码无法执行。您不记得是否已提交更改。您不确定您是否使用正确的分支。\n\n出现问题，您无法在线调试。您想知道是否必须将日志添加到您的应用并再次发布。\n\n您遇到了用户数据处理问题，但无法在线调试或脱机重现问题。\n\n您希望拥有一个全局视图来监视系统的运行状态。\n\n您需要一个解决方案来监视JVM的实时运行状态。\n\nArthas支持Java Development Kit（JDK）6及更高版本，它支持Linux，Mac和Windows。Arthas使用命令行交互模式，并允许您使用Tab在命令行中自动完成命令，从而使问题定位和诊断更加容易。\n\n基础教程：https：//alibaba.github.io/arthas/arthas-tutorials？language = en＆id =arthas-basics\n\n高级教程：https：//alibaba.github.io/arthas/arthas-tutorials？language = en＆id =arthas-advanced\n\nGitHub页面：https：//github.com/alibaba/arthas\n\n“推荐下自己做的 Spring Boot 的实战项目：https://github.com/YunaiV/ruoyi-vue-pro\n\n\n# 2.Cloud Toolkit IDE插件\n\nCloud Toolkit是一个集成开发环境（IDE）插件，可用于帮助开发人员更有效地开发，测试，诊断和部署应用程序。Cloud Toolkit允许开发人员方便地将本地应用程序部署到任何计算机（本地或基于云）。Cloud Toolkit内置了Arthas诊断工具，支持高效执行终端命令和SQL语句。CloudToolkit可用于不同的IDE，例如IntelliJ IDEA，Eclipse，PyCharm和Maven。\n\n典型场景：\n\n每次修改代码时，您都厌倦了反复打包代码。\n\n您不希望经常在Maven和Git等代码管理工具之间来回切换。\n\n您使用安全副本（SCP）工具上载文件，并使用XShell或SecureCRT登录到您的服务器，替换部署包或重新启动服务器。\n\n您不希望定期在各种FTP和SCP工具之间来回切换，以将文件上载到服务器的指定目录。\n\n下载链接：https：//plugins.jetbrains.com/plugin/11386-alibaba-cloud-toolkit\n\n“推荐下自己做的 Spring Cloud 的实战项目：https://github.com/YunaiV/onemall 3.ChaosBlade混沌工程故障注入工具 ChaosBlade是一个混沌工程工具，遵循混沌工程实验的原则，并提供广泛的故障场景，以帮助您提高分布式系统的容错性和可恢复性。它可以注入潜在的故障，并提供各种故障情景。这些方案包括延迟，异常，返回特定值，修改参数值，重复调用和try-catch块异常。\n\n典型场景：\n\n您发现很难测量微服务的容错能力。\n\n您不知道如何验证容器编排配置的合理性。\n\n您不知道如何实现PaaS层的健壮性测试。\n\nGitHub页面：https：//github.com/chaosblade-io/chaosblade\n\n4.阿里巴巴Java编码指南 此插件检测Java代码中的编码问题，并为您提供提示。这个插件是基于Kotlin语言开发的。\n\nIDEA插件使用说明：\n\nhttps://github.com/alibaba/p3c/tree/master/idea-plugin\n\nEclipse插件使用说明：https：//github.com/alibaba/p3c/tree/master/eclipse-plugin\n\nGitHub页面：https：//github.com/alibaba/p3c\n\n5.应用实时监控服务（ARMS） ARMS是一种应用程序性能管理（APM）工具。它提供三种监控选项：前端监控，应用程序监控和自定义监控，帮助您构建自己的实时应用程序性能和业务监控功能。\n\n典型场景：\n\n您在22:00收到37条警报消息，但您不知道从哪里开始。\n\n客户或业务团队比您更早发现问题。\n\n您每月在服务器上投入数万美元，但您仍然无法保证良好的用户体验。\n\n应用程序监控集成：https：//www.alibabacloud.com/help/doc-detail/63796.htm\n\n自定义监控：https：//www.alibabacloud.com/help/doc-detail/47474.htm\n\n产品页面：https：//www.alibabacloud.com/product/arms\n\n6.Docsite开源静态网站生成器 Docsite是一个开源静态网站生成器，可帮助您构建自己的官方网站，文档中心，博客站点和社区。它易于使用和上瘾。它支持反应和静态渲染，PC和移动客户端，国际化，SEO，降价文档以及许多有用的功能，如全局站点搜索，站点样式自定义和页面自定义。\n\n教程：https：//docsite.js.org/en-us/docs/installation.html\n\nGitHub页面：https：//github.com/txd-team/docsite\n\n7.Freeline - Android的二级编译解决方案 Freeline缓存可重用的类文件和资源索引，并编译代码更新并在几秒钟内将它们部署到您的设备。这有效地减少了在日常开发期间重新编译和安装的大量时间。使用Freeline最方便的方法是直接安装AndroidStudio插件。\n\n教程：https：//github.com/alibaba/freeline/blob/master/README.md\n\nGitHub页面：https：//github.com/alibaba/freeline\n\n8.阿里云应用高可用性服务（AHAS） AHAS提供了许多强大的功能，例如容器环境的体系结构可视化，例如Kubernetes（K8s），基于故障注入的高可用性评估，以及一键式限制和降级。AHAS可帮助您以低成本快速提高应用程序可用性。\n\n典型场景：\n\n重构服务时，您希望可视化体系结构以精确理解资源实例组合和交互。\n\n您需要真正的故障情景和钻取模型。\n\n您希望以低成本使用限制和降级功能。\n\n教程：https：//www.alibabacloud.com/help/doc-detail/90323.htm\n\n产品页面：\n\nhttps：//www.alibabacloud.com/product/ahas\n\n9.EasyExcel数据处理工具 EasyExcel是一个解析Java代码并生成excel文件的框架。它重写了用于Microsoft Excel 2007的Apache POI SAX解析器。要处理3 MB Excel文件，Apache POI SAX解析器需要大约100 MB内存，而EasyExcel需要大约几KB。此外，EasyExcel消除了内存（OOM）问题，无论excel文件有多大。对于Microsoft Excel 2003，EasyExcel仍使用Apache POI SAX解析器。但它将模型转换器封装在上层，使其更易于使用。\n\n教程：https：//github.com/alibaba/easyexcel/blob/master/quickstart.md\n\nGitHub页面：https：//github.com/alibaba/easyexcel\n\n10.HandyJSON for iOS HandyJSON是一个用Swift语言编写的json-object序列化/反序列化库。\n\n与其他流行的Swift JSON库相比，HandyJSON支持纯Swift类，易于使用。在反序列化中使用HandyJSON（将JSON转换为模型）时，模型不必从NSObject继承，因为HandyJSON不是基于KVC的。您也不必为模型定义映射函数。在定义模型类并声明它遵循HandyJSON协议之后，HandyJSON通过将属性名称作为键来自动解析JSON字符串中的值。\n\n教程：https：//github.com/alibaba/HandyJSON/blob/master/README.md\n\nGitHub页面：https：//github.com/alibaba/HandyJSON\n\n11.Druid数据库连接池 Druid是Java语言中最好的数据库连接池，它提供了强大的监视和扩展功能。\n\n教程：https：//github.com/alibaba/druid/wiki/FAQ\n\nGitHub页面：https：//github.com/alibaba/druid\n\n12.阿里巴巴DragonwellJava开发套件 阿里巴巴Dragonwell是阿里巴巴/AlipayJDK（AJDK）的开源版本，是阿里巴巴内部使用的定制OpenJDK。AJDK为在线电子商务，金融和物流应用程序进行了基于业务场景的优化。它一直在超大型阿里巴巴数据中心运行，每个数据中心运行超过100,000台服务器。阿里巴巴Dragonwell兼容Java SE标准。目前，它仅支持Linux x86_64平台。",normalizedContent:"# 12 个后端开发工具\n\n从手动编码到自动化，从重复工作到创新，开发人员工具随着技术的发展而不断发展。阿里巴巴集团和阿里巴巴云已通过开源发布和基于云的实施向公众提供其技术。通过在各种业务场景中的多年开发积累了这些技术。本文介绍了一些阿里巴巴开发人员工具，希望它们可以帮助您的开发过程更加高效和优雅。\n\n鉴于开发人员可能参与的技术分支的多样性，本文介绍了一些可能对后端开发人员有用的工具。\n\n\n# 1.阿尔萨斯java在线诊断工具\n\narthas是一款用于java应用程序的在线诊断工具，由阿里巴巴于2018年9月开源。\n\n典型场景：\n\n您不知道从中加载类的特定jar包。您想弄清楚为什么您的系统会抛出各种与类相关的异常。\n\n您不知道为什么修改后的代码无法执行。您不记得是否已提交更改。您不确定您是否使用正确的分支。\n\n出现问题，您无法在线调试。您想知道是否必须将日志添加到您的应用并再次发布。\n\n您遇到了用户数据处理问题，但无法在线调试或脱机重现问题。\n\n您希望拥有一个全局视图来监视系统的运行状态。\n\n您需要一个解决方案来监视jvm的实时运行状态。\n\narthas支持java development kit（jdk）6及更高版本，它支持linux，mac和windows。arthas使用命令行交互模式，并允许您使用tab在命令行中自动完成命令，从而使问题定位和诊断更加容易。\n\n基础教程：https：//alibaba.github.io/arthas/arthas-tutorials？language = en＆id =arthas-basics\n\n高级教程：https：//alibaba.github.io/arthas/arthas-tutorials？language = en＆id =arthas-advanced\n\ngithub页面：https：//github.com/alibaba/arthas\n\n“推荐下自己做的 spring boot 的实战项目：https://github.com/yunaiv/ruoyi-vue-pro\n\n\n# 2.cloud toolkit ide插件\n\ncloud toolkit是一个集成开发环境（ide）插件，可用于帮助开发人员更有效地开发，测试，诊断和部署应用程序。cloud toolkit允许开发人员方便地将本地应用程序部署到任何计算机（本地或基于云）。cloud toolkit内置了arthas诊断工具，支持高效执行终端命令和sql语句。cloudtoolkit可用于不同的ide，例如intellij idea，eclipse，pycharm和maven。\n\n典型场景：\n\n每次修改代码时，您都厌倦了反复打包代码。\n\n您不希望经常在maven和git等代码管理工具之间来回切换。\n\n您使用安全副本（scp）工具上载文件，并使用xshell或securecrt登录到您的服务器，替换部署包或重新启动服务器。\n\n您不希望定期在各种ftp和scp工具之间来回切换，以将文件上载到服务器的指定目录。\n\n下载链接：https：//plugins.jetbrains.com/plugin/11386-alibaba-cloud-toolkit\n\n“推荐下自己做的 spring cloud 的实战项目：https://github.com/yunaiv/onemall 3.chaosblade混沌工程故障注入工具 chaosblade是一个混沌工程工具，遵循混沌工程实验的原则，并提供广泛的故障场景，以帮助您提高分布式系统的容错性和可恢复性。它可以注入潜在的故障，并提供各种故障情景。这些方案包括延迟，异常，返回特定值，修改参数值，重复调用和try-catch块异常。\n\n典型场景：\n\n您发现很难测量微服务的容错能力。\n\n您不知道如何验证容器编排配置的合理性。\n\n您不知道如何实现paas层的健壮性测试。\n\ngithub页面：https：//github.com/chaosblade-io/chaosblade\n\n4.阿里巴巴java编码指南 此插件检测java代码中的编码问题，并为您提供提示。这个插件是基于kotlin语言开发的。\n\nidea插件使用说明：\n\nhttps://github.com/alibaba/p3c/tree/master/idea-plugin\n\neclipse插件使用说明：https：//github.com/alibaba/p3c/tree/master/eclipse-plugin\n\ngithub页面：https：//github.com/alibaba/p3c\n\n5.应用实时监控服务（arms） arms是一种应用程序性能管理（apm）工具。它提供三种监控选项：前端监控，应用程序监控和自定义监控，帮助您构建自己的实时应用程序性能和业务监控功能。\n\n典型场景：\n\n您在22:00收到37条警报消息，但您不知道从哪里开始。\n\n客户或业务团队比您更早发现问题。\n\n您每月在服务器上投入数万美元，但您仍然无法保证良好的用户体验。\n\n应用程序监控集成：https：//www.alibabacloud.com/help/doc-detail/63796.htm\n\n自定义监控：https：//www.alibabacloud.com/help/doc-detail/47474.htm\n\n产品页面：https：//www.alibabacloud.com/product/arms\n\n6.docsite开源静态网站生成器 docsite是一个开源静态网站生成器，可帮助您构建自己的官方网站，文档中心，博客站点和社区。它易于使用和上瘾。它支持反应和静态渲染，pc和移动客户端，国际化，seo，降价文档以及许多有用的功能，如全局站点搜索，站点样式自定义和页面自定义。\n\n教程：https：//docsite.js.org/en-us/docs/installation.html\n\ngithub页面：https：//github.com/txd-team/docsite\n\n7.freeline - android的二级编译解决方案 freeline缓存可重用的类文件和资源索引，并编译代码更新并在几秒钟内将它们部署到您的设备。这有效地减少了在日常开发期间重新编译和安装的大量时间。使用freeline最方便的方法是直接安装androidstudio插件。\n\n教程：https：//github.com/alibaba/freeline/blob/master/readme.md\n\ngithub页面：https：//github.com/alibaba/freeline\n\n8.阿里云应用高可用性服务（ahas） ahas提供了许多强大的功能，例如容器环境的体系结构可视化，例如kubernetes（k8s），基于故障注入的高可用性评估，以及一键式限制和降级。ahas可帮助您以低成本快速提高应用程序可用性。\n\n典型场景：\n\n重构服务时，您希望可视化体系结构以精确理解资源实例组合和交互。\n\n您需要真正的故障情景和钻取模型。\n\n您希望以低成本使用限制和降级功能。\n\n教程：https：//www.alibabacloud.com/help/doc-detail/90323.htm\n\n产品页面：\n\nhttps：//www.alibabacloud.com/product/ahas\n\n9.easyexcel数据处理工具 easyexcel是一个解析java代码并生成excel文件的框架。它重写了用于microsoft excel 2007的apache poi sax解析器。要处理3 mb excel文件，apache poi sax解析器需要大约100 mb内存，而easyexcel需要大约几kb。此外，easyexcel消除了内存（oom）问题，无论excel文件有多大。对于microsoft excel 2003，easyexcel仍使用apache poi sax解析器。但它将模型转换器封装在上层，使其更易于使用。\n\n教程：https：//github.com/alibaba/easyexcel/blob/master/quickstart.md\n\ngithub页面：https：//github.com/alibaba/easyexcel\n\n10.handyjson for ios handyjson是一个用swift语言编写的json-object序列化/反序列化库。\n\n与其他流行的swift json库相比，handyjson支持纯swift类，易于使用。在反序列化中使用handyjson（将json转换为模型）时，模型不必从nsobject继承，因为handyjson不是基于kvc的。您也不必为模型定义映射函数。在定义模型类并声明它遵循handyjson协议之后，handyjson通过将属性名称作为键来自动解析json字符串中的值。\n\n教程：https：//github.com/alibaba/handyjson/blob/master/readme.md\n\ngithub页面：https：//github.com/alibaba/handyjson\n\n11.druid数据库连接池 druid是java语言中最好的数据库连接池，它提供了强大的监视和扩展功能。\n\n教程：https：//github.com/alibaba/druid/wiki/faq\n\ngithub页面：https：//github.com/alibaba/druid\n\n12.阿里巴巴dragonwelljava开发套件 阿里巴巴dragonwell是阿里巴巴/alipayjdk（ajdk）的开源版本，是阿里巴巴内部使用的定制openjdk。ajdk为在线电子商务，金融和物流应用程序进行了基于业务场景的优化。它一直在超大型阿里巴巴数据中心运行，每个数据中心运行超过100,000台服务器。阿里巴巴dragonwell兼容java se标准。目前，它仅支持linux x86_64平台。",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 12:45",updateTimeStamp:1644756312e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"Lenovo",frontmatter:{},regularPath:"/tools/lenovo.html",relativePath:"tools/lenovo.md",key:"v-54e5f7a3",path:"/tools/lenovo/",headers:[{level:2,title:"联想工程师204个内部专用工具",slug:"联想工程师204个内部专用工具",normalizedTitle:"联想工程师204个内部专用工具",charIndex:13}],readingTime:{minutes:.1,words:30},headersStr:"联想工程师204个内部专用工具",content:"# Lenovo\n\n\n# 联想工程师204个内部专用工具\n\nhttp://u7.1.xainjo.com/pc/lxzyxgj.zip",normalizedContent:"# lenovo\n\n\n# 联想工程师204个内部专用工具\n\nhttp://u7.1.xainjo.com/pc/lxzyxgj.zip",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"各种软件",frontmatter:{title:"各种软件"},regularPath:"/tools/software.html",relativePath:"tools/software.md",key:"v-4b9a15fb",path:"/tools/software/",headers:[{level:2,title:"电脑QQv9.5.4(28063)特别版",slug:"电脑qqv9-5-4-28063-特别版",normalizedTitle:"电脑qqv9.5.4(28063)特别版",charIndex:2},{level:2,title:"PC搜狗输入法v11.6.0.5419精简版",slug:"pc搜狗输入法v11-6-0-5419精简版",normalizedTitle:"pc搜狗输入法v11.6.0.5419精简版",charIndex:168},{level:2,title:"Win11开始菜单工具StartAllBack (开始菜单增强工具) v3.2.1.4211 Stable中文破解版",slug:"win11开始菜单工具startallback-开始菜单增强工具-v3-2-1-4211-stable中文破解版",normalizedTitle:"win11开始菜单工具startallback (开始菜单增强工具) v3.2.1.4211 stable中文破解版",charIndex:226},{level:2,title:"Windows实用工具系统优化Microsoft PowerToys v0.53.1官方版",slug:"windows实用工具系统优化microsoft-powertoys-v0-53-1官方版",normalizedTitle:"windows实用工具系统优化microsoft powertoys v0.53.1官方版",charIndex:320},{level:2,title:"入梦硬件检测工具箱v6.4 纯净版",slug:"入梦硬件检测工具箱v6-4-纯净版",normalizedTitle:"入梦硬件检测工具箱v6.4 纯净版",charIndex:401},{level:2,title:"Everything v1.4.1.1016单文件版",slug:"everything-v1-4-1-1016单文件版",normalizedTitle:"everything v1.4.1.1016单文件版",charIndex:460},{level:2,title:"PotPlayer v1.7.21589绿色版",slug:"potplayer-v1-7-21589绿色版",normalizedTitle:"potplayer v1.7.21589绿色版",charIndex:553},{level:2,title:"电视家3.0 v3.5.21绿化版",slug:"电视家3-0-v3-5-21绿化版",normalizedTitle:"电视家3.0 v3.5.21绿化版",charIndex:612},{level:2,title:"Master PDF Editor v5.8.30便携版",slug:"master-pdf-editor-v5-8-30便携版",normalizedTitle:"master pdf editor v5.8.30便携版",charIndex:665},{level:2,title:"阿里云盘TV版v1.0.7纯净版",slug:"阿里云盘tv版v1-0-7纯净版",normalizedTitle:"阿里云盘tv版v1.0.7纯净版",charIndex:729},{level:2,title:"Cheat Engine v7.4汉化版",slug:"cheat-engine-v7-4汉化版",normalizedTitle:"cheat engine v7.4汉化版",charIndex:781},{level:2,title:"安卓扫描全能王v6.8.0高级版",slug:"安卓扫描全能王v6-8-0高级版",normalizedTitle:"安卓扫描全能王v6.8.0高级版",charIndex:861},{level:2,title:"数据库管理Navicat Premium v15.0.25/16.0.6.0 激活版/无限试用版(Navicat破解版下载)",slug:"数据库管理navicat-premium-v15-0-25-16-0-6-0-激活版-无限试用版-navicat破解版下载",normalizedTitle:"数据库管理navicat premium v15.0.25/16.0.6.0 激活版/无限试用版(navicat破解版下载)",charIndex:913},{level:2,title:"截图工具1722单文件版：支持5种截屏、GIF和视频录制、OCR文字识别~",slug:"截图工具1722单文件版-支持5种截屏、gif和视频录制、ocr文字识别",normalizedTitle:"截图工具1722单文件版：支持5种截屏、gif和视频录制、ocr文字识别~",charIndex:1011},{level:2,title:"超强截图工具WinSnap 5.2.4 绿色汉化特别版",slug:"超强截图工具winsnap-5-2-4-绿色汉化特别版",normalizedTitle:"超强截图工具winsnap 5.2.4 绿色汉化特别版",charIndex:1088},{level:2,title:"VeryCapture – 功能全面的免费截图工具",slug:"verycapture-功能全面的免费截图工具",normalizedTitle:"verycapture – 功能全面的免费截图工具",charIndex:1154},{level:2,title:"fastone stone capture",slug:"fastone-stone-capture",normalizedTitle:"fastone stone capture",charIndex:1184},{level:2,title:"广告拦截软件",slug:"广告拦截软件",normalizedTitle:"广告拦截软件",charIndex:1210},{level:2,title:"全能PDF工具箱11.4版：已解锁VIP！免安装！单文件版！",slug:"全能pdf工具箱11-4版-已解锁vip-免安装-单文件版",normalizedTitle:"全能pdf工具箱11.4版：已解锁vip！免安装！单文件版！",charIndex:1245},{level:2,title:"Windows Update Blocker",slug:"windows-update-blocker",normalizedTitle:"windows update blocker",charIndex:1323},{level:2,title:"美图秀秀批量处理v1.2单文件版",slug:"美图秀秀批量处理v1-2单文件版",normalizedTitle:"美图秀秀批量处理v1.2单文件版",charIndex:1383}],readingTime:{minutes:1.46,words:438},headersStr:"电脑QQv9.5.4(28063)特别版 PC搜狗输入法v11.6.0.5419精简版 Win11开始菜单工具StartAllBack (开始菜单增强工具) v3.2.1.4211 Stable中文破解版 Windows实用工具系统优化Microsoft PowerToys v0.53.1官方版 入梦硬件检测工具箱v6.4 纯净版 Everything v1.4.1.1016单文件版 PotPlayer v1.7.21589绿色版 电视家3.0 v3.5.21绿化版 Master PDF Editor v5.8.30便携版 阿里云盘TV版v1.0.7纯净版 Cheat Engine v7.4汉化版 安卓扫描全能王v6.8.0高级版 数据库管理Navicat Premium v15.0.25/16.0.6.0 激活版/无限试用版(Navicat破解版下载) 截图工具1722单文件版：支持5种截屏、GIF和视频录制、OCR文字识别~ 超强截图工具WinSnap 5.2.4 绿色汉化特别版 VeryCapture – 功能全面的免费截图工具 fastone stone capture 广告拦截软件 全能PDF工具箱11.4版：已解锁VIP！免安装！单文件版！ Windows Update Blocker 美图秀秀批量处理v1.2单文件版",content:"# 电脑QQv9.5.4(28063)特别版\n\nhttps://lanzoux.com/b0dpnvapi\n\n * 安装使用QQ前请先自行安装齐全 Visual C++ 和 Universal C 运行库\n * 最新运行库合集下载：https://xiaodao.lanzouo.com/iV8JYx9cakj 密码：xdnb\n\n\n# PC搜狗输入法v11.6.0.5419精简版\n\nhttps://lanzoux.com/b0dq19v5g\n\n\n# Win11开始菜单工具StartAllBack (开始菜单增强工具) v3.2.1.4211 Stable中文破解版\n\nhttps://lanzoui.com/b010w30yb\n\n\n# Windows实用工具系统优化Microsoft PowerToys v0.53.1官方版\n\nhttps://lanzoul.com/b01167ndc\n\n\n# 入梦硬件检测工具箱v6.4 纯净版\n\nhttps://www.123pan.com/s/vzeA-fwFEd\n\n\n# Everything v1.4.1.1016单文件版\n\nEverything 官方中文首页\n\nhttps://www.voidtools.com/zh-cn/downloads\n\n\n# PotPlayer v1.7.21589绿色版\n\nhttps://lanzoux.com/b0dpu58zc\n\n\n# 电视家3.0 v3.5.21绿化版\n\nhttps://lanzoui.com/b0dqfldsh\n\n\n# Master PDF Editor v5.8.30便携版\n\nhttps://lanzoui.com/b0dqewjte\n\n\n# 阿里云盘TV版v1.0.7纯净版\n\nhttps://lanzout.com/b0drkka7i\n\n\n# Cheat Engine v7.4汉化版\n\nGitHub: https://github.com/cheat-engine/cheat-engine/\n\n\n# 安卓扫描全能王v6.8.0高级版\n\nhttps://lanzoui.com/b0dqe790f\n\n\n# 数据库管理Navicat Premium v15.0.25/16.0.6.0 激活版/无限试用版(Navicat破解版下载)\n\nhttps://lanzoux.com/b010bk7rc\n\n\n# 截图工具1722单文件版：支持5种截屏、GIF和视频录制、OCR文字识别~\n\nhttps://tsq.lanzoui.com/b0c3rm9ze\n\n\n# 超强截图工具WinSnap 5.2.4 绿色汉化特别版\n\nhttps://www.lanzoui.com/b189177/\n\n\n# VeryCapture – 功能全面的免费截图工具\n\n\n# fastone stone capture\n\n\n# 广告拦截软件\n\nhttp://www.admflt.com/\n\n\n# 全能PDF工具箱11.4版：已解锁VIP！免安装！单文件版！\n\nhttps://tsq.lanzoui.com/b0c31k50h 密码:eti0\n\n\n# Windows Update Blocker\n\nhttps://www.lanzoux.com/i5qtkhc\n\n\n# 美图秀秀批量处理v1.2单文件版\n\nhttps://lanzout.com/b0drme56d",normalizedContent:"# 电脑qqv9.5.4(28063)特别版\n\nhttps://lanzoux.com/b0dpnvapi\n\n * 安装使用qq前请先自行安装齐全 visual c++ 和 universal c 运行库\n * 最新运行库合集下载：https://xiaodao.lanzouo.com/iv8jyx9cakj 密码：xdnb\n\n\n# pc搜狗输入法v11.6.0.5419精简版\n\nhttps://lanzoux.com/b0dq19v5g\n\n\n# win11开始菜单工具startallback (开始菜单增强工具) v3.2.1.4211 stable中文破解版\n\nhttps://lanzoui.com/b010w30yb\n\n\n# windows实用工具系统优化microsoft powertoys v0.53.1官方版\n\nhttps://lanzoul.com/b01167ndc\n\n\n# 入梦硬件检测工具箱v6.4 纯净版\n\nhttps://www.123pan.com/s/vzea-fwfed\n\n\n# everything v1.4.1.1016单文件版\n\neverything 官方中文首页\n\nhttps://www.voidtools.com/zh-cn/downloads\n\n\n# potplayer v1.7.21589绿色版\n\nhttps://lanzoux.com/b0dpu58zc\n\n\n# 电视家3.0 v3.5.21绿化版\n\nhttps://lanzoui.com/b0dqfldsh\n\n\n# master pdf editor v5.8.30便携版\n\nhttps://lanzoui.com/b0dqewjte\n\n\n# 阿里云盘tv版v1.0.7纯净版\n\nhttps://lanzout.com/b0drkka7i\n\n\n# cheat engine v7.4汉化版\n\ngithub: https://github.com/cheat-engine/cheat-engine/\n\n\n# 安卓扫描全能王v6.8.0高级版\n\nhttps://lanzoui.com/b0dqe790f\n\n\n# 数据库管理navicat premium v15.0.25/16.0.6.0 激活版/无限试用版(navicat破解版下载)\n\nhttps://lanzoux.com/b010bk7rc\n\n\n# 截图工具1722单文件版：支持5种截屏、gif和视频录制、ocr文字识别~\n\nhttps://tsq.lanzoui.com/b0c3rm9ze\n\n\n# 超强截图工具winsnap 5.2.4 绿色汉化特别版\n\nhttps://www.lanzoui.com/b189177/\n\n\n# verycapture – 功能全面的免费截图工具\n\n\n# fastone stone capture\n\n\n# 广告拦截软件\n\nhttp://www.admflt.com/\n\n\n# 全能pdf工具箱11.4版：已解锁vip！免安装！单文件版！\n\nhttps://tsq.lanzoui.com/b0c31k50h 密码:eti0\n\n\n# windows update blocker\n\nhttps://www.lanzoux.com/i5qtkhc\n\n\n# 美图秀秀批量处理v1.2单文件版\n\nhttps://lanzout.com/b0drme56d",charsets:{cjk:!0},createdTime:1644739094e3,updateTime:"February 13, 2022 07:58",updateTimeStamp:1644739094e3,createTime:"February 13, 2022 07:58",createTimeStamp:1644739094e3,contributors:[]},{title:"免费思维导图",frontmatter:{author:"xlc520",title:"免费思维导图",description:"免费思维导图",time:"2022-03-11T00:00:00.000Z",category:"Tools",tags:"Tools",article:!0,timeline:!0,icon:null,password:null},regularPath:"/tools/%E5%85%8D%E8%B4%B9%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.html",relativePath:"tools/免费思维导图.md",key:"v-bdacc0a6",path:"/tools/%E5%85%8D%E8%B4%B9%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/",headers:[{level:2,title:"一、知犀思维导图",slug:"一、知犀思维导图",normalizedTitle:"一、知犀思维导图",charIndex:13},{level:2,title:"二、ZhiMap",slug:"二、zhimap",normalizedTitle:"二、zhimap",charIndex:696},{level:2,title:"三、Blumind",slug:"三、blumind",normalizedTitle:"三、blumind",charIndex:846},{level:2,title:"四、FreeMind 和 Freeplane",slug:"四、freemind-和-freeplane",normalizedTitle:"四、freemind 和 freeplane",charIndex:1038}],readingTime:{minutes:5.63,words:1688},headersStr:"一、知犀思维导图 二、ZhiMap 三、Blumind 四、FreeMind 和 Freeplane",content:"# 免费思维导图\n\n\n# 一、知犀思维导图\n\n这个工具在今年1月1号开年的日推“2021效率工具，年度榜单，为你精选了10个”就提到过，是一款好用到用户相见恨晚的工具。支持MacOS 、 Windows、和手机APP( iOS 与 Android ) 四个平台的同步。\n\n\n\n最大的特点就是免费，至于免费到什么程度，官方是这么说的。\n\n\n\n> 1、导出图片要加水印且限制清晰度（知犀导出图片无水印，且高清）；\n> \n> 2、导出其他文件格式要会员（知犀免费导出为任何格式）\n> \n> 3、新增节点超过免费数量要会员（知犀随意新增节点免费）\n> \n> 4、新建脑图文件超过免费数量要会员（知犀任意新建脑图文件，且云空间免费）\n> \n> 5、各种高级功能使用不免费（知犀所有的功能全部免费，随意使用）\n> \n> 6、更换设备，更换系统不免费（知犀任意平台随意使用，手机电脑都可以）\n> \n> 7、思维导图模板收费（知犀官方提供的模板全部免费）\n\n在具体功能上，有关联线、概要、备注、图标、LaTex数学公式等。\n\n\n\n\n\n增加趣味性的图标。\n\n\n\n可以直接保存为高清无水印的图片，导出成多种格式的文档，也能切换成大纲模式，彩虹线条、背景图片、手绘样式等常用的功能一个不少。\n\n\n\n另外这还不是一个离线工具，你还可以分享你的文档供其他人访问，也能一起协助做脑图，觉得自己做得不错还能把文件分享到社区，这样使用这个工具的其他小伙伴就能使用你做的模板，在官方的社区里还提供了数千个免费模板供大家使用，可以在社区互帮互助。\n\n使用过的人评价都很高。\n\n\n\n至于为什么免费，工具官网也有提到。\n\n\n\n\n# 二、ZhiMap\n\n这也是一款免费的思维导图工具，在首页上就霸气写着：比付费的更好用，好家伙，口气倒是不小。\n\n\n\n在提供的导图社区里面，还有各行各业的模板分享。\n\n\n\n在功能上有细节优化，支持数学公式。\n\n\n\n\n\n这个思维导图可以直接在公众号里面使用，也可以免费发布和保存，没有限制。\n\n\n\n\n# 三、Blumind\n\n这是一款看上去比较纯粹的脑图工具，适合用来做自己的专属文档，软件只有几兆大小，不管怎么使用都是免费的，也没有限制。\n\n\n\n不过这是一款拥有10年历史以上的复古软件，推荐给有复古情怀的朋友使用。\n\n在操作上也和其他工具有点差异，更像是编程设置界面的感觉，需要在属性框里去调整参数值。\n\n暂停一下\n\n那有没有离线使用，功能强悍的思维导图？来看看下面这两款！\n\n\n# 四、FreeMind 和 Freeplane\n\nFreeMind是一款基于 Java的免费的脑图(mind mapping)制作与管理软件，这是一款专业的离线思维导图工具，里面的功能多到让新手头皮发麻，在安装的时候需要选择英文，安装成功是中文的。\n\n\n\n就连导出的文件类型也跟其他的软件不一样，选项丰富。\n\n\n\n但是在这里，并不推荐FreeMind,因为它停止更新了，基于的是较旧的 Java7，另外在高分屏上的适配不是很友好。\n\n\n\n而Freeplane是FreeMind的主创人员设计的另外一款工具，不用担心他们的功能不一样，你可以简单理解为Freeplane 是重置版，选它就是了。Freeplane 在3月5号还在持续更新。需要注意的是安装Freeplane 后，可能会打开失败，然后弹出一个让你下载 Java8的网页，下载安装后即可正常使用。\n\n\n\n除了制作思维导图，还可以用来梳理在电脑上的文件分类。\n\n\n\n五、百度脑图\n\n百度脑图的优势是云存储、打开网页就能用，主要的是界面简单易懂，上手起来快，同时制作的效果也还不错。\n\n\n\n缺点可能就是带有百度的名字了吧，百度的这项服务也七年多的历史了，一直不温不火的状态，很多人感觉是奄奄一息的状态，就怕不告而别的跑路。\n\n\n\n这个小工具加入书签，轻度使用还是够用的。这个项目在 GitHub 上面还有可供修改的开源代码。\n\nhttps://github.com/fex-team/kityminder\n\n六、drawio\n\ndrawio是一款开源免费的跨平台工具，网页和离线版都有，不只是思维导图，还可以用来做流程图和架构示意图、UML，ER图，网络图等等。他的对手就是Visio和亿图图示这类的付费软件。\n\n\n\n\n\n还支持保存到网盘。\n\n",normalizedContent:"# 免费思维导图\n\n\n# 一、知犀思维导图\n\n这个工具在今年1月1号开年的日推“2021效率工具，年度榜单，为你精选了10个”就提到过，是一款好用到用户相见恨晚的工具。支持macos 、 windows、和手机app( ios 与 android ) 四个平台的同步。\n\n\n\n最大的特点就是免费，至于免费到什么程度，官方是这么说的。\n\n\n\n> 1、导出图片要加水印且限制清晰度（知犀导出图片无水印，且高清）；\n> \n> 2、导出其他文件格式要会员（知犀免费导出为任何格式）\n> \n> 3、新增节点超过免费数量要会员（知犀随意新增节点免费）\n> \n> 4、新建脑图文件超过免费数量要会员（知犀任意新建脑图文件，且云空间免费）\n> \n> 5、各种高级功能使用不免费（知犀所有的功能全部免费，随意使用）\n> \n> 6、更换设备，更换系统不免费（知犀任意平台随意使用，手机电脑都可以）\n> \n> 7、思维导图模板收费（知犀官方提供的模板全部免费）\n\n在具体功能上，有关联线、概要、备注、图标、latex数学公式等。\n\n\n\n\n\n增加趣味性的图标。\n\n\n\n可以直接保存为高清无水印的图片，导出成多种格式的文档，也能切换成大纲模式，彩虹线条、背景图片、手绘样式等常用的功能一个不少。\n\n\n\n另外这还不是一个离线工具，你还可以分享你的文档供其他人访问，也能一起协助做脑图，觉得自己做得不错还能把文件分享到社区，这样使用这个工具的其他小伙伴就能使用你做的模板，在官方的社区里还提供了数千个免费模板供大家使用，可以在社区互帮互助。\n\n使用过的人评价都很高。\n\n\n\n至于为什么免费，工具官网也有提到。\n\n\n\n\n# 二、zhimap\n\n这也是一款免费的思维导图工具，在首页上就霸气写着：比付费的更好用，好家伙，口气倒是不小。\n\n\n\n在提供的导图社区里面，还有各行各业的模板分享。\n\n\n\n在功能上有细节优化，支持数学公式。\n\n\n\n\n\n这个思维导图可以直接在公众号里面使用，也可以免费发布和保存，没有限制。\n\n\n\n\n# 三、blumind\n\n这是一款看上去比较纯粹的脑图工具，适合用来做自己的专属文档，软件只有几兆大小，不管怎么使用都是免费的，也没有限制。\n\n\n\n不过这是一款拥有10年历史以上的复古软件，推荐给有复古情怀的朋友使用。\n\n在操作上也和其他工具有点差异，更像是编程设置界面的感觉，需要在属性框里去调整参数值。\n\n暂停一下\n\n那有没有离线使用，功能强悍的思维导图？来看看下面这两款！\n\n\n# 四、freemind 和 freeplane\n\nfreemind是一款基于 java的免费的脑图(mind mapping)制作与管理软件，这是一款专业的离线思维导图工具，里面的功能多到让新手头皮发麻，在安装的时候需要选择英文，安装成功是中文的。\n\n\n\n就连导出的文件类型也跟其他的软件不一样，选项丰富。\n\n\n\n但是在这里，并不推荐freemind,因为它停止更新了，基于的是较旧的 java7，另外在高分屏上的适配不是很友好。\n\n\n\n而freeplane是freemind的主创人员设计的另外一款工具，不用担心他们的功能不一样，你可以简单理解为freeplane 是重置版，选它就是了。freeplane 在3月5号还在持续更新。需要注意的是安装freeplane 后，可能会打开失败，然后弹出一个让你下载 java8的网页，下载安装后即可正常使用。\n\n\n\n除了制作思维导图，还可以用来梳理在电脑上的文件分类。\n\n\n\n五、百度脑图\n\n百度脑图的优势是云存储、打开网页就能用，主要的是界面简单易懂，上手起来快，同时制作的效果也还不错。\n\n\n\n缺点可能就是带有百度的名字了吧，百度的这项服务也七年多的历史了，一直不温不火的状态，很多人感觉是奄奄一息的状态，就怕不告而别的跑路。\n\n\n\n这个小工具加入书签，轻度使用还是够用的。这个项目在 github 上面还有可供修改的开源代码。\n\nhttps://github.com/fex-team/kityminder\n\n六、drawio\n\ndrawio是一款开源免费的跨平台工具，网页和离线版都有，不只是思维导图，还可以用来做流程图和架构示意图、uml，er图，网络图等等。他的对手就是visio和亿图图示这类的付费软件。\n\n\n\n\n\n还支持保存到网盘。\n\n",charsets:{cjk:!0},createdTime:1647581173e3,updateTime:"March 18, 2022 05:31",updateTimeStamp:1647581494e3,createTime:"March 18, 2022 05:26",createTimeStamp:1647581173e3,contributors:[]},{title:"在线万能查询和在线工具",frontmatter:{author:"xlc520",title:"在线万能查询和在线工具",description:"在线万能查询和在线工具（时效未知）",time:"2022-02-28T00:00:00.000Z",category:"Tools",tags:"Tools",article:!0,timeline:!0,icon:null,password:null},regularPath:"/tools/%E5%9C%A8%E7%BA%BF%E4%B8%87%E8%83%BD%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7.html",relativePath:"tools/在线万能查询和在线工具.md",key:"v-297d0b79",path:"/tools/%E5%9C%A8%E7%BA%BF%E4%B8%87%E8%83%BD%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/",headers:[{level:3,title:"在线工具网站",slug:"在线工具网站",normalizedTitle:"在线工具网站",charIndex:7220}],readingTime:{minutes:21.9,words:6571},headersStr:"在线工具网站",content:"# 在线万能查询和在线工具（时效未知）\n\n 1.   虫部落引擎大全（搜索）：http://search.chongbuluo.com/\n 2.   虫部落引擎大全（云盘）：http://magnet.chongbuluo.com/\n 3.   虫部落引擎大全（学术）：http://scholar.chongbuluo.com/\n 4.   虫部落引擎大全（数据挖掘）：http://data.chongbuluo.com/\n 5.   虫部落引擎大全（图片）：http://image.chongbuluo.com/\n 6.   虫部落引擎大全（404Bus）：http://www.404car.com/\n 7.   Google简体中文1（搜索镜像）：https://coderschool.2345.ga/\n 8.   Google简体中文2（搜索镜像）：https://g.codery.ga/\n 9.   Google简体中文3（搜索镜像）：https://google.90h6.cn:1668/\n 10.  Google简体中文4（学术镜像）：https://scholar.uulucky.com/\n 11.  Google简体中文5（学术镜像）：https://g.abcdocker.com/scholar\n 12.  维基百科中文语言1（镜像）：【备用网址1】 【备用网址2】\n 13.  维基百科中文语言2（镜像）：https://weiji.ga/\n 14.  维基百科中文语言3（镜像）：https://wikipedia.kfd.me/\n 15.  维基百科中文语言4（镜像）：https://wiki.4o4.click/\n 16.  维基百科中文语言5（镜像）：https://wiki.zhtube.com/\n 17.  维基百科中文语言6（镜像）：https://zhwiki.joshu.moe/\n 18.  维基百科中文语言7（镜像）：https://zh.mdzz.men/\n 19.  维基百科中文语言8（镜像）：https://zh.100ke.info/\n 20.  维基百科中文语言9（创软镜像）：https://w.sxisa.org/\n 21.  查询IP（1）：https://www.ipip.net/ip.html\n 22.  查询IP（2）：http://ip.rtbasia.com/\n 23.  查询IP（3）：http://www.hao7188.com/\n 24.  查询IP（4）：http://www.ip138.com/ips1388.asp\n 25.  查询IP（5）：http://ip111.cn/\n 26.  查询IP（6）：http://myip.cx/\n 27.  查询手机归属地（1）：http://www.ip138.com/sj/\n 28.  查询手机归属地（2）：http://cn.m.chahaoba.com/index.php?\n 29.  查询手机归属地（3）：http://shouji.niuchaxun.com/\n 30.  查询身份证（1）：http://shenfenzheng.bajiu.cn/\n 31.  查询身份证（2）：http://idcard.niuchaxun.com/\n 32.  查询身份证（3）：http://tool.114la.com/live/idcard/\n 33.  查询交通违章（1）：http://www.ip138.com/weizhang.htm\n 34.  查询交通违章（2）：https://wxcity.fundway.net:8088/Traffic/ViolationByVehicleLicense\n 35.  查询交通违章（3）：http://chaxun.weizhang8.cn/\n 36.  查询交通违章（4）：http://wx.fsga.gov.cn/fsweixin/carframe/carFrameQuery.jsp?key=96f392f3-41cb-4af0-8143-2b34628a2fb4&from=groupmessage&isappinstalled=0#page1\n 37.  查询交通违章（仅支持29个省市）：http://m.46644.com/illegal/allcity.php\n 38.  查询交通违章（广东备用1）：http://210.76.69.58/wfcx/query.jsp\n 39.  查询交通违章（广东备用2）：【主用网址1】【备用网址2】\n 40.  查询交通违章代码：http://m.46644.com/illegal/beijing/rule/\n 41.  查询银行卡归属地（1）：http://3g.yinhangkahao.com/\n 42.  查询银行卡归属地（2）：http://bank.niuchaxun.com/\n 43.  银联卡号交易消费查询：https://www.95516.com/static/union/pages/order/search.html\n 44.  查询全国列车时刻表：http://qq.ip138.com/train/\n 45.  查询世界各国货币转换：http://qq.ip138.com/hl.asp?q=100\n 46.  查询全国各地车牌（1）：http://www.ip138.com/carlist.htm\n 47.  查询全国各地车牌（2）：http://chepai.niuchaxun.com/\n 48.  查询购买国内机票：http://www.ip138.com/jb.htm\n 49.  全球航班实时飞行图：https://www.flightradar24.com/\n 50.  中国航班实时飞行图：http://www.airtu.com/FlightMap/FlightMap.html\n 51.  查询邮政编码（1）：http://www.youbianku.com/\n 52.  查询邮政编码（2）：http://youbian.niuchaxun.com/\n 53.  查询地区区号：【区号查询地名】/【地名查询区号】\n 54.  查询汉字拼音：http://qq.ip138.com/wb/wb.asp\n 55.  查询同姓同名：http://zhaoren.idtag.cn/samename/searchName!searchIndex.htm\n 56.  查询快递进度：http://www.kuaidi100.com/\n 57.  度衡量计量单位换算转换器： http://qq.ip138.com/converter.htm\n 58.  查询淘宝买家/卖家信誉：http://www.2cha.com/credit/credit_nick_.html\n 59.  查询反义词变换：http://fyc.5156edu.com/\n 60.  在线地球天气：https://www.windyty.com/\n 61.  在线中央台风网：【官方网站1】【官方网站2】\n 62.  在线天气卫星地图（中国区）：http://www.nmc.cn/publish/satellite/fy2.htm\n 63.  在线天气卫星地图（大洋洲区）：http://himawari8.nict.go.jp/\n 64.  在线检测FLASH版本：http://www.whatismyflashplayerversion.com/\n 65.  在线检测JAVA版本：http://java.com/zh_CN/download/installed8.jsp\n 66.  中国电信在线人工客服：http://im.ct10000.com/webclient/index\n 67.  中国联通在线人工客服：http://inf.10010.com/serviceOnline/mobileServiceOnline/chat.do?accessType=01507&needRobot=1\n 68.  宽带快捷排障（大陆各地区电信）：http://wx.xmt.189.cn:8080/WX_CUST_WEBSERVICE/broadbandexclude/broadbandExcludeAction.do?action=toPage&openid=kKHNXZZ3ntIiqvLzGxOo0Ye6FWdowO/RNRrDPBAwiqI=&\n 69.  宽带快捷排障+便捷服务（广东电信）：http://im.189.cn/xmt/net/index.do?subscribe=true&status=ok&openid=oBBmBjr8bwquNetqAehO_Jwt3_u0\n 70.  检测是否IPV6：http://www.kame.net/\n 71.  百度云网盘搜索（1）：http://www.oubear.com/\n 72.  百度云网盘搜索（2）：http://m.sobaidupan.com/\n 73.  百度云网盘搜索（3）：http://www.sosuopan.com/\n 74.  百度云网盘搜索（4）：http://99baiduyun.com/\n 75.  百度云网盘搜索（5）：http://www.xalssy.com.cn/\n 76.  网盘搜索查询（1）：http://www.xilinjie.com/\n 77.  网盘搜索查询（2）：http://www.panc.cc/\n 78.  网盘搜索查询（3）：http://www.bdysou.com/\n 79.  网盘搜索查询（4）：http://www.goutouying.com/\n 80.  网盘搜索查询（5）：http://wangpan007.com/\n 81.  网盘搜索查询（6）：http://www.daysou.com/\n 82.  网盘搜索查询（7）：http://www.quzhuanpan.com/\n 83.  网盘搜索查询（8）：http://md5.daimugua.com/\n 84.  喵搜动漫资源网盘：【备用网址1】【备用网址2】\n 85.  光影电影磁力下载：http://www.etdown.net/\n 86.  BT磁力链接资源搜索（1）：http://www.btwhat.net/\n 87.  BT磁力链接资源搜索（2）：http://www.ciliyun.net/\n 88.  BT磁力链接资源搜索（3）：http://www.cilimao.me/\n 89.  BT磁力链接资源搜索（4）：http://ciliba.net/\n 90.  BT磁力链接资源搜索（5）：【官方网站1】【★官方网站2】\n 91.  BT磁力链接资源搜索（6）：http://www.btcherry.info/\n 92.  BT磁力链接资源搜索（7）：http://www.btrabbit.com/\n 93.  BT磁力链接资源搜索（8）：http://www.youkubt.com/\n 94.  BT磁力链接资源搜索（9）：https://591mov.com/zh-hans/\n 95.  BT磁力链接资源搜索（10）：http://www.btsj5.com/\n 96.  岭南通/广佛通查询余额：http://www.fsjtk.com/wx/yue.php\n 97.  岭南通/羊城通 查询余额（beta）：http://weixin.gzyct.com/busiqry/user-card-balance!otherBalanceQry.action?openid=oKYOJjmESPF8pWm7rcPk63tA7oak&cardno=输入车卡卡号\n 98.  羊城通应用范围查询：http://weixin.gzyct.com/cpuqry/cpuqry.action?openid=oKYOJjmESPF8pWm7rcPk63tA7oak\n 99.  腾讯QQ联系人头像查看和下载（1）：http://www.3464.com/Tools/GetQQFace/\n 100. 腾讯QQ联系人头像查看和下载（2）：http://www.feifeiboke.com/tool/qqtx.html\n 101. 腾讯QQ联系人头像查看和下载（3）：http://www.koukoucha.com/tool/qqtouxiang/\n 102. 腾讯QQ联系人头像查看和下载（4）：http://www.dcqzone.com/qq/tx/\n 103. 腾讯QQ头像/QQ空间头像查询和下载：http://momo8.com/tools/qqtouxiang/\n 104. QQ价值评估：http://www.atool.org/qq.php\n 105. 360中国网络诈骗地图：http://vis.360.cn/open/fishsite\n 106. NORSE网络攻击地图：http://map.norsecorp.com/\n 107. 卡巴斯基网络攻击地图：https://cybermap.kaspersky.com/\n 108. 货币汇率查询：http://huilv.niuchaxun.com/\n 109. 电费计算器：http://dianfei.niuchaxun.com/\n 110. 每日油价查询（国内）：http://youjia.niuchaxun.com/\n 111. 世界时差查询：http://shicha.niuchaxun.com/\n 112. 查询地铁路线（大陆+台湾香港）：http://map.baidu.com/subways/\n 113. 电脑系统进程查询：http://process.niuchaxun.com/\n 114. 全球被黑站点统计：http://www.hack-cn.com/archive\n 115. 检测浏览器内核版本：http://liulanmi.com/labs/core.html\n 116. 检测浏览器版本号：https://aboutmybrowser.com/r5v01nyZ\n 117. 查询QQ好友空间背景音乐（1）：http://www.koukoucha.com/music/\n 118. 查询QQ好友空间背景音乐（2）：https://www.feifeiboke.com/qqmusic/\n 119. 检测图片是否被PS：http://fotoforensics.com/\n 120. 莆田系医院分布图：https://wandergis.com/hospital-viz/index.htm\n 121. ★Google缓存网页快照大全：http://cachedview.com/index.php?lang=zh#\n 122. 百度云分享失效重链：http://pan.baidu.com/share/home?uk=输入分享失效数字\n 123. 佛山实时公交在线查询：http://www.oooxo.com/\n 124. 12306帐号泄露查询：http://www.atool.org/12306.php\n 125. 账号密码泄露查询（1）：https://qq.mima.re/\n 126. 账号密码泄露查询（2）：https://haveibeenpwned.com/\n 127. 在线屏幕测试：http://pingmu.zh-ang.com/\n 128. 显示屏分辨率检测：http://www.3464.com/tools/DisplayResolution/\n 129. LOL英雄联盟查询助手：http://vip.ihuan.me/lol.htm\n 130. 查询手机IMEI码信息：http://www.imei8.net/\n 131. 在线识别音乐歌名（beta）：http://www.mooma.sh/\n 132. “车来了”网页版：【蓝色版】【绿色版】\n 133. 在线接收手机短信（国外号码1）：http://receivefreesms.com/\n 134. 在线接收手机短信（国外号码2）：【备用网址1】【备用网址2】【备用网址3】\n 135. 在线识别动漫图（1）：http://saucenao.com/\n 136. 在线识别动漫图（2）：https://pic.nyaso.com/search.html\n 137. 特殊符号大全：http://cn.piliapp.com/symbol/\n 138. 微博图片反查（1）：http://wbimg.huyuaning.com/\n 139. 微博图片反查（2）：http://www.sq520.net/weibo-fancha/\n 140. 微博图片反查（3）：https://toolmao.com/tool/img2weibo/\n 141. 微博图片反查（4）：https://weibo.2333.me/\n 142. 在线免费代理IP：https://ip.ihuan.me/\n\n----------------------------------------\n\n\n * # 在线工具网站\n\n----------------------------------------\n\n 1.   在线工具大全：http://tool.oschina.net/\n 2.   在线视频/图片/音频/文件转换工具：http://www.fileconverto.com/\n 3.   中国大陆身份证大全（1）：http://shenfenzheng.293.net/\n 4.   中国大陆身份证大全（2）：http://idcard.niuchaxun.com/\n 5.   中国大陆身份证大全（3）：http://tool7001.com/\n 6.   10个国家身份生成：http://www.haoweichi.com/\n 7.   在线photoshop：http://www.webps.cn/\n 8.   在线百度word：http://word.baidu.com/\n 9.   ★在线谷歌office：https://www.google.cn/intl/zh-CN/docs/about/\n 10.  在线微软office：https://www.office.com/\n 11.  在线txt记事本：【官方网站1】【官方网站2】\n 12.  在线电话轰炸机：【呼之官网1】【呼之官网2】【呼之官网3】\n 13.  在线短信轰炸机（1）：http://zha.vvoso.com/\n 14.  在线短信轰炸机（2）：http://tools.wx6.org/duanxinhongzhaji/\n 15.  在线短信轰炸机（3）：http://www.5c5x.com/hzj/\n 16.  在线短信轰炸机（4）：http://peng3.com/sms/ 【验证码：ydjy】\n 17.  在线短信轰炸机（5）：http://eateat.net/\n 18.  在线短信轰炸机（6）：http://sms.in0.cc/\n 19.  在线短信轰炸机（7）：【普通模式】【迷你模式】【无敌模式】\n 20.  在线短信轰炸机（8）：http://zgtv.spo38.igeek.gq/aip/\n 21.  在线短信轰炸机（9）：http://zhilmw.go4c.arebz.co/dx/index.php\n 22.  在线装逼（1）：http://deepba.com/\n 23.  在线装逼（2）：http://www.zhuangbi.info/\n 24.  ZeroNet在线代理访问：https://zero.acelewis.com/\n 25.  在线代理IP：https://proxy.coderbusy.com/zh-cn\n 26.  在线代理（1）：https://sg1.mm.4night.win:991/index.php\n 27.  在线代理（2）：https://r.t.renren2017.com/\n 28.  在线代理（3）：http://www.youbiyao.net/\n 29.  在线代理（4）：https://idaili.club/\n 30.  在线代理（5）：http://sosovo.com/\n 31.  在线代理（6）：【备用网址1】【备用网址2】【备用网址3】\n 32.  在线查找病毒（1）：http://www.virscan.org/\n 33.  在线查找病毒（2）：https://virusscan.jotti.org/\n 34.  在线查找病毒（3）：https://www.virustotal.com/zh-cn/\n 35.  在线查询病毒（4）：http://habo.qq.com/\n 36.  在线查询病毒（5）：http://scan.shouji.360.cn/\n 37.  在线查询病毒（6）：http://m.qq.com/security_lab/scans_online.jsp\n 38.  在线查询病毒（7）：https://x.threatbook.cn/\n 39.  在线查询病毒（8）：http://online.drweb.com/\n 40.  金山毒霸网络版（行业专用版）：http://210.45.224.52:6868/\n 41.  网站安全查询（1）：http://webscan.360.cn/\n 42.  网站安全查询（2）：http://onlinelinkscan.com/\n 43.  网站安全查询（3）：【中国版本】【俄罗斯版本】\n 44.  网站安全查询（4）：https://app.webinspector.com/\n 45.  在线短网址还原（1）：http://dwz.aidmin.cn/restore.php\n 46.  在线短网址还原（2）：http://baidu.nu/index.php?m=public&a=reurl\n 47.  在线短网址还原（3）：http://duanwangzhihuanyuan.51240.com/\n 48.  在线短网址大全（1）：【备用网址1】【备用网址2】\n 49.  在线短网址大全（2）：http://www.ft12.com/\n 50.  在线短网址大全（3）：https://goo.gd/\n 51.  在线短网址大全（4）：【备用网址1】【备用网址2】\n 52.  dwz.mn短网址：http://www.dwz.mn/\n 53.  百度短网址：http://dwz.cn/\n 54.  冰枫短网址：https://ibf.tw/\n 55.  新浪微博短网址（1）：http://www.atool.org/shorturl.php\n 56.  新浪微博短网址（2）：http://surl.sinaapp.com/\n 57.  缩我短网址：http://suo.im/\n 58.  硬是要缩短网址：https://4fun.tw/\n 59.  980.so短网址：http://980.so/\n 60.  RRD短网址：http://rrd.me/\n 61.  佳鑫短网址：http://x28.me/\n 62.  i-to短网址：http://i-to.cc/\n 63.  晨旭长网址：http://biubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiu.com/index.html\n 64.  随机1小时VPN：http://my.0ff0.net/\n 65.  随机24小时PAC：https://freepac.co/\n 66.  随机24小时SS：http://freess.org/\n 67.  DDOS网页端（1）：http://quezstresser.com/\n 68.  DDOS网页端（2）：http://orcahub.com/\n 69.  在线网络电视（1）：http://www.shiting5.com/hd/\n 70.  在线网络电视（2）：http://www.shiting5.com/tv/cn/cctv/\n 71.  在线网络电视（3）：http://tv.shebao5.com/\n 72.  在线网络电视（4）：http://zb.dsqndh.com/【仅支持手机浏览器带视频播放器】\n 73.  在线网络电视（全球1）：【英文版】【中文版】\n 74.  在线网络电视（全球2）：http://tvopedia.com/\n 75.  在线网络电视（全球3）：http://rushplayer.com/wapstream.aspx?v=1.54&t=2&g=282&app=1000【仅支持手机浏览器带视频播放器】\n 76.  在线网络电视（港澳台+韩国）：http://www.cietv.com/images/img/100/\n 77.  在线网络电视（央视+各省卫视）：http://ivi.bupt.edu.cn/\n 78.  在线JSON数据解析器：http://www.toolmao.com/json-parser-jiexi\n 79.  在线免费打电话（1）：http://ievaphone.com/\n 80.  在线免费打电话（2）：https://call2friends.com/\n 81.  在线免费打电话（3）【限制13个国家】：http://makefreecallsonline.com/countries.php\n 82.  在线免费发短信（1）：http://www.afreesms.com/\n 83.  在线免费发短信（2）：http://sendsmsonlineforfree.com/countries.php\n 84.  在线免费发短信（3）【限制英文】：https://globfone.com/sms/\n 85.  在线免费发短信（4）：http://www.socialland.net/sendsms.php\n 86.  在线图片上传大全：http://upload.otar.im/\n 87.  微博图床上传（1）：http://pic.xiaojianjian.net/\n 88.  微博图床上传（2）：http://tool.mkblog.cn/tuchuang/\n 89.  在线图片上传（1）：http://chuantu.biz/\n 90.  在线图片上传（2）：【官方新版】【官方旧版】\n 91.  在线图片上传（3）：http://www.tietuku.com/upload\n 92.  在线图片上传（4）：http://tw.picwindow.com/\n 93.  在线图片上传（5）：http://www.wailian.work/\n 94.  在线图片上传（6）：https://img.vim-cn.com/\n 95.  在线图片上传（7）：http://upload.ouliu.net/\n 96.  在线图片上传（8）：https://sm.ms/\n 97.  在线图片上传（9）：https://ooxx.ooo/upload\n 98.  在线图片上传（10）：https://pic.tink.im/\n 99.  在线图片上传（11）：http://ih.pwcong.xyz:8080/\n 100. 在线图片上传（12）：https://img.fghrsh.net/\n 101. 在线压缩图片（1）：http://zhitu.isux.us/\n 102. 在线压缩图片（2）：http://www.atool.org/pngcompression.php\n 103. 在线音乐上传（1）：http://up.jqzone.com/\n 104. 在线音乐上传（2）：http://picosong.com/\n 105. 在线音乐上传（3）：http://tianyan999.com/user/up.php\n 106. 音乐查询和在线播放（1）：https://music.liuli.lol/\n 107. 音乐查询和在线播放（2）：http://music.2333.me/\n 108. 音乐查询和在线播放（3）：http://music.ifkdy.com/\n 109. 音乐查询和在线播放（4）：http://music.xrbk.top/\n 110. 音乐查询和在线播放（5）：https://www.wlhrt.cn/tool/mp3/\n 111. 音乐查询和在线播放（6）：http://www.liumingye.cn/tools/music/\n 112. 音乐查询和在线播放（7）：http://mp3.vsucai.cn/\n 113. 在线音乐下载（1）：http://music.dsqndh.com/\n 114. 在线音乐下载（2）：http://music.cn.tn/\n 115. VR全景拍摄：http://720yun.com/\n 116. 360水滴摄像头直播：http://jia.360.cn/pc/\n 117. 百度云摄像头直播：http://kankan.baidu.com/\n 118. 萤石摄像头直播：http://square.ys7.com/index\n 119. 爱耳目摄像头直播：http://www.iermu.com/zhibo\n 120. Viewerframe摄像头：http://webcams.gosnippy.com/\n 121. ★全球网络IP摄像头直播：http://www.insecam.org/\n 122. Youtube音乐下载：http://i-dl.net/\n 123. Youtube视频转换工具（1）：http://2conv.com/cn/\n 124. Youtube视频转换工具（2）：https://savemedia.com/\n 125. Youtube视频转换工具（3）：http://tw.getv-go.com/\n 126. Youtube视频转换工具（4）：http://www.dirpy.com/\n 127. Youtube视频转换工具（5）：https://y2mate.com/zh-cn/\n 128. 新浪微博视频解析转换工具：http://www.weibovideo.com/\n 129. bilibili哔哩哔哩视频解析转换工具（1）：http://www.ibilibili.com/\n 130. bilibili哔哩哔哩视频解析转换工具（2）：http://www.bilibilijj.com/\n 131. 国内视频解析转换工具（1）：【电信线路用户】【联通线路用户】\n 132. 国内视频解析转换工具（2）：http://www.flvcd.com/index.htm\n 133. 国内视频解析转换工具（3）：http://www.shokdown.com/\n 134. 国内下载地址解析转换工具（1）：http://xiazaidizhi.niuchaxun.com/\n 135. 国内下载地址解析转换工具（2）：http://www.iqshw.com/url/\n 136. 国内下载地址解析转换工具（3）：http://tool.114la.com/code/urlconvert/\n 137. 国内下载地址解析转换工具（4）：https://591mov.com/zh-hans/url_trans/\n 138. 在线播放VIP会员电影视频（1）：http://www.liumingye.cn/tools/video/\n 139. 在线播放VIP会员电影视频（2）：http://v.laod.cn/\n 140. 在线播放VIP会员电影视频（3）：http://tv.dsqndh.com/\n 141. 在线播放VIP会员电影视频（4）：http://guikea.cn/vpj/index.html\n 142. 在线播放VIP会员电影视频（5）：https://www.dujin.org/video/\n 143. 在线播放VIP会员电影视频（6）：http://zwyqzd.czqin.com/jxa/vip.php\n 144. 在线播放VIP会员电影视频（7）：http://www.chepeijian.cn/jiexi.html\n 145. 在线播放VIP会员电影视频（8）：【备用网址1】【备用网址2】【备用网址3】\n 146. 在线播放VIP会员电影视频（输入C值）：【备用网址1】【备用网址2】\n 147. 在线BT种子链接磁力云播放（1）：http://apiv.ga/magnet/\n 148. 在线BT种子链接磁力云播放（2）：http://www.aisiyunbo.xyz/magnetGet.html\n 149. 种子转换磁力链接（1）：https://www.torrentkitty.tv/\n 150. 种子转换磁力链接（2）：http://www.torrent.org.cn/\n 151. 虚假磁链生成器：http://bt.papapoi.com/\n 152. 在线百度输入法（1）：http://shurufa.niuchaxun.com/\n 153. 在线谷歌输入法（2）：http://www.google.cn/inputtools/try/\n 154. 在线计算器（1）：http://jisuanqi.niuchaxun.com/\n 155. 在线计算机（2）：http://tool.114la.com/code/jisuanqi/\n 156. 在线火星文转换：http://huoxingwen.niuchaxun.com/\n 157. 在线拆字工具：http://chaizi.niuchaxun.com/\n 158. 在线mp3音乐外链地址（1）：http://www.haoduoge.com/\n 159. 在线mp3音乐外链地址（2）：http://www.111ttt.com/up/\n 160. 在线mp3音乐外链地址（3）：http://94001.com/\n 161. 在线mp3音乐外链地址（4）：http://www.xuenb.com/tools/mp3/\n 162. 在线mp3音乐外链地址（5）：http://zwyqzd.czqin.com/jxa/mp3.php\n 163. 二维码生成器：http://www.3464.com/tools/QrcodeMaster/\n 164. 二维码生成器大全（1）：http://www.34qr.com/\n 165. 二维码生成器大全（2）：http://www.wwei.cn/\n 166. 二维码生成器大全（3）：http://www.qrstuff.com/\n 167. 二维码生成器大全（4）：https://charlie.qrcreate.h5.ersansan.cn/\n 168. 生成微信群用就二维码：https://yongjiuma.com/\n 169. 草料二维码扫描器：https://cli.im/deqr\n 170. 在线倒计时：http://xxhd.net.cn/\n 171. 在线制作GIF：http://www.gif5.net/\n 172. 在线LOGO制作：http://www.logowu.com/\n 173. 在线制作DJ电台：http://www.partycloud.fm/\n 174. 在线Google+头像产生器：http://gplus.orinx.com/\n 175. 谷歌APK下载器：https://apps.evozi.com/apk-downloader/\n 176. 在线制作圣诞头像：http://xmas.noapp.net/AvatarMaker.aspx\n 177. 在线解压文件：http://www.wobzip.org/\n 178. 在线文件上传（1）：https://userscloud.com/\n 179. 在线文件上传（2）：https://bitsend.jp/\n 180. 在线文件上传（3）：http://www.72blog.com/tu/\n 181. 在线种子上传：http://www.360xixi.com/\n 182. 各种在线翻译：http://qq.ip138.com/tran.htm\n 183. 在线各卫星看地球：http://www.flashearth.com/\n 184. 在线检测电脑配置：http://test.mydrivers.com/install.htm\n 185. 在线手机性价检测：http://www.3464.com/tools/MPPTesting/test.asp【仅支持QQ浏览器和UC浏览器】\n 186. 在线测网速（1）：http://wangsu.niuchaxun.com/\n 187. 在线测网速（2）：http://tool.114la.com/live/speed/\n 188. 在线测网速（3）：http://www.kmguolv.com/cesu/\n 189. 在线测网速（4）：http://wangsu.baishicha.com/\n 190. 在线测网速：【中国移动】【中国联通】【中国电信(新)】【中国电信(旧)】【香港宽频（旧）】【香港宽频（新）】【台湾宽频】\n 191. 网站站长查询（1）：http://www.webmasterhome.cn/\n 192. 网站站长查询（2）：http://www.17ce.com/\n 193. 网站站长查询（3）：http://tool.chinaz.com/\n 194. 网站站长查询（4）：http://www.super-ping.com/sc.html\n 195. 网站站长查询（5）：https://asm.ca.com/zh_cn/ping.php\n 196. 腾讯QQ第三方授权管理：http://connect.qq.com/toc/auth_manager\n 197. 腾讯QQ联系人恢复系统：http://huifu.qq.com/\n 198. 腾讯增值服务停用关闭：https://kf.qq.com/touch/mobileqq/service_cancel.html\n 199. 检测密码强度（1）：http://mima.niuchaxun.com/\n 200. 检测密码强度（2）：https://howsecureismypassword.net\n 201. 检测浏览器1（Javascript 性能）：【★谷歌v8版】【SunSpider版】\n 202. 检测浏览器2（RoboHornet Pro测试）：【微软fishbowl】【微软FishIETank】\n 203. 检测浏览器3（Peacekeeper 测试）：http://peacekeeper.futuremark.com/run.action\n 204. 检测浏览器4（HTML5相关测试）：http://html5test.com/\n 205. ★检测APK在线签名校验：https://apkpure.com/apk-signature-verification\n 206. 在线安卓软件反编译：http://www.javadecompilers.com/apk\n 207. 在线favicon.ico图标制作：http://www.atool.org/ico.php\n 208. 在线获取网站favicon.ico图标：http://g.soz.im/输入完整URL网址\n 209. 在线文字识别转换：http://ocr.wdku.net/\n 210. 奇迹暖暖在线工具：http://seal100x.github.io/nikkiup2u3/\n 211. 在线邮件发送（含文件）：https://www.send18.com/\n 212. 在线制作绘图画稿（画画）：http://kokuban.in/mypage/draw/skeb\n 213. 在线听大暴雨声音：http://raining.fm/\n 214. PDF文件转换和编辑：https://lightpdf.com/zh/\n 215. 微信公众平台内容编辑器：http://wx.atool.org/\n 216. 加密解密摩斯密码：http://www.atool.org/morse.php\n 217. QQ空间写说说代码生成：http://tool.vvoso.com/tool/kjdm/\n 218. QQ消息撤回名片生成（QQ群名片反字）：http://qun.vvoso.com/\n 219. 在线摄像头自拍：https://webcamtoy.com/zh/\n 220. 自定义QQ分享生成器：http://qqshare.papapoi.com/\n 221. 在线超级SEO外链工具：http://seo.dmeng.net/\n 222. QQ反向名字生成器：http://qq.papapoi.com/\n 223. 在线QQ空间说说刷赞：http://ssz.lxzan.com/\n 224. 【YOPmail】临时邮箱（1）：【@yopmail.com官网】【@yopmail.fr官网】\n 225. 【TempMail】临时邮箱（2）：https://temp-mail.org/zh/\n 226. 10分钟临时邮箱（3）：【电脑版】【手机版】\n 227. 10分钟临时邮箱（4）：【@bccto.me邮箱】【@mail.bccto.me邮箱】\n 228. 【查错网】临时邮箱（5）：http://24mail.chacuo.net/\n 229. 在线伪造邮件邮箱发送（1）：http://tool.chacuo.net/mailanonymous\n 230. 在线伪造邮件邮箱发送（2）：https://ihuan.me/mail\n 231. 在线匿名邮件发送：http://tool.chacuo.net/mailsend\n 232. 在线百度关键字搜索生成：https://buhuibaidu.me/\n 233. 在线生成圣诞帽头像：http://hat.svvme.com/\n 234. 在线微信支付宝收款码合成：http://heyfox.herokuapp.com/\n 235. 在线腾讯人工QQ客服：http://crm2.qq.com/page/portalpage/wpa.php?%20uin=40012345&f=1&ty=1&ap=000011:400793:|m:13|f:KFXD37x\n 236. 美图秀秀批处理图片：http://xiuxiu.web.meitu.com/plugin/batch/taobao.html\n\n----------------------------------------\n\n * 在线福利和良心网站\n\n----------------------------------------\n\n 1.  免费申请支付宝收钱码：https://b.alipay.com/settling/tc/entry.htm\n 2.  会员分享网（1）：http://www.fenxiangdashi.com/\n 3.  会员分享网（2）：http://www.123huodong.com/zhanghaofenxiang/\n 4.  会员分享网（3）：http://www.hot3000.com/\n 5.  会员分享网（4）：http://www.vipzhanghao.com/\n 6.  会员分享网（5）：http://www.xlcun.com/\n 7.  会员分享网（6）：http://vip.ihuan.me/\n 8.  会员分享网（7）：http://www.zhanghaofen.com/\n 9.  迅雷会员分享（1）：http://www.jxaxs.com/xunlei/\n 10. 迅雷会员分享（2）：http://www.521xunlei.com/\n 11. 迅雷会员分享（3）：http://www.wantsee.cn/\n 12. 迅雷会员分享（4）：http://xlfans.com/\n 13. 迅雷会员分享（5）：http://www.laobinggun.com/forum-37-1.html\n 14. 迅雷会员分享（6）：http://www.fenxs.com/category/gongxiang\n 15. 迅雷会员分享（7）：http://www.xunleihuiyuan.net/vip/\n 16. 爱奇艺会员分享（1）：http://www.zqnf.com/iqiyimianfeihuiyuan.htm\n 17. 爱奇艺会员分享（2）：http://myvipbbs.com/forum-2-1.html\n 18. 爱奇艺会员分享（3）：http://www.fenxiangdashi.com/aiqiyi/\n 19. 优酷土豆会员分享：http://www.vipdage.com/\n 20. 115会员分享网：http://in115.com/\n 21. 在线黑白图标：http://iconmonstr.com/\n 22. 在线图标Logo大全：http://megaicons.net/\n 23. 特别安卓软件（1）：http://onlineapk.com/\n 24. APKPure下载谷歌商店软件：【com域名中文版网站】【com域名中文版谷歌APK下载器】【co域名网站】【co域名谷歌APK下载器】\n 25. APKSum下载谷歌商店软件：https://www.apksum.com/\n 26. 第三方苹果商店APP下载：https://www.appaddict.org/\n 27. zd423优化软件：http://www.zdfans.com/\n 28. 919PT特别软件：http://www.919pt.com/\n 29. Crx4Chrome扩展程序：http://www.crx4chrome.com/\n 30. 谷歌扩展程序下载器（1）：http://chrome-extension-downloader.com/\n 31. 谷歌扩展程序下载器（2）：http://crx.2333.me/\n 32. 谷歌APK软件下载器（1）：https://apps.evozi.com/apk-downloader/\n 33. 谷歌APK软件下载器（2）：https://androidappsapk.co/apkdownloader/\n 34. ★谷歌地球背景壁纸：http://earthview.withgoogle.com/\n 35. 赛风psiphon（官方）：【备用官网1】【备用官网2】\n 36. 蓝灯lantern（github）：【电脑版下载】【安卓版下载】\n 37. 官方ROM（1）：http://www.cnroms.com/\n 38. 官方ROM（2）：http://www.sxrom.com/\n 39. 官方ROM（3）：http://www.muzisoft.com/roms/\n 40. MSDN，我告诉你：http://www.itellyou.cn/\n 41. 二次元动漫：http://www.2animx.com/\n 42. Omegle在线陌生人聊天：http://www.omegle.com/\n 43. 触宝电话国际长途邀请码：http://dialer-cdn.cootekservice.com/dialer/free-call/international/invitation_code/index.html?plg_nld=1&plg_uin=1&plg_auth=1&plg_nld=1&plg_usr=1&plg_vkey=1&plg_dev=1&from=groupmessage&isappinstalled=0\n 44. 中国联通手机营业厅：https://m.10010.com\n 45. 中国联通一起沃：【登录入口】【每日签到流量】【每日领流量红包】\n 46. 中国联通“免费网龄升级计划”：http://iservice.10010.com/e4/transact/basic/net_age_iframe.html\n 47. 盛天网盘（国内）：http://pan.stnts.com/【Ps：这里注册再互送20GB永久空间！！！】\n 48. pCloud云盘（国外）：https://my.pcloud.com/\n 49. 中国版Youtube海外视频：https://www.fantasy.tv/\n 50. 在线YY4480高清影院（1）：【官网网址1】【备用网址2】【备用网址3】\n 51. 在线爱看高清影院（2）：【官网网址1】【备用网址2】\n 52. 萌人物电影电视剧大片网（1）：http://www.mrenwu.com/\n 53. 酷播网电影电视剧大片网（2）：http://www.kb20.cc/\n 54. 9080电影电视剧大片网（3）：http://www.9080dy.com/\n 55. 有家影院电影电视剧大片网（4）：http://www.youjiady.com/\n 56. 牛B四十电影电视剧大片网（5）：http://www.nb40.com/\n 57. 80手机电影电视剧大片网（6）：http://www.80s.tw/\n 58. 大猫电影电视剧大片网（7）：http://www.h6080.com/\n 59. 琪琪看片电影电视剧大片网（8）：http://www.77kp.com/\n 60. 影视大片电影电视剧大片网（9）：http://www.yingshidaquan.cc/\n 61. 神马影院电影电视剧大片网（10）：http://www.ilaoziys.com/\n 62. 网盘相册笔记大全：http://www.benpig.com/photo.htm\n 63. FUN DNS：http://www.fundns.cn/",normalizedContent:"# 在线万能查询和在线工具（时效未知）\n\n 1.   虫部落引擎大全（搜索）：http://search.chongbuluo.com/\n 2.   虫部落引擎大全（云盘）：http://magnet.chongbuluo.com/\n 3.   虫部落引擎大全（学术）：http://scholar.chongbuluo.com/\n 4.   虫部落引擎大全（数据挖掘）：http://data.chongbuluo.com/\n 5.   虫部落引擎大全（图片）：http://image.chongbuluo.com/\n 6.   虫部落引擎大全（404bus）：http://www.404car.com/\n 7.   google简体中文1（搜索镜像）：https://coderschool.2345.ga/\n 8.   google简体中文2（搜索镜像）：https://g.codery.ga/\n 9.   google简体中文3（搜索镜像）：https://google.90h6.cn:1668/\n 10.  google简体中文4（学术镜像）：https://scholar.uulucky.com/\n 11.  google简体中文5（学术镜像）：https://g.abcdocker.com/scholar\n 12.  维基百科中文语言1（镜像）：【备用网址1】 【备用网址2】\n 13.  维基百科中文语言2（镜像）：https://weiji.ga/\n 14.  维基百科中文语言3（镜像）：https://wikipedia.kfd.me/\n 15.  维基百科中文语言4（镜像）：https://wiki.4o4.click/\n 16.  维基百科中文语言5（镜像）：https://wiki.zhtube.com/\n 17.  维基百科中文语言6（镜像）：https://zhwiki.joshu.moe/\n 18.  维基百科中文语言7（镜像）：https://zh.mdzz.men/\n 19.  维基百科中文语言8（镜像）：https://zh.100ke.info/\n 20.  维基百科中文语言9（创软镜像）：https://w.sxisa.org/\n 21.  查询ip（1）：https://www.ipip.net/ip.html\n 22.  查询ip（2）：http://ip.rtbasia.com/\n 23.  查询ip（3）：http://www.hao7188.com/\n 24.  查询ip（4）：http://www.ip138.com/ips1388.asp\n 25.  查询ip（5）：http://ip111.cn/\n 26.  查询ip（6）：http://myip.cx/\n 27.  查询手机归属地（1）：http://www.ip138.com/sj/\n 28.  查询手机归属地（2）：http://cn.m.chahaoba.com/index.php?\n 29.  查询手机归属地（3）：http://shouji.niuchaxun.com/\n 30.  查询身份证（1）：http://shenfenzheng.bajiu.cn/\n 31.  查询身份证（2）：http://idcard.niuchaxun.com/\n 32.  查询身份证（3）：http://tool.114la.com/live/idcard/\n 33.  查询交通违章（1）：http://www.ip138.com/weizhang.htm\n 34.  查询交通违章（2）：https://wxcity.fundway.net:8088/traffic/violationbyvehiclelicense\n 35.  查询交通违章（3）：http://chaxun.weizhang8.cn/\n 36.  查询交通违章（4）：http://wx.fsga.gov.cn/fsweixin/carframe/carframequery.jsp?key=96f392f3-41cb-4af0-8143-2b34628a2fb4&from=groupmessage&isappinstalled=0#page1\n 37.  查询交通违章（仅支持29个省市）：http://m.46644.com/illegal/allcity.php\n 38.  查询交通违章（广东备用1）：http://210.76.69.58/wfcx/query.jsp\n 39.  查询交通违章（广东备用2）：【主用网址1】【备用网址2】\n 40.  查询交通违章代码：http://m.46644.com/illegal/beijing/rule/\n 41.  查询银行卡归属地（1）：http://3g.yinhangkahao.com/\n 42.  查询银行卡归属地（2）：http://bank.niuchaxun.com/\n 43.  银联卡号交易消费查询：https://www.95516.com/static/union/pages/order/search.html\n 44.  查询全国列车时刻表：http://qq.ip138.com/train/\n 45.  查询世界各国货币转换：http://qq.ip138.com/hl.asp?q=100\n 46.  查询全国各地车牌（1）：http://www.ip138.com/carlist.htm\n 47.  查询全国各地车牌（2）：http://chepai.niuchaxun.com/\n 48.  查询购买国内机票：http://www.ip138.com/jb.htm\n 49.  全球航班实时飞行图：https://www.flightradar24.com/\n 50.  中国航班实时飞行图：http://www.airtu.com/flightmap/flightmap.html\n 51.  查询邮政编码（1）：http://www.youbianku.com/\n 52.  查询邮政编码（2）：http://youbian.niuchaxun.com/\n 53.  查询地区区号：【区号查询地名】/【地名查询区号】\n 54.  查询汉字拼音：http://qq.ip138.com/wb/wb.asp\n 55.  查询同姓同名：http://zhaoren.idtag.cn/samename/searchname!searchindex.htm\n 56.  查询快递进度：http://www.kuaidi100.com/\n 57.  度衡量计量单位换算转换器： http://qq.ip138.com/converter.htm\n 58.  查询淘宝买家/卖家信誉：http://www.2cha.com/credit/credit_nick_.html\n 59.  查询反义词变换：http://fyc.5156edu.com/\n 60.  在线地球天气：https://www.windyty.com/\n 61.  在线中央台风网：【官方网站1】【官方网站2】\n 62.  在线天气卫星地图（中国区）：http://www.nmc.cn/publish/satellite/fy2.htm\n 63.  在线天气卫星地图（大洋洲区）：http://himawari8.nict.go.jp/\n 64.  在线检测flash版本：http://www.whatismyflashplayerversion.com/\n 65.  在线检测java版本：http://java.com/zh_cn/download/installed8.jsp\n 66.  中国电信在线人工客服：http://im.ct10000.com/webclient/index\n 67.  中国联通在线人工客服：http://inf.10010.com/serviceonline/mobileserviceonline/chat.do?accesstype=01507&needrobot=1\n 68.  宽带快捷排障（大陆各地区电信）：http://wx.xmt.189.cn:8080/wx_cust_webservice/broadbandexclude/broadbandexcludeaction.do?action=topage&openid=kkhnxzz3ntiiqvlzgxoo0ye6fwdowo/rnrrdpbawiqi=&\n 69.  宽带快捷排障+便捷服务（广东电信）：http://im.189.cn/xmt/net/index.do?subscribe=true&status=ok&openid=obbmbjr8bwqunetqaeho_jwt3_u0\n 70.  检测是否ipv6：http://www.kame.net/\n 71.  百度云网盘搜索（1）：http://www.oubear.com/\n 72.  百度云网盘搜索（2）：http://m.sobaidupan.com/\n 73.  百度云网盘搜索（3）：http://www.sosuopan.com/\n 74.  百度云网盘搜索（4）：http://99baiduyun.com/\n 75.  百度云网盘搜索（5）：http://www.xalssy.com.cn/\n 76.  网盘搜索查询（1）：http://www.xilinjie.com/\n 77.  网盘搜索查询（2）：http://www.panc.cc/\n 78.  网盘搜索查询（3）：http://www.bdysou.com/\n 79.  网盘搜索查询（4）：http://www.goutouying.com/\n 80.  网盘搜索查询（5）：http://wangpan007.com/\n 81.  网盘搜索查询（6）：http://www.daysou.com/\n 82.  网盘搜索查询（7）：http://www.quzhuanpan.com/\n 83.  网盘搜索查询（8）：http://md5.daimugua.com/\n 84.  喵搜动漫资源网盘：【备用网址1】【备用网址2】\n 85.  光影电影磁力下载：http://www.etdown.net/\n 86.  bt磁力链接资源搜索（1）：http://www.btwhat.net/\n 87.  bt磁力链接资源搜索（2）：http://www.ciliyun.net/\n 88.  bt磁力链接资源搜索（3）：http://www.cilimao.me/\n 89.  bt磁力链接资源搜索（4）：http://ciliba.net/\n 90.  bt磁力链接资源搜索（5）：【官方网站1】【★官方网站2】\n 91.  bt磁力链接资源搜索（6）：http://www.btcherry.info/\n 92.  bt磁力链接资源搜索（7）：http://www.btrabbit.com/\n 93.  bt磁力链接资源搜索（8）：http://www.youkubt.com/\n 94.  bt磁力链接资源搜索（9）：https://591mov.com/zh-hans/\n 95.  bt磁力链接资源搜索（10）：http://www.btsj5.com/\n 96.  岭南通/广佛通查询余额：http://www.fsjtk.com/wx/yue.php\n 97.  岭南通/羊城通 查询余额（beta）：http://weixin.gzyct.com/busiqry/user-card-balance!otherbalanceqry.action?openid=okyojjmespf8pwm7rcpk63ta7oak&cardno=输入车卡卡号\n 98.  羊城通应用范围查询：http://weixin.gzyct.com/cpuqry/cpuqry.action?openid=okyojjmespf8pwm7rcpk63ta7oak\n 99.  腾讯qq联系人头像查看和下载（1）：http://www.3464.com/tools/getqqface/\n 100. 腾讯qq联系人头像查看和下载（2）：http://www.feifeiboke.com/tool/qqtx.html\n 101. 腾讯qq联系人头像查看和下载（3）：http://www.koukoucha.com/tool/qqtouxiang/\n 102. 腾讯qq联系人头像查看和下载（4）：http://www.dcqzone.com/qq/tx/\n 103. 腾讯qq头像/qq空间头像查询和下载：http://momo8.com/tools/qqtouxiang/\n 104. qq价值评估：http://www.atool.org/qq.php\n 105. 360中国网络诈骗地图：http://vis.360.cn/open/fishsite\n 106. norse网络攻击地图：http://map.norsecorp.com/\n 107. 卡巴斯基网络攻击地图：https://cybermap.kaspersky.com/\n 108. 货币汇率查询：http://huilv.niuchaxun.com/\n 109. 电费计算器：http://dianfei.niuchaxun.com/\n 110. 每日油价查询（国内）：http://youjia.niuchaxun.com/\n 111. 世界时差查询：http://shicha.niuchaxun.com/\n 112. 查询地铁路线（大陆+台湾香港）：http://map.baidu.com/subways/\n 113. 电脑系统进程查询：http://process.niuchaxun.com/\n 114. 全球被黑站点统计：http://www.hack-cn.com/archive\n 115. 检测浏览器内核版本：http://liulanmi.com/labs/core.html\n 116. 检测浏览器版本号：https://aboutmybrowser.com/r5v01nyz\n 117. 查询qq好友空间背景音乐（1）：http://www.koukoucha.com/music/\n 118. 查询qq好友空间背景音乐（2）：https://www.feifeiboke.com/qqmusic/\n 119. 检测图片是否被ps：http://fotoforensics.com/\n 120. 莆田系医院分布图：https://wandergis.com/hospital-viz/index.htm\n 121. ★google缓存网页快照大全：http://cachedview.com/index.php?lang=zh#\n 122. 百度云分享失效重链：http://pan.baidu.com/share/home?uk=输入分享失效数字\n 123. 佛山实时公交在线查询：http://www.oooxo.com/\n 124. 12306帐号泄露查询：http://www.atool.org/12306.php\n 125. 账号密码泄露查询（1）：https://qq.mima.re/\n 126. 账号密码泄露查询（2）：https://haveibeenpwned.com/\n 127. 在线屏幕测试：http://pingmu.zh-ang.com/\n 128. 显示屏分辨率检测：http://www.3464.com/tools/displayresolution/\n 129. lol英雄联盟查询助手：http://vip.ihuan.me/lol.htm\n 130. 查询手机imei码信息：http://www.imei8.net/\n 131. 在线识别音乐歌名（beta）：http://www.mooma.sh/\n 132. “车来了”网页版：【蓝色版】【绿色版】\n 133. 在线接收手机短信（国外号码1）：http://receivefreesms.com/\n 134. 在线接收手机短信（国外号码2）：【备用网址1】【备用网址2】【备用网址3】\n 135. 在线识别动漫图（1）：http://saucenao.com/\n 136. 在线识别动漫图（2）：https://pic.nyaso.com/search.html\n 137. 特殊符号大全：http://cn.piliapp.com/symbol/\n 138. 微博图片反查（1）：http://wbimg.huyuaning.com/\n 139. 微博图片反查（2）：http://www.sq520.net/weibo-fancha/\n 140. 微博图片反查（3）：https://toolmao.com/tool/img2weibo/\n 141. 微博图片反查（4）：https://weibo.2333.me/\n 142. 在线免费代理ip：https://ip.ihuan.me/\n\n----------------------------------------\n\n\n * # 在线工具网站\n\n----------------------------------------\n\n 1.   在线工具大全：http://tool.oschina.net/\n 2.   在线视频/图片/音频/文件转换工具：http://www.fileconverto.com/\n 3.   中国大陆身份证大全（1）：http://shenfenzheng.293.net/\n 4.   中国大陆身份证大全（2）：http://idcard.niuchaxun.com/\n 5.   中国大陆身份证大全（3）：http://tool7001.com/\n 6.   10个国家身份生成：http://www.haoweichi.com/\n 7.   在线photoshop：http://www.webps.cn/\n 8.   在线百度word：http://word.baidu.com/\n 9.   ★在线谷歌office：https://www.google.cn/intl/zh-cn/docs/about/\n 10.  在线微软office：https://www.office.com/\n 11.  在线txt记事本：【官方网站1】【官方网站2】\n 12.  在线电话轰炸机：【呼之官网1】【呼之官网2】【呼之官网3】\n 13.  在线短信轰炸机（1）：http://zha.vvoso.com/\n 14.  在线短信轰炸机（2）：http://tools.wx6.org/duanxinhongzhaji/\n 15.  在线短信轰炸机（3）：http://www.5c5x.com/hzj/\n 16.  在线短信轰炸机（4）：http://peng3.com/sms/ 【验证码：ydjy】\n 17.  在线短信轰炸机（5）：http://eateat.net/\n 18.  在线短信轰炸机（6）：http://sms.in0.cc/\n 19.  在线短信轰炸机（7）：【普通模式】【迷你模式】【无敌模式】\n 20.  在线短信轰炸机（8）：http://zgtv.spo38.igeek.gq/aip/\n 21.  在线短信轰炸机（9）：http://zhilmw.go4c.arebz.co/dx/index.php\n 22.  在线装逼（1）：http://deepba.com/\n 23.  在线装逼（2）：http://www.zhuangbi.info/\n 24.  zeronet在线代理访问：https://zero.acelewis.com/\n 25.  在线代理ip：https://proxy.coderbusy.com/zh-cn\n 26.  在线代理（1）：https://sg1.mm.4night.win:991/index.php\n 27.  在线代理（2）：https://r.t.renren2017.com/\n 28.  在线代理（3）：http://www.youbiyao.net/\n 29.  在线代理（4）：https://idaili.club/\n 30.  在线代理（5）：http://sosovo.com/\n 31.  在线代理（6）：【备用网址1】【备用网址2】【备用网址3】\n 32.  在线查找病毒（1）：http://www.virscan.org/\n 33.  在线查找病毒（2）：https://virusscan.jotti.org/\n 34.  在线查找病毒（3）：https://www.virustotal.com/zh-cn/\n 35.  在线查询病毒（4）：http://habo.qq.com/\n 36.  在线查询病毒（5）：http://scan.shouji.360.cn/\n 37.  在线查询病毒（6）：http://m.qq.com/security_lab/scans_online.jsp\n 38.  在线查询病毒（7）：https://x.threatbook.cn/\n 39.  在线查询病毒（8）：http://online.drweb.com/\n 40.  金山毒霸网络版（行业专用版）：http://210.45.224.52:6868/\n 41.  网站安全查询（1）：http://webscan.360.cn/\n 42.  网站安全查询（2）：http://onlinelinkscan.com/\n 43.  网站安全查询（3）：【中国版本】【俄罗斯版本】\n 44.  网站安全查询（4）：https://app.webinspector.com/\n 45.  在线短网址还原（1）：http://dwz.aidmin.cn/restore.php\n 46.  在线短网址还原（2）：http://baidu.nu/index.php?m=public&a=reurl\n 47.  在线短网址还原（3）：http://duanwangzhihuanyuan.51240.com/\n 48.  在线短网址大全（1）：【备用网址1】【备用网址2】\n 49.  在线短网址大全（2）：http://www.ft12.com/\n 50.  在线短网址大全（3）：https://goo.gd/\n 51.  在线短网址大全（4）：【备用网址1】【备用网址2】\n 52.  dwz.mn短网址：http://www.dwz.mn/\n 53.  百度短网址：http://dwz.cn/\n 54.  冰枫短网址：https://ibf.tw/\n 55.  新浪微博短网址（1）：http://www.atool.org/shorturl.php\n 56.  新浪微博短网址（2）：http://surl.sinaapp.com/\n 57.  缩我短网址：http://suo.im/\n 58.  硬是要缩短网址：https://4fun.tw/\n 59.  980.so短网址：http://980.so/\n 60.  rrd短网址：http://rrd.me/\n 61.  佳鑫短网址：http://x28.me/\n 62.  i-to短网址：http://i-to.cc/\n 63.  晨旭长网址：http://biubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiubiu.com/index.html\n 64.  随机1小时vpn：http://my.0ff0.net/\n 65.  随机24小时pac：https://freepac.co/\n 66.  随机24小时ss：http://freess.org/\n 67.  ddos网页端（1）：http://quezstresser.com/\n 68.  ddos网页端（2）：http://orcahub.com/\n 69.  在线网络电视（1）：http://www.shiting5.com/hd/\n 70.  在线网络电视（2）：http://www.shiting5.com/tv/cn/cctv/\n 71.  在线网络电视（3）：http://tv.shebao5.com/\n 72.  在线网络电视（4）：http://zb.dsqndh.com/【仅支持手机浏览器带视频播放器】\n 73.  在线网络电视（全球1）：【英文版】【中文版】\n 74.  在线网络电视（全球2）：http://tvopedia.com/\n 75.  在线网络电视（全球3）：http://rushplayer.com/wapstream.aspx?v=1.54&t=2&g=282&app=1000【仅支持手机浏览器带视频播放器】\n 76.  在线网络电视（港澳台+韩国）：http://www.cietv.com/images/img/100/\n 77.  在线网络电视（央视+各省卫视）：http://ivi.bupt.edu.cn/\n 78.  在线json数据解析器：http://www.toolmao.com/json-parser-jiexi\n 79.  在线免费打电话（1）：http://ievaphone.com/\n 80.  在线免费打电话（2）：https://call2friends.com/\n 81.  在线免费打电话（3）【限制13个国家】：http://makefreecallsonline.com/countries.php\n 82.  在线免费发短信（1）：http://www.afreesms.com/\n 83.  在线免费发短信（2）：http://sendsmsonlineforfree.com/countries.php\n 84.  在线免费发短信（3）【限制英文】：https://globfone.com/sms/\n 85.  在线免费发短信（4）：http://www.socialland.net/sendsms.php\n 86.  在线图片上传大全：http://upload.otar.im/\n 87.  微博图床上传（1）：http://pic.xiaojianjian.net/\n 88.  微博图床上传（2）：http://tool.mkblog.cn/tuchuang/\n 89.  在线图片上传（1）：http://chuantu.biz/\n 90.  在线图片上传（2）：【官方新版】【官方旧版】\n 91.  在线图片上传（3）：http://www.tietuku.com/upload\n 92.  在线图片上传（4）：http://tw.picwindow.com/\n 93.  在线图片上传（5）：http://www.wailian.work/\n 94.  在线图片上传（6）：https://img.vim-cn.com/\n 95.  在线图片上传（7）：http://upload.ouliu.net/\n 96.  在线图片上传（8）：https://sm.ms/\n 97.  在线图片上传（9）：https://ooxx.ooo/upload\n 98.  在线图片上传（10）：https://pic.tink.im/\n 99.  在线图片上传（11）：http://ih.pwcong.xyz:8080/\n 100. 在线图片上传（12）：https://img.fghrsh.net/\n 101. 在线压缩图片（1）：http://zhitu.isux.us/\n 102. 在线压缩图片（2）：http://www.atool.org/pngcompression.php\n 103. 在线音乐上传（1）：http://up.jqzone.com/\n 104. 在线音乐上传（2）：http://picosong.com/\n 105. 在线音乐上传（3）：http://tianyan999.com/user/up.php\n 106. 音乐查询和在线播放（1）：https://music.liuli.lol/\n 107. 音乐查询和在线播放（2）：http://music.2333.me/\n 108. 音乐查询和在线播放（3）：http://music.ifkdy.com/\n 109. 音乐查询和在线播放（4）：http://music.xrbk.top/\n 110. 音乐查询和在线播放（5）：https://www.wlhrt.cn/tool/mp3/\n 111. 音乐查询和在线播放（6）：http://www.liumingye.cn/tools/music/\n 112. 音乐查询和在线播放（7）：http://mp3.vsucai.cn/\n 113. 在线音乐下载（1）：http://music.dsqndh.com/\n 114. 在线音乐下载（2）：http://music.cn.tn/\n 115. vr全景拍摄：http://720yun.com/\n 116. 360水滴摄像头直播：http://jia.360.cn/pc/\n 117. 百度云摄像头直播：http://kankan.baidu.com/\n 118. 萤石摄像头直播：http://square.ys7.com/index\n 119. 爱耳目摄像头直播：http://www.iermu.com/zhibo\n 120. viewerframe摄像头：http://webcams.gosnippy.com/\n 121. ★全球网络ip摄像头直播：http://www.insecam.org/\n 122. youtube音乐下载：http://i-dl.net/\n 123. youtube视频转换工具（1）：http://2conv.com/cn/\n 124. youtube视频转换工具（2）：https://savemedia.com/\n 125. youtube视频转换工具（3）：http://tw.getv-go.com/\n 126. youtube视频转换工具（4）：http://www.dirpy.com/\n 127. youtube视频转换工具（5）：https://y2mate.com/zh-cn/\n 128. 新浪微博视频解析转换工具：http://www.weibovideo.com/\n 129. bilibili哔哩哔哩视频解析转换工具（1）：http://www.ibilibili.com/\n 130. bilibili哔哩哔哩视频解析转换工具（2）：http://www.bilibilijj.com/\n 131. 国内视频解析转换工具（1）：【电信线路用户】【联通线路用户】\n 132. 国内视频解析转换工具（2）：http://www.flvcd.com/index.htm\n 133. 国内视频解析转换工具（3）：http://www.shokdown.com/\n 134. 国内下载地址解析转换工具（1）：http://xiazaidizhi.niuchaxun.com/\n 135. 国内下载地址解析转换工具（2）：http://www.iqshw.com/url/\n 136. 国内下载地址解析转换工具（3）：http://tool.114la.com/code/urlconvert/\n 137. 国内下载地址解析转换工具（4）：https://591mov.com/zh-hans/url_trans/\n 138. 在线播放vip会员电影视频（1）：http://www.liumingye.cn/tools/video/\n 139. 在线播放vip会员电影视频（2）：http://v.laod.cn/\n 140. 在线播放vip会员电影视频（3）：http://tv.dsqndh.com/\n 141. 在线播放vip会员电影视频（4）：http://guikea.cn/vpj/index.html\n 142. 在线播放vip会员电影视频（5）：https://www.dujin.org/video/\n 143. 在线播放vip会员电影视频（6）：http://zwyqzd.czqin.com/jxa/vip.php\n 144. 在线播放vip会员电影视频（7）：http://www.chepeijian.cn/jiexi.html\n 145. 在线播放vip会员电影视频（8）：【备用网址1】【备用网址2】【备用网址3】\n 146. 在线播放vip会员电影视频（输入c值）：【备用网址1】【备用网址2】\n 147. 在线bt种子链接磁力云播放（1）：http://apiv.ga/magnet/\n 148. 在线bt种子链接磁力云播放（2）：http://www.aisiyunbo.xyz/magnetget.html\n 149. 种子转换磁力链接（1）：https://www.torrentkitty.tv/\n 150. 种子转换磁力链接（2）：http://www.torrent.org.cn/\n 151. 虚假磁链生成器：http://bt.papapoi.com/\n 152. 在线百度输入法（1）：http://shurufa.niuchaxun.com/\n 153. 在线谷歌输入法（2）：http://www.google.cn/inputtools/try/\n 154. 在线计算器（1）：http://jisuanqi.niuchaxun.com/\n 155. 在线计算机（2）：http://tool.114la.com/code/jisuanqi/\n 156. 在线火星文转换：http://huoxingwen.niuchaxun.com/\n 157. 在线拆字工具：http://chaizi.niuchaxun.com/\n 158. 在线mp3音乐外链地址（1）：http://www.haoduoge.com/\n 159. 在线mp3音乐外链地址（2）：http://www.111ttt.com/up/\n 160. 在线mp3音乐外链地址（3）：http://94001.com/\n 161. 在线mp3音乐外链地址（4）：http://www.xuenb.com/tools/mp3/\n 162. 在线mp3音乐外链地址（5）：http://zwyqzd.czqin.com/jxa/mp3.php\n 163. 二维码生成器：http://www.3464.com/tools/qrcodemaster/\n 164. 二维码生成器大全（1）：http://www.34qr.com/\n 165. 二维码生成器大全（2）：http://www.wwei.cn/\n 166. 二维码生成器大全（3）：http://www.qrstuff.com/\n 167. 二维码生成器大全（4）：https://charlie.qrcreate.h5.ersansan.cn/\n 168. 生成微信群用就二维码：https://yongjiuma.com/\n 169. 草料二维码扫描器：https://cli.im/deqr\n 170. 在线倒计时：http://xxhd.net.cn/\n 171. 在线制作gif：http://www.gif5.net/\n 172. 在线logo制作：http://www.logowu.com/\n 173. 在线制作dj电台：http://www.partycloud.fm/\n 174. 在线google+头像产生器：http://gplus.orinx.com/\n 175. 谷歌apk下载器：https://apps.evozi.com/apk-downloader/\n 176. 在线制作圣诞头像：http://xmas.noapp.net/avatarmaker.aspx\n 177. 在线解压文件：http://www.wobzip.org/\n 178. 在线文件上传（1）：https://userscloud.com/\n 179. 在线文件上传（2）：https://bitsend.jp/\n 180. 在线文件上传（3）：http://www.72blog.com/tu/\n 181. 在线种子上传：http://www.360xixi.com/\n 182. 各种在线翻译：http://qq.ip138.com/tran.htm\n 183. 在线各卫星看地球：http://www.flashearth.com/\n 184. 在线检测电脑配置：http://test.mydrivers.com/install.htm\n 185. 在线手机性价检测：http://www.3464.com/tools/mpptesting/test.asp【仅支持qq浏览器和uc浏览器】\n 186. 在线测网速（1）：http://wangsu.niuchaxun.com/\n 187. 在线测网速（2）：http://tool.114la.com/live/speed/\n 188. 在线测网速（3）：http://www.kmguolv.com/cesu/\n 189. 在线测网速（4）：http://wangsu.baishicha.com/\n 190. 在线测网速：【中国移动】【中国联通】【中国电信(新)】【中国电信(旧)】【香港宽频（旧）】【香港宽频（新）】【台湾宽频】\n 191. 网站站长查询（1）：http://www.webmasterhome.cn/\n 192. 网站站长查询（2）：http://www.17ce.com/\n 193. 网站站长查询（3）：http://tool.chinaz.com/\n 194. 网站站长查询（4）：http://www.super-ping.com/sc.html\n 195. 网站站长查询（5）：https://asm.ca.com/zh_cn/ping.php\n 196. 腾讯qq第三方授权管理：http://connect.qq.com/toc/auth_manager\n 197. 腾讯qq联系人恢复系统：http://huifu.qq.com/\n 198. 腾讯增值服务停用关闭：https://kf.qq.com/touch/mobileqq/service_cancel.html\n 199. 检测密码强度（1）：http://mima.niuchaxun.com/\n 200. 检测密码强度（2）：https://howsecureismypassword.net\n 201. 检测浏览器1（javascript 性能）：【★谷歌v8版】【sunspider版】\n 202. 检测浏览器2（robohornet pro测试）：【微软fishbowl】【微软fishietank】\n 203. 检测浏览器3（peacekeeper 测试）：http://peacekeeper.futuremark.com/run.action\n 204. 检测浏览器4（html5相关测试）：http://html5test.com/\n 205. ★检测apk在线签名校验：https://apkpure.com/apk-signature-verification\n 206. 在线安卓软件反编译：http://www.javadecompilers.com/apk\n 207. 在线favicon.ico图标制作：http://www.atool.org/ico.php\n 208. 在线获取网站favicon.ico图标：http://g.soz.im/输入完整url网址\n 209. 在线文字识别转换：http://ocr.wdku.net/\n 210. 奇迹暖暖在线工具：http://seal100x.github.io/nikkiup2u3/\n 211. 在线邮件发送（含文件）：https://www.send18.com/\n 212. 在线制作绘图画稿（画画）：http://kokuban.in/mypage/draw/skeb\n 213. 在线听大暴雨声音：http://raining.fm/\n 214. pdf文件转换和编辑：https://lightpdf.com/zh/\n 215. 微信公众平台内容编辑器：http://wx.atool.org/\n 216. 加密解密摩斯密码：http://www.atool.org/morse.php\n 217. qq空间写说说代码生成：http://tool.vvoso.com/tool/kjdm/\n 218. qq消息撤回名片生成（qq群名片反字）：http://qun.vvoso.com/\n 219. 在线摄像头自拍：https://webcamtoy.com/zh/\n 220. 自定义qq分享生成器：http://qqshare.papapoi.com/\n 221. 在线超级seo外链工具：http://seo.dmeng.net/\n 222. qq反向名字生成器：http://qq.papapoi.com/\n 223. 在线qq空间说说刷赞：http://ssz.lxzan.com/\n 224. 【yopmail】临时邮箱（1）：【@yopmail.com官网】【@yopmail.fr官网】\n 225. 【tempmail】临时邮箱（2）：https://temp-mail.org/zh/\n 226. 10分钟临时邮箱（3）：【电脑版】【手机版】\n 227. 10分钟临时邮箱（4）：【@bccto.me邮箱】【@mail.bccto.me邮箱】\n 228. 【查错网】临时邮箱（5）：http://24mail.chacuo.net/\n 229. 在线伪造邮件邮箱发送（1）：http://tool.chacuo.net/mailanonymous\n 230. 在线伪造邮件邮箱发送（2）：https://ihuan.me/mail\n 231. 在线匿名邮件发送：http://tool.chacuo.net/mailsend\n 232. 在线百度关键字搜索生成：https://buhuibaidu.me/\n 233. 在线生成圣诞帽头像：http://hat.svvme.com/\n 234. 在线微信支付宝收款码合成：http://heyfox.herokuapp.com/\n 235. 在线腾讯人工qq客服：http://crm2.qq.com/page/portalpage/wpa.php?%20uin=40012345&f=1&ty=1&ap=000011:400793:|m:13|f:kfxd37x\n 236. 美图秀秀批处理图片：http://xiuxiu.web.meitu.com/plugin/batch/taobao.html\n\n----------------------------------------\n\n * 在线福利和良心网站\n\n----------------------------------------\n\n 1.  免费申请支付宝收钱码：https://b.alipay.com/settling/tc/entry.htm\n 2.  会员分享网（1）：http://www.fenxiangdashi.com/\n 3.  会员分享网（2）：http://www.123huodong.com/zhanghaofenxiang/\n 4.  会员分享网（3）：http://www.hot3000.com/\n 5.  会员分享网（4）：http://www.vipzhanghao.com/\n 6.  会员分享网（5）：http://www.xlcun.com/\n 7.  会员分享网（6）：http://vip.ihuan.me/\n 8.  会员分享网（7）：http://www.zhanghaofen.com/\n 9.  迅雷会员分享（1）：http://www.jxaxs.com/xunlei/\n 10. 迅雷会员分享（2）：http://www.521xunlei.com/\n 11. 迅雷会员分享（3）：http://www.wantsee.cn/\n 12. 迅雷会员分享（4）：http://xlfans.com/\n 13. 迅雷会员分享（5）：http://www.laobinggun.com/forum-37-1.html\n 14. 迅雷会员分享（6）：http://www.fenxs.com/category/gongxiang\n 15. 迅雷会员分享（7）：http://www.xunleihuiyuan.net/vip/\n 16. 爱奇艺会员分享（1）：http://www.zqnf.com/iqiyimianfeihuiyuan.htm\n 17. 爱奇艺会员分享（2）：http://myvipbbs.com/forum-2-1.html\n 18. 爱奇艺会员分享（3）：http://www.fenxiangdashi.com/aiqiyi/\n 19. 优酷土豆会员分享：http://www.vipdage.com/\n 20. 115会员分享网：http://in115.com/\n 21. 在线黑白图标：http://iconmonstr.com/\n 22. 在线图标logo大全：http://megaicons.net/\n 23. 特别安卓软件（1）：http://onlineapk.com/\n 24. apkpure下载谷歌商店软件：【com域名中文版网站】【com域名中文版谷歌apk下载器】【co域名网站】【co域名谷歌apk下载器】\n 25. apksum下载谷歌商店软件：https://www.apksum.com/\n 26. 第三方苹果商店app下载：https://www.appaddict.org/\n 27. zd423优化软件：http://www.zdfans.com/\n 28. 919pt特别软件：http://www.919pt.com/\n 29. crx4chrome扩展程序：http://www.crx4chrome.com/\n 30. 谷歌扩展程序下载器（1）：http://chrome-extension-downloader.com/\n 31. 谷歌扩展程序下载器（2）：http://crx.2333.me/\n 32. 谷歌apk软件下载器（1）：https://apps.evozi.com/apk-downloader/\n 33. 谷歌apk软件下载器（2）：https://androidappsapk.co/apkdownloader/\n 34. ★谷歌地球背景壁纸：http://earthview.withgoogle.com/\n 35. 赛风psiphon（官方）：【备用官网1】【备用官网2】\n 36. 蓝灯lantern（github）：【电脑版下载】【安卓版下载】\n 37. 官方rom（1）：http://www.cnroms.com/\n 38. 官方rom（2）：http://www.sxrom.com/\n 39. 官方rom（3）：http://www.muzisoft.com/roms/\n 40. msdn，我告诉你：http://www.itellyou.cn/\n 41. 二次元动漫：http://www.2animx.com/\n 42. omegle在线陌生人聊天：http://www.omegle.com/\n 43. 触宝电话国际长途邀请码：http://dialer-cdn.cootekservice.com/dialer/free-call/international/invitation_code/index.html?plg_nld=1&plg_uin=1&plg_auth=1&plg_nld=1&plg_usr=1&plg_vkey=1&plg_dev=1&from=groupmessage&isappinstalled=0\n 44. 中国联通手机营业厅：https://m.10010.com\n 45. 中国联通一起沃：【登录入口】【每日签到流量】【每日领流量红包】\n 46. 中国联通“免费网龄升级计划”：http://iservice.10010.com/e4/transact/basic/net_age_iframe.html\n 47. 盛天网盘（国内）：http://pan.stnts.com/【ps：这里注册再互送20gb永久空间！！！】\n 48. pcloud云盘（国外）：https://my.pcloud.com/\n 49. 中国版youtube海外视频：https://www.fantasy.tv/\n 50. 在线yy4480高清影院（1）：【官网网址1】【备用网址2】【备用网址3】\n 51. 在线爱看高清影院（2）：【官网网址1】【备用网址2】\n 52. 萌人物电影电视剧大片网（1）：http://www.mrenwu.com/\n 53. 酷播网电影电视剧大片网（2）：http://www.kb20.cc/\n 54. 9080电影电视剧大片网（3）：http://www.9080dy.com/\n 55. 有家影院电影电视剧大片网（4）：http://www.youjiady.com/\n 56. 牛b四十电影电视剧大片网（5）：http://www.nb40.com/\n 57. 80手机电影电视剧大片网（6）：http://www.80s.tw/\n 58. 大猫电影电视剧大片网（7）：http://www.h6080.com/\n 59. 琪琪看片电影电视剧大片网（8）：http://www.77kp.com/\n 60. 影视大片电影电视剧大片网（9）：http://www.yingshidaquan.cc/\n 61. 神马影院电影电视剧大片网（10）：http://www.ilaoziys.com/\n 62. 网盘相册笔记大全：http://www.benpig.com/photo.htm\n 63. fun dns：http://www.fundns.cn/",charsets:{cjk:!0},createdTime:1646040424e3,updateTime:"February 28, 2022 09:27",updateTimeStamp:1646040424e3,createTime:"February 28, 2022 09:27",createTimeStamp:1646040424e3,contributors:[]},{frontmatter:{layout:"Blog"},regularPath:"/article/",key:"v-6453f364",path:"/article/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog"},regularPath:"/star/",key:"v-4340f7e8",path:"/star/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog"},regularPath:"/encrypt/",key:"v-7d484ebf",path:"/encrypt/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog"},regularPath:"/slide/",key:"v-2470be33",path:"/slide/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog"},regularPath:"/timeline/",key:"v-6319eb4e",path:"/timeline/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Tag"},regularPath:"/tag/",key:"v-b1564aac",path:"/tag/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Category"},regularPath:"/category/",key:"v-28e6393c",path:"/category/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Java Tag"},regularPath:"/tag/Java/",key:"v-18082c7a",path:"/tag/Java/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"IDEA Tag"},regularPath:"/tag/IDEA/",key:"v-184030a4",path:"/tag/IDEA/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"daily Tag"},regularPath:"/tag/daily/",key:"v-904ccf40",path:"/tag/daily/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"GitHub Tag"},regularPath:"/tag/GitHub/",key:"v-53761ec2",path:"/tag/GitHub/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Git Tag"},regularPath:"/tag/Git/",key:"v-32555732",path:"/tag/Git/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Linux Tag"},regularPath:"/tag/Linux/",key:"v-e14f25f6",path:"/tag/Linux/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Euserv Tag"},regularPath:"/tag/Euserv/",key:"v-03ba43c2",path:"/tag/Euserv/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Nginx Tag"},regularPath:"/tag/Nginx/",key:"v-dab8e1c2",path:"/tag/Nginx/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"NodeJS Tag"},regularPath:"/tag/NodeJS/",key:"v-61ac368c",path:"/tag/NodeJS/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Maven Tag"},regularPath:"/tag/Maven/",key:"v-dec02164",path:"/tag/Maven/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Mysql Tag"},regularPath:"/tag/Mysql/",key:"v-dc1e19d2",path:"/tag/Mysql/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Openssl Tag"},regularPath:"/tag/Openssl/",key:"v-95be2c92",path:"/tag/Openssl/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"other Tag"},regularPath:"/tag/other/",key:"v-68abd36e",path:"/tag/other/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"蓝奏 Tag"},regularPath:"/tag/%E8%93%9D%E5%A5%8F/",key:"v-fcf89e02",path:"/tag/蓝奏/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Script Tag"},regularPath:"/tag/Script/",key:"v-7812da8c",path:"/tag/Script/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Code Tag"},regularPath:"/tag/Code/",key:"v-18c14150",path:"/tag/Code/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"CDN Tag"},regularPath:"/tag/CDN/",key:"v-325a1928",path:"/tag/CDN/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Study Tag"},regularPath:"/tag/Study/",key:"v-c82f6a60",path:"/tag/Study/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Tools Tag"},regularPath:"/tag/Tools/",key:"v-c557de04",path:"/tag/Tools/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Java Category"},regularPath:"/category/Java/",key:"v-25b8d671",path:"/category/Java/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"IDEA Category"},regularPath:"/category/IDEA/",key:"v-259cd45c",path:"/category/IDEA/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"daily Category"},regularPath:"/category/daily/",key:"v-848b7d1c",path:"/category/daily/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"GitHub Category"},regularPath:"/category/GitHub/",key:"v-09aa97f0",path:"/category/GitHub/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Git Category"},regularPath:"/category/Git/",key:"v-6c9119f9",path:"/category/Git/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Linux Category"},regularPath:"/category/Linux/",key:"v-d58dd3d2",path:"/category/Linux/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Euserv Category"},regularPath:"/category/Euserv/",key:"v-97515166",path:"/category/Euserv/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"linux Category"},regularPath:"/category/linux/",key:"v-6857ac12",path:"/category/linux/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"other Category"},regularPath:"/category/other/",key:"v-5cea814a",path:"/category/other/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Script Category"},regularPath:"/category/Script/",key:"v-7a2b0be8",path:"/category/Script/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Code Category"},regularPath:"/category/Code/",key:"v-255c4c06",path:"/category/Code/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Study Category"},regularPath:"/category/Study/",key:"v-bc6e183c",path:"/category/Study/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Blog",title:"Tools Category"},regularPath:"/category/Tools/",key:"v-b9968be0",path:"/category/Tools/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 2 - Java | Tag"},regularPath:"/tag/Java/page/2/",key:"v-e3c98acc",path:"/tag/Java/page/2/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 2 - other | Tag"},regularPath:"/tag/other/page/2/",key:"v-6a410b54",path:"/tag/other/page/2/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 3 - other | Tag"},regularPath:"/tag/other/page/3/",key:"v-6a410b73",path:"/tag/other/page/3/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 4 - other | Tag"},regularPath:"/tag/other/page/4/",key:"v-6a410b92",path:"/tag/other/page/4/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 5 - other | Tag"},regularPath:"/tag/other/page/5/",key:"v-6a410bb1",path:"/tag/other/page/5/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 2 - Java | Category"},regularPath:"/category/Java/page/2/",key:"v-61494e2c",path:"/category/Java/page/2/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 2 - other | Category"},regularPath:"/category/other/page/2/",key:"v-06552bfc",path:"/category/other/page/2/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 3 - other | Category"},regularPath:"/category/other/page/3/",key:"v-06552bbe",path:"/category/other/page/3/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 4 - other | Category"},regularPath:"/category/other/page/4/",key:"v-06552b80",path:"/category/other/page/4/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 5 - other | Category"},regularPath:"/category/other/page/5/",key:"v-06552b42",path:"/category/other/page/5/",readingTime:{minutes:0,words:0},headersStr:null,content:"",normalizedContent:"",charsets:{}}],themeConfig:{logo:"/logo.svg",hostname:"https://xlc520.github.io/",wordPerminute:120,author:"xlc520",repo:"https://github.com/xlc520/xlc520.github.io",search:!0,searchMaxSuggestions:10,searchPlaceholder:"搜索...",editLinks:!0,editLinkText:"在 GitHub 上编辑此页",pageInfo:["author","time","category","tag","word","reading-time"],photoSwipe:!0,seo:!1,nav:[{text:"Home",link:"/",icon:"home"},{text:"学习",link:"/study/",icon:"note"},{text:"Java",link:"/java/"},{text:"Linux",link:"/linux/"},{text:"脚本",link:"/script/"},{text:"工具",link:"/tools/"},{text:"源码",link:"/source_code/"},{text:"Git",link:"/git/"},{text:"日常",link:"/daily/"},{text:"其他",link:"/other/"},{text:"DownGit",link:"https://git.xulc.workers.dev/"}],sidebarDepth:2,displayAllHeaders:!0,activeHeaderLinks:!0,tip:"提示",warning:"注意",danger:"警告",notFound:["这里什么都没有","我们怎么到这来了？","这是一个 404 页面","看起来我们进入了错误的链接"],backToHome:"返回首页",openInNewWindow:"在新窗口打开",updateTime:!0,backToTop:!0,copyCode:{showInMobile:!0,duration:2e3},git:{contributor:!1,timezone:"Asia/Shanghai"},locales:{"/":{lang:"zh-CN",selectText:"选择语言",label:"简体中文",meta:{contributor:"贡献者",editLink:"编辑此页",updateTime:"上次编辑于"},themeColor:{themeColor:"主题色",themeMode:"主题模式"},encrypt:{title:"请输入密码",errorHint:"请输入正确密码"},error404:{hint:["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],back:"返回上一页",home:"带我回家"},blog:{article:"文章",articleList:"文章列表",category:"分类",tag:"标签",timeline:"时间轴",timelineText:"昨日不在",allText:"全部",intro:"个人介绍",star:"收藏",slides:"幻灯片",encrypt:"加密"}}},blog:{intro:"/intro",sidebarDisplay:"always",autoExcerpt:!0,timeline:!0,links:{Github:"https://github.com/xlc520",Gitee:"https://gitee.com/xulch",Baidu:"https://baidu.com"}},footer:{display:!0,content:"业精于勤而荒于嬉，行成于思而毁于随",medialink:{Github:"https://github.com/xlc520",Gitee:"https://gitee.com/xulch",Baidu:"https://baidu.com"}},copyright:{status:"global"},mdEnhance:{enableAll:!0,align:!0,lineNumbers:!0,presentation:{plugins:["highlight","math","search","notes","zoom","anything","audio","chalkboard"]}},pwa:{favicon:"/favicon.ico",cachePic:!0,apple:{icon:"/assets/icon/apple-icon-152.png",statusBarColor:"black"},msTile:{image:"/assets/icon/ms-icon-144.png",color:"#ffffff"},manifest:{icons:[{src:"/assets/icon/chrome-mask-512.png",sizes:"512x512",purpose:"maskable",type:"image/png"},{src:"/assets/icon/chrome-mask-192.png",sizes:"192x192",purpose:"maskable",type:"image/png"},{src:"/assets/icon/chrome-512.png",sizes:"512x512",type:"image/png"},{src:"/assets/icon/chrome-192.png",sizes:"192x192",type:"image/png"}],shortcuts:[{name:"Guide",short_name:"Guide",url:"/guide/",icons:[{src:"/assets/icon/guide-maskable.png",sizes:"192x192",purpose:"maskable",type:"image/png"},{src:"/assets/icon/guide-monochrome.png",sizes:"192x192",purpose:"monochrome",type:"image/png"}]}]}},iconPrefix:"icon-"},locales:{}};t(167);var lt=t(10),ct=i.a.extend({name:"CommentService",components:{Valine:lt.a,Waline:lt.a},data:()=>({options:{type:"disable"}}),computed:{pluginEnable(){return"disable"!==this.options.type&&(this.$frontmatter.comment||!1!==this.options.comment&&("valine"===this.options.type||!1!==this.$frontmatter.comment))}}}),pt=Object(Pe.a)(ct,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{directives:[{name:"show",rawName:"v-show",value:n.pluginEnable,expression:"pluginEnable"}],staticClass:"comments-wrapper"},["valine"===n.options.type?t("Valine",{attrs:{"valine-config":n.options}}):"waline"===n.options.type?t("Waline",{attrs:{"waline-config":n.options}}):"vssue"===n.options.type?t("Vssue",{attrs:{title:n.$title}}):n._e()],1)}),[],!1,null,null,null).exports;var ut=({Vue:n})=>{n.component("CommentService",pt)},dt=t(26);let ht;var mt=i.a.extend({name:"BackToTop",data:()=>({scrollTop:0}),computed:{display(){return!1!==this.$page.frontmatter.backToTop&&this.scrollTop>300},hint(){return dt.a[this.$localePath||"/"].backToTop}},mounted(){this.scrollTop=this.getScrollTop(),ht=Be()(()=>{this.scrollTop=this.getScrollTop()},100),window.addEventListener("scroll",ht)},beforeDestroy(){window.removeEventListener("scroll",ht)},methods:{getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,scrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}}),gt=(t(168),Object(Pe.a)(mt,(function(){var n=this.$createElement,e=this._self._c||n;return e("transition",{attrs:{name:"fade"}},[this.display?e("button",{staticClass:"back-to-top",attrs:{"aria-label":this.hint,"data-balloon-pos":"left"},on:{click:this.scrollToTop}},[e("svg",{attrs:{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M512 0C229.517 0 0 229.517 0 512s227.752 512 512 512c282.483 0 512-227.752 512-512C1024 229.517 794.483\n      0 512 0zM351.338 271.89h305.434c14.125 0 26.483 12.358 26.483 26.482s-12.358 26.483-26.483\n      26.483H351.338c-14.124 0-26.483-12.358-26.483-26.483 0-15.89 12.359-26.482 26.483-26.482z\n      m331.917 303.669c-12.358 12.358-33.545 12.358-45.903 0L531.42 471.393v270.124c0 14.124-12.359\n      26.483-26.483 26.483s-26.483-12.359-26.483-26.483v-271.89l-105.93 104.166c-12.36 12.359-33.546 12.359-45.904\n      0-12.359-12.359-12.359-31.78 0-45.903l155.365-151.835c7.062-7.062 14.124-8.827 22.952-8.827s15.89 3.53 22.952\n      8.827L683.255 527.89c12.359 15.89 12.359 35.31 0 47.669z",fill:"currentColor"}})])]):this._e()])}),[],!1,null,null,null).exports),vt=i.a.extend({name:"Badge",functional:!0,props:{type:{type:String,default:"tip"},text:{type:String,default:""},vertical:{type:String,default:"top"},color:{type:String,default:""}},render(n,{props:e,slots:t}){const i={class:["badge",e.type],style:{verticalAlign:e.vertical}};return e.color&&(i.class.push("diy"),i.style.backgroundColor=e.color,i["data-color"]=e.color),n("span",i,e.text||t().default)}}),ft=(t(169),Object(Pe.a)(vt,void 0,void 0,!1,null,"7b453e57",null).exports),bt=i.a.extend({name:"BreadCrumb",props:{show:{type:Boolean,default:!0},icon:{type:Boolean,default:!0},iconPrefix:{type:String,default:""}},computed:{enable(){const n=this.$page.frontmatter.breadcrumb;return(this.show&&!1!==n||!0===n)&&this.config.length>1},displayIcon(){const n=this.$page.frontmatter.breadcrumbIcon;return this.enable&&(this.icon&&!1!==n||!0===n)},config(){const n=[],{pages:e}=this.$site,t=this.getLinks(this.$route);for(let i=1;i<t.length;i++)for(let a=0;a<e.length;a++){const o=e[a];if(o.path===t[i]){n.push({title:o.title,icon:o.frontmatter.icon,url:o.path});break}}return n}},methods:{getLinks(n){const e=n.path.split("/"),t=[];let i="";return e.forEach((n,a)=>{a!==e.length-1?(i+=n+"/",t.push(i)):""!==n&&(i+=n,t.push(i))}),t}}}),wt=(t(170),Object(Pe.a)(bt,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("nav",{staticClass:"breadcrumb",class:{disable:!n.enable}},[n.enable?t("ol",{attrs:{vocab:"https://schema.org/",typeof:"BreadcrumbList"}},n._l(n.config,(function(e,i){return t("li",{key:e.url,class:{"is-active":n.config.length-1===i},attrs:{property:"itemListElement",typeof:"ListItem"}},[t("RouterLink",{attrs:{to:e.url,property:"item",typeof:"WebPage"}},[n.icon&&e.icon?t("i",{class:"iconfont "+n.iconPrefix+e.icon}):n._e(),n._v(" "),t("span",{attrs:{property:"name"}},[n._v(n._s(e.title))])]),n._v(" "),t("meta",{attrs:{property:"position",content:i+1}})],1)})),0):n._e()])}),[],!1,null,null,null).exports),yt=i.a.extend({name:"Pagination",model:{prop:"currentPage",event:"change"},props:{total:{type:Number,default:10},perPage:{type:Number,default:10},currentPage:{type:Number,default:1}},data:()=>({input:""}),computed:{totalPages(){return Math.ceil(this.total/this.perPage)},enable(){return Boolean(this.totalPages)&&1!==this.totalPages},displayLeftEllipsis(){return!(this.totalPages<7)&&this.currentPage>4},displayRightEllipsis(){return!(this.totalPages<7)&&this.currentPage<this.totalPages-3},indexs(){const{currentPage:n,totalPages:e}=this;let t=1,i=e;const a=[];e>=7&&(n<=4&&n<e-3?(t=1,i=5):n>4&&n>=e-3?(i=e,t=e-4):e>7&&(t=n-2,i=n+2));for(let n=t;n<=i;n++)a.push(n);return a},locales(){return{"/":{prev:"上一页",next:"下一页",navigate:"跳转到",button:"前往",errorText:"请输入 1 到 $page 之前的页码！"}}[this.$localePath||"/"]}},mounted(){const{index:n}=this.$route.query;this.navigate(n?Number(n):1)},methods:{navigate(n){const e=Object.assign({},this.$route.query);e.page===n.toString()||1===n&&!e.page||(this.$emit("change",n),1===n?delete e.page:e.page=n.toString(),this.$router.push({path:this.$route.path,query:e}))},jumpPage(n){const e=parseInt(n);e<=this.totalPages&&e>0?this.navigate(e):alert(this.locales.errorText.replace(/\$page/g,this.totalPages.toString()))}}}),xt=(t(171),Object(Pe.a)(yt,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"pagination-wrapper"},[n.enable?t("div",{staticClass:"pagination-list"},[t("div",{staticClass:"btn-group"},[n.currentPage>1?t("div",{staticClass:"prev",attrs:{role:"navigation",unselectable:"on"},on:{click:function(e){return n.navigate(n.currentPage-1)}}},[n._v("\n        "+n._s(n.locales.prev)+"\n      ")]):n._e(),n._v(" "),n.displayLeftEllipsis?t("div",{attrs:{role:"navigation"},on:{click:function(e){return n.navigate(1)}}},[n._v("\n        1\n      ")]):n._e(),n._v(" "),n.displayLeftEllipsis?t("div",{staticClass:"ellipsis"},[n._v("...")]):n._e(),n._v(" "),n._l(n.indexs,(function(e){return t("div",{key:e,class:{active:n.currentPage===e},attrs:{role:"navigation"},on:{click:function(t){return n.navigate(e)}}},[n._v("\n        "+n._s(e)+"\n      ")])})),n._v(" "),n.displayRightEllipsis?t("div",{staticClass:"ellipsis"},[n._v("...")]):n._e(),n._v(" "),n.displayRightEllipsis?t("div",{attrs:{role:"navigation"},on:{click:function(e){return n.navigate(n.totalPages)}}},[n._v("\n        "+n._s(n.totalPages)+"\n      ")]):n._e(),n._v(" "),n.currentPage<n.totalPages?t("div",{staticClass:"next",attrs:{role:"navigation"},on:{click:function(e){return n.navigate(n.currentPage+1)}}},[n._v("\n        "+n._s(n.locales.next)+"\n      ")]):n._e()],2),n._v(" "),t("div",{staticClass:"navigate-wrapper"},[t("label",{attrs:{for:"navigation-text"}},[n._v(n._s(n.locales.navigate)+": ")]),n._v(" "),t("input",{directives:[{name:"model",rawName:"v-model",value:n.input,expression:"input"}],attrs:{id:"navigation-text",type:"text"},domProps:{value:n.input},on:{keypress:function(e){return!e.type.indexOf("key")&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:n.jumpPage(n.input)},input:function(e){e.target.composing||(n.input=e.target.value)}}}),n._v(" "),t("button",{staticClass:"navigate",attrs:{role:"navigation",title:n.locales.button},on:{click:function(e){return n.jumpPage(n.input)}}},[n._v("\n        "+n._s(n.locales.button)+"\n      ")])])]):n._e()])}),[],!1,null,null,null).exports),Et=t(9),_t=i.a.extend({name:"ScreenFull",props:{enable:{type:Boolean,default:!0}},data:()=>({canFullscreen:!1,isFullscreen:!1}),mounted(){this.canFullscreen=Et.isEnabled&&this.enable},methods:{click(){Et.isEnabled&&Et.toggle().then(()=>{this.isFullscreen=Et.isFullscreen})}}}),St=(t(172),Object(Pe.a)(_t,(function(){var n=this.$createElement,e=this._self._c||n;return this.canFullscreen?e("button",{class:this.isFullscreen?"cancel-full-screen":"full-screen",attrs:{"aria-pressed":this.isFullscreen},on:{click:this.click}},[e("svg",{attrs:{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"}},[this.isFullscreen?e("path",{attrs:{d:"M778.46755555 78.62044445H247.92177778c-102.51377778 0-186.02666667 83.51288889-186.02666667 186.02666666v530.432c0 102.51377778 83.51288889 186.02666667 186.02666667 186.02666667h530.432c102.51377778 0 186.70933333-83.51288889 186.02666667-186.02666667V264.64711111c0.11377778-102.62755555-83.39911111-186.02666667-185.9128889-186.02666666zM250.88 574.35022222h171.12177778c23.32444445 0 43.12177778 19.11466667 43.80444444 43.80444445v171.12177778c0 24.00711111-19.11466667 43.12177778-43.12177777 43.12177777-12.06044445 0-22.64177778-5.00622222-30.37866667-12.74311111s-12.74311111-19.11466667-12.74311111-30.37866666v-66.44622223L224.59733333 877.90933333c-16.95288889 16.95288889-44.60088889 16.95288889-61.55377778 0-16.95288889-16.95288889-16.95288889-44.60088889 0-61.55377778l154.96533334-154.96533333h-66.44622222c-24.00711111 0-43.12177778-19.11466667-43.12177778-43.12177777 0-24.12088889 18.432-43.91822222 42.43911111-43.91822223z m521.89866667-98.87288889H601.65688889c-23.32444445 0-43.12177778-19.11466667-43.80444444-43.80444444V260.55111111c0-24.00711111 19.11466667-43.12177778 43.12177777-43.12177778 12.06044445 0 22.64177778 5.00622222 30.37866667 12.74311112s12.74311111 19.11466667 12.74311111 30.37866666v66.44622222l154.96533333-154.96533333c16.95288889-16.95288889 44.60088889-16.95288889 61.55377778 0 16.95288889 16.95288889 16.95288889 44.60088889 0 61.55377778L705.536 388.55111111h66.44622222c24.00711111 0 43.12177778 19.11466667 43.12177778 43.12177778 0.11377778 24.00711111-18.31822222 43.80444445-42.32533333 43.80444444z"}}):e("path",{attrs:{d:"M762.77333333 90.24H265.49333333c-96.10666667 0-174.4 78.29333333-174.4 174.4v497.28c0 96.10666667 78.29333333 174.4 174.4 174.4h497.28c96.10666667 0 175.04-78.29333333 174.4-174.4V264.64c0-96.21333333-78.18666667-174.4-174.4-174.4z m-387.2 761.17333333H215.04c-21.86666667 0-40.42666667-17.92-41.06666667-41.06666666V649.92c0-22.50666667 17.92-40.42666667 40.42666667-40.42666667 11.30666667 0 21.22666667 4.69333333 28.48 11.94666667 7.25333333 7.25333333 11.94666667 17.92 11.94666667 28.48v62.29333333l145.28-145.28c15.89333333-15.89333333 41.81333333-15.89333333 57.70666666 0 15.89333333 15.89333333 15.89333333 41.81333333 0 57.70666667L312.53333333 769.92h62.29333334c22.50666667 0 40.42666667 17.92 40.42666666 40.42666667s-17.17333333 41.06666667-39.68 41.06666666z m274.66666667-685.65333333H810.66666667c21.86666667 0 40.42666667 17.92 41.06666666 41.06666667v160.42666666c0 22.50666667-17.92 40.42666667-40.42666666 40.42666667-11.30666667 0-21.22666667-4.69333333-28.48-11.94666667-7.25333333-7.25333333-11.94666667-17.92-11.94666667-28.48V305.06666667L625.6 450.34666667c-15.89333333 15.89333333-41.81333333 15.89333333-57.70666667 0-15.89333333-15.89333333-15.89333333-41.81333333 0-57.70666667l145.28-145.28h-62.29333333c-22.50666667 0-40.42666667-17.92-40.42666667-40.42666667s17.17333333-41.17333333 39.78666667-41.17333333z"}})])]):this._e()}),[],!1,null,null,null).exports);var At=({Vue:n})=>{gt.name&&n.component("BackToTop",gt),ft.name&&n.component("Badge",ft),wt.name&&n.component("BreadCrumb",wt),xt.name&&n.component("Pagination",xt),St.name&&n.component("ScreenFull",St)};class kt{constructor(n){this.registration=n}update(){return this.registration.update()}skipWaiting(){const n=this.registration.waiting;return n?(console.log("[PWA]: Execute worker.skipWaiting()."),new Promise((e,t)=>{const i=new MessageChannel;i.port1.onmessage=n=>{console.log("[PWA]: Finish worker.skipWaiting()."),n.data.error?t(n.data.error):e(n.data)},n.postMessage({type:"skip-waiting"},[i.port2])})):Promise.resolve()}}var Tt=Object(Pe.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("svg",{staticClass:"icon icon-arrow-left",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"}},[e("path",{attrs:{d:"M401.4 224h-214l83-79.4c11.9-12.5 11.9-32.7 0-45.2s-31.2-12.5-43.2 0L89 233.4c-6 5.8-9 13.7-9 22.4v.4c0 8.7 3 16.6 9 22.4l138.1 134c12 12.5 31.3 12.5 43.2 0 11.9-12.5 11.9-32.7 0-45.2l-83-79.4h214c16.9 0 30.6-14.3 30.6-32 .1-18-13.6-32-30.5-32z"}})])}),[],!1,null,null,null).exports,Bt=Object(Pe.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("svg",{staticClass:"icon icon-arrow-right",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"}},[e("path",{attrs:{d:"M284.9 412.6l138.1-134c6-5.8 9-13.7 9-22.4v-.4c0-8.7-3-16.6-9-22.4l-138.1-134c-12-12.5-31.3-12.5-43.2 0-11.9 12.5-11.9 32.7 0 45.2l83 79.4h-214c-17 0-30.7 14.3-30.7 32 0 18 13.7 32 30.6 32h214l-83 79.4c-11.9 12.5-11.9 32.7 0 45.2 12 12.5 31.3 12.5 43.3 0z"}})])}),[],!1,null,null,null).exports,Ct=Object(Pe.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("svg",{staticClass:"icon close-icon",attrs:{width:"23",height:"22",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M1.12.358a1.224 1.224 0 011.729 0l8.92 8.914L20.686.358a1.224 1.224 0 011.73 1.728L13.497 11l8.92 8.913a1.222 1.222 0 11-1.73 1.729l-8.919-8.913-8.92 8.913a1.224 1.224 0 01-1.729-1.729L10.04 11l-8.92-8.914a1.222 1.222 0 010-1.728z",fill:"currentColor"}})])}),[],!1,null,null,null).exports;const zt={"/":{install:"安装",iOSInstall:"点击分享按钮然后点击“添加到主屏幕”",cancel:"取消",close:"关闭",prevImage:"上一张图片",nextImage:"下一张图片",desc:"详情",feature:"主要特色",explain:"该应用可以安装在您的 PC 或移动设备上。这将使该 Web 应用程序外观和行为与其他应用程序相同。它将在出现在应用程序列表中，并可以固定到主屏幕，开始菜单或任务栏。此 Web 应用程序还将能够与其他应用程序和您的操作系统安全地进行交互。",update:"发现新内容可用"}};let It,Pt;var jt=i.a.extend({name:"PWAInstallModal",components:{ArrowLeftIcon:Tt,ArrowRightIcon:Bt,CloseIcon:Ct},props:{useHint:{type:Boolean,default:!1}},data:()=>({manifest:{},isIOS:!1,deferredprompt:null}),computed:{locales(){return zt[this.$localePath||"/"]}},mounted(){window.hasOwnProperty("BeforeInstallPromptEvent")&&(Pt=n=>{this.deferredprompt=n,this.$emit("can-install",!0),n.preventDefault()},window.addEventListener("beforeinstallprompt",Pt),this.getManifest(),It=n=>{"Escape"===n.key&&this.$emit("toogle",!1)},document.addEventListener("keyup",It))},beforeDestroy(){window.hasOwnProperty("BeforeInstallPromptEvent")&&document.removeEventListener("beforeinstallprompt",Pt),document.removeEventListener("keyup",It)},methods:{async getManifest(){const n=localStorage.getItem("manifest");if(n)this.manifest=JSON.parse(n);else try{const n=await fetch("/manifest.webmanifest"),e=await n.json();this.manifest=e,localStorage.setItem("manifest",JSON.stringify(e))}catch(n){console.error("Error getting manifest, check that you have a valid web manifest or network connection")}},scrollToLeft(){const n=document.querySelector(".screenshot");n&&n.scrollBy({left:-n.clientWidth,top:0,behavior:"smooth"})},scrollToRight(){const n=document.querySelector(".screenshot");n&&n.scrollBy({left:n.clientWidth,top:0,behavior:"smooth"})},async install(){if(this.deferredprompt){this.deferredprompt.prompt(),document.dispatchEvent(new CustomEvent("show"));if("accepted"===(await this.deferredprompt.userChoice).outcome)return console.info("PWA has been installed"),this.$emit("toogle",!1),this.$emit("can-install",!1),!0;console.info("You choose to not install PWA"),this.$emit("toogle",!1),this.$emit("can-install",!1)}return!1},hint(){console.info("You accepted the install hint"),this.$emit("hint")}}}),$t=(t(173),Object(Pe.a)(jt,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{attrs:{id:"install-modal-wrapper"}},[t("div",{staticClass:"background",on:{click:function(e){return n.$emit("toogle",!1)}}}),n._v(" "),t("div",{staticClass:"install-modal"},[t("div",{staticClass:"header"},[t("button",{staticClass:"close-button",attrs:{"aria-label":n.locales.close},on:{click:function(e){return n.$emit("toogle",!1)}}},[t("CloseIcon")],1),n._v(" "),t("div",{staticClass:"logo"},[n.manifest.icons?t("img",{attrs:{src:n.manifest.icons[0].src,alt:"App Logo"}}):n._e(),n._v(" "),t("div",{staticClass:"title"},[t("h1",[n._v(n._s(n.manifest.short_name||n.manifest.name))]),n._v(" "),t("p",{staticClass:"desc"},[n._v(n._s(n.locales.explain))])])])]),n._v(" "),t("div",{staticClass:"content"},[t("div",{staticClass:"highlight"},[n.manifest.features?t("div",{staticClass:"feature-wrapper"},[t("h3",[n._v(n._s(n.locales.feature))]),n._v(" "),n.manifest.features?t("ul",n._l(n.manifest.features,(function(e){return t("li",{key:e,domProps:{textContent:n._s(e)}})})),0):n._e()]):n._e(),n._v(" "),n.manifest.screenshots?t("div",{staticClass:"screenshot-wrapper"},[t("button",{attrs:{"aria-label":n.locales.prevImage},on:{click:n.scrollToLeft}},[t("ArrowLeftIcon")],1),n._v(" "),t("section",{staticClass:"screenshot"},n._l(n.manifest.screenshots,(function(n){return t("div",{key:n.src},[t("img",{attrs:{alt:"App Screenshot",src:n.src}})])})),0),n._v(" "),t("button",{attrs:{"aria-label":n.locales.nextImage},on:{click:n.scrollToRight}},[t("ArrowRightIcon")],1)]):n._e()]),n._v(" "),t("div",{staticClass:"description"},[t("h3",{domProps:{textContent:n._s(n.locales.desc)}}),n._v(" "),t("p",{domProps:{textContent:n._s(n.manifest.description)}})])]),n._v(" "),n.useHint?t("div",{staticClass:"ios-text",on:{click:n.hint}},[t("p",[n._v(n._s(n.locales.iOSInstall))]),n._v(" "),t("button",{staticClass:"success"},[n._v("Got it!")])]):t("div",{staticClass:"button-wrapper"},[t("button",{staticClass:"install-button",on:{click:n.install}},[n._v("\n        "+n._s(n.locales.install)+" "),t("span",[n._v(n._s(n.manifest.short_name))])]),n._v(" "),t("button",{staticClass:"cancel-button",on:{click:function(e){return n.$emit("toogle",!1)}}},[n._v("\n        "+n._s(n.locales.cancel)+"\n      ")])])])])}),[],!1,null,null,null).exports),Dt=i.a.extend({name:"PWAInstall",components:{PWAInstallModal:$t},data:()=>({canInstall:!1,hasRelatedApps:!1,isOpen:!1,isIOS:!1,isSafari:!1,hinted:!1}),computed:{install(){return zt[this.$localePath||"/"].install},useHint(){return this.isIOS&&this.isSafari&&!1===this.hinted},showInstall(){return this.hasRelatedApps&&this.canInstall||this.useHint}},mounted(){if(this.getInstalledStatus()){const{userAgent:n}=navigator;this.isIOS=n.includes("iPhone")||n.includes("iPad")||Boolean(n.includes("Macintosh")&&navigator.maxTouchPoints&&navigator.maxTouchPoints>2),this.isSafari=navigator.userAgent.includes("Safari")&&!n.includes("Chrome"),this.hinted=Boolean(localStorage.getItem("iOS-pwa-hint"))}"getInstalledRelatedApps"in navigator&&navigator.getInstalledRelatedApps().then(n=>{this.hasRelatedApps=n.length>0})},methods:{getInstalledStatus:()=>navigator.standalone?navigator.standalone:matchMedia("(display-mode: standalone)").matches,hint(){this.isOpen=!1,this.hinted=!0,localStorage.setItem("iOS-pwa-hint","hinted")}}}),qt=(t(174),Object(Pe.a)(Dt,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{attrs:{id:"pwa-install"}},[n.showInstall?t("button",{staticClass:"modal-button",attrs:{"use-hint":n.useHint},domProps:{textContent:n._s(n.install)},on:{click:function(e){n.isOpen=!0}}}):n._e(),n._v(" "),t("PWAInstallModal",{directives:[{name:"show",rawName:"v-show",value:n.isOpen,expression:"isOpen"}],on:{"can-install":function(e){n.canInstall=e},hint:n.hint,toogle:function(e){n.isOpen=e}}})],1)}),[],!1,null,null,null).exports);const Mt=new i.a;var Ot=i.a.extend({name:"SWUpdatePopup",data:()=>({updateEvent:null}),computed:{enabled(){return Boolean(this.updateEvent)},message(){return zt[this.$localePath||"/"].update}},created(){Mt.$on("sw-updated",this.onSWUpdated.bind(this))},methods:{onSWUpdated(n){this.updateEvent=n},reload(){this.updateEvent&&this.updateEvent.skipWaiting().then(()=>{location.reload(),this.updateEvent=null})}}}),Ft=(t(175),Object(Pe.a)(Ot,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"sw-update-popup"}},[n._t("default",(function(){return[n.enabled?t("div",{staticClass:"sw-update-popup",attrs:{role:"button",tabindex:"0"},on:{click:n.reload}},[n._v("\n      "+n._s(n.message)+"\n      "),t("span",{staticClass:"refresh"},[t("svg",{attrs:{viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg",width:"84",height:"84"}},[t("path",{attrs:{d:"M949.948959 146.249899l0 255.82655c0 21.980617-13.988596 35.969213-35.969213 35.969213l-255.82655\n            0c-13.988596 0-25.982768-7.992021-33.972742-21.980617-5.997598-13.988596-4.001127-27.977191\n            7.990998-39.97034l79.941704-77.945233c-55.954383-51.973722-121.917724-77.955466-199.862957-77.955466-37.974893 0-75.949786 8.002254-113.924679 21.99085-37.974893 15.984043-67.947532 37.974893-91.933829\n            63.956637-25.981744 23.986297-47.972595 53.958936-63.956637 91.933829-29.982872 73.954339-29.982872\n            153.895019 0 227.849358 15.984043 37.975916 37.974893 67.947532 63.956637 91.933829 23.986297 25.982768\n            53.958936 47.973618 91.933829 63.956637 37.974893 13.988596 75.949786 21.99085 113.924679 21.99085\n            45.966914 0 87.941911-9.997702 127.913275-29.981848 41.97602-17.989723 75.950809-45.966914\n            101.930507-83.942831 7.993045-4.001127 11.994172-5.995551 13.988596-5.995551 5.997598 0 9.998725\n            1.994424 13.988596 5.995551l77.957513 77.945233c3.988848 4.001127 5.986341 7.993045 5.986341\n            11.994172 0 1.994424-1.99647 5.995551-3.990894 11.994172-43.972491 51.962465-93.940532\n            91.933829-151.898549 117.91455-53.958936 25.982768-115.921149 39.971363-185.874361\n            39.971363-61.96119 0-119.921253-11.983939-169.889295-33.972742C284.40084 889.74325 236.438479\n            857.764931 202.464713\n            821.785485c-35.979446-33.972742-67.957765-81.936127-93.939509-139.897214-45.966914-101.930507-45.966914-237.846036 0-339.777567 25.981744-57.960063 57.960063-105.922425 93.939509-139.89619\n            33.973766-35.979446 81.936127-67.957765 139.89619-93.939509 49.968042-21.99085\n            107.928105-33.973766 169.889295-33.973766 55.963593 0 109.923552 9.987468 161.886017\n            29.972639 53.969169 21.99085 101.932554 51.963489 139.907447 89.938382l73.954339-73.944106c9.987468-9.997702 23.987321-13.988596 39.971363-8.002254C941.956937 120.268154 949.948959 132.261303\n            949.948959 146.249899z"}})])])]):n._e()]}),{reload:n.reload,enabled:n.enabled,message:n.message})],2)}),[],!1,null,null,null).exports);var Lt=async({Vue:n,router:e,isServer:i})=>{if(n.component("PWAInstall",qt),n.component("SWUpdatePopup",Ft),!i){const{register:n}=await t.e(110).then(t.bind(null,498));e.onReady(()=>{n("/service-worker.js",{registrationOptions:{},ready(){console.log("[PWA]: Service worker is active"),Mt.$emit("sw-ready")},cached(n){console.log("[PWA]: Content has been cached for offline usage"),Mt.$emit("sw-cached",new kt(n))},updated(n){console.log("[PWA]: Content has been updated");const e="service-worker-version",t=Number(localStorage.getItem(e)||0);localStorage.setItem(e,(t+1).toString()),localStorage.removeItem("manifest"),Mt.$emit("sw-updated",new kt(n))},offline(){console.log("[PWA]: No internet connection，APP runs in offline mode"),Mt.$emit("sw-offline")},error(n){console.error("[PWA]: Register Service Worker error:",n),Mt.$emit("sw-error",n)}})})}};t(176);const Rt=n=>{const e=document.documentElement.getBoundingClientRect(),t=n.getBoundingClientRect();return{x:t.left-e.left,y:t.top-e.top}};var Nt=({Vue:n,router:e})=>{e.options.scrollBehavior=(e,t,i)=>{i?window.scrollTo({top:i.y,behavior:"smooth"}):e.hash?n.$vuepress.$get("disableScrollBehavior")||setTimeout(()=>{const n=decodeURI(e.hash.slice(1)),t=document.getElementById(n)||document.querySelector(`[name='${n}']`);t&&window.scrollTo({top:Rt(t).y,behavior:"smooth"})},500):window.scrollTo({top:0,behavior:"smooth"})}},Ut={tag:{Java:{key:"Java",scope:"tag",path:"/tag/Java/",pageKeys:["v-f74de172","v-f51f5474","v-42a969b4","v-4df2d3aa","v-37b40c7e","v-74e721b4","v-036ddef0","v-538311d8","v-fc410702","v-859be4b2","v-9f7140b2"]},IDEA:{key:"IDEA",scope:"tag",path:"/tag/IDEA/",pageKeys:["v-31b7b02f"]},daily:{key:"daily",scope:"tag",path:"/tag/daily/",pageKeys:["v-2497bc7c","v-e8ca5fb8","v-7bce7152","v-104d80a7","v-4178ed9a","v-a8ed776c","v-e8dd7c92","v-55d3817c"]},GitHub:{key:"GitHub",scope:"tag",path:"/tag/GitHub/",pageKeys:["v-023c7dbe"]},Git:{key:"Git",scope:"tag",path:"/tag/Git/",pageKeys:["v-95a92a5e","v-5c452ed0","v-62e2ae05"]},Linux:{key:"Linux",scope:"tag",path:"/tag/Linux/",pageKeys:["v-af546862","v-6692607b","v-dd4f6e68","v-712c4c34","v-496cea52","v-b722715a"]},Euserv:{key:"Euserv",scope:"tag",path:"/tag/Euserv/",pageKeys:["v-a3b101a2"]},Nginx:{key:"Nginx",scope:"tag",path:"/tag/Nginx/",pageKeys:["v-0a98600f"]},NodeJS:{key:"NodeJS",scope:"tag",path:"/tag/NodeJS/",pageKeys:["v-72e34a02"]},Maven:{key:"Maven",scope:"tag",path:"/tag/Maven/",pageKeys:["v-72e34a02"]},Mysql:{key:"Mysql",scope:"tag",path:"/tag/Mysql/",pageKeys:["v-72e34a02"]},Openssl:{key:"Openssl",scope:"tag",path:"/tag/Openssl/",pageKeys:["v-2a9f5c48"]},other:{key:"other",scope:"tag",path:"/tag/other/",pageKeys:["v-eb7666b6","v-fa6c2bce","v-54d18f67","v-288cf2b4","v-848b48f6","v-ff8cf936","v-018a97d8","v-4e4a8ca2","v-33b9b88f","v-2b693b9b","v-5d53a8d8","v-bfdf533a","v-448385f5","v-3842bc05","v-13c645d3","v-0899f725","v-e7aabd48","v-189698dc","v-025c699a","v-7a96cc32","v-ac0f7b50","v-0e60175c","v-5081093c","v-01b2b8f8","v-720fff6e","v-e1f1cec4","v-68bef918","v-2918e2f0","v-101a7a53","v-28691cc3","v-576421b3","v-daa4f2c0","v-2bc0448a","v-6612aa59","v-ddb14b62","v-ea47bfcc","v-2b68fff7","v-7b85727a","v-11822864","v-16a70b21","v-e8e7a6a2","v-0a93eeb9","v-6f682815","v-2df24c52","v-a7b7763e"]},"蓝奏":{key:"蓝奏",scope:"tag",path:"/tag/蓝奏/",pageKeys:["v-1cb0ad38"]},Script:{key:"Script",scope:"tag",path:"/tag/Script/",pageKeys:["v-3f9264e6"]},Code:{key:"Code",scope:"tag",path:"/tag/Code/",pageKeys:["v-dbc9215c","v-50da21d8"]},CDN:{key:"CDN",scope:"tag",path:"/tag/CDN/",pageKeys:["v-50da21d8"]},Study:{key:"Study",scope:"tag",path:"/tag/Study/",pageKeys:["v-47d10e62"]},Tools:{key:"Tools",scope:"tag",path:"/tag/Tools/",pageKeys:["v-163b0284","v-bdacc0a6","v-297d0b79"]}},category:{Java:{key:"Java",scope:"category",path:"/category/Java/",pageKeys:["v-f74de172","v-f51f5474","v-42a969b4","v-4df2d3aa","v-37b40c7e","v-74e721b4","v-036ddef0","v-538311d8","v-fc410702","v-859be4b2","v-9f7140b2"]},IDEA:{key:"IDEA",scope:"category",path:"/category/IDEA/",pageKeys:["v-31b7b02f"]},daily:{key:"daily",scope:"category",path:"/category/daily/",pageKeys:["v-2497bc7c","v-e8ca5fb8","v-7bce7152","v-104d80a7","v-4178ed9a","v-a8ed776c","v-e8dd7c92","v-55d3817c"]},GitHub:{key:"GitHub",scope:"category",path:"/category/GitHub/",pageKeys:["v-023c7dbe"]},Git:{key:"Git",scope:"category",path:"/category/Git/",pageKeys:["v-95a92a5e","v-5c452ed0","v-62e2ae05"]},Linux:{key:"Linux",scope:"category",path:"/category/Linux/",pageKeys:["v-af546862","v-6692607b","v-dd4f6e68","v-712c4c34","v-496cea52","v-b722715a"]},Euserv:{key:"Euserv",scope:"category",path:"/category/Euserv/",pageKeys:["v-a3b101a2"]},linux:{key:"linux",scope:"category",path:"/category/linux/",pageKeys:["v-0a98600f","v-72e34a02","v-2a9f5c48"]},other:{key:"other",scope:"category",path:"/category/other/",pageKeys:["v-eb7666b6","v-fa6c2bce","v-54d18f67","v-288cf2b4","v-848b48f6","v-ff8cf936","v-018a97d8","v-4e4a8ca2","v-33b9b88f","v-2b693b9b","v-5d53a8d8","v-bfdf533a","v-448385f5","v-3842bc05","v-13c645d3","v-0899f725","v-e7aabd48","v-189698dc","v-025c699a","v-7a96cc32","v-ac0f7b50","v-0e60175c","v-5081093c","v-01b2b8f8","v-720fff6e","v-e1f1cec4","v-68bef918","v-2918e2f0","v-101a7a53","v-28691cc3","v-576421b3","v-daa4f2c0","v-2bc0448a","v-6612aa59","v-ddb14b62","v-ea47bfcc","v-2b68fff7","v-7b85727a","v-11822864","v-16a70b21","v-e8e7a6a2","v-0a93eeb9","v-6f682815","v-1cb0ad38","v-2df24c52","v-a7b7763e"]},Script:{key:"Script",scope:"category",path:"/category/Script/",pageKeys:["v-3f9264e6"]},Code:{key:"Code",scope:"category",path:"/category/Code/",pageKeys:["v-dbc9215c","v-50da21d8"]},Study:{key:"Study",scope:"category",path:"/category/Study/",pageKeys:["v-47d10e62"]},Tools:{key:"Tools",scope:"category",path:"/category/Tools/",pageKeys:["v-163b0284","v-bdacc0a6","v-297d0b79"]}}};class Ht{constructor(n,e){this._metaMap=Object.assign({},n),Object.keys(this._metaMap).forEach(n=>{const{pageKeys:t}=this._metaMap[n];this._metaMap[n].pages=t.map(n=>function(n,e){for(let t=0;t<n.length;t++){const i=n[t];if(i.key===e)return i}return{path:"",frontmatter:{}}}(e,n))})}get length(){return Object.keys(this._metaMap).length}get map(){return this._metaMap}get pages(){return this.list}get list(){return this.toArray()}toArray(){const n=[];return Object.keys(this._metaMap).forEach(e=>{const{pages:t,path:i}=this._metaMap[e];n.push({name:e,pages:t,path:i})}),n}getItemByName(n){return this._metaMap[n]}}var Jt={tag:(n,e)=>{const i=t(28);return i(n.frontmatter.date)-i(e.frontmatter.date)>0?-1:1},category:(n,e)=>{const i=t(28);return i(n.frontmatter.date)-i(e.frontmatter.date)>0?-1:1}},Gt={tag:function(n,e,t){const i=e;return["tag","tags"].some(e=>{const t=n.frontmatter[e];return Array.isArray(t)?t.some(n=>n==i):t==i})},category:function(n,e,t){const i=e;return["category","categories"].some(e=>{const t=n.frontmatter[e];return Array.isArray(t)?t.some(n=>n==i):t==i})}},Vt=[{pid:"tag",id:"Java",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Java/",interval:[0,9]},{path:"/tag/Java/page/2/",interval:[10,11]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"IDEA",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/IDEA/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"daily",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/daily/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"GitHub",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/GitHub/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Git",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Git/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Linux",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Linux/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Euserv",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Euserv/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Nginx",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Nginx/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"NodeJS",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/NodeJS/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Maven",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Maven/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Mysql",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Mysql/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Openssl",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Openssl/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"other",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/other/",interval:[0,9]},{path:"/tag/other/page/2/",interval:[10,19]},{path:"/tag/other/page/3/",interval:[20,29]},{path:"/tag/other/page/4/",interval:[30,39]},{path:"/tag/other/page/5/",interval:[40,45]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"蓝奏",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/蓝奏/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Script",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Script/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Code",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Code/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"CDN",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/CDN/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Study",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Study/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Tools",filter:Gt.tag,sorter:Jt.tag,pages:[{path:"/tag/Tools/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"Java",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/Java/",interval:[0,9]},{path:"/category/Java/page/2/",interval:[10,11]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"IDEA",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/IDEA/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"daily",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/daily/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"GitHub",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/GitHub/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"Git",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/Git/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"Linux",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/Linux/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"Euserv",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/Euserv/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"linux",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/linux/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"other",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/other/",interval:[0,9]},{path:"/category/other/page/2/",interval:[10,19]},{path:"/category/other/page/3/",interval:[20,29]},{path:"/category/other/page/4/",interval:[30,39]},{path:"/category/other/page/5/",interval:[40,46]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"Script",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/Script/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"Code",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/Code/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"Study",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/Study/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"Tools",filter:Gt.category,sorter:Jt.category,pages:[{path:"/category/Tools/",interval:[0,3]}],prevText:"Prev",nextText:"Next"}],Wt=t(66);const Kt=t.n(Wt)()("plugin-blog:pagination");class Qt{constructor(n,e,t){Kt("pagination",n);const{pages:i,prevText:a,nextText:o}=n,{path:r}=t;this._prevText=a,this._nextText=o;for(let n=0,e=i.length;n<e;n++){if(i[n].path===r){this.paginationIndex=n;break}}this.paginationIndex||(this.paginationIndex=0),this._paginationPages=i,this._currentPage=i[this.paginationIndex],this._matchedPages=e.filter(e=>n.filter(e,n.id,n.pid)).sort(n.sorter)}setIndexPage(n){this._indexPage=n}get length(){return this._paginationPages.length}get pages(){const[n,e]=this._currentPage.interval;return this._matchedPages.slice(n,e+1)}get hasPrev(){return 0!==this.paginationIndex}get prevLink(){return this.hasPrev?this.paginationIndex-1==0&&this._indexPage?this._indexPage:this._paginationPages[this.paginationIndex-1].path:null}get hasNext(){return this.paginationIndex!==this.length-1}get nextLink(){return this.hasNext?this._paginationPages[this.paginationIndex+1].path:null}get prevText(){return this._prevText}get nextText(){return this._nextText}getSpecificPageLink(n){return this._paginationPages[n].path}}const Xt=new class{constructor(n){this.paginations=n}get pages(){return i.a.$vuepress.$get("siteData").pages}getPagination(n,e,t){Kt("id",e),Kt("pid",n);const i=this.paginations.filter(t=>t.id===e&&t.pid===n)[0];return new Qt(i,this.pages,t)}}(Vt);var Zt={comment:{enabled:!1,service:""},email:{enabled:!1},feed:{rss:!1,atom:!1,json:!1}},Yt=(t(179),i.a.extend({name:"CodeGroup",data:()=>({codeTabs:[],activeTabIndex:-1}),watch:{activeTabIndex(n){this.activateCodeTab(n)}},mounted(){this.loadTabs()},methods:{loadTabs(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>{const t=n.componentOptions.propsData;return"active"in t&&(this.activeTabIndex=e),{title:t.title,element:n.elm}}),-1===this.activeTabIndex&&this.codeTabs.length>0&&(this.activeTabIndex=0),this.activateCodeTab(0)},changeCodeTab(n){this.activeTabIndex=n},keyDownHandler(n,e){" "===n.key||"Enter"===n.key?(n.preventDefault(),this.activeTabIndex=e):"ArrowRight"===n.key?(n.preventDefault(),e+1<this.codeTabs.length&&(this.activeTabIndex=e+1,this.$refs.tab[e+1].focus())):"ArrowLeft"===n.key&&(n.preventDefault(),e-1>=0&&(this.activeTabIndex=e-1,this.$refs.tab[e-1].focus()))},activateCodeTab(n){this.codeTabs.forEach((e,t)=>{const{element:i}=e;i&&(n===t?i.classList.add("active"):i.classList.remove("active"))})}}})),ni=(t(180),Object(Pe.a)(Yt,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ClientOnly",[t("div",{staticClass:"code-group"},[t("div",{staticClass:"code-group-nav",attrs:{"v:if":"codeTabs.length"}},n._l(n.codeTabs,(function(e,i){return t("button",{key:e.title,ref:"tab",refInFor:!0,staticClass:"code-group-nav-tab",class:{active:i===n.activeTabIndex},attrs:{"aria-pressed":i===n.activeTabIndex,"aria-expanded":i===n.activeTabIndex},domProps:{textContent:n._s(e.title)},on:{click:function(e){return n.changeCodeTab(i)},keydown:function(e){return n.keyDownHandler(e,i)}}})})),0),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length?n._e():t("pre",{staticClass:"hints",domProps:{textContent:n._s("// Make sure to add code blocks to your code group")}})],2)])}),[],!1,null,null,null).exports),ei=i.a.extend({name:"CodeGroupItem",props:{title:{type:String,required:!0},active:{type:Boolean,required:!1,default:!1}},mounted(){this.$parent&&this.$parent.loadTabs&&this.$parent.loadTabs()}}),ti=(t(181),Object(Pe.a)(ei,(function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"code-group-item",class:{active:this.active},attrs:{"aria-selected":this.active}},[this._t("default")],2)}),[],!1,null,null,null).exports),ii=Object(Pe.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("svg",{staticStyle:{background:"0 0",display:"block","shape-rendering":"auto"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"200",height:"200",viewBox:"0 0 100 100",preserveAspectRatio:"xMidYMid"}},[e("circle",{attrs:{cx:"50",cy:"50",r:"0",fill:"none",stroke:"currentColor","stroke-width":"2"}},[e("animate",{attrs:{attributeName:"r",repeatCount:"indefinite",dur:"1s",values:"0;40",keyTimes:"0;1",keySplines:"0 0.2 0.8 1",calcMode:"spline",begin:"0s"}}),this._v(" "),e("animate",{attrs:{attributeName:"opacity",repeatCount:"indefinite",dur:"1s",values:"1;0",keyTimes:"0;1",keySplines:"0.2 0 0.8 1",calcMode:"spline",begin:"0s"}})]),this._v(" "),e("circle",{attrs:{cx:"50",cy:"50",r:"0",fill:"none",stroke:"currentColor","stroke-width":"2"}},[e("animate",{attrs:{attributeName:"r",repeatCount:"indefinite",dur:"1s",values:"0;40",keyTimes:"0;1",keySplines:"0 0.2 0.8 1",calcMode:"spline",begin:"-0.3333333333333333s"}}),this._v(" "),e("animate",{attrs:{attributeName:"opacity",repeatCount:"indefinite",dur:"1s",values:"1;0",keyTimes:"0;1",keySplines:"0.2 0 0.8 1",calcMode:"spline",begin:"-0.3333333333333333s"}})]),this._v(" "),e("circle",{attrs:{cx:"50",cy:"50",r:"0",fill:"none",stroke:"currentColor","stroke-width":"2"}},[e("animate",{attrs:{attributeName:"r",repeatCount:"indefinite",dur:"1s",values:"0;40",keyTimes:"0;1",keySplines:"0 0.2 0.8 1",calcMode:"spline",begin:"-0.6666666666666666s"}}),this._v(" "),e("animate",{attrs:{attributeName:"opacity",repeatCount:"indefinite",dur:"1s",values:"1;0",keyTimes:"0;1",keySplines:"0.2 0 0.8 1",calcMode:"spline",begin:"-0.6666666666666666s"}})])])}),[],!1,null,null,null).exports,ai={x:0,y:0,"line-width":2,"line-length":40,"text-margin":8,"font-size":14,"font-color":"#8DA1AC","line-color":"#8DA1AC","element-color":"black",fill:"white","yes-text":"Yes","no-text":"No","arrow-end":"block",scale:1},oi={ant:Object.assign(Object.assign({},ai),{symbols:{start:{class:"start-element","font-color":"#fff",fill:"#595959","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#595959","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#FF485E","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FF485E","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"}}}),vue:Object.assign(Object.assign({},ai),{symbols:{start:{class:"start-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#00BC7D","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#EB4D5D","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#937AC4","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FFB500","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"}}})};let ri;var si=i.a.extend({name:"FlowChart",components:{Loading:ii},props:{id:{type:String,required:!0},preset:{type:String,default:"vue"}},data:()=>({loading:!0,scale:1}),computed:{$preset(){const n=oi[this.preset];return n||(console.warn("[md-enhance:flowchart] Unknown preset: "+this.preset),oi.vue)},resize(){return Be()(()=>{const n=this.getScale(window.innerWidth);this.scale!==n&&(this.scale=n,ri.drawSVG(this.id,Object.assign(Object.assign({},this.$preset),{scale:n})))},100)}},mounted(){this.$el.setAttribute("id",this.id),Promise.all([t.e(99).then(t.t.bind(null,505,7)),new Promise(n=>setTimeout(n,500))]).then(([n])=>{const{parse:e}=n;ri=e(decodeURIComponent(this.$el.dataset.code||"")),this.scale=this.getScale(window.innerWidth),ri.drawSVG(this.id,Object.assign(Object.assign({},this.$preset),{scale:this.scale})),this.loading=!1,window.addEventListener("resize",this.resize)})},beforeDestroy(){window.removeEventListener("resize",this.resize)},methods:{getScale:n=>n<419?.8:n>1280?1:.9}}),li=(t(182),Object(Pe.a)(si,(function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"md-flowchart",class:{loading:this.loading}},[this.loading?e("Loading",{staticClass:"md-flowchart-loading-icon"}):this._e()],1)}),[],!1,null,null,null).exports),ci=(t(183),i.a.extend({name:"Mermaid",components:{Loading:ii},props:{id:{type:String,required:!0}},data:()=>({loading:!0,svgCode:"",observer:null}),mounted(){const n=decodeURIComponent(this.$el.dataset.code||"");Promise.all([t.e(101).then(t.bind(null,506)),new Promise(n=>setTimeout(n,500))]).then(([e])=>{const{initialize:t,render:a}=e.default,o=e=>{const o=document.createElement("div");o.style.position="relative",o.style.top="-9999px";const r=n=>{this.loading=!1,this.svgCode=n,document.body.removeChild(o)};t(Object.assign(Object.assign({theme:"base",themeVariables:{dark:e,background:e?"#1e1e1e":"#fff",primaryColor:e?"#389d70":"#4abf8a",primaryBorderColor:e?"#389d70":"#4abf8a",primaryTextColor:"#fff",secondaryColor:"#f39c12",secondaryBorderColor:e?"#fff":"#000",secondaryTextColor:e?"#ddd":"#333",tertiaryColor:e?"#22182d":"#eeeaf3",tertiaryBorderColor:e?"#fff":"#000",tertiaryTextColor:e?"#ddd":"#333",noteBkgColor:e?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:e?"#f6d365":"#333",lineColor:e?"#d3d3d3":"#333",textColor:e?"#fff":"#242424",mainBkg:e?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:e?"#389d70":"#4abf8a",nodeTextColor:e?"#fff":"#242424",signalTextColor:e?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",fillType0:e?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"}},{}),{startOnLoad:!1})),this.svgCode="",document.body.appendChild(o),i.a.nextTick(()=>a(this.id,n,r,o))},r=document.querySelector("body");o(r.classList.contains("theme-dark")),this.observer=new MutationObserver(()=>{o(r.classList.contains("theme-dark"))}),this.observer.observe(r,{attributeFilter:["class"],attributes:!0})})},beforeDestroy(){this.observer&&this.observer.disconnect()},render(n){return this.svgCode?n("div",{class:"md-mermaid",domProps:{innerHTML:this.svgCode}}):n("div",{class:"md-mermaid-loading"},[n(ii)])}})),pi=i.a.extend({name:"Presentation",components:{Loading:ii},props:{id:{type:String,required:!0},theme:{type:String,default:"auto"}},data:()=>({loading:!0,code:""}),mounted(){this.$el.setAttribute("id",this.id),this.code=decodeURIComponent(this.$el.dataset.code||"");const n=document.querySelector("#"+this.id);if(n){n.setAttribute("theme",this.theme);const e=[new Promise(n=>setTimeout(n,500)),t.e(103).then(t.bind(null,507))];e.push(t.e(103).then(t.bind(null,508))),e.push(t.e(103).then(t.bind(null,509))),e.push(t.e(103).then(t.bind(null,510))),e.push(t.e(103).then(t.bind(null,511))),e.push(t.e(103).then(t.bind(null,512))),e.push(t.e(103).then(t.bind(null,513))),Promise.all(e).then(([,e,...t])=>{const i=new e.default(n,{plugins:t.map(n=>n.default)});i.initialize(Object.assign(Object.assign(Object.assign({backgroundTransition:"slide",hash:"Slide"===this.$frontmatter.layout,mouseWheel:"Slide"===this.$frontmatter.layout,transition:"slide",slideNumber:!0},{}),this.$frontmatter.reveal||{}),{embedded:"Slide"!==this.$frontmatter.layout})).then(()=>{this.loading=!1}),i.configure({backgroundTransition:"slide"})})}}}),ui=(t(184),Object(Pe.a)(pi,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"md-presentation reveal reveal-viewport",class:{loading:n.loading}},[n.loading?t("Loading",{staticClass:"md-presentation-loading-icon"}):n._e(),n._v(" "),t("div",{directives:[{name:"show",rawName:"v-show",value:!n.loading,expression:"!loading"}],staticClass:"slides"},[t("section",{attrs:{"data-markdown":"","data-separator":"^\\r?\\n---\\r?\\n$","data-separator-vertical":"^\\r?\\n--\\r?\\n$"}},[t("script",{attrs:{type:"text/template"}},[n._v("\n        "+n._s(n.code)+"\n      ")])])])],1)}),[],!1,null,null,null).exports);var di=({Vue:n})=>{Promise.all([t.e(0),t.e(104)]).then(t.t.bind(null,499,7)),Promise.all([t.e(0),t.e(105)]).then(t.t.bind(null,500,7)),ni.name&&n.component("CodeGroup",ni),ti.name&&n.component("CodeGroupItem",ti),Promise.all([t.e(0),t.e(106)]).then(t.t.bind(null,501,7)),li.name&&n.component("FlowChart",li),ci.name&&n.component("Mermaid",ci),ui.name&&n.component("Presentation",ui),Promise.all([t.e(0),t.e(107)]).then(t.t.bind(null,502,7)),Promise.all([t.e(0),t.e(108)]).then(t.t.bind(null,503,7)),Promise.all([t.e(0),t.e(109)]).then(t.t.bind(null,504,7))};let hi;const mi={"/":{close:"关闭",fullscreen:"切换全屏",share:"分享",zoom:"缩放",prev:"上一个 (左箭头)",next:"下一个 (右箭头)",buttons:[{id:"qq",label:"分享到 QQ",url:"https://connect.qq.com/widget/shareqq/iframe_index.html?url={{url}}&title={{text}}&pics={{image_url}}"},{id:"qzone",label:"分享到 Qzone",url:"https://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url={{url}}&title={{text}}&pics={{image_url}}"},{id:"weibo",label:"分享到 Weibo",url:"http://service.weibo.com/share/share.php?url={{url}}&title={{text}}&content=utf8&pic={{image_url}}"},{id:"download",label:"下载图片",url:"{{raw_image_url}}",download:!0}]}};var gi=i.a.extend({name:"PhotoSwipe",computed:{locales(){return mi[this.$localePath||"/"]}},watch:{$route(){this.initPhotoSwipe()}},mounted(){this.initPhotoSwipe()},methods:{initPhotoSwipe(){const n=document.querySelector(".pswp");Promise.all([t.e(102).then(t.t.bind(null,514,7)),t.e(102).then(t.t.bind(null,515,7)),new Promise(n=>setTimeout(()=>n(),500))]).then(([e,t])=>{this.getImages().then(i=>{hi.forEach((a,o)=>{a.onclick=()=>{new e.default(n,t.default,i,Object.assign(Object.assign({shareButtons:this.locales.buttons},{}),{index:o})).init()}})})})},getImageInfo:n=>({src:n.src,w:n.naturalWidth,h:n.naturalHeight,title:n.alt}),getImages(){const n=[];return hi=document.querySelectorAll(".theme-default-content :not(a) > img"),hi.forEach((e,t)=>{n[t]=new Promise((n,t)=>{e.complete?n(this.getImageInfo(e)):(e.onload=()=>n(this.getImageInfo(e)),e.onerror=n=>t(n))})}),Promise.all(n)}}}),vi=(t(185),Object(Pe.a)(gi,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"pswp",attrs:{tabindex:"-1",role:"dialog","aria-hidden":"true"}},[t("div",{staticClass:"pswp__bg"}),n._v(" "),t("div",{staticClass:"pswp__scroll-wrap"},[n._m(0),n._v(" "),t("div",{staticClass:"pswp__ui pswp__ui--hidden"},[t("div",{staticClass:"pswp__top-bar"},[t("div",{staticClass:"pswp__counter"}),n._v(" "),t("button",{staticClass:"pswp__button pswp__button--close",attrs:{title:n.locales.close,"aria-label":n.locales.close}}),n._v(" "),t("button",{staticClass:"pswp__button pswp__button--share",attrs:{title:n.locales.share,"aria-label":n.locales.share}}),n._v(" "),t("button",{staticClass:"pswp__button pswp__button--fs",attrs:{title:n.locales.fullscreen,"aria-label":n.locales.fullscreen}}),n._v(" "),t("button",{staticClass:"pswp__button pswp__button--zoom",attrs:{title:n.locales.zoom,"aria-label":n.locales.zoom}}),n._v(" "),n._m(1)]),n._v(" "),n._m(2),n._v(" "),t("button",{staticClass:"pswp__button pswp__button--arrow--left",attrs:{title:n.locales.prev,"aria-label":n.locales.prev}}),n._v(" "),t("button",{staticClass:"pswp__button pswp__button--arrow--right",attrs:{title:n.locales.next,"aria-label":n.locales.next}}),n._v(" "),n._m(3)])])])}),[function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"pswp__container"},[e("div",{staticClass:"pswp__item"}),this._v(" "),e("div",{staticClass:"pswp__item"}),this._v(" "),e("div",{staticClass:"pswp__item"})])},function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"pswp__preloader"},[e("div",{staticClass:"pswp__preloader__icn"},[e("div",{staticClass:"pswp__preloader__cut"},[e("div",{staticClass:"pswp__preloader__donut"})])])])},function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"pswp__share-modal pswp__share-modal--hidden pswp__single-tap"},[e("div",{staticClass:"pswp__share-tooltip"})])},function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"pswp__caption"},[e("div",{staticClass:"pswp__caption__center"})])}],!1,null,null,null).exports);var fi=({Vue:n})=>{n.component("PhotoSwipe",vi)};class bi{constructor({origin:n,size:e,speed:t,color:i,angle:a,context:o}){this.origin=n,this.position={...this.origin},this.size=e,this.color=i,this.speed=t,this.angle=a,this.context=o,this.renderCount=0}draw(){}move(){this.position.x=Math.sin(this.angle)*this.speed+this.position.x,this.position.y=Math.cos(this.angle)*this.speed+this.position.y+.3*this.renderCount,this.renderCount++}}class wi extends bi{draw(){this.context.fillStyle=this.color,this.context.beginPath(),this.context.arc(this.position.x,this.position.y,this.size,0,2*Math.PI),this.context.fill()}}class yi extends bi{constructor({origin:n,size:e,speed:t,color:i,angle:a,context:o}){super({origin:n,size:e,speed:t,color:i,angle:a,context:o}),this.rotate=0}draw(){this.context.fillStyle=this.color,this.context.beginPath();const n=2*this.size,e=this.size;for(let t=0;t<5;t++)this.context.lineTo(Math.cos((18+72*t-this.rotate)/180*Math.PI)*n+this.position.x,-Math.sin((18+72*t-this.rotate)/180*Math.PI)*n+this.position.y),this.context.lineTo(Math.cos((54+72*t-this.rotate)/180*Math.PI)*e+this.position.x,-Math.sin((54+72*t-this.rotate)/180*Math.PI)*e+this.position.y);this.context.fill(),this.rotate+=5}}class xi{constructor({origin:n,context:e,shape:t="star",size:i=2,particleCount:a=10,clientSize:o}){this.origin=n,this.context=e,this.shape=t,this.size=i,this.particleCount=a,this.clientSize=o,this.stop=!1,this.particles=[]}randomArray(n){const e=n.length;return n[Math.floor(e*Math.random())]}randomColor(){const n=["8","9","A","B","C","D","E","F"];return"#"+this.randomArray(n)+this.randomArray(n)+this.randomArray(n)+this.randomArray(n)+this.randomArray(n)+this.randomArray(n)}randomRange(n,e){return(e-n)*Math.random()+n}getShape(n){return{star:yi,circle:wi}[n]}init(){for(let n=0;n<this.particleCount;n++){const n=new(this.getShape(this.shape))({context:this.context,origin:this.origin,size:this.size,color:this.randomColor(),angle:this.randomRange(Math.PI-1,Math.PI+1),speed:this.randomRange(1,6)});this.particles.push(n)}}move(){this.particles.forEach((n,e)=>{n.position.x<0||n.position.x>this.clientSize.width||n.position.y>this.clientSize.height?this.particles.splice(e,1):n.move()}),0==this.particles.length&&(this.stop=!0)}draw(){this.particles.forEach(n=>n.draw())}}var Ei={name:"CursorEffects",data:()=>({shape:"star",size:2,zIndex:999999999,computerCanvas:null,renderCanvas:null,computerContext:null,renderContext:null,clientSize:{width:0,height:0},resizeTimeout:null}),mounted(){this.computerCanvas=document.createElement("canvas"),this.renderCanvas=document.getElementById("vuepress-canvas-cursor"),this.computerContext=this.computerCanvas.getContext("2d"),this.renderContext=this.renderCanvas.getContext("2d"),this.clientSize.width=window.innerWidth,this.clientSize.height=window.innerHeight,this.booms=[],this.running=!1,this.init()},methods:{init(){this.setStyle(this.renderCanvas.style),this.renderCanvas.width=this.computerCanvas.width=this.clientSize.width,this.renderCanvas.height=this.computerCanvas.height=this.clientSize.height,this.makeHighRes(this.renderCanvas,this.renderContext),this.makeHighRes(this.computerCanvas,this.computerContext),window.addEventListener("mousedown",this.handleMouseDown),window.addEventListener("pagehide",this.handlePageHide),window.addEventListener("resize",this.handleResize)},setStyle(n){n.position="fixed",n.top=0,n.left=0,n.zIndex=this.zIndex,n.pointerEvents="none",n.width=this.clientSize.width,n.height=this.clientSize.height},makeHighRes(n,e){const t=window.devicePixelRatio||1,i=n.width,a=n.height;n.width=Math.round(i*t),n.height=Math.round(a*t),n.style.width=i+"px",n.style.height=a+"px",e.scale(t,t)},handleMouseDown(n){const e=new xi({origin:{x:n.clientX,y:n.clientY},context:this.computerContext,size:this.size,shape:this.shape,clientSize:this.clientSize});e.init(),this.booms.push(e),this.running||this.run()},handlePageHide(){this.booms=[],this.running=!1},handleResize(){null!=this.resizeTimeout&&clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout(()=>{this.clientSize.width=window.innerWidth,this.clientSize.height=window.innerHeight,this.renderCanvas.width=this.computerCanvas.width=this.clientSize.width,this.renderCanvas.height=this.computerCanvas.height=this.clientSize.height,this.makeHighRes(this.renderCanvas,this.renderContext),this.makeHighRes(this.computerCanvas,this.computerContext)},500)},run(){if(this.running=!0,0==this.booms.length)return this.running=!1;requestAnimationFrame(this.run),this.computerContext.clearRect(0,0,this.clientSize.width,this.clientSize.height),this.renderContext.clearRect(0,0,this.clientSize.width,this.clientSize.height),this.booms.forEach((n,e)=>{n.stop?this.booms.splice(e,1):(n.move(),n.draw())}),this.renderContext.drawImage(this.computerCanvas,0,0,this.clientSize.width,this.clientSize.height)}}},_i=Object(Pe.a)(Ei,(function(){var n=this.$createElement;return(this._self._c||n)("canvas",{attrs:{id:"vuepress-canvas-cursor"}})}),[],!1,null,null,null).exports,Si=[{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},ut,At,Lt,Nt,({Vue:n})=>{const e=Object.keys(Ut).map(n=>{const e=Ut[n],t="$"+n;return{[t](){const{pages:n}=this.$site;return new Ht(e,n)},["$current"+(n.charAt(0).toUpperCase()+n.slice(1))](){const n=this.$route.meta.id;return this[t].getItemByName(n)}}}).reduce((n,e)=>(Object.assign(n,e),n),{});e.$frontmatterKey=function(){const n=this["$"+this.$route.meta.id];return n||null},n.mixin({computed:e})},({Vue:n})=>{n.mixin({computed:{$pagination(){return this.$route.meta.pid&&this.$route.meta.id?this.$getPagination(this.$route.meta.pid,this.$route.meta.id):null}},methods:{$getPagination(n,e){return e=e||n,Xt.getPagination(n,e,this.$route)}}})},({Vue:n})=>{const e={$service:()=>Zt};n.mixin({computed:e})},{},di,fi,({siteData:n,options:e})=>{n.themeConfig.sidebar={"/source_code/":[{title:"Source Code",collapsable:!1,sidebarDepth:1,children:["","admin","国内常用静态资源CDN公共库"]}],"/script/":[{title:"Script",collapsable:!1,sidebarDepth:1,children:["","repository","脚本仓库"]}],"/daily/":[{title:"Daily",collapsable:!1,sidebarDepth:1,children:["","Xposed edge pro入门教程","Xposed-edge-pro Shell命令","Xposed-edge-pro Shell命令-打开微信好友聊天界面","全球各大免费电子图书馆汇集","关闭微信广告","去除MIUI10秒的警告","影视软件TV-APK"]}],"/linux/":[{title:"Linux",collapsable:!1,sidebarDepth:1,children:["","Centos7Minimal","Euserv","Nginx安装Web应用防火墙","NodeJS-Maven-Mysql","Podman开源的容器","Windows子系统","bt","openssl一键自签证书","实用 shell 脚本"]}],"/other/":[{title:"Other",collapsable:!1,sidebarDepth:1,children:["","API","Bing必应API","Euserv","Linux脚本工具","MyEclipse","MySQL","MySQL压缩版安装配置","Nginx从安装到高可用","Nginx安装Web应用防火墙","OfficeE5","SSH客户端软件","SpringBoot","StartAllBack(StartIsBack)v3.2.1Stable","Steam免费解锁","clash-v2ray","openssl一键自签证书","python安装源","springboot打包不同环境配置与shell脚本部署","win10快捷键","临时邮箱和接码","免费VPS","免费加速器","免费图库","免费图标","免费工具集锦","免费插图","免费资源集锦","删除 windows 服务","安装WSA-激活GPU-双击安装APK","开源后台管理系统","影视","截图工具","浏览器UA","漏洞监控平台Monitor","猫影视","电子书网站","白嫖机场","直播源","程序员常逛的网站","网址","美团年货电子书","脚本仓库","蓝奏云安卓APP合集","阿里十大最受开发者欢迎的工具","高清视频解析接口"]}],"/study/":[{title:"Study",collapsable:!1,sidebarDepth:1,children:["","form表单系统","vuepress"]}],"/tools/":[{title:"Tools",collapsable:!1,sidebarDepth:1,children:["","API","SSH客户端软件","StartAllBack(StartIsBack)v3.2.1Stable","develop-tools","lenovo","software","免费思维导图","在线万能查询和在线工具"]}],"/Java/":[{title:"Java",collapsable:!1,sidebarDepth:1,children:["","JApiDocs教程","Spring 面试63问","SpringBoot+SpringSecurity前后端分离+Jwt的权限认证","SpringBoot启动banner","SpringBoot定时任务动态管理通用解决方案","SpringBoot项目鉴权的 4 种方式","idea-tips","使用docker快速安装oracle","将Bean放入Spring容器中的五种方式","报错异常解决","数据类型Java类型"]}],"/git/":[{title:"Git",collapsable:!1,sidebarDepth:1,children:["","GitHub-Auto-Commit","Git、GitHub、Gitee","git_emoji"]}]}},({Vue:n})=>{n.component("CursorEffects",_i)}],Ai=["BackToTop","SWUpdatePopup","PWAInstall","PhotoSwipe","CursorEffects"];class ki extends class{constructor(){this.store=new i.a({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){i.a.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(ki.prototype,{getPageAsyncComponent:ce,getLayoutAsyncComponent:pe,getAsyncComponent:ue,getVueComponent:de});var Ti={install(n){const e=new ki;n.$vuepress=e,n.prototype.$vuepress=e}};function Bi(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Ci={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return me("pageKey",e),i.a.component(e)||i.a.component(e,ce(e)),i.a.component(e)?n(e):n("")}},zi={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},Ii={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Pi=(t(186),t(187),Object(Pe.a)(Ii,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),ji={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};i.a.config.productionTip=!1,i.a.use(Wn),i.a.use(Ti),i.a.mixin(function(n,e,t=i.a){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const a=new(n(t.$vuepress.$get("siteData"))),o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),r={};return Object.keys(o).reduce((n,e)=>(e.startsWith("$")&&(n[e]=o[e].get),n),r),{computed:r}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const i in n)"/"===i?t=n[i]:0===this.$page.path.indexOf(i)&&(e=n[i]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,i=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?i?i+" | "+t:t:i||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const i=n[t];if(i.path.toLowerCase()===e.toLowerCase())return i}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},st)),i.a.component("Content",Ci),i.a.component("ContentSlotsDistributor",zi),i.a.component("OutboundLink",Pi),i.a.component("ClientOnly",ji),i.a.component("Layout",pe("Layout")),i.a.component("NotFound",pe("NotFound")),i.a.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.7",hash:"9f8b645"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:st.routerBase||st.base,t=new Wn({base:e,mode:"history",fallback:!1,routes:rt,scrollBehavior:(n,e,t)=>t||(n.hash?!i.a.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,i)=>{if(Bi(n,e.path))i();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";Bi(n,t)?i(t):i()}else i();else{const t=e.path+"/",a=e.path+".html";Bi(n,a)?i(a):Bi(n,t)?i(t):i()}})}(t);const a={};try{await Promise.all(Si.filter(n=>"function"==typeof n).map(e=>e({Vue:i.a,options:a,router:t,siteData:st,isServer:n})))}catch(n){console.error(n)}return{app:new i.a(Object.assign(a,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Ai.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);