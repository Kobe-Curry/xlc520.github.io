import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as t}from"./app.c3f76295.js";const e={},p=t(`<h1 id="springboot\u5229\u7528threadpooltaskexecutor\u6279\u91CF\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#springboot\u5229\u7528threadpooltaskexecutor\u6279\u91CF\u63D2\u5165" aria-hidden="true">#</a> SpringBoot\u5229\u7528ThreadPoolTaskExecutor\u6279\u91CF\u63D2\u5165</h1><h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> <strong>\u524D\u8A00</strong></h2><p><strong>\u5F00\u53D1\u76EE\u7684\uFF1A</strong></p><p>\u63D0\u9AD8\u767E\u4E07\u7EA7\u6570\u636E\u63D2\u5165\u6548\u7387\u3002</p><p><strong>\u91C7\u53D6\u65B9\u6848\uFF1A</strong></p><p>\u5229\u7528<code>ThreadPoolTaskExecutor</code>\u591A\u7EBF\u7A0B\u6279\u91CF\u63D2\u5165\u3002</p><p><strong>\u91C7\u7528\u6280\u672F\uFF1A</strong></p><ul><li>springboot2.1.1</li><li>mybatisPlus3.0.6</li><li>swagger2.5.0</li><li>Lombok1.18.4</li><li>postgresql</li><li>ThreadPoolTaskExecutor</li></ul><h2 id="\u5177\u4F53\u5B9E\u73B0\u7EC6\u8282" tabindex="-1"><a class="header-anchor" href="#\u5177\u4F53\u5B9E\u73B0\u7EC6\u8282" aria-hidden="true">#</a> <strong>\u5177\u4F53\u5B9E\u73B0\u7EC6\u8282</strong></h2><p><code>application-dev.properties</code>\u6DFB\u52A0\u7EBF\u7A0B\u6C60\u914D\u7F6E\u4FE1\u606F</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token comment"># \u5F02\u6B65\u7EBF\u7A0B\u914D\u7F6E</span>
<span class="token comment"># \u914D\u7F6E\u6838\u5FC3\u7EBF\u7A0B\u6570</span>
<span class="token key attr-name">async.executor.thread.core_pool_size</span> <span class="token punctuation">=</span> <span class="token value attr-value">30</span>
<span class="token comment"># \u914D\u7F6E\u6700\u5927\u7EBF\u7A0B\u6570</span>
<span class="token key attr-name">async.executor.thread.max_pool_size</span> <span class="token punctuation">=</span> <span class="token value attr-value">30</span>
<span class="token comment"># \u914D\u7F6E\u961F\u5217\u5927\u5C0F</span>
<span class="token key attr-name">async.executor.thread.queue_capacity</span> <span class="token punctuation">=</span> <span class="token value attr-value">99988</span>
<span class="token comment"># \u914D\u7F6E\u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u7684\u540D\u79F0\u524D\u7F00</span>
<span class="token key attr-name">async.executor.thread.name.prefix</span> <span class="token punctuation">=</span> <span class="token value attr-value">async-importDB-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>spring\u5BB9\u5668\u6CE8\u5165\u7EBF\u7A0B\u6C60bean\u5BF9\u8C61</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableAsync</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExecutorConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${async.executor.thread.core_pool_size}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${async.executor.thread.max_pool_size}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${async.executor.thread.queue_capacity}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${async.executor.thread.name.prefix}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> namePrefix<span class="token punctuation">;</span>
 
    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;asyncServiceExecutor&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Executor</span> <span class="token function">asyncServiceExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;start asyncServiceExecutor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5728\u8FD9\u91CC\u4FEE\u6539</span>
        <span class="token class-name">ThreadPoolTaskExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VisiableThreadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u914D\u7F6E\u6838\u5FC3\u7EBF\u7A0B\u6570</span>
        executor<span class="token punctuation">.</span><span class="token function">setCorePoolSize</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u914D\u7F6E\u6700\u5927\u7EBF\u7A0B\u6570</span>
        executor<span class="token punctuation">.</span><span class="token function">setMaxPoolSize</span><span class="token punctuation">(</span>maxPoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u914D\u7F6E\u961F\u5217\u5927\u5C0F</span>
        executor<span class="token punctuation">.</span><span class="token function">setQueueCapacity</span><span class="token punctuation">(</span>queueCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u914D\u7F6E\u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u7684\u540D\u79F0\u524D\u7F00</span>
        executor<span class="token punctuation">.</span><span class="token function">setThreadNamePrefix</span><span class="token punctuation">(</span>namePrefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// rejection-policy\uFF1A\u5F53pool\u5DF2\u7ECF\u8FBE\u5230max size\u7684\u65F6\u5019\uFF0C\u5982\u4F55\u5904\u7406\u65B0\u4EFB\u52A1</span>
        <span class="token comment">// CALLER_RUNS\uFF1A\u4E0D\u5728\u65B0\u7EBF\u7A0B\u4E2D\u6267\u884C\u4EFB\u52A1\uFF0C\u800C\u662F\u6709\u8C03\u7528\u8005\u6240\u5728\u7684\u7EBF\u7A0B\u6765\u6267\u884C</span>
        executor<span class="token punctuation">.</span><span class="token function">setRejectedExecutionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6267\u884C\u521D\u59CB\u5316</span>
        executor<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> executor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521B\u5EFA\u5F02\u6B65\u7EBF\u7A0B \u4E1A\u52A1\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">AsyncService</span> <span class="token punctuation">{</span>
<span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Async</span><span class="token punctuation">(</span><span class="token string">&quot;asyncServiceExecutor&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">executeAsync</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LogOutputResult</span><span class="token punctuation">&gt;</span></span> logOutputResults<span class="token punctuation">,</span> <span class="token class-name">LogOutputResultMapper</span> logOutputResultMapper<span class="token punctuation">,</span> <span class="token class-name">CountDownLatch</span> countDownLatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;start executeAsync&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u5F02\u6B65\u7EBF\u7A0B\u8981\u505A\u7684\u4E8B\u60C5</span>
            logOutputResultMapper<span class="token punctuation">.</span><span class="token function">addLogOutputResultBatch</span><span class="token punctuation">(</span>logOutputResults<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;end executeAsync&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
            countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u5F88\u5173\u952E, \u65E0\u8BBA\u4E0A\u9762\u7A0B\u5E8F\u662F\u5426\u5F02\u5E38\u5FC5\u987B\u6267\u884CcountDown,\u5426\u5219await\u65E0\u6CD5\u91CA\u653E</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521B\u5EFA\u591A\u7EBF\u7A0B\u6279\u91CF\u63D2\u5165\u5177\u4F53\u4E1A\u52A1\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">testMultiThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LogOutputResult</span><span class="token punctuation">&gt;</span></span> logOutputResults <span class="token operator">=</span> <span class="token function">getTestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u6D4B\u8BD5\u6BCF100\u6761\u6570\u636E\u63D2\u5165\u5F00\u4E00\u4E2A\u7EBF\u7A0B</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">LogOutputResult</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> lists <span class="token operator">=</span> <span class="token class-name">ConvertHandler</span><span class="token punctuation">.</span><span class="token function">splitList</span><span class="token punctuation">(</span>logOutputResults<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span>lists<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LogOutputResult</span><span class="token punctuation">&gt;</span></span> listSub<span class="token operator">:</span>lists<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        asyncService<span class="token punctuation">.</span><span class="token function">executeAsync</span><span class="token punctuation">(</span>listSub<span class="token punctuation">,</span> logOutputResultMapper<span class="token punctuation">,</span>countDownLatch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4FDD\u8BC1\u4E4B\u524D\u7684\u6240\u6709\u7684\u7EBF\u7A0B\u90FD\u6267\u884C\u5B8C\u6210\uFF0C\u624D\u4F1A\u8D70\u4E0B\u9762\u7684\uFF1B</span>
        <span class="token comment">// \u8FD9\u6837\u5C31\u53EF\u4EE5\u5728\u4E0B\u9762\u62FF\u5230\u6240\u6709\u7EBF\u7A0B\u6267\u884C\u5B8C\u7684\u96C6\u5408\u7ED3\u679C</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\u963B\u585E\u5F02\u5E38:&quot;</span><span class="token operator">+</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> logOutputResults<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","SpringBoot\u5229\u7528ThreadPoolTaskExecutor\u6279\u91CF\u63D2\u5165.html.vue"]]);export{k as default};
